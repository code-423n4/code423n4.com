{
  "circa": {
    "title": "Swivel contest",
    "sponsor": "Swivel",
    "slug": "2021-09-swivel",
    "date": "2021-11-05",
    "findings": "https://github.com/code-423n4/2021-09-swivel-findings",
    "contest": 39
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code 432n4 (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 code contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the code contest outlined in this document, C4 conducted an analysis of Swivel contest smart contract system written in Solidity. The code contest took place between September 30—October 6 2021.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>15 Wardens contributed reports to the Swivel contest code contest:</p>\n<ul>\n<li><a href=\"https://github.com/0xsanson\">0xsanson</a></li>\n<li><a href=\"https://twitter.com/0xRajeev\">0xRajeev</a></li>\n<li><a href=\"https://twitter.com/cmichelio\">cmichel</a></li>\n<li><a href=\"https://twitter.com/defsec_\">defsec</a></li>\n<li><a href=\"https://twitter.com/GalloDaSballo\">GalloDaSballo</a></li>\n<li><a href=\"https://twitter.com/MukeshJ_eth\">JMukesh</a></li>\n<li><a href=\"https://twitter.com/liam_eastwood13\">leastwood</a></li>\n<li><a href=\"https://twitter.com/loop_225\">loop</a></li>\n<li><a href=\"http://twitter.com/_nikitastupin\">nikitastupin</a></li>\n<li>pants</li>\n<li><a href=\"https://twitter.com/SolidityDev\">pauliax</a></li>\n<li><a href=\"https://twitter.com/itsmeSTYJ\">itsmeSTYJ</a></li>\n<li><a href=\"https://twitter.com/gpersoon\">gpersoon</a></li>\n<li><a href=\"https://twitter.com/_ye0lde\">ye0lde</a></li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n</ul>\n<p>This contest was judged by <a href=\"https://github.com/0xean\">0xean</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/CloudEllie1\">CloudEllie</a> and <a href=\"https://twitter.com/itsmetechjay\">itsmetechjay</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 27 unique vulnerabilities and 76 total findings.  All of the issues presented here are linked back to their original finding.</p>\n<p>Of these vulnerabilities, 4 received a risk rating in the category of HIGH severity, 5 received a risk rating in the category of MEDIUM severity, and 18 received a risk rating in the category of LOW severity.</p>\n<p>C4 analysis also identified 20 non-critical recommendations and 28 gas optimizations.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2021-09-swivel\">C4 Swivel contest code repository</a>, is composed of 3 smart contracts written in the Solidity programming language, and includes 996 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code423n4.com\">the C4 website</a>.</p>\n<h1 id=\"high-risk-findings-4\" style=\"position:relative;\"><a href=\"#high-risk-findings-4\" aria-label=\"high risk findings 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (4)</h1>\n<h2 id=\"h-01-unsafe-handling-of-underlying-tokens\" style=\"position:relative;\"><a href=\"#h-01-unsafe-handling-of-underlying-tokens\" aria-label=\"h 01 unsafe handling of underlying tokens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/155\">[H-01] Unsafe handling of underlying tokens</a></h2>\n<p><em>Submitted by 0xsanson, also found by 0xRajeev, cmichel, defsec, GalloDaSballo, JMukesh, leastwood, loop, nikitastupin, pants, and pauliax</em>.</p>\n<h4 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>Not every ERC20 token follows OpenZeppelin’s recommendation. It’s possible (inside ERC20 standard) that a <code>transferFrom</code> doesn’t revert upon failure but returns <code>false</code>.</p>\n<p>The code doesn’t check these return values. For example <code>uToken.transferFrom(msg.sender, o.maker, a);</code> in <code>initiateVaultFillingZcTokenInitiate</code> can be exploited by the msg.sender to initiate a trade without sending any underlying.</p>\n<h4 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p><code>grep 'transfer' Swivel.sol</code></p>\n<h4 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h4>\n<p>editor</p>\n<h4 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Consider using <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\">OpenZeppelin’s library</a> with <em>safe</em> versions of transfer functions.</p>\n<h2 id=\"h-02-swivel-taker-is-charged-fees-twice-in-exitvaultfillingvaultinitiate\" style=\"position:relative;\"><a href=\"#h-02-swivel-taker-is-charged-fees-twice-in-exitvaultfillingvaultinitiate\" aria-label=\"h 02 swivel taker is charged fees twice in exitvaultfillingvaultinitiate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/39\">[H-02] Swivel: Taker is charged fees twice in exitVaultFillingVaultInitiate</a></h2>\n<p><em>Submitted by itsmeSTYJ, also found by gpersoon</em>.</p>\n<h4 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>Taker is charged fees twice in <code>exitVaultFillingVaultInitiate()</code> . Maker is transferring less than premiumFilled to taker and then taker is expected to pay fees i.e. taker’s net balance is premiumFilled - 2*fee</p>\n<h4 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">exitVaultFillingVaultInitiate</span><span class=\"mtk1\">(Hash.Order </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">o</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">, Sig.Components </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">c</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hash</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">validOrderHash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">o</span><span class=\"mtk1\">, </span><span class=\"mtk12\">c</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">a</span><span class=\"mtk1\"> &lt;= (</span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">principal</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">filled</span><span class=\"mtk1\">[</span><span class=\"mtk12\">hash</span><span class=\"mtk1\">]), </span><span class=\"mtk8\">&#39;taker amount &gt; available volume&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">filled</span><span class=\"mtk1\">[</span><span class=\"mtk12\">hash</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">a</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">premiumFilled</span><span class=\"mtk1\"> = (((</span><span class=\"mtk12\">a</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">principal</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">premium</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\"> = ((</span><span class=\"mtk12\">premiumFilled</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">fenominator</span><span class=\"mtk1\">[</span><span class=\"mtk7\">3</span><span class=\"mtk1\">]) / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">Erc20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uToken</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">Erc20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">underlying</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// transfer premium from maker to sender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maker</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">premiumFilled</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// transfer fee in underlying to swivel from sender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// transfer &lt;a&gt; vault.notional (nTokens) from sender to maker</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">MarketPlace</span><span class=\"mtk1\">(</span><span class=\"mtk12\">marketPlace</span><span class=\"mtk1\">).</span><span class=\"mtk11\">p2pVaultExchange</span><span class=\"mtk1\">(</span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">underlying</span><span class=\"mtk1\">, </span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maturity</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maker</span><span class=\"mtk1\">, </span><span class=\"mtk12\">a</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;vault exchange failed&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Exit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">key</span><span class=\"mtk1\">, </span><span class=\"mtk12\">hash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maker</span><span class=\"mtk1\">, </span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">, </span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">exit</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">a</span><span class=\"mtk1\">, </span><span class=\"mtk12\">premiumFilled</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/39\">JTraversa (Swivel) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/39#issuecomment-945017326\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Based on </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">3 — High: Assets can be stolen/lost/compromised directly (or indirectly if there is a valid attack path that does not have hand-wavy hypotheticals).</span></span></code></pre>\n<p>This is being upgraded to a high risk. The duplicate of it was at that level by the submitting warden and considering that fees are being incorrectly taken from the taker and not the maker, the maker ends up with a higher balance than expected and the taker has no way to recoup these fees (assets are now lost). </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/39#issuecomment-945019164\">JTraversa (Swivel) commented</a>:</strong></p>\n<blockquote>\n<p>Is that how it is interpreted? I’d assume that high risk would imply a valid attack path that a user could use to drain deposited funds based on that description.</p>\n<p>I won’t fight this one obviously, just think there’s a <em>clear</em> differentiation between this and the other high risk issue.</p>\n</blockquote>\n<h2 id=\"h-03-transfernotionalfrom-doesnt-check-from--to\" style=\"position:relative;\"><a href=\"#h-03-transfernotionalfrom-doesnt-check-from--to\" aria-label=\"h 03 transfernotionalfrom doesnt check from  to permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/65\">[H-03] <code>transferNotionalFrom</code> doesn’t check <code>from != to</code></a></h2>\n<p><em>Submitted by gpersoon, also found by cmichel</em>.</p>\n<h3 id=\"impact-2\" style=\"position:relative;\"><a href=\"#impact-2\" aria-label=\"impact 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The function <code>transferNotionalFrom</code> of <code>VaultTracker.sol</code> uses temporary variables to store the balances.\nIf the “from” and “to” address are the same then the balance of “from” is overwritten by the balance of “to”.\nThis means the balance of “from” and “to” are increased and no balances are decreased, effectively printing money.</p>\n<p>Note: <code>transferNotionalFrom</code> can be called via <code>transferVaultNotional</code> by everyone.</p>\n<h4 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p><a href=\"https://github.com/Swivel-Finance/gost/blob/v2/test/vaulttracker/VaultTracker.sol#L144-L196\">https://github.com/Swivel-Finance/gost/blob/v2/test/vaulttracker/VaultTracker.sol#L144-L196</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">transferNotionalFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">f</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">t</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyAdmin</span><span class=\"mtk1\">(</span><span class=\"mtk12\">admin</span><span class=\"mtk1\">) </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">Vault</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vaults</span><span class=\"mtk1\">\\[</span><span class=\"mtk12\">f</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">Vault</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vaults</span><span class=\"mtk1\">\\[</span><span class=\"mtk12\">t</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">vaults</span><span class=\"mtk1\">\\[</span><span class=\"mtk12\">f</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">from</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">vaults</span><span class=\"mtk1\">\\[</span><span class=\"mtk12\">t</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">to</span><span class=\"mtk1\">;    </span><span class=\"mtk3\">// if f==t then this will overwrite vaults\\[f]</span></span></span></code></pre>\n<p><a href=\"https://github.com/Swivel-Finance/gost/blob/v2/test/marketplace/MarketPlace.sol#L234-L238\">https://github.com/Swivel-Finance/gost/blob/v2/test/marketplace/MarketPlace.sol#L234-L238</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">transferVaultNotional</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">u</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">m</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">t</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">VaultTracker</span><span class=\"mtk1\">(</span><span class=\"mtk12\">markets</span><span class=\"mtk1\">\\[</span><span class=\"mtk12\">u</span><span class=\"mtk1\">]\\[</span><span class=\"mtk12\">m</span><span class=\"mtk1\">].</span><span class=\"mtk12\">vaultAddr</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferNotionalFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">t</span><span class=\"mtk1\">, </span><span class=\"mtk12\">a</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;vault transfer failed&#39;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h4 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h4>\n<h4 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Add something like the following:\n<code>require (f != t,\"Same\");</code></p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/65\">JTraversa (Swivel) confirmed</a></strong></p>\n<h2 id=\"h-04-return-value-of-0-from-ecrecover-not-checked\" style=\"position:relative;\"><a href=\"#h-04-return-value-of-0-from-ecrecover-not-checked\" aria-label=\"h 04 return value of 0 from ecrecover not checked permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/61\">[H-04] return value of 0 from ecrecover not checked</a></h2>\n<p><em>Submitted by gpersoon, also found by 0xRajeev, cmichel, and nikitastupin</em>.</p>\n<h4 id=\"impact-3\" style=\"position:relative;\"><a href=\"#impact-3\" aria-label=\"impact 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>The solidity function <code>ecrecover</code> is used, however the error result of 0 is not checked for.\nSee documentation:\n<a href=\"https://docs.soliditylang.org/en/v0.8.9/units-and-global-variables.html?highlight=ecrecover#mathematical-and-cryptographic-functions\">https://docs.soliditylang.org/en/v0.8.9/units-and-global-variables.html?highlight=ecrecover#mathematical-and-cryptographic-functions</a>\n“recover the address associated with the public key from elliptic curve signature or return zero on error. ”</p>\n<p>Now you can supply invalid input parameters to the <code>Sig.recover</code> function, which will then result 0.\nIf you also set <code>o.maker</code> to be 0 then this will match and an invalid signature is not detected.</p>\n<p>So you can do all kinds of illegal &#x26; unexpected transactions.</p>\n<h4 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p><a href=\"https://github.com/Swivel-Finance/gost/blob/v2/test/swivel/Swivel.sol#L476-L484\">https://github.com/Swivel-Finance/gost/blob/v2/test/swivel/Swivel.sol#L476-L484</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">validOrderHash</span><span class=\"mtk1\">(Hash.Order </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">o</span><span class=\"mtk1\">, Sig.Components </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">c</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maker</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">Sig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">recover</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Hash</span><span class=\"mtk1\">.</span><span class=\"mtk11\">message</span><span class=\"mtk1\">(</span><span class=\"mtk12\">domain</span><span class=\"mtk1\">, </span><span class=\"mtk12\">hash</span><span class=\"mtk1\">), </span><span class=\"mtk12\">c</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;invalid signature&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hash</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><a href=\"https://github.com/Swivel-Finance/gost/blob/v2/test/swivel/Sig.sol#L16-L23\">https://github.com/Swivel-Finance/gost/blob/v2/test/swivel/Sig.sol#L16-L23</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">recover</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">h</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Components</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">c</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ecrecover</span><span class=\"mtk1\">(</span><span class=\"mtk12\">h</span><span class=\"mtk1\">, </span><span class=\"mtk12\">c</span><span class=\"mtk1\">.</span><span class=\"mtk12\">v</span><span class=\"mtk1\">, </span><span class=\"mtk12\">c</span><span class=\"mtk1\">.</span><span class=\"mtk12\">r</span><span class=\"mtk1\">, </span><span class=\"mtk12\">c</span><span class=\"mtk1\">.</span><span class=\"mtk12\">s</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h4 id=\"tools-used-2\" style=\"position:relative;\"><a href=\"#tools-used-2\" aria-label=\"tools used 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h4>\n<h4 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Verify that the result from <code>ecrecover</code> isn’t 0</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/61\">JTraversa (Swivel) acknowledged</a></strong>\n<strong><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/61#issuecomment-961456683\">JTraversa (Swivel) commented</a>:</strong></p>\n<blockquote>\n<p>Id say this is noteable, but because all actions require approvals from o.maker, having 0x00 as o.maker with an “invalid” but valid signature should not be impactful.\nThe suggestion would be to filter 0x00 makers from the orderbook? (which we do)</p>\n</blockquote>\n<h1 id=\"medium-risk-findings-5\" style=\"position:relative;\"><a href=\"#medium-risk-findings-5\" aria-label=\"medium risk findings 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (5)</h1>\n<h2 id=\"m-01-admin-is-a-single-point-of-failure-without-any-mitigations\" style=\"position:relative;\"><a href=\"#m-01-admin-is-a-single-point-of-failure-without-any-mitigations\" aria-label=\"m 01 admin is a single point of failure without any mitigations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/95\">[M-01] Admin is a single-point of failure without any mitigations</a></h2>\n<p><em>Submitted by 0xRajeev, also found by 0xsanson and leastwood</em>.</p>\n<h4 id=\"impact-4\" style=\"position:relative;\"><a href=\"#impact-4\" aria-label=\"impact 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>Admin role has absolute power across Swivel, Marketplace and VaultTracker contracts with several <code>onlyOwner</code> functions. There is no ability to change admin to a new address or renounce it which is helpful for lost/compromised admin keys or to delegate control to a different governance/DAO address in future.</p>\n<p>The project does not use the widely used OpenZeppelin Ownable library which provides transfer/renounce functions to mitigate such compromised/accidental situations with admin keys. This makes admin role/key a single-point of failure.</p>\n<h4 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<ul>\n<li><a href=\"https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/marketplace/MarketPlace.sol#L38\">https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/marketplace/MarketPlace.sol#L38</a></li>\n<li><a href=\"https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/swivel/Swivel.sol#L43\">https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/swivel/Swivel.sol#L43</a></li>\n<li><a href=\"https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L27\">https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L27</a></li>\n</ul>\n<h4 id=\"tools-used-3\" style=\"position:relative;\"><a href=\"#tools-used-3\" aria-label=\"tools used 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h4>\n<p>Manual Analysis</p>\n<h4 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Ensure admins are reasonably redundant/independent (3/7 or 5/9) multisigs and add transfer/renounce functionality for admin. Consider using OpenZeppelin’s Ownable library.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/95#issuecomment-938053890\">JTraversa (Swivel) acknowledged</a>:</strong></p>\n<blockquote>\n<p>Similar to some other suggestions, i’m personally not sure if this is within the scope of the competition / an “issue”. We have immediate plans to add admin transfer functionality however left it out of the scope of this audit as not having a transferAdmin function doesn’t seem to be any more dangerous than the admin having the functionality it currently has.</p>\n<p>That said, in production the admin will both be a multisig and there is also basic admin timelock/transfer functionality, with on-chain governance as opposed to centralized-ish multisigs coming Q1.</p>\n</blockquote>\n<h2 id=\"m-02-missing-event--timelock-for-critical-onlyadmin-functions\" style=\"position:relative;\"><a href=\"#m-02-missing-event--timelock-for-critical-onlyadmin-functions\" aria-label=\"m 02 missing event  timelock for critical onlyadmin functions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/101\">[M-02] Missing event &#x26; timelock for critical <code>onlyAdmin</code> functions</a></h2>\n<p><em>Submitted by 0xRajeev, also found by defsec</em>.</p>\n<h4 id=\"impact-5\" style=\"position:relative;\"><a href=\"#impact-5\" aria-label=\"impact 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p><code>onlyAdmin</code> functions that change critical contract parameters/addresses/state should emit events and consider adding timelocks so that users and other privileged roles can detect upcoming changes (by offchain monitoring of events) and have the time to react to them.</p>\n<p>Privileged functions in all contracts, for e.g. <code>VaultTracker onlyAdmin</code>, have direct financial or trust impact on users who should be given an opportunity to react to them by exiting/engaging without being surprised when changes initiated by such functions are made effective opaquely (without events) and/or immediately (without timelocks).</p>\n<p>See similar Medium-severity finding in ConsenSys’s Audit of 1inch Liquidity Protocol (<a href=\"https://consensys.net/diligence/audits/2020/12/1inch-liquidity-protocol/#unpredictable-behavior-for-users-due-to-admin-front-running-or-general-bad-timing\">https://consensys.net/diligence/audits/2020/12/1inch-liquidity-protocol/#unpredictable-behavior-for-users-due-to-admin-front-running-or-general-bad-timing</a>)</p>\n<h4 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<ul>\n<li><a href=\"https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L36-L59\">https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L36-L59</a></li>\n<li><a href=\"https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L70-L98\">https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L70-L98</a></li>\n<li><a href=\"https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L102-L129\">https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L102-L129</a></li>\n<li><a href=\"https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L132-L138\">https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L132-L138</a></li>\n<li><a href=\"https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L144-L196\">https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L144-L196</a></li>\n<li><a href=\"https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L201-L239\">https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L201-L239</a></li>\n</ul>\n<p>and others</p>\n<h4 id=\"tools-used-4\" style=\"position:relative;\"><a href=\"#tools-used-4\" aria-label=\"tools used 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h4>\n<p>Manual Analysis</p>\n<h4 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Add events to all possible flows (some flows emit events in callers) and consider adding timelocks to such onlyAdmin functions.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/101#issuecomment-943884529\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>removing duplicate mark since the (valid) suggestion to emit events on the changes made by admin calls</p>\n</blockquote>\n<h2 id=\"m-03-previously-created-markets-can-be-overwritten\" style=\"position:relative;\"><a href=\"#m-03-previously-created-markets-can-be-overwritten\" aria-label=\"m 03 previously created markets can be overwritten permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/97\">[M-03] Previously created markets can be overwritten</a></h2>\n<p><em>Submitted by 0xRajeev, also found by 0xsanson, cmichel, gpersoon, itsmeSTYJ, and pauliax</em>.</p>\n<h4 id=\"impact-6\" style=\"position:relative;\"><a href=\"#impact-6\" aria-label=\"impact 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>The <code>createMarket</code> function allows accidental overwriting of previously created markets for the same combination of underlying and maturity timestamp (u, m) because there is no zero-address check to see if a previously created market exists for that combination.</p>\n<h4 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<ul>\n<li><a href=\"https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/marketplace/MarketPlace.sol#L65\">https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/marketplace/MarketPlace.sol#L65</a></li>\n<li><a href=\"https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/marketplace/MarketPlace.sol#L53-L70\">https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/marketplace/MarketPlace.sol#L53-L70</a></li>\n</ul>\n<h4 id=\"tools-used-5\" style=\"position:relative;\"><a href=\"#tools-used-5\" aria-label=\"tools used 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h4>\n<p>Manual Analysis</p>\n<h4 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Add a zero-address check for <code>markets\\[u]\\[m]</code> in <code>createMarket</code> before writing to it</p>\n<h2 id=\"m-04-fee-on-transfer-underlying-can-cause-problems\" style=\"position:relative;\"><a href=\"#m-04-fee-on-transfer-underlying-can-cause-problems\" aria-label=\"m 04 fee on transfer underlying can cause problems permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/156\">[M-04] fee-on-transfer underlying can cause problems</a></h2>\n<p><em>Submitted by 0xsanson</em>.</p>\n<h4 id=\"impact-7\" style=\"position:relative;\"><a href=\"#impact-7\" aria-label=\"impact 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>The current implementation doesn’t work with fee-on-transfer underlying tokens. Considering that Compound can have these kind of tokens (ex. USDT can activate fees), this issue can affect the protocol.</p>\n<p>The problem arises when transferring tokens, basically blocking all functions in <code>Swivel.sol</code> for that particular token, since the contract wrongly assumes balances values.\nThis becomes particularly problematic in the following scenario: a market for USDT is running without problems, then they activate the fee: this effectively blocks users from redeeming the underlying.</p>\n<h4 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p><code>grep 'transfer' Swivel.sol</code> for a complete list of affected lines (basically every <code>tranfer</code> or <code>transferFrom</code> of underlying tokens). Also <code>grep 'redeemUnderlying' Swivel.sol</code>.</p>\n<p>For example:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">CErc20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mPlace</span><span class=\"mtk1\">.</span><span class=\"mtk11\">cTokenAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">u</span><span class=\"mtk1\">, </span><span class=\"mtk12\">m</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">redeemUnderlying</span><span class=\"mtk1\">(</span><span class=\"mtk12\">redeemed</span><span class=\"mtk1\">) == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;compound redemption failed&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// transfer underlying back to msg.sender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">Erc20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">u</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">redeemed</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>This would fail (revert) since the contract would have received less than <code>redeemed</code> tokens.</p>\n<h4 id=\"tools-used-6\" style=\"position:relative;\"><a href=\"#tools-used-6\" aria-label=\"tools used 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h4>\n<p>editor</p>\n<h4 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>If the protocol wants to use all possible Compound tokens, a way to handle these tokens must be implemented. A possible way to do it is to check the balance of the contract before and after every time a token is transferred to see the effective quantity. To help keeping the code clear, a function like <a href=\"https://github.com/compound-finance/compound-protocol/blob/master/contracts/CErc20.sol#L156\">Compound’s <code>doTransferIn</code></a> can be implemented.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/156#issuecomment-938359220\">JTraversa (Swivel) acknowledged</a>:</strong></p>\n<blockquote>\n<p>Will review further. I dont believe that any tokens on compound currently have fees. Although it <em>is</em> news to me that USDT has toggle-able fees, whoops.</p>\n<p>That said, given we have admin control over added assets, I’d probably also lower this to a low-risk if accepted. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/156#issuecomment-943885544\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">2 — Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.</span></span></code></pre>\n<p>based on this “leaking value” I would say it qualifies as a med-severity. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/156#issuecomment-950403433\">JTraversa (Swivel) commented</a>:</strong></p>\n<blockquote>\n<p>We can account for the transfers in with a similar balance before transferFrom, and balance after check, in order to prevent additional deposits after a fee has been turned on.</p>\n<p>That said, Im not sure we can account for <code>redeemUnderlying</code> easily because should a fee be turned on, all funds would just be stuck in our contract if we added a similar check? (a != balance2-balance1)</p>\n<p>If a fee is turned on for USDT markets, there would be lost fee value, so if adding a check wouldn’t work, the most reasonable response is just to make sure the market is pausable. </p>\n</blockquote>\n<h2 id=\"m-05-swivel-implementation-for-initiatezctokenfillingzctokenexit-is-incorrect\" style=\"position:relative;\"><a href=\"#m-05-swivel-implementation-for-initiatezctokenfillingzctokenexit-is-incorrect\" aria-label=\"m 05 swivel implementation for initiatezctokenfillingzctokenexit is incorrect permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/38\">[M-05] Swivel: implementation for initiateZcTokenFillingZcTokenExit is incorrect</a></h2>\n<p><em>Submitted by itsmeSTYJ</em>.</p>\n<h4 id=\"impact-8\" style=\"position:relative;\"><a href=\"#impact-8\" aria-label=\"impact 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>In <code>initiateZcTokenFillingZcTokenExit()</code> , this comment <code>// transfer underlying tokens - the premium paid + fee in underlying to swivel (from sender)</code>  is incorrect because you are actually transferring the underlying tokens - premium paid to the maker (from sender) AND you have to pay fee separately to swivel.</p>\n<p><code>initiateZCTokenFillingZcTokenExit</code> means I want to sell my nTokens so that means <code>a</code> is the amount of principal I want to fill. Let’s use a hypothetical example where I (taker) wants to fill 10 units of ZcTokenExit for maker.</p>\n<ol>\n<li>I transfer 10 units of underlying to Swivel. The net balances are: me (-a), swivel (+a)</li>\n<li>I transfer fee (in underlying) to Swivel. The net balances are: me (-a-fee), swivel (+a+fee)</li>\n<li>Swivel initiates my position, sends me the ZcToken and sends Maker the nTokens</li>\n<li>Maker pays me premiumFilled for the nTokens. The net balances are: me (-a-fee+premiumsFilled), swivel (+a+fee), maker (-premiumsFilled)</li>\n<li>Maker closes position. The net balances are: me (-a-fee+premiumsFilled), swivel (+fee), maker (-premiumsFilled+a)</li>\n</ol>\n<p>So effectively, I (taker) should be paying a-premium to maker and fee to swivel.</p>\n<h4 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initiateZcTokenFillingZcTokenExit</span><span class=\"mtk1\">(Hash.Order </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">o</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">, Sig.Components </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">c</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hash</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">validOrderHash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">o</span><span class=\"mtk1\">, </span><span class=\"mtk12\">c</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">a</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">principal</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">filled</span><span class=\"mtk1\">[</span><span class=\"mtk12\">hash</span><span class=\"mtk1\">]), </span><span class=\"mtk8\">&#39;taker amount &gt; available volume&#39;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// Note: you don&#39;t need to wrap these in brackets because if you look at the https://docs.soliditylang.org/en/latest/cheatsheet.html#order-of-precedence-of-operators, subtraction will always go before comparison </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">filled</span><span class=\"mtk1\">[</span><span class=\"mtk12\">hash</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">a</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">premiumFilled</span><span class=\"mtk1\"> = (((</span><span class=\"mtk12\">a</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">principal</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">premium</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\"> = ((</span><span class=\"mtk12\">premiumFilled</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">fenominator</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]) / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// transfer underlying tokens - the premium paid in underlying to maker (from sender)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">Erc20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">underlying</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maker</span><span class=\"mtk1\">, </span><span class=\"mtk12\">a</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">premiumFilled</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">Erc20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">underlying</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">swivel</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// transfer &lt;a&gt; zcTokens between users in marketplace</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">MarketPlace</span><span class=\"mtk1\">(</span><span class=\"mtk12\">marketPlace</span><span class=\"mtk1\">).</span><span class=\"mtk11\">p2pZcTokenExchange</span><span class=\"mtk1\">(</span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">underlying</span><span class=\"mtk1\">, </span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maturity</span><span class=\"mtk1\">, </span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maker</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">a</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;zcToken exchange failed&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Initiate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">key</span><span class=\"mtk1\">, </span><span class=\"mtk12\">hash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maker</span><span class=\"mtk1\">, </span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">, </span><span class=\"mtk12\">o</span><span class=\"mtk1\">.</span><span class=\"mtk12\">exit</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">a</span><span class=\"mtk1\">, </span><span class=\"mtk12\">premiumFilled</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/38#issuecomment-937980208\">JTraversa (Swivel) confirmed</a>:</strong></p>\n<blockquote>\n<p>Really good eye. </p>\n<p>We had <code>o.maker</code> send the fee after receiving it (same # of transfers as suggested mitigation) and actually accidentally lost that in a larger organizational commit 😅 .</p>\n</blockquote>\n<h1 id=\"low-risk-findings-18\" style=\"position:relative;\"><a href=\"#low-risk-findings-18\" aria-label=\"low risk findings 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk Findings (18)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/90\">[L-01] Different parameter used in while emitting event</a> <em>Submitted by JMukesh, also found by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/73\">[L-02] Swivel Markets are not Isolated</a> <em>Submitted by leastwood</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/100\">[L-03] Missing zero-address checks</a> <em>Submitted by 0xRajeev, also found by cmichel, defsec, GalloDaSballo, JMukesh, and pants</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/108\">[L-04] Missing input validation, threshold check, event and timelock in <code>setFee</code> function</a> <em>Submitted by 0xRajeev, also found by 0xsanson, defsec, JMukesh, and pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/104\">[L-05] Compact signatures not being supported could lead to DoS</a> <em>Submitted by 0xRajeev, also found by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/105\">[L-06] Missing input validation on array length match</a> <em>Submitted by 0xRajeev, also found by JMukesh, and leastwood</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/93\">[L-07] Abstract contracts should really be interfaces</a> <em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/98\">[L-08] Static <code>chainID</code> could allow replay attacks on chain splits</a> <em>Submitted by 0xRajeev, also found by 0xsanson, nikitastupin, and pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/35\">[L-09] Swivel: Incorrect dev comments for the 4 initiate functions</a> <em>Submitted by itsmeSTYJ</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/67\">[L-10] Open TODOs in Codebase</a> <em>Submitted by leastwood, also found by pants and ye0lde</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/41\">[L-11] Complex state variable copied to memory in <code>redeemZcToken</code> (MarketPlace.sol)</a> <em>Submitted by ye0lde</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/119\">[L-12] swivel and marketPlace contract does not implement the mechanisim to renounce the role of admin</a> <em>Submitted by JMukesh, also found by GalloDaSballo and pants</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/96\">[L-13] Missing event and timelock for <code>setSwivelAddress</code></a> <em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/137\">[L-14] Validations in <code>setFee</code></a> <em>Submitted by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/107\">[L-15] Missing input validation &#x26; event in emergency <code>blockWithdrawal</code> could be risky</a> <em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/3\">[L-16] <code>createMarket</code> function missing parameter description</a> <em>Submitted by loop</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/2\">[L-17] Wrong parameter name used in function spec</a> <em>Submitted by loop</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/37\">[L-18] Swivel: Implement check effect interaction to align with best practices</a> <em>Submitted by itsmeSTYJ</em>.</li>\n</ul>\n<h1 id=\"non-critical-findings-20\" style=\"position:relative;\"><a href=\"#non-critical-findings-20\" aria-label=\"non critical findings 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Non-Critical Findings (20)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/75\">[N-01] Potential Reentrancy when Initiating and Exiting Positions</a> <em>Submitted by leastwood, also found by pants</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/76\">[N-02] Lack of Pause Mechanism</a><em>Submitted by leastwood</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/99\">[N-03] Use of <code>ecrecover</code> is susceptible to signature malleability</a> <em>Submitted by 0xRajeev, also found by nikitastupin</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/68\">[N-04] Lack of Proper Revert Messages</a> <em>Submitted by leastwood, also found by pants</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/157\">[N-05] <code>balanceOf</code> should be a <code>_view_</code> function</a> <em>Submitted by 0xsanson</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/125\">[N-06] <code>Swivel.sol</code> - marketplace is an immutable address, yet is always casted to MarketPlace - store as MarketPlace to make code cleaner</a> <em>Submitted by GalloDaSballo</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/130\">[N-07] The requires used in <code>p2pVaultExchange</code> <code>transferVaultNotional</code> in Marketplace.sol are not necessary</a> <em>Submitted by GalloDaSballo</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/131\">[N-08] Magic Number <code>1e26</code> would best replaced by a constant in <code>VaultTracker</code></a> <em>Submitted by GalloDaSballo, also found by itsmeSTYJ</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/71\">[N-09] Missing Dev Comments</a> <em>Submitted by leastwood</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/53\">[N-10] Double Spending. No <code>decreaseAllowance()/ IncreaseAllowance()</code></a> <em>Submitted by pants</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/135\">[N-11] Return value of <code>transferNotionalFee</code></a> <em>Submitted by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/145\">[N-12] Can cancel the same order again</a> <em>Submitted by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/153\">[N-13] Style issues</a> <em>Submitted by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/102\">[N-14] Missing input validation may cause revert due to underflow</a> <em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/85\">[N-15] Wrong yield computation upon maturity</a> <em>Submitted by cmichel</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/94\">[N-16] Missing guarded launch</a> <em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/142\">[N-17] Underlying can be fetched from <code>cToken</code></a> <em>Submitted by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/49\">[N-18] Missing initial ownership event</a> <em>Submitted by pants</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/16\">[N-19] Return value of <code>transferNotionalFee</code> ignored</a> <em>Submitted by loop</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/62\">[N-20] Prevent underflow in require</a> <em>Submitted by gpersoon</em>.</li>\n</ul>\n<h1 id=\"gas-optimizations-28\" style=\"position:relative;\"><a href=\"#gas-optimizations-28\" aria-label=\"gas optimizations 28 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations (28)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/18\">[G-01] Gas Optimization on the Public Functions</a> <em>Submitted by defsec, also found by 0xRajeev, loop, and ye0lde</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/110\">[G-02] Caching state variables in local/memory variables avoids SLOADs to save gas</a> <em>Submitted by 0xRajeev, also found by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/111\">[G-03] Removing redundant require() can save gas</a> <em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/113\">[G-04] += can be replaced by =</a> <em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/114\">[G-05] Converting fenominator to a static array will save storage slots and gas</a> <em>Submitted by 0xRajeev, also found by defsec, loop, and pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/115\">[G-06] Avoiding initialization of loop index can save a little gas</a> <em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/116\">[G-07] Bounded array lengths or checking <code>gasleft</code> will save gas from OOGs</a><em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/161\">[G-08] Better Math in <code>calculateReturn</code></a> <em>Submitted by 0xsanson</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/162\">[G-09] Math’s operations order in Swivel’s functions</a> <em>Submitted by 0xsanson, also found by cmichel, itsmeSTYJ, and loop</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/128\">[G-10] <code>require(mPlace.custodialExit)</code> in Swivel.sol is redundant</a> <em>Submitted by GalloDaSballo</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/129\">[G-11] Redundant <code>require</code> in Swivel.sol</a> <em>Submitted by GalloDaSballo</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/87\">[G-12] Gas: Approve <code>cToken</code> address only once for underlying</a> <em>Submitted by cmichel</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/21\">[G-13] Use <code>bytes32</code> rather than <code>string/bytes</code></a> <em>Submitted by defsec</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/28\">[G-14] VaultTracker.sol: Gas optimisation for <code>addNotional</code></a> <em>Submitted by itsmeSTYJ</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/29\">[G-15] MarketPlace.sol: Remove maturity from VaultTracker and ZcToken</a> <em>Submitted by itsmeSTYJ</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/30\">[G-16] VaultTracker.sol: pass in exchangeRate as a variable to <code>matureVault()</code></a> <em>Submitted by itsmeSTYJ</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/31\">[G-17] VaultTracker.sol: <code>init sVault.exchangeRate</code> in constructor</a> <em>Submitted by itsmeSTYJ</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/70\">[G-18] Gas Savings Upon Market Creation</a> <em>Submitted by leastwood</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/15\">[G-19] Array <code>.length</code> Used Directly In For Loops</a> <em>Submitted by ye0lde, also found by pants</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/43\">[G-20] Title: Double reading from <code>calldata o</code></a> <em>Submitted by pants</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/149\">[G-22] Functions returning boolean</a> <em>Submitted by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/151\">[G-23] ‘matured’ can be replaced by ‘maturityRate’ > 0</a> <em>Submitted by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/152\">[G-24] matureVault can receive maturityRate cheaper</a> <em>Submitted by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/112\">[G-25] Input validation on <code>amount > 0</code> will save gas</a> <em>Submitted by 0xRajeev, also found by csanuragjain</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/1\">[G-26] Bytes constant more efficient than string literal</a> <em>Submitted by loop</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/147\">[G-27] ‘mature’ and ‘maturityRate’ do not need separate mappings</a> <em>Submitted by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-swivel-findings/issues/148\">[G-28] ‘onlyAdmin’ and ‘onlySwivel’ modifiers</a> <em>Submitted by pauliax</em>.</li>\n</ul>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-4\">High Risk Findings (4)</a></p>\n<ul>\n<li><a href=\"#h-01-unsafe-handling-of-underlying-tokens\">[H-01] Unsafe handling of underlying tokens</a></li>\n<li><a href=\"#h-02-swivel-taker-is-charged-fees-twice-in-exitvaultfillingvaultinitiate\">[H-02] Swivel: Taker is charged fees twice in exitVaultFillingVaultInitiate</a></li>\n<li><a href=\"#h-03-transfernotionalfrom-doesnt-check-from--to\">[H-03] <code>transferNotionalFrom</code> doesn’t check <code>from != to</code></a></li>\n<li><a href=\"#h-04-return-value-of-0-from-ecrecover-not-checked\">[H-04] return value of 0 from ecrecover not checked</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-5\">Medium Risk Findings (5)</a></p>\n<ul>\n<li><a href=\"#m-01-admin-is-a-single-point-of-failure-without-any-mitigations\">[M-01] Admin is a single-point of failure without any mitigations</a></li>\n<li><a href=\"#m-02-missing-event--timelock-for-critical-onlyadmin-functions\">[M-02] Missing event &#x26; timelock for critical <code>onlyAdmin</code> functions</a></li>\n<li><a href=\"#m-03-previously-created-markets-can-be-overwritten\">[M-03] Previously created markets can be overwritten</a></li>\n<li><a href=\"#m-04-fee-on-transfer-underlying-can-cause-problems\">[M-04] fee-on-transfer underlying can cause problems</a></li>\n<li><a href=\"#m-05-swivel-implementation-for-initiatezctokenfillingzctokenexit-is-incorrect\">[M-05] Swivel: implementation for initiateZcTokenFillingZcTokenExit is incorrect</a></li>\n</ul>\n</li>\n<li><a href=\"#low-risk-findings-18\">Low Risk Findings (18)</a></li>\n<li><a href=\"#non-critical-findings-20\">Non-Critical Findings (20)</a></li>\n<li><a href=\"#gas-optimizations-28\">Gas Optimizations (28)</a></li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>",
  "md": "\n# Overview\n\n## About C4\n\nCode 432n4 (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.\n\nA C4 code contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.\n\nDuring the code contest outlined in this document, C4 conducted an analysis of Swivel contest smart contract system written in Solidity. The code contest took place between September 30—October 6 2021.\n\n## Wardens\n\n15 Wardens contributed reports to the Swivel contest code contest:\n\n- [0xsanson](https://github.com/0xsanson)\n- [0xRajeev](https://twitter.com/0xRajeev)\n- [cmichel](https://twitter.com/cmichelio)\n- [defsec](https://twitter.com/defsec_)\n- [GalloDaSballo](https://twitter.com/GalloDaSballo)\n- [JMukesh](https://twitter.com/MukeshJ_eth)\n- [leastwood](https://twitter.com/liam_eastwood13)\n- [loop](https://twitter.com/loop_225)\n- [nikitastupin](http://twitter.com/_nikitastupin)\n- pants\n- [pauliax](https://twitter.com/SolidityDev)\n- [itsmeSTYJ](https://twitter.com/itsmeSTYJ)\n- [gpersoon](https://twitter.com/gpersoon)\n- [ye0lde](https://twitter.com/_ye0lde)\n- [csanuragjain](https://twitter.com/csanuragjain)\n\nThis contest was judged by [0xean](https://github.com/0xean).\n\nFinal report assembled by [CloudEllie](https://twitter.com/CloudEllie1) and [itsmetechjay](https://twitter.com/itsmetechjay).\n\n# Summary\n\nThe C4 analysis yielded an aggregated total of 27 unique vulnerabilities and 76 total findings.  All of the issues presented here are linked back to their original finding.\n\nOf these vulnerabilities, 4 received a risk rating in the category of HIGH severity, 5 received a risk rating in the category of MEDIUM severity, and 18 received a risk rating in the category of LOW severity.\n\nC4 analysis also identified 20 non-critical recommendations and 28 gas optimizations.\n\n# Scope\n\nThe code under review can be found within the [C4 Swivel contest code repository](https://github.com/code-423n4/2021-09-swivel), is composed of 3 smart contracts written in the Solidity programming language, and includes 996 lines of Solidity code.\n\n\n# Severity Criteria\n\nC4 assesses the severity of disclosed vulnerabilities according to a methodology based on [OWASP standards](https://owasp.org/www-community/OWASP_Risk_Rating_Methodology).\n\nVulnerabilities are divided into three primary risk categories: high, medium, and low.\n\nHigh-level considerations for vulnerabilities span the following key areas when conducting assessments:\n\n- Malicious Input Handling\n- Escalation of privileges\n- Arithmetic\n- Gas use\n\nFurther information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on [the C4 website](https://code423n4.com).\n\n\n# High Risk Findings (4)\n## [[H-01] Unsafe handling of underlying tokens](https://github.com/code-423n4/2021-09-swivel-findings/issues/155)\n_Submitted by 0xsanson, also found by 0xRajeev, cmichel, defsec, GalloDaSballo, JMukesh, leastwood, loop, nikitastupin, pants, and pauliax_.\n\n#### Impact\n\nNot every ERC20 token follows OpenZeppelin's recommendation. It's possible (inside ERC20 standard) that a `transferFrom` doesn't revert upon failure but returns `false`.\n\nThe code doesn't check these return values. For example `uToken.transferFrom(msg.sender, o.maker, a);` in `initiateVaultFillingZcTokenInitiate` can be exploited by the msg.sender to initiate a trade without sending any underlying.\n\n#### Proof of Concept\n\n`grep 'transfer' Swivel.sol`\n\n#### Tools Used\n\neditor\n\n#### Recommended Mitigation Steps\n\nConsider using [OpenZeppelin's library](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol) with *safe* versions of transfer functions.\n\n\n## [[H-02] Swivel: Taker is charged fees twice in exitVaultFillingVaultInitiate](https://github.com/code-423n4/2021-09-swivel-findings/issues/39)\n_Submitted by itsmeSTYJ, also found by gpersoon_.\n\n#### Impact\n\nTaker is charged fees twice in `exitVaultFillingVaultInitiate()` . Maker is transferring less than premiumFilled to taker and then taker is expected to pay fees i.e. taker's net balance is premiumFilled - 2\\*fee\n\n#### Recommended Mitigation Steps\n\n```jsx\nfunction exitVaultFillingVaultInitiate(Hash.Order calldata o, uint256 a, Sig.Components calldata c) internal {\n  bytes32 hash = validOrderHash(o, c);\n\n  require(a <= (o.principal - filled[hash]), 'taker amount > available volume');\n  \n  filled[hash] += a;\n      \n  uint256 premiumFilled = (((a * 1e18) / o.principal) * o.premium) / 1e18;\n  uint256 fee = ((premiumFilled * 1e18) / fenominator[3]) / 1e18;\n\n  Erc20 uToken = Erc20(o.underlying);\n  // transfer premium from maker to sender\n  uToken.transferFrom(o.maker, msg.sender, premiumFilled);\n\n  // transfer fee in underlying to swivel from sender\n  uToken.transferFrom(msg.sender, address(this), fee);\n\n  // transfer <a> vault.notional (nTokens) from sender to maker\n  require(MarketPlace(marketPlace).p2pVaultExchange(o.underlying, o.maturity, msg.sender, o.maker, a), 'vault exchange failed');\n\n  emit Exit(o.key, hash, o.maker, o.vault, o.exit, msg.sender, a, premiumFilled);\n}\n```\n\n**[JTraversa (Swivel) confirmed](https://github.com/code-423n4/2021-09-swivel-findings/issues/39)**\n\n**[0xean (judge) commented](https://github.com/code-423n4/2021-09-swivel-findings/issues/39#issuecomment-945017326):**\n > Based on \n> \n> ```\n> 3 — High: Assets can be stolen/lost/compromised directly (or indirectly if there is a valid attack path that does not have hand-wavy hypotheticals).\n> ```\n> \n> This is being upgraded to a high risk. The duplicate of it was at that level by the submitting warden and considering that fees are being incorrectly taken from the taker and not the maker, the maker ends up with a higher balance than expected and the taker has no way to recoup these fees (assets are now lost). \n\n**[JTraversa (Swivel) commented](https://github.com/code-423n4/2021-09-swivel-findings/issues/39#issuecomment-945019164):**\n > Is that how it is interpreted? I'd assume that high risk would imply a valid attack path that a user could use to drain deposited funds based on that description.\n> \n> I won't fight this one obviously, just think there's a *clear* differentiation between this and the other high risk issue.\n\n## [[H-03] `transferNotionalFrom` doesn't check `from != to`](https://github.com/code-423n4/2021-09-swivel-findings/issues/65)\n_Submitted by gpersoon, also found by cmichel_.\n\n### Impact\n\nThe function `transferNotionalFrom` of `VaultTracker.sol` uses temporary variables to store the balances.\nIf the \"from\" and \"to\" address are the same then the balance of \"from\" is overwritten by the balance of \"to\".\nThis means the balance of \"from\" and \"to\" are increased and no balances are decreased, effectively printing money.\n\nNote: `transferNotionalFrom` can be called via `transferVaultNotional` by everyone.\n\n#### Proof of Concept\n\n<https://github.com/Swivel-Finance/gost/blob/v2/test/vaulttracker/VaultTracker.sol#L144-L196>\n```solidity\n  function transferNotionalFrom(address f, address t, uint256 a) external onlyAdmin(admin) returns (bool) {\n  Vault memory from = vaults\\[f];\n  Vault memory to = vaults\\[t];\n  ...\n  vaults\\[f] = from;\n  ...\n  vaults\\[t] = to;    // if f==t then this will overwrite vaults\\[f]\n```\n\n<https://github.com/Swivel-Finance/gost/blob/v2/test/marketplace/MarketPlace.sol#L234-L238>\n```solidity\n  function transferVaultNotional(address u, uint256 m, address t, uint256 a) public returns (bool) {\n  require(VaultTracker(markets\\[u]\\[m].vaultAddr).transferNotionalFrom(msg.sender, t, a), 'vault transfer failed');\n```\n\n#### Tools Used\n\n#### Recommended Mitigation Steps\n\nAdd something like the following:\n`require (f != t,\"Same\");`\n\n**[JTraversa (Swivel) confirmed](https://github.com/code-423n4/2021-09-swivel-findings/issues/65)**\n\n\n## [[H-04] return value of 0 from ecrecover not checked](https://github.com/code-423n4/2021-09-swivel-findings/issues/61)\n_Submitted by gpersoon, also found by 0xRajeev, cmichel, and nikitastupin_.\n\n#### Impact\n\nThe solidity function `ecrecover` is used, however the error result of 0 is not checked for.\nSee documentation:\n<https://docs.soliditylang.org/en/v0.8.9/units-and-global-variables.html?highlight=ecrecover#mathematical-and-cryptographic-functions>\n\"recover the address associated with the public key from elliptic curve signature or return zero on error. \"\n\nNow you can supply invalid input parameters to the `Sig.recover` function, which will then result 0.\nIf you also set `o.maker` to be 0 then this will match and an invalid signature is not detected.\n\nSo you can do all kinds of illegal & unexpected transactions.\n\n#### Proof of Concept\n\n<https://github.com/Swivel-Finance/gost/blob/v2/test/swivel/Swivel.sol#L476-L484>\n```solidity\n  function validOrderHash(Hash.Order calldata o, Sig.Components calldata c) internal view returns (bytes32) {\n  ...\n  require(o.maker == Sig.recover(Hash.message(domain, hash), c), 'invalid signature');\n  return hash;\n  }\n```\n\n<https://github.com/Swivel-Finance/gost/blob/v2/test/swivel/Sig.sol#L16-L23>\n```solidity\n  function recover(bytes32 h, Components calldata c) internal pure returns (address) {\n  ...\n  return ecrecover(h, c.v, c.r, c.s);\n```\n\n#### Tools Used\n\n#### Recommended Mitigation Steps\n\nVerify that the result from `ecrecover` isn't 0\n\n**[JTraversa (Swivel) acknowledged](https://github.com/code-423n4/2021-09-swivel-findings/issues/61)**\n**[JTraversa (Swivel) commented](https://github.com/code-423n4/2021-09-swivel-findings/issues/61#issuecomment-961456683):**\n> Id say this is noteable, but because all actions require approvals from o.maker, having 0x00 as o.maker with an \"invalid\" but valid signature should not be impactful.\n> The suggestion would be to filter 0x00 makers from the orderbook? (which we do)\n\n \n# Medium Risk Findings (5)\n## [[M-01] Admin is a single-point of failure without any mitigations](https://github.com/code-423n4/2021-09-swivel-findings/issues/95)\n_Submitted by 0xRajeev, also found by 0xsanson and leastwood_.\n\n#### Impact\n\nAdmin role has absolute power across Swivel, Marketplace and VaultTracker contracts with several `onlyOwner` functions. There is no ability to change admin to a new address or renounce it which is helpful for lost/compromised admin keys or to delegate control to a different governance/DAO address in future.\n\nThe project does not use the widely used OpenZeppelin Ownable library which provides transfer/renounce functions to mitigate such compromised/accidental situations with admin keys. This makes admin role/key a single-point of failure.\n\n#### Proof of Concept\n\n- <https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/marketplace/MarketPlace.sol#L38>\n- <https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/swivel/Swivel.sol#L43>\n- <https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L27>\n\n#### Tools Used\n\nManual Analysis\n\n#### Recommended Mitigation Steps\n\nEnsure admins are reasonably redundant/independent (3/7 or 5/9) multisigs and add transfer/renounce functionality for admin. Consider using OpenZeppelin’s Ownable library.\n\n**[JTraversa (Swivel) acknowledged](https://github.com/code-423n4/2021-09-swivel-findings/issues/95#issuecomment-938053890):**\n > Similar to some other suggestions, i'm personally not sure if this is within the scope of the competition / an \"issue\". We have immediate plans to add admin transfer functionality however left it out of the scope of this audit as not having a transferAdmin function doesn't seem to be any more dangerous than the admin having the functionality it currently has.\n> \n> That said, in production the admin will both be a multisig and there is also basic admin timelock/transfer functionality, with on-chain governance as opposed to centralized-ish multisigs coming Q1.\n\n\n\n## [[M-02] Missing event & timelock for critical `onlyAdmin` functions](https://github.com/code-423n4/2021-09-swivel-findings/issues/101)\n_Submitted by 0xRajeev, also found by defsec_.\n\n#### Impact\n\n`onlyAdmin` functions that change critical contract parameters/addresses/state should emit events and consider adding timelocks so that users and other privileged roles can detect upcoming changes (by offchain monitoring of events) and have the time to react to them.\n\nPrivileged functions in all contracts, for e.g. `VaultTracker onlyAdmin`, have direct financial or trust impact on users who should be given an opportunity to react to them by exiting/engaging without being surprised when changes initiated by such functions are made effective opaquely (without events) and/or immediately (without timelocks).\n\nSee similar Medium-severity finding in ConsenSys's Audit of 1inch Liquidity Protocol (<https://consensys.net/diligence/audits/2020/12/1inch-liquidity-protocol/#unpredictable-behavior-for-users-due-to-admin-front-running-or-general-bad-timing>)\n\n#### Proof of Concept\n\n- <https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L36-L59>\n- <https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L70-L98>\n- <https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L102-L129>\n- <https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L132-L138>\n- <https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L144-L196>\n- <https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/vaulttracker/VaultTracker.sol#L201-L239>\n\nand others\n\n#### Tools Used\n\nManual Analysis\n\n#### Recommended Mitigation Steps\n\nAdd events to all possible flows (some flows emit events in callers) and consider adding timelocks to such onlyAdmin functions.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2021-09-swivel-findings/issues/101#issuecomment-943884529):**\n > removing duplicate mark since the (valid) suggestion to emit events on the changes made by admin calls\n\n\n\n## [[M-03] Previously created markets can be overwritten](https://github.com/code-423n4/2021-09-swivel-findings/issues/97)\n_Submitted by 0xRajeev, also found by 0xsanson, cmichel, gpersoon, itsmeSTYJ, and pauliax_.\n\n#### Impact\n\nThe `createMarket` function allows accidental overwriting of previously created markets for the same combination of underlying and maturity timestamp (u, m) because there is no zero-address check to see if a previously created market exists for that combination.\n\n#### Proof of Concept\n\n- <https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/marketplace/MarketPlace.sol#L65>\n- <https://github.com/Swivel-Finance/gost/blob/5fb7ad62f1f3a962c7bf5348560fe88de0618bae/test/marketplace/MarketPlace.sol#L53-L70>\n\n#### Tools Used\n\nManual Analysis\n\n#### Recommended Mitigation Steps\n\nAdd a zero-address check for `markets\\[u]\\[m]` in `createMarket` before writing to it\n\n\n## [[M-04] fee-on-transfer underlying can cause problems](https://github.com/code-423n4/2021-09-swivel-findings/issues/156)\n_Submitted by 0xsanson_.\n\n#### Impact\n\nThe current implementation doesn't work with fee-on-transfer underlying tokens. Considering that Compound can have these kind of tokens (ex. USDT can activate fees), this issue can affect the protocol.\n\nThe problem arises when transferring tokens, basically blocking all functions in `Swivel.sol` for that particular token, since the contract wrongly assumes balances values.\nThis becomes particularly problematic in the following scenario: a market for USDT is running without problems, then they activate the fee: this effectively blocks users from redeeming the underlying.\n\n#### Proof of Concept\n\n`grep 'transfer' Swivel.sol` for a complete list of affected lines (basically every `tranfer` or `transferFrom` of underlying tokens). Also `grep 'redeemUnderlying' Swivel.sol`.\n\nFor example:\n\n```js\n  require(CErc20(mPlace.cTokenAddress(u, m)).redeemUnderlying(redeemed) == 0, 'compound redemption failed');\n  // transfer underlying back to msg.sender\n  Erc20(u).transfer(msg.sender, redeemed);\n```\n\nThis would fail (revert) since the contract would have received less than `redeemed` tokens.\n\n#### Tools Used\n\neditor\n\n#### Recommended Mitigation Steps\n\nIf the protocol wants to use all possible Compound tokens, a way to handle these tokens must be implemented. A possible way to do it is to check the balance of the contract before and after every time a token is transferred to see the effective quantity. To help keeping the code clear, a function like [Compound's `doTransferIn`](https://github.com/compound-finance/compound-protocol/blob/master/contracts/CErc20.sol#L156) can be implemented.\n\n**[JTraversa (Swivel) acknowledged](https://github.com/code-423n4/2021-09-swivel-findings/issues/156#issuecomment-938359220):**\n> Will review further. I dont believe that any tokens on compound currently have fees. Although it *is* news to me that USDT has toggle-able fees, whoops.\n> \n> That said, given we have admin control over added assets, I'd probably also lower this to a low-risk if accepted. \n\n**[0xean (judge) commented](https://github.com/code-423n4/2021-09-swivel-findings/issues/156#issuecomment-943885544):**\n > ```\n> 2 — Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.\n> ```\n> \n> based on this \"leaking value\" I would say it qualifies as a med-severity. \n\n**[JTraversa (Swivel) commented](https://github.com/code-423n4/2021-09-swivel-findings/issues/156#issuecomment-950403433):**\n > We can account for the transfers in with a similar balance before transferFrom, and balance after check, in order to prevent additional deposits after a fee has been turned on.\n> \n> That said, Im not sure we can account for `redeemUnderlying` easily because should a fee be turned on, all funds would just be stuck in our contract if we added a similar check? (a != balance2-balance1)\n> \n> If a fee is turned on for USDT markets, there would be lost fee value, so if adding a check wouldn't work, the most reasonable response is just to make sure the market is pausable. \n\n\n\n## [[M-05] Swivel: implementation for initiateZcTokenFillingZcTokenExit is incorrect](https://github.com/code-423n4/2021-09-swivel-findings/issues/38)\n_Submitted by itsmeSTYJ_.\n\n#### Impact\n\nIn `initiateZcTokenFillingZcTokenExit()` , this comment `// transfer underlying tokens - the premium paid + fee in underlying to swivel (from sender)`  is incorrect because you are actually transferring the underlying tokens - premium paid to the maker (from sender) AND you have to pay fee separately to swivel.\n\n`initiateZCTokenFillingZcTokenExit` means I want to sell my nTokens so that means `a` is the amount of principal I want to fill. Let's use a hypothetical example where I (taker) wants to fill 10 units of ZcTokenExit for maker.\n\n1.  I transfer 10 units of underlying to Swivel. The net balances are: me (-a), swivel (+a)\n2.  I transfer fee (in underlying) to Swivel. The net balances are: me (-a-fee), swivel (+a+fee)\n3.  Swivel initiates my position, sends me the ZcToken and sends Maker the nTokens\n4.  Maker pays me premiumFilled for the nTokens. The net balances are: me (-a-fee+premiumsFilled), swivel (+a+fee), maker (-premiumsFilled)\n5.  Maker closes position. The net balances are: me (-a-fee+premiumsFilled), swivel (+fee), maker (-premiumsFilled+a)\n\nSo effectively, I (taker) should be paying a-premium to maker and fee to swivel.\n\n#### Recommended Mitigation Steps\n\n```jsx\nfunction initiateZcTokenFillingZcTokenExit(Hash.Order calldata o, uint256 a, Sig.Components calldata c) internal {\n  bytes32 hash = validOrderHash(o, c);\n\n  require(a <= o.principal - filled[hash]), 'taker amount > available volume'); // Note: you don't need to wrap these in brackets because if you look at the https://docs.soliditylang.org/en/latest/cheatsheet.html#order-of-precedence-of-operators, subtraction will always go before comparison \n\n  filled[hash] += a;\n\n  uint256 premiumFilled = (((a * 1e18) / o.principal) * o.premium) / 1e18;\n  uint256 fee = ((premiumFilled * 1e18) / fenominator[0]) / 1e18;\n\n  // transfer underlying tokens - the premium paid in underlying to maker (from sender)\n  Erc20(o.underlying).transferFrom(msg.sender, o.maker, a - premiumFilled);\n  Erc20(o.underlying).transferFrom(msg.sender, swivel, fee);\n  // transfer <a> zcTokens between users in marketplace\n  require(MarketPlace(marketPlace).p2pZcTokenExchange(o.underlying, o.maturity, o.maker, msg.sender, a), 'zcToken exchange failed');\n          \n  emit Initiate(o.key, hash, o.maker, o.vault, o.exit, msg.sender, a, premiumFilled);\n}\n```\n\n**[JTraversa (Swivel) confirmed](https://github.com/code-423n4/2021-09-swivel-findings/issues/38#issuecomment-937980208):**\n > Really good eye. \n> \n> We had `o.maker` send the fee after receiving it (same # of transfers as suggested mitigation) and actually accidentally lost that in a larger organizational commit 😅 .\n\n \n# Low Risk Findings (18)\n- [[L-01] Different parameter used in while emitting event](https://github.com/code-423n4/2021-09-swivel-findings/issues/90) _Submitted by JMukesh, also found by pauliax_.\n- [[L-02] Swivel Markets are not Isolated](https://github.com/code-423n4/2021-09-swivel-findings/issues/73) _Submitted by leastwood_.\n- [[L-03] Missing zero-address checks](https://github.com/code-423n4/2021-09-swivel-findings/issues/100) _Submitted by 0xRajeev, also found by cmichel, defsec, GalloDaSballo, JMukesh, and pants_.\n- [[L-04] Missing input validation, threshold check, event and timelock in `setFee` function](https://github.com/code-423n4/2021-09-swivel-findings/issues/108) _Submitted by 0xRajeev, also found by 0xsanson, defsec, JMukesh, and pauliax_.\n- [[L-05] Compact signatures not being supported could lead to DoS](https://github.com/code-423n4/2021-09-swivel-findings/issues/104) _Submitted by 0xRajeev, also found by pauliax_.\n- [[L-06] Missing input validation on array length match](https://github.com/code-423n4/2021-09-swivel-findings/issues/105) _Submitted by 0xRajeev, also found by JMukesh, and leastwood_.\n- [[L-07] Abstract contracts should really be interfaces](https://github.com/code-423n4/2021-09-swivel-findings/issues/93) _Submitted by 0xRajeev_.\n- [[L-08] Static `chainID` could allow replay attacks on chain splits](https://github.com/code-423n4/2021-09-swivel-findings/issues/98) _Submitted by 0xRajeev, also found by 0xsanson, nikitastupin, and pauliax_.\n- [[L-09] Swivel: Incorrect dev comments for the 4 initiate functions](https://github.com/code-423n4/2021-09-swivel-findings/issues/35) _Submitted by itsmeSTYJ_.\n- [[L-10] Open TODOs in Codebase](https://github.com/code-423n4/2021-09-swivel-findings/issues/67) _Submitted by leastwood, also found by pants and ye0lde_.\n- [[L-11] Complex state variable copied to memory in `redeemZcToken` (MarketPlace.sol)](https://github.com/code-423n4/2021-09-swivel-findings/issues/41) _Submitted by ye0lde_.\n- [[L-12] swivel and marketPlace contract does not implement the mechanisim to renounce the role of admin](https://github.com/code-423n4/2021-09-swivel-findings/issues/119) _Submitted by JMukesh, also found by GalloDaSballo and pants_.\n- [[L-13] Missing event and timelock for `setSwivelAddress`](https://github.com/code-423n4/2021-09-swivel-findings/issues/96) _Submitted by 0xRajeev_.\n- [[L-14] Validations in `setFee`](https://github.com/code-423n4/2021-09-swivel-findings/issues/137) _Submitted by pauliax_.\n- [[L-15] Missing input validation & event in emergency `blockWithdrawal` could be risky](https://github.com/code-423n4/2021-09-swivel-findings/issues/107) _Submitted by 0xRajeev_.\n- [[L-16] `createMarket` function missing parameter description](https://github.com/code-423n4/2021-09-swivel-findings/issues/3) _Submitted by loop_.\n- [[L-17] Wrong parameter name used in function spec](https://github.com/code-423n4/2021-09-swivel-findings/issues/2) _Submitted by loop_.\n- [[L-18] Swivel: Implement check effect interaction to align with best practices](https://github.com/code-423n4/2021-09-swivel-findings/issues/37) _Submitted by itsmeSTYJ_.\n\n \n# Non-Critical Findings (20)\n- [[N-01] Potential Reentrancy when Initiating and Exiting Positions](https://github.com/code-423n4/2021-09-swivel-findings/issues/75) _Submitted by leastwood, also found by pants_.\n- [[N-02] Lack of Pause Mechanism](https://github.com/code-423n4/2021-09-swivel-findings/issues/76)_Submitted by leastwood_.\n- [[N-03] Use of `ecrecover` is susceptible to signature malleability](https://github.com/code-423n4/2021-09-swivel-findings/issues/99) _Submitted by 0xRajeev, also found by nikitastupin_.\n- [[N-04] Lack of Proper Revert Messages](https://github.com/code-423n4/2021-09-swivel-findings/issues/68) _Submitted by leastwood, also found by pants_.\n- [[N-05] `balanceOf` should be a `_view_` function](https://github.com/code-423n4/2021-09-swivel-findings/issues/157) _Submitted by 0xsanson_.\n- [[N-06] `Swivel.sol` - marketplace is an immutable address, yet is always casted to MarketPlace - store as MarketPlace to make code cleaner](https://github.com/code-423n4/2021-09-swivel-findings/issues/125) _Submitted by GalloDaSballo_.\n- [[N-07] The requires used in `p2pVaultExchange` `transferVaultNotional` in Marketplace.sol are not necessary](https://github.com/code-423n4/2021-09-swivel-findings/issues/130) _Submitted by GalloDaSballo_.\n- [[N-08] Magic Number `1e26` would best replaced by a constant in `VaultTracker`](https://github.com/code-423n4/2021-09-swivel-findings/issues/131) _Submitted by GalloDaSballo, also found by itsmeSTYJ_.\n- [[N-09] Missing Dev Comments](https://github.com/code-423n4/2021-09-swivel-findings/issues/71) _Submitted by leastwood_.\n- [[N-10] Double Spending. No `decreaseAllowance()/ IncreaseAllowance()`](https://github.com/code-423n4/2021-09-swivel-findings/issues/53) _Submitted by pants_.\n- [[N-11] Return value of `transferNotionalFee`](https://github.com/code-423n4/2021-09-swivel-findings/issues/135) _Submitted by pauliax_.\n- [[N-12] Can cancel the same order again](https://github.com/code-423n4/2021-09-swivel-findings/issues/145) _Submitted by pauliax_.\n- [[N-13] Style issues](https://github.com/code-423n4/2021-09-swivel-findings/issues/153) _Submitted by pauliax_.\n- [[N-14] Missing input validation may cause revert due to underflow](https://github.com/code-423n4/2021-09-swivel-findings/issues/102) _Submitted by 0xRajeev_.\n- [[N-15] Wrong yield computation upon maturity](https://github.com/code-423n4/2021-09-swivel-findings/issues/85) _Submitted by cmichel_.\n- [[N-16] Missing guarded launch](https://github.com/code-423n4/2021-09-swivel-findings/issues/94) _Submitted by 0xRajeev_.\n- [[N-17] Underlying can be fetched from `cToken`](https://github.com/code-423n4/2021-09-swivel-findings/issues/142) _Submitted by pauliax_.\n- [[N-18] Missing initial ownership event](https://github.com/code-423n4/2021-09-swivel-findings/issues/49) _Submitted by pants_.\n- [[N-19] Return value of `transferNotionalFee` ignored](https://github.com/code-423n4/2021-09-swivel-findings/issues/16) _Submitted by loop_.\n- [[N-20] Prevent underflow in require](https://github.com/code-423n4/2021-09-swivel-findings/issues/62) _Submitted by gpersoon_.\n \n# Gas Optimizations (28)\n- [[G-01] Gas Optimization on the Public Functions](https://github.com/code-423n4/2021-09-swivel-findings/issues/18) _Submitted by defsec, also found by 0xRajeev, loop, and ye0lde_.\n- [[G-02] Caching state variables in local/memory variables avoids SLOADs to save gas](https://github.com/code-423n4/2021-09-swivel-findings/issues/110) _Submitted by 0xRajeev, also found by pauliax_.\n- [[G-03] Removing redundant require() can save gas](https://github.com/code-423n4/2021-09-swivel-findings/issues/111) _Submitted by 0xRajeev_.\n- [[G-04] += can be replaced by =](https://github.com/code-423n4/2021-09-swivel-findings/issues/113) _Submitted by 0xRajeev_.\n- [[G-05] Converting fenominator to a static array will save storage slots and gas](https://github.com/code-423n4/2021-09-swivel-findings/issues/114) _Submitted by 0xRajeev, also found by defsec, loop, and pauliax_.\n- [[G-06] Avoiding initialization of loop index can save a little gas](https://github.com/code-423n4/2021-09-swivel-findings/issues/115) _Submitted by 0xRajeev_.\n- [[G-07] Bounded array lengths or checking `gasleft` will save gas from OOGs](https://github.com/code-423n4/2021-09-swivel-findings/issues/116)_Submitted by 0xRajeev_.\n- [[G-08] Better Math in `calculateReturn`](https://github.com/code-423n4/2021-09-swivel-findings/issues/161) _Submitted by 0xsanson_.\n- [[G-09] Math's operations order in Swivel's functions](https://github.com/code-423n4/2021-09-swivel-findings/issues/162) _Submitted by 0xsanson, also found by cmichel, itsmeSTYJ, and loop_.\n- [[G-10] `require(mPlace.custodialExit)` in Swivel.sol is redundant](https://github.com/code-423n4/2021-09-swivel-findings/issues/128) _Submitted by GalloDaSballo_.\n- [[G-11] Redundant `require` in Swivel.sol](https://github.com/code-423n4/2021-09-swivel-findings/issues/129) _Submitted by GalloDaSballo_.\n- [[G-12] Gas: Approve `cToken` address only once for underlying](https://github.com/code-423n4/2021-09-swivel-findings/issues/87) _Submitted by cmichel_.\n- [[G-13] Use `bytes32` rather than `string/bytes`](https://github.com/code-423n4/2021-09-swivel-findings/issues/21) _Submitted by defsec_.\n- [[G-14] VaultTracker.sol: Gas optimisation for `addNotional`](https://github.com/code-423n4/2021-09-swivel-findings/issues/28) _Submitted by itsmeSTYJ_.\n- [[G-15] MarketPlace.sol: Remove maturity from VaultTracker and ZcToken](https://github.com/code-423n4/2021-09-swivel-findings/issues/29) _Submitted by itsmeSTYJ_.\n- [[G-16] VaultTracker.sol: pass in exchangeRate as a variable to `matureVault()`](https://github.com/code-423n4/2021-09-swivel-findings/issues/30) _Submitted by itsmeSTYJ_.\n- [[G-17] VaultTracker.sol: `init sVault.exchangeRate` in constructor](https://github.com/code-423n4/2021-09-swivel-findings/issues/31) _Submitted by itsmeSTYJ_.\n- [[G-18] Gas Savings Upon Market Creation](https://github.com/code-423n4/2021-09-swivel-findings/issues/70) _Submitted by leastwood_.\n- [[G-19] Array `.length` Used Directly In For Loops](https://github.com/code-423n4/2021-09-swivel-findings/issues/15) _Submitted by ye0lde, also found by pants_.\n- [[G-20] Title: Double reading from `calldata o`](https://github.com/code-423n4/2021-09-swivel-findings/issues/43) _Submitted by pants_.\n- [[G-22] Functions returning boolean](https://github.com/code-423n4/2021-09-swivel-findings/issues/149) _Submitted by pauliax_.\n- [[G-23] 'matured' can be replaced by 'maturityRate' > 0](https://github.com/code-423n4/2021-09-swivel-findings/issues/151) _Submitted by pauliax_.\n- [[G-24] matureVault can receive maturityRate cheaper](https://github.com/code-423n4/2021-09-swivel-findings/issues/152) _Submitted by pauliax_.\n- [[G-25] Input validation on `amount > 0` will save gas](https://github.com/code-423n4/2021-09-swivel-findings/issues/112) _Submitted by 0xRajeev, also found by csanuragjain_.\n- [[G-26] Bytes constant more efficient than string literal](https://github.com/code-423n4/2021-09-swivel-findings/issues/1) _Submitted by loop_.\n- [[G-27] 'mature' and 'maturityRate' do not need separate mappings](https://github.com/code-423n4/2021-09-swivel-findings/issues/147) _Submitted by pauliax_.\n- [[G-28] 'onlyAdmin' and 'onlySwivel' modifiers](https://github.com/code-423n4/2021-09-swivel-findings/issues/148) _Submitted by pauliax_.\n\n\n# Disclosures\n\nC4 is an open organization governed by participants in the community.\n\nC4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.\n\nC4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.\n"
}