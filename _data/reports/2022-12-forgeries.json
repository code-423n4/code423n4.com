{
  "circa": {
    "title": "Forgeries contest",
    "sponsor": "Forgeries",
    "slug": "2022-12-forgeries",
    "date": "2023-02-28",
    "findings": "https://github.com/code-423n4/2022-12-forgeries-findings/issues",
    "contest": 191
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit contest outlined in this document, C4 conducted an analysis of the Forgeries smart contract system written in Solidity. The audit contest took place between December 13—December 16 2022.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>83 Wardens contributed reports to the Forgeries contest:</p>\n<ol>\n<li>0x1f8b</li>\n<li><a href=\"https://twitter.com/0xAgro\">0xAgro</a></li>\n<li>0xdeadbeef0x</li>\n<li>9svR6w</li>\n<li>Apocalypto (cRat1st0s, reassor, and M0ndoHEHE)</li>\n<li><a href=\"https://github.com/Aymen1001\">Aymen0909</a></li>\n<li><a href=\"https://twitter.com/bahoz_eth\">BAHOZ</a></li>\n<li>Bnke0x0</li>\n<li><a href=\"https://twitter.com/bobface16\">Bobface</a></li>\n<li><a href=\"https://twitter.com/0xch301\">Ch_301</a></li>\n<li><a href=\"https://twitter.com/Deivitto\">Deivitto</a></li>\n<li>HE1M</li>\n<li>IllIllI</li>\n<li>Koolex</li>\n<li>Madalad</li>\n<li>Matin</li>\n<li>PaludoX0</li>\n<li><a href=\"https://www.linkedin.com/in/nhan-vo-a9473019a/\">Rahoz</a></li>\n<li>RaymondFam</li>\n<li>ReyAdmirado</li>\n<li>Rolezn</li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li><a href=\"https://www.linkedin.com/in/sathishkumar-p-26069915a\">Sathish9098</a></li>\n<li>SmartSek (0xDjango and hake)</li>\n<li>Soosh</li>\n<li><a href=\"https://twitter.com/longthetop\">Titi</a></li>\n<li><a href=\"https://twitter.com/trust__90\">Trust</a></li>\n<li>Zarf</li>\n<li><a href=\"https://github.com/romeroadrian\">adriro</a></li>\n<li>aga7hokakological</li>\n<li>ayeslick</li>\n<li><a href=\"https://twitter.com/bin2chen\">bin2chen</a></li>\n<li>btk</li>\n<li><a href=\"https://twitter.com/c3ph_\">c3phas</a></li>\n<li>carrotsmuggler</li>\n<li>caventa</li>\n<li>cccz</li>\n<li>chaduke</li>\n<li><a href=\"https://twitter.com/codeIslight\">codeislight</a></li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li><a href=\"https://twitter.com/ctrl_c3\">ctrlc03</a></li>\n<li><a href=\"https://rafal-kalinowski.pl/\">deliriusz</a></li>\n<li>dic0de</li>\n<li>dipp</li>\n<li>evan</li>\n<li>gasperpre</li>\n<li>gz627</li>\n<li><a href=\"https://twitter.com/hansfriese\">hansfriese</a></li>\n<li>hihen</li>\n<li>imare</li>\n<li>immeas</li>\n<li><a href=\"https://twitter.com/krenkmet\">indijanc</a></li>\n<li>izhelyazkov</li>\n<li>jadezti</li>\n<li>kaliberpoziomka8552</li>\n<li><a href=\"https://twitter.com/kd23907\">kuldeep</a></li>\n<li>ladboy233</li>\n<li>maks</li>\n<li>mookimgo</li>\n<li><a href=\"https://twitter.com/nadin20678790\">nadin</a></li>\n<li>neko_nyaa</li>\n<li>neumo</li>\n<li><a href=\"https://github.com/nicobevilacqua\">nicobevi</a></li>\n<li><a href=\"https://twitter.com/zachobront\">obront</a></li>\n<li><a href=\"https://twitter.com/Zcropakx\">orion</a></li>\n<li><a href=\"https://twitter.com/andyfeili\">oyc_109</a></li>\n<li>petersspetrov</li>\n<li>poirots (<a href=\"https://twitter.com/DavideSilva_\">DavideSilva</a>, resende, naps62 and eighty)</li>\n<li>rvierdiiev</li>\n<li>sces60107</li>\n<li>shark</li>\n<li>sk8erboy</li>\n<li>subtle77</li>\n<li>trustindistrust</li>\n<li>wagmi</li>\n<li>yixxas</li>\n<li>zzykxx</li>\n</ol>\n<p>This contest was judged by <a href=\"https://twitter.com/gzeon\">gzeon</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/itsmetechjay\">itsmetechjay</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 5 unique vulnerabilities. Of these vulnerabilities, 2 received a risk rating in the category of HIGH severity and 3 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 28 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 24 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2022-12-forgeries\">C4 Forgeries contest repository</a>, and is composed of 4 smart contracts, 1 abstract, and 3 interfaces written in the Solidity programming language and includes 423 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities based on three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>For more information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>, specifically our section on <a href=\"https://docs.code4rena.com/awarding/judging-criteria/severity-categorization\">Severity Categorization</a>.</p>\n<h1 id=\"high-risk-findings-2\" style=\"position:relative;\"><a href=\"#high-risk-findings-2\" aria-label=\"high risk findings 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (2)</h1>\n<h2 id=\"h-01-admin-does-not-have-to-wait-to-call-lastresorttimelockownerclaimnft\" style=\"position:relative;\"><a href=\"#h-01-admin-does-not-have-to-wait-to-call-lastresorttimelockownerclaimnft\" aria-label=\"h 01 admin does not have to wait to call lastresorttimelockownerclaimnft permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/146\">[H-01] Admin does not have to wait to call <code>lastResortTimelockOwnerClaimNFT()</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/146\">Soosh</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/346\">dipp</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/343\">indijanc</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/331\">maks</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/329\">jadezti</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/325\">gz627</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/300\">sces60107</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/298\">Zarf</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/288\">neumo</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/284\">Ch_301</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/282\">imare</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/271\">Trust</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/246\">btk</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/226\">kuldeep</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/218\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/214\">immeas</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/203\">obront</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/191\">hansfriese</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/181\">Koolex</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/171\">Apocalypto</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/166\">carrotsmuggler</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/154\">hihen</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/139\">HE1M</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/132\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/107\">SmartSek</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/100\">9svR6w</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/85\">sk8erboy</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/76\">ladboy233</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/65\">Titi</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/46\">dic0de</a>, and <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/6\">csanuragjain</a></em></p>\n<p>On contest page:\n<code>\"If no users ultimately claim the NFT, the admin specifies a timelock period after which they can retrieve the raffled NFT.\"</code></p>\n<p>Let’s assume a recoverTimelock of 1 week.</p>\n<p>The specification suggests that 1 week from the winner not having claimed the NFT. Meaning that the admin should only be able to call <code>lastResortTimelockOwnerClaimNFT()</code> only after <code>&#x3C;block.timestamp at fulfillRandomWords()> + request.drawTimelock + 1 weeks</code>.</p>\n<p>Specification:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">         drawTimelock                recoverTimelock</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">             │                              │</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">             ▼                              ▼</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ┌────┬──────────────────────────────┐</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        │    │           1 week             │</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        └────┴──────────────────────────────┘</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ▲</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        │</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">fulfillRandomWords()</span></span></code></pre>\n<ul>\n<li>The winner should have up to <code>drawTimelock</code> to claim before an admin can call <code>redraw()</code> and pick a new winner.</li>\n<li>The winner should have up to <code>recoverTimelock</code> to claim before an admin can call <code>lastResortTimelockOwnerClaimNFT()</code> to cancel the raffle.</li>\n</ul>\n<p>But this is not the case.</p>\n<p><strong>recoverTimelock</strong> is set in the <code>initialize(...)</code> function and nowhere else. That means 1 week from initialization, the admin can call <code>lastResortTimelockOwnerClaimNFT()</code>. <code>redraw()</code> also does not update <code>recoverTimelock</code>.</p>\n<p>In fact, <code>startDraw()</code> does not have to be called at the same time as <code>initialize(...)</code>. That means that if the draw was started after having been initialized for 1 week, the admin can withdraw at any time after that.</p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Protocol does not work as intended.</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Just like for <code>drawTimelock</code>, <code>recoverTimelock</code> should also be updated for each dice roll.\n<code>&#x3C;block.timestamp at fulfillRandomWords()> + request.drawTimelock + &#x3C;recoverBufferTime></code>. Where <code>&#x3C;recoverBufferTime></code> is essentially the <code>drawBufferTime</code> currently used, but for <code>recoverTimelock</code>.</p>\n<p><strong>Note:</strong> currently, <code>drawTimelock</code> is updated in the <code>_requestRoll()</code> function. This is “technically less correct” as chainlink will take some time before <code>fulfillRandomWords(...)</code> callback. So the timelock is actually set before the winner has been chosen.  This should be insignificant under normal network conditions (Chainlink VRF shouldn’t take > 1min) but both timelocks should be updated in the same function - either <code>_requestRoll()</code> or <code>fulfillRandomWords(...)</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/146#issuecomment-1358257045\">iainnash (Forgeries) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>This seems to be a dupe of a previous issue where the timelock is not passed. </p>\n<p>Give this timelock is validated from the end of the auction the risk here seems Low.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/146#issuecomment-1383516964\">gzeon (judge) increased severity to High and commented</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/discussions/359#discussioncomment-4693679\">#359 (comment)</a></p>\n</blockquote>\n<hr>\n<h2 id=\"h-02-draw-organizer-can-rig-the-draw-to-favor-certain-participants-such-as-their-own-account\" style=\"position:relative;\"><a href=\"#h-02-draw-organizer-can-rig-the-draw-to-favor-certain-participants-such-as-their-own-account\" aria-label=\"h 02 draw organizer can rig the draw to favor certain participants such as their own account permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/272\">[H-02] Draw organizer can rig the draw to favor certain participants such as their own account.</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/272\">Trust</a></em></p>\n<p>In RandomDraw, the host initiates a draw using <code>startDraw()</code> or <code>redraw()</code> if the redraw draw expiry has passed. Actual use of Chainlink oracle is done in <code>\\_requestRoll</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">request.currentChainlinkRequestId = coordinator.requestRandomWords({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    keyHash: settings.keyHash,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    subId: settings.subscriptionId,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    minimumRequestConfirmations: minimumRequestConfirmations,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    callbackGasLimit: callbackGasLimit,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    numWords: wordsRequested</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">});</span></span></code></pre>\n<p>Use of subscription API is explained well <a href=\"https://docs.chain.link/vrf/v2/subscription\">here</a>. Chainlink VRFCoordinatorV2 is called with <code>requestRandomWords()</code> and emits a random request. After <code>minimumRequestConfirmations</code> blocks, an oracle VRF node replies to the coordinator with a provable random, which supplies the random to the requesting contract via <code>fulfillRandomWords()</code>  call. It is important to note the role of subscription ID. This ID maps to the subscription charged for the request, in LINK tokens. In our contract, the raffle host supplies their subscription ID as a parameter. Sufficient balance check of the request ID is not <a href=\"https://github.com/smartcontractkit/chainlink/blob/286a65065fcfa5e1b2362745079cdc218e40e68d/contracts/src/v0.8/VRFCoordinatorV2.sol#L370\">checked</a> at request-time, but rather checked in Chainlink <a href=\"https://github.com/smartcontractkit/chainlink/blob/806ee17236ba70926a1f07d1141808b634db48b6/core/services/vrf/listener_v2.go#L346\">node</a> code as well as on-chain by <a href=\"https://github.com/smartcontractkit/chainlink/blob/286a65065fcfa5e1b2362745079cdc218e40e68d/contracts/src/v0.8/VRFCoordinatorV2.sol#L594\">VRFCoordinator</a> when the request is satisfied. In the scenario where the subscriptionID lacks funds, there will be a period of 24 hours when user can top up the account and random response will be <a href=\"https://docs.chain.link/vrf/v2/subscription\">sent</a>:</p>\n<p>“Each subscription must maintain a minimum balance to fund requests from consuming contracts. If your balance is below that minimum, your requests remain pending for up to 24 hours before they expire. After you add sufficient LINK to a subscription, pending requests automatically process as long as they have not expired.”</p>\n<p>The reason this is extremely interesting is because as soon as redraws are possible, the random response can no longer be treated as fair. Indeed, Draw host can wait until redraw cooldown passed (e.g. 1 hour), and only then fund the subscriptionID. At this point, Chainlink node will send a TX with the random response. If host likes the response (i.e. the draw winner), they will not interfere. If they don’t like the response, they can simply frontrun the Chainlink TX with a <code>redraw()</code> call. A redraw will create a new random request and discard the old requestId so the previous request will never be accepted.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function fulfillRandomWords(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 _requestId,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256[] memory _randomWords</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">) internal override {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Validate request ID</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t  // &lt;---------------- swap currentChainlinkRequestId ---&gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (_requestId != request.currentChainlinkRequestId) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        revert REQUEST_DOES_NOT_MATCH_CURRENT_ID();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<!---->\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">//&lt;------ redraw swaps currentChainlinkRequestId ---&gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">request.currentChainlinkRequestId = coordinator.requestRandomWords({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    keyHash: settings.keyHash,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    subId: settings.subscriptionId,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    minimumRequestConfirmations: minimumRequestConfirmations,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    callbackGasLimit: callbackGasLimit,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    numWords: wordsRequested</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">});</span></span></code></pre>\n<p>Chainlink docs <a href=\"https://docs.chain.link/vrf/v2/security\">warn</a> against this usage pattern of the VRF -“Don’t accept bids/bets/inputs after you have made a randomness request”. In this instance, a low subscription balance allows the host to invalidate the assumption that 1 hour redraw cooldown is enough to guarantee Chainlink answer has been received.</p>\n<h3 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Draw organizer can rig the draw to favor certain participants such as their own account.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Owner offers a BAYC NFT for holders of their NFT collection X. Out of 10,000 tokenIDs, owner has 5,000 Xs. Rest belongs to retail users.</p>\n<ol>\n<li>Owner subscriptionID is left with 0 LINK balance in coordinator</li>\n<li>Redraw time is set to 2 hours</li>\n<li>Owner calls <code>startDraw()</code> which will initiate a Chainlink request</li>\n<li>Owner waits for 2 hours and then tops up their subscriptionID with sufficient LINK</li>\n<li>Owner scans the mempool for <code>fulfillRandomWords()</code></li>\n<li>\n<p>If the raffle winner is tokenID &#x3C; 5000, it is owner’s token</p>\n<ol>\n<li>Let fulfill execute and pick up the reward</li>\n</ol>\n</li>\n<li>\n<p>If tokenID >= 5000</p>\n<ol>\n<li>Call <code>redraw()</code></li>\n<li>fulfill will revert because of requestId mismatch</li>\n</ol>\n</li>\n<li>Owner has 75% of claiming the NFT instead of 50%</li>\n</ol>\n<p>Note that Forgeries draws are presumably intended as incentives for speculators to buy NFTs from specific collections. Without having a fair shot at receiving rewards from raffles, these NFTs user buys could be worthless. Another way to look at it is that the impact is theft of yield, as host can freely decrease the probability that a token will be chosen for rewards with this method.</p>\n<p>Also, I did not categorize it as centralization risk as the counterparty is not Forgeries but rather some unknown third-party host which offers an NFT incentive program. It is a similar situation to the distinction made between 1st party and 3rd party projects <a href=\"https://github.com/code-423n4/2022-10-juicebox-findings/issues/191\">here</a>.</p>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p><a href=\"https://docs.chain.link/vrf/v2/subscription\">Chainlink docs</a></p>\n<p><a href=\"https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.8/VRFCoordinatorV2.sol\">Chainlink co-ordinator code</a></p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The root cause is that Chainlink response can arrive up to 24 hours from the most request is dispatched, while redraw cooldown can be 1 hour+. The best fix would be to enforce minimum cooldown of 24 hours.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/272\">iainnash (Forgeries) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/272#issuecomment-1374550568\">gzeon (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>This issue weaponized <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/133\">133</a> and <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/194\">194</a> to violate the fairness requirement of the protocol. Downgrading this to Medium because the </p>\n<ol>\n<li>Difficulty of attack is high; you need to\na) front-run the fulfillRandomWords call and\nb) own a meaningful % of the collection </li>\n<li>Require to use an underfunded subscription\nThis will flag the raffle is fishy, since the owner might as well never fund the subscription.</li>\n<li>3rd party can mitigate this by funding the subscription.</li>\n</ol>\n<p>There is another case where the chainlink node waits almost 24 hours before fulfilling the request, but I don’t think that is the normal behavior and is out of the attacker’s control.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/272#issuecomment-1376205733\">Trust (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Would like to respectfully state my case and why this finding is clearly HIGH impact.\nManipulation of RNG is an extremely serious impact as it undermines assumption of fairness which is the main selling point of raffles, lotteries etc. As proof one can view <a href=\"https://immunefi.com/bounty/chainlink/\">Chainlink’s </a> BBP which lists “Predictable or manipulable RNG that results in abuse of downstream services” as a critical impact, payable up to $3M.</p>\n<p>I would like to relate to the conditions stated by the judge:</p>\n<blockquote>\n<ol>\n<li>Difficulty of attack is high; you need to\na) front-run the fulfillRandomWords call and\nb) own a meaningful % of the collection</li>\n</ol>\n</blockquote>\n<p>frontrunning is done in practically every block by MEV bots proving it’s practical and easy to do on mainnet, where the protocol is deployed. Owning a meaningful % of the collection is not necessary, as:</p>\n<ol>\n<li>Even with 1 / 10,000 NFTs, owner is still multiplying their chances which is a breach of fair random.</li>\n<li>The exploit can be repeated in every single raffle, exponentially multiplying their edge across time. This also highlights that the frontrunning does not have to be work every time (even though it’s high %) in order for the exploitation to work.</li>\n<li>The draw is chosen by ownership of <strong>_settings.drawingToken</strong>, which is a project-provided token which is already likely they have a large amount of. It is unrelated to the BAYC collection / high value NFT being given out.</li>\n<li>It is easy to see attacker can easily half the chances of any unwanted recipient to win the raffle - they would have to have the winning ticket in both rounds. Putting the subscriber’s boosted win chances aside, it’s a clear theft of user’s potential high value prize.</li>\n</ol>\n<blockquote>\n<ul>\n<li>Require to use an underfunded subscription\nThis will flag the raffle is fishy, since the owner might as well never fund the subscription.</li>\n<li>3rd party can mitigate this by funding the subscription</li>\n</ul>\n</blockquote>\n<p>It is unrealistic to expect users of the protocol to be savvy on-chain detectives and also anticipate this specific attack vector. Even so, the topping-up of the subscription is done directly subscriber -> ChainlinkVRFCoordinator, so it’s not visible by looking at the raffle contract. </p>\n<p>To summarize, the characteristics of this finding are much more aligned to those of High severity, than those of Medium severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/272#issuecomment-1376267492\">gzeon (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The difficulty arises when only the raffle creator can perform the front running, not any interested MEV searcher. For sure, this is only 1 of the reason I think the risk of this issue is not High.</p>\n</blockquote>\n<blockquote>\n<p>As the project seems to be fine with a raffle being created, but never actually started; I think when the attack require a chainlink subscription to be underfunded to begin with also kinda fall in to the “creator decided not to start raffle” category.</p>\n</blockquote>\n<blockquote>\n<p>The argument of judging this apart from that is the raffle would looks like it completed but might not be fair, which I think is a very valid issue. However, I don’t see this as High risk given the relative difficulty as said and we seems to agree that it is fine if the raffle creator decided not to start the raffle. The end state would basically be the same.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/272#issuecomment-1376282150\">Trust (warden) commented</a>:</strong></p>\n<blockquote>\n<p>The end states are in my opinion very different. In order to understand the full impact of the vulnerability we need to understand the context in which those raffles take place. The drawing tokens are shilled to give users a chance to win a high valued item. Their worth is correlated to the fair chance users think they have in winning the raffle. The “fake raffle” on display allows the attacker to keep profiting from ticket sales while not giving away high value. I think this is why\n@iainnash agreed this to be a high risk find. </p>\n<p>I’ve also listed several other justifications including theft of user’s chances of winning which is high impact. I’d be happy to provide additional proof of why frontrunning is easily high enough % if that is the source of difficulty observed.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/272#issuecomment-1376307513\">gzeon (judge) commented</a>:</strong></p>\n<blockquote>\n<blockquote>\n<p>The drawing tokens are shilled to give users a chance to win a high valued item. Their worth is correlated to the fair chance users think they have in winning the raffle. </p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>That’s my original thought, but you and the sponsor tried to convince me the raffle is permissioned by design considering startDraw. </p>\n</blockquote>\n<blockquote>\n<p>If we think we need to guarantee the raffle token can get something fairly, we will also need to guarantee the raffle will, well, start. So I would say these are very similar since the ticket would be already sold anyway.</p>\n</blockquote>\n<blockquote>\n<p>I think I might either keep everything as-is, or I am going to reinstate those other issues that I invalidated due to assuming the permissioned design, and upgrading this to High. Would love to hear more from the sponsor before making the final call.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/272#issuecomment-1379859299\">Trust (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Regarding your smart observation @gzeon , I think the idea is clearly to make the draw methods decentralized in the future, but owner controlled as a first step. However they were not aware of this exploit, which from day 1 allows to put on a show and drive draw token prices up.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/272#issuecomment-1383501062\">gzeon (judge) increased severity to High and commented</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/discussions/359#discussioncomment-4693679\">#359 (comment)</a></p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-3\" style=\"position:relative;\"><a href=\"#medium-risk-findings-3\" aria-label=\"medium risk findings 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (3)</h1>\n<h2 id=\"m-01-raffle-creator-might-not-start-raffle-draw\" style=\"position:relative;\"><a href=\"#m-01-raffle-creator-might-not-start-raffle-draw\" aria-label=\"m 01 raffle creator might not start raffle draw permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/88\">[M-01] Raffle creator might not start raffle draw</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/88\">gasperpre</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/296\">evan</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/192\">hansfriese</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/105\">SmartSek</a>, and <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/16\">orion</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L173\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L173</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L304\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L304</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L127\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L127</a></p>\n<h3 id=\"impact-2\" style=\"position:relative;\"><a href=\"#impact-2\" aria-label=\"impact 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The raffle creator is not required to actually give the NFT away. The NFT that is used for the raffle is transferred to the contract when <code>startDraw</code> is executed. Before that, the NFT is in the hands of the creator. This means that he might create a raffle to make users buy NFTs required to participate and then refuse to draw a winner and keep the NFT to himself. Furthermore, he might not even be the owner of the NFT in the first place, which he can achieve by flash loaning the NFT in order to pass the <code>ownerOf</code> check in <code>initialize</code> function.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><strong>Example 1</strong></p>\n<ol>\n<li>User U creates an NFT collection C</li>\n<li>He buys a BAYC NFT</li>\n<li>He creates a raffle with it, and requires <code>drawingToken</code> to be from collection C</li>\n<li>Users buy tokens from his collection C</li>\n<li>He then refuses to execute <code>startDraw</code> function and rather sells the BAYC NFT</li>\n</ol>\n<p><strong>Example 2</strong></p>\n<ol>\n<li>User U creates an NFT collection C</li>\n<li>User U uses an NFT flash loan to borrow a very expensive NFT</li>\n<li>In the same transaction he creates a raffle with this NFT, and requires <code>drawingToken</code> to be from collection C</li>\n<li>The check that he is the owner will pass, because for the duration of the transaction he in fact is</li>\n<li>Users see that there is a raffle for a very expensive NFT, so they buy tokens C</li>\n<li>The winner is never drawn, because the creator does not even own the NFT</li>\n</ol>\n<p><strong>Example 3</strong></p>\n<ol>\n<li>User U has an NFT X</li>\n<li>He puts X on a sale on some NFT marketplace (which does not require him to lock it in contract)</li>\n<li>He forgets about it and creates a raffle with it</li>\n<li>Users buy the tokens necessary for the raffle</li>\n<li>User U wants to execute the <code>startDraw</code> function, but just before it the NFT X is bought from him through the marketplace</li>\n<li>The winner cannot be drawn</li>\n</ol>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Transfer the NFT to the contract at the time of creation of the raffle.  You can do that by approving the factory contract to transfer the token and do the transfer in <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDrawFactory.sol#L43\"><code>makeNewDraw</code></a> function between cloning and <code>initialization</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">address newDrawing = ClonesUpgradeable.clone(implementation);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">IERC721(settings.token).transferFrom(msg.sender, newDrawing, settings.tokenId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Setup the new drawing</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">IVRFNFTRandomDraw(newDrawing).initialize(admin, settings);</span></span></code></pre>\n<p>Remember to remove token transfer from <code>startDraw</code> function.</p>\n<p>Notice that the creator can still claim NFT after a week, without drawing, by executing <code>lastResortTimelockOwnerClaimNFT</code>. To prevent that, I would recommend adding a check in <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L304\"><code>lastResortTimelockOwnerClaimNFT</code></a>, if a winner was drawn.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"> if (!request.hasChosenRandomNumber) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            revert NEEDS_TO_HAVE_CHOSEN_A_NUMBER();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>So now a user can trust that the NFT is locked in the contract, and it will be claimable only by a winner (or creator if the winner does not claim it). However, there is still no guarantee that the winner will actually be drawn, because the creator has to manually execute <code>startDraw</code> function.\nTo fix this, I would recommend allowing anyone to execute <code>startDraw</code> function, so there is no need to rely on the creator. But we would need to limit the time window of when <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L173\"><code>startDraw</code></a> can be executed, so users have the time to get tokens before the drawing. That can be done by introducing a new state variable <code>firstDrawTime</code>, that acts as a timestamp after which drawing can happen.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if(block.timestamp &lt; firstDrawTime) revert CANNOT_DRAW_YET();</span></span></code></pre>\n<p>Notice that now the NFT can only be claimed after the winner has been drawn. This means that we are depending on ChainLink VRF to be successful. For that reason I would recommend adding a role that has the power to change the VRF subscription or restore the NFT in cases where the winner is not picked in reasonable time. This role would be given to protocol owner (owner of the factory) / DAO / someone who would be considered as most reliable.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/88#issuecomment-1383518113\">gzeon (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/discussions/359#discussioncomment-4693679\">#359 (comment)</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/88#issuecomment-1448780927\">iainnash (Forgeries) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-02-vrfnftrandomdraw-admin-can-prevent-created-or-started-raffle-from-taking-place\" style=\"position:relative;\"><a href=\"#m-02-vrfnftrandomdraw-admin-can-prevent-created-or-started-raffle-from-taking-place\" aria-label=\"m 02 vrfnftrandomdraw admin can prevent created or started raffle from taking place permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/101\">[M-02] VRFNFTRandomDraw admin can prevent created or started raffle from taking place</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/101\">9svR6w</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/344\">deliriusz</a>,  <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/275\">BAHOZ</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/200\">0xdeadbeef0x</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/151\">trustindistrust</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/131\">gasperpre</a>, and <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/113\">codeislight</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L173\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L173</a> </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L162-L168\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L162-L168</a></p>\n<h3 id=\"impact-3\" style=\"position:relative;\"><a href=\"#impact-3\" aria-label=\"impact 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The admin/owner of <code>VRFNFTRandomDraw</code> can <code>startDraw()</code> a raffle, including emitting the <code>SetupDraw</code> event, but in a way that ensures <code>fulfillRandomWords()</code> is never called. For example:</p>\n<ul>\n<li>\n<p><code>keyHash</code> is not validated within <code>coordinator.requestRandomWords()</code>. Providing an invalid <code>keyHash</code> will allow the raffle to start but prevent the oracle from actually supplying a random value to determine the raffle result.</p>\n<ul>\n<li><a href=\"https://github.com/smartcontractkit/chainlink/blob/00f9c6e41f843f96108cdaa118a6ca740b11df35/contracts/src/v0.8/VRFCoordinatorV2.sol#L407-L409\">https://github.com/smartcontractkit/chainlink/blob/00f9c6e41f843f96108cdaa118a6ca740b11df35/contracts/src/v0.8/VRFCoordinatorV2.sol#L407-L409</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L163\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L163</a></li>\n</ul>\n</li>\n<li>\n<p>The admin/owner could alternatively ensure that the owner-provided chain.link VRF subscription does not have sufficient funds to pay at the time the oracle attempts to supply random values in <code>fulfillRandomWords()</code>.</p>\n<ul>\n<li><a href=\"https://github.com/smartcontractkit/chainlink/blob/00f9c6e41f843f96108cdaa118a6ca740b11df35/contracts/src/v0.8/VRFCoordinatorV2.sol#L594-L596\">https://github.com/smartcontractkit/chainlink/blob/00f9c6e41f843f96108cdaa118a6ca740b11df35/contracts/src/v0.8/VRFCoordinatorV2.sol#L594-L596</a></li>\n</ul>\n</li>\n</ul>\n<p>In addition, the owner/admin could simply avoid ever calling <code>startDraw()</code> in the first place.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Provide direct links to all referenced code in GitHub. Add screenshots, logs, or any other relevant proof that illustrates the concept.</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Depending on the desired functionality with respect to the raffle owner, a successful callback to <code>fulfillRandomWords()</code> could be a precondition of the admin/owner reclaiming the reward NFT. This would help ensure the owner does not create raffles that they intend will never pay out a reward.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/101#issuecomment-1448782416\">iainnash (Forgeries) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-03-protocol-safeguards-for-time-durations-are-skewed-by-a-factor-of-7-protocol-may-potentially-lock-nft-for-period-of-7-years\" style=\"position:relative;\"><a href=\"#m-03-protocol-safeguards-for-time-durations-are-skewed-by-a-factor-of-7-protocol-may-potentially-lock-nft-for-period-of-7-years\" aria-label=\"m 03 protocol safeguards for time durations are skewed by a factor of 7 protocol may potentially lock nft for period of 7 years permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/273\">[M-03] Protocol safeguards for time durations are skewed by a factor of 7. Protocol may potentially lock NFT for period of 7 years.</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/273\">Trust</a>, also found by <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/358\">subtle77</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/314\">wagmi</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/251\">Madalad</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/236\">Matin</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/212\">mookimgo</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/187\">evan</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/168\">Apocalypto</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/157\">kaliberpoziomka8552</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/150\">poirots</a>, <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/117\">aga7hokakological</a>, and <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/89\">yixxas</a></em></p>\n<p>In <code>VRFNFtRandomDraw\\.sol initialize()</code>, the MONTH<em>IN</em>SECONDS variable is used to validate two values:</p>\n<ul>\n<li>configured time between redraws is under 1 month</li>\n<li>recoverTimelock (when NFT can be returned to owner) is less than 1 year in the future</li>\n</ul>\n<!---->\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if (_settings.drawBufferTime &gt; MONTH_IN_SECONDS) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    revert REDRAW_TIMELOCK_NEEDS_TO_BE_LESS_THAN_A_MONTH();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">if (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _settings.recoverTimelock &gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    block.timestamp + (MONTH_IN_SECONDS * 12)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    revert RECOVER_TIMELOCK_NEEDS_TO_BE_LESS_THAN_A_YEAR();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>The issue is that MONTH<em>IN</em>SECONDS is calculated incorrectly:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">/// @dev 60 seconds in a min, 60 mins in an hour</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 immutable HOUR_IN_SECONDS = 60 * 60;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">/// @dev 24 hours in a day 7 days in a week</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 immutable WEEK_IN_SECONDS = (3600 * 24 * 7);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// @dev about 30 days in a month</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 immutable MONTH_IN_SECONDS = (3600 * 24 * 7) * 30;</span></span></code></pre>\n<p>MONTH<em>IN</em>SECONDS multiplies by 7 incorrectly, as it was copied from WEEK<em>IN</em>SECONDS. Therefore, actual seconds calculated is equivalent of 7 months.\nTherefore, recoverTimelock can be up to a non-sensible value of 7 years, and re-draws every up to 7 months.</p>\n<h3 id=\"impact-4\" style=\"position:relative;\"><a href=\"#impact-4\" aria-label=\"impact 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Protocol safeguards for time durations are skewed by a factor of 7. Protocol may potentially lock NFT for period of 7 years.</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Fix MONTH<em>IN</em>SECONDS calculation:\n<code>uint256 immutable MONTH_IN_SECONDS = (3600 * 24) * 30;</code></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/273\">iainnash (Forgeries) confirmed</a></strong> </p>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this contest, 27 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/148\">report highlighted below</a> by <strong>poirots</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/345\">deliriusz</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/333\">Aymen0909</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/323\">adriro</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/320\">zzykxx</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/308\">IllIllI</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/294\">Zarf</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/263\">ayeslick</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/252\">Madalad</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/248\">0xAgro</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/242\">Deivitto</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/220\">caventa</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/216\">immeas</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/213\">shark</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/198\">obront</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/195\">0xdeadbeef0x</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/147\">petersspetrov</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/141\">Bobface</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/136\">rvierdiiev</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/121\">0x1f8b</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/118\">Ruhum</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/111\">RaymondFam</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/102\">9svR6w</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/56\">cccz</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/50\">Bnke0x0</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/37\">oyc_109</a>, and\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/17\">Rolezn</a>\n.</em></p>\n<h2 id=\"low-risk-issues-summary\" style=\"position:relative;\"><a href=\"#low-risk-issues-summary\" aria-label=\"low risk issues summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk Issues Summary</h2>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Number</th>\n<th align=\"left\">Issues Details</th>\n<th align=\"center\">Context</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">[L-01]</td>\n<td align=\"left\"><code>redraw()</code> should be called by anyone</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[L-02]</td>\n<td align=\"left\">An <code>owner</code> can resign and lead to locked NFT</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[L-03]</td>\n<td align=\"left\">NFTs are not guaranteed to have sequential IDs</td>\n<td align=\"center\">1</td>\n</tr>\n</tbody>\n</table>\n<p>Total: 3 issues</p>\n<h2 id=\"l-01-redraw-should-be-called-by-anyone\" style=\"position:relative;\"><a href=\"#l-01-redraw-should-be-called-by-anyone\" aria-label=\"l 01 redraw should be called by anyone permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-01] <code>redraw()</code> should be called by anyone</h2>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol#L203-L225\">VRFNFTRandomDraw.sol#L203-L225</a> </p>\n<p>Redrawing a raffle already protects the winner through the timelocking mechanism. Dependency on the owner should be avoidable in this instance by removing the modifier <code>onlyOwner</code>, allowing anyone to redraw the raffle.</p>\n<h2 id=\"l-02-an-owner-can-resign-and-lead-to-locked-nfts\" style=\"position:relative;\"><a href=\"#l-02-an-owner-can-resign-and-lead-to-locked-nfts\" aria-label=\"l 02 an owner can resign and lead to locked nfts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-02] An owner can resign and lead to locked NFTs</h2>\n<p>Since there’s a possibility of unclaimed drafts, the owner is the only one able to rescue the prize NFT from the raffle contract. Thus, having the ability to resign ownership (including non-intentional) could lead to stuck NFTs.</p>\n<p>Consider altering or removing <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/ownable/OwnableUpgradeable.sol#L112-L116\">resignOwnership</a> method: </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Resign ownership of contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev only callably by the owner, dangerous call.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">resignOwnership</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_transferOwnership</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"l-03-nfts-are-not-guaranteed-to-have-sequential-ids\" style=\"position:relative;\"><a href=\"#l-03-nfts-are-not-guaranteed-to-have-sequential-ids\" aria-label=\"l 03 nfts are not guaranteed to have sequential ids permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-03] NFTs are not guaranteed to have sequential IDs</h2>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/interfaces/IVRFNFTRandomDraw.sol#L71-L90\">https://github.com/code-423n4/2022-12-forgeries/blob/main/src/interfaces/IVRFNFTRandomDraw.sol#L71-L90</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol#L249-L256\">https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol#L249-L256</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol#L271\">https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol#L271</a></p>\n<h3 id=\"impact-5\" style=\"position:relative;\"><a href=\"#impact-5\" aria-label=\"impact 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Accordingly to <a href=\"https://eips.ethereum.org/EIPS/eip-721\">EIP-721</a>:</p>\n<blockquote>\n<p><strong>NFT Identifiers</strong></p>\n<p>Every NFT is identified by a unique uint256 ID inside the ERC-721 smart contract. This identifying number SHALL NOT change for the life of the contract. The pair (contract address, uint256 tokenId) will then be a globally unique and fully-qualified identifier for a specific asset on an Ethereum chain. While some ERC-721 smart contracts may find it convenient to start with ID 0 and simply increment by one for each new NFT, <strong>callers SHALL NOT assume that ID numbers have any specific pattern to them, and MUST treat the ID as a “black box”.</strong> Also note that NFTs MAY become invalid (be destroyed). Please see the enumeration functions for a supported enumeration interface.</p>\n<p>The choice of uint256 allows a wide variety of applications because UUIDs and sha3 hashes are directly convertible to uint256.</p>\n</blockquote>\n<p>This project, aims to create a raffle <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/interfaces/IVRFNFTRandomDraw.sol#L71-L90\">specifying</a> that the potential winner will be between a range, where the lower limit is set by the candidate with the lowest TokenId and the candidate with the highest TokenId (<code>+1</code> to be included in the draw) sets the upper limit. As stated in the previous quote, this could generate gigantic ranges with numerous empty tokens given how it is <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol#L249-L256\">calculated</a> (see <a href=\"https://etherscan.io/token/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85#readContract\">ENS</a> as an example of empty slots and how the ids <a href=\"https://docs.ens.domains/dapp-developer-guide/ens-as-nft\">are generated</a>).</p>\n<p>After generating the random number via VRF, the winner <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol#L249-L256\">is selected by</a> <em>moduluing</em> by the range plus the initial token id. The result is then used to determine <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol#L271\">the winner</a>. </p>\n<p>Considering the costs to query VRF and the waiting time to claim the prize, this issue may turn the contract unusable. </p>\n<p>Note that any used method when casting the collection to IERC721EnumerableUpgradeable has the same effect as casting to IERC721, and giving how a raffle is setup, it seems the original intent was to use indexes instead of ids.</p>\n<p>External requirements:</p>\n<ul>\n<li>non-sequential NFTs.</li>\n</ul>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Consider a scenario where:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Drawing NFT Collection: ABC</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">TokenIDs: [1,10,1000]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">TotalSupply: 3</span></span></code></pre>\n<p>Setting a raffle to include each possible token results in [1..1001[ alternatives. Since there are only three possible winners, there’s only <code>0.3%</code> of a successful draw.</p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Depending on the direction the project takes:</p>\n<ol>\n<li>Change the way the setup is performed;</li>\n<li>Give more guarantees that only collections with sequential ids are used (note that the same problem might happen in nfts with high number of burns);</li>\n<li>Only use indexed collections.</li>\n</ol>\n<h2 id=\"non-critical-issues-summary\" style=\"position:relative;\"><a href=\"#non-critical-issues-summary\" aria-label=\"non critical issues summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Non-Critical Issues Summary</h2>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Number</th>\n<th align=\"left\">Issues Details</th>\n<th align=\"center\">Context</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">[N-01]</td>\n<td align=\"left\"><code>getRequestDetails()</code> should include the tokenid</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[N-02]</td>\n<td align=\"left\">Avoid setting time variables manually</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[N-03]</td>\n<td align=\"left\">Use constants instead of immutable variables</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[N-04]</td>\n<td align=\"left\">Uppercase immutable variables</td>\n<td align=\"center\">6</td>\n</tr>\n<tr>\n<td align=\"center\">[N-05]</td>\n<td align=\"left\">Empty blocks should be avoided</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[N-06]</td>\n<td align=\"left\">Missing <em>NatSpec</em></td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[N-07]</td>\n<td align=\"left\">Contracts that extend interfaces should override its methods</td>\n<td align=\"center\">3</td>\n</tr>\n<tr>\n<td align=\"center\">[N-08]</td>\n<td align=\"left\"><code>_requestRoll()</code> after confirming that the raffle is viable</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[N-09]</td>\n<td align=\"left\"><code>IERC721EnumerableUpgradeable</code> may lead to false assumptions</td>\n<td align=\"center\">6</td>\n</tr>\n<tr>\n<td align=\"center\">[N-10]</td>\n<td align=\"left\"><code>drawingTokenEndId</code> should be inclusive or altered to a range</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[N-11]</td>\n<td align=\"left\"><code>fulfillRandomWords</code> must not revert</td>\n<td align=\"center\">1</td>\n</tr>\n</tbody>\n</table>\n<p>Total: 11 issues</p>\n<h2 id=\"n-01-getrequestdetails-should-include-the-tokenid\" style=\"position:relative;\"><a href=\"#n-01-getrequestdetails-should-include-the-tokenid\" aria-label=\"n 01 getrequestdetails should include the tokenid permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-01] <code>getRequestDetails()</code> should include the tokenid</h2>\n<p>In <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol#L58-L70\">VRFNFTRandomDraw.sol#getRequestDetails()</a> should include <code>currentChosenTokenId</code> (<a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/interfaces/IVRFNFTRandomDraw.sol#L63\">at</a>) and ease integrations with other tools.</p>\n<h2 id=\"n-02-avoid-setting-time-variables-manually\" style=\"position:relative;\"><a href=\"#n-02-avoid-setting-time-variables-manually\" aria-label=\"n 02 avoid setting time variables manually permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-02] Avoid setting time variables manually</h2>\n<p>Use solidity <a href=\"https://docs.soliditylang.org/en/v0.8.17/units-and-global-variables.html#time-units\">Time Units</a> to avoid mistakes in defining time variables. In <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol#L28-L33\">VRFNFTRandomDraw.sol#L28-L33</a> (the <code>MONTH_IN_SECONDS</code> leads to a medium issue): </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @dev 60 seconds in a min, 60 mins in an hour</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">HOUR_IN_SECONDS</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">60</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">60</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @dev 24 hours in a day 7 days in a week</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">WEEK_IN_SECONDS</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">3600</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">24</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">7</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// @dev about 30 days in a month</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MONTH_IN_SECONDS</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">3600</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">24</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">7</span><span class=\"mtk1\">) * </span><span class=\"mtk7\">30</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>Consider changing to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @dev 60 seconds in a min, 60 mins in an hour</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">HOUR_IN_SECONDS</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hours</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @dev 24 hours in a day 7 days in a week</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">WEEK_IN_SECONDS</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">weeks</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// @dev about 30 days in a month</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MONTH_IN_SECONDS</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">30</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"n-03-use-constants-instead-of-immutable-variables\" style=\"position:relative;\"><a href=\"#n-03-use-constants-instead-of-immutable-variables\" aria-label=\"n 03 use constants instead of immutable variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-03] Use constants instead of immutable variables</h2>\n<p>Variables defined in <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol#L21-L33\">VRFNFTRandomDraw.sol#L21-L33</a> should be constants, since they aren’t defined at contract creation:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">callbackGasLimit</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">200_000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Chainlink request confirmations, left at the default</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minimumRequestConfirmations</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">3</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Number of words requested in a drawing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wordsRequested</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev 60 seconds in a min, 60 mins in an hour</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">HOUR_IN_SECONDS</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">60</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">60</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev 24 hours in a day 7 days in a week</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">WEEK_IN_SECONDS</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">3600</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">24</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">7</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// @dev about 30 days in a month</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MONTH_IN_SECONDS</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">3600</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">24</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">7</span><span class=\"mtk1\">) * </span><span class=\"mtk7\">30</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>If these are rules, consider changing them to <code>IVRFNFTRandomDraw</code> interface:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">callbackGasLimit</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">200_000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Chainlink request confirmations, left at the default</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minimumRequestConfirmations</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">3</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Number of words requested in a drawing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wordsRequested</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev 60 seconds in a min, 60 mins in an hour</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">HOUR_IN_SECONDS</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">60</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">60</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev 24 hours in a day 7 days in a week</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">WEEK_IN_SECONDS</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">3600</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">24</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">7</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// @dev about 30 days in a month</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MONTH_IN_SECONDS</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">3600</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">24</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">7</span><span class=\"mtk1\">) * </span><span class=\"mtk7\">30</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"n-04-uppercase-immutable-variables\" style=\"position:relative;\"><a href=\"#n-04-uppercase-immutable-variables\" aria-label=\"n 04 uppercase immutable variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-04] Uppercase immutable variables</h2>\n<p>In <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol#L22-L26\">VRFNFTRandomDraw.sol#L22-L26</a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">callbackGasLimit</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">200_000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Chainlink request confirmations, left at the default</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minimumRequestConfirmations</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">3</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Number of words requested in a drawing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wordsRequested</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>In <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol#L37\">VRFNFTRandomDraw.sol#L37</a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">VRFCoordinatorV2Interface</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">coordinator</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>In <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/utils/Version.sol#L5\">Version.sol#L5</a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">__version</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>In <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDrawFactory.sol#L21\">VRFNFTRandomDrawFactory.sol#L21</a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">implementation</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"n-05-empty-blocks-should-be-avoided\" style=\"position:relative;\"><a href=\"#n-05-empty-blocks-should-be-avoided\" aria-label=\"n 05 empty blocks should be avoided permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-05] Empty blocks should be avoided</h2>\n<p>Avoid using code blocks, such as:</p>\n<p>In <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDrawFactory.sol#L53-L59\">VRFNFTRandomDrawFactory.sol#L53-L59</a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Allows only the owner to upgrade the contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @param newImplementation proposed new upgrade implementation</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_authorizeUpgrade</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newImplementation</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">onlyOwner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {}</span></span></span></code></pre>\n<p>Consider emitting an event.</p>\n<h2 id=\"n-06-missing-natspec\" style=\"position:relative;\"><a href=\"#n-06-missing-natspec\" aria-label=\"n 06 missing natspec permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-06] Missing <em>NatSpec</em></h2>\n<p>Consider adding specification to the following code blocks:</p>\n<p>In <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/interfaces/IVRFNFTRandomDraw.sol#L28\">IVRFNFTRandomDraw.sol#L28</a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">error</span><span class=\"mtk1\"> </span><span class=\"mtk11\">REDRAW_TIMELOCK_NEEDS_TO_BE_LESS_THAN_A_MONTH</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<h2 id=\"n-07-contracts-that-extend-interfaces-should-override-its-methods\" style=\"position:relative;\"><a href=\"#n-07-contracts-that-extend-interfaces-should-override-its-methods\" aria-label=\"n 07 contracts that extend interfaces should override its methods permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-07] Contracts that extend interfaces should override its methods</h2>\n<p>Consider using the <code>override</code> keyword to indicate  which methods are implementing the interface.</p>\n<p>For <code>VRFNFTRandomDraw</code> regarding <code>IVRFNFTRandomDraw</code>: <code>initialize</code>, <code>startDraw</code>, <code>redraw</code>, <code>hasUserWon</code>, <code>winnerClaimNFT</code>, <code>lastResortTimelockOwnerClaimNFT</code>, <code>getRequestDetails</code>.\nFor <code>VRFNFTRandomDrawFactory</code> regarding <code>IVRFNFTRandomDrawFactory</code>: <code>initialize</code>, <code>startDraw</code>.</p>\n<h2 id=\"n-08-_requestroll-after-confirming-that-the-raffle-is-viable\" style=\"position:relative;\"><a href=\"#n-08-_requestroll-after-confirming-that-the-raffle-is-viable\" aria-label=\"n 08 _requestroll after confirming that the raffle is viable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-08] <code>_requestRoll()</code> after confirming that the raffle is viable</h2>\n<p>In <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol#L173-L198\">startDraw()</a>, the contract makes a request for a random number before confirming that it has the prize to raffle. </p>\n<p>Consider confirming first that the contract has the NFT to raffle before wasting resources calling for a random.</p>\n<h2 id=\"n-09--ierc721enumerableupgradeable-may-lead-to-false-assumptions\" style=\"position:relative;\"><a href=\"#n-09--ierc721enumerableupgradeable-may-lead-to-false-assumptions\" aria-label=\"n 09  ierc721enumerableupgradeable may lead to false assumptions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-09]  <code>IERC721EnumerableUpgradeable</code> may lead to false assumptions</h2>\n<p>Throughout the <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol\">contract</a>, there’s a wrapper of NFT collections to <code>IERC721EnumerableUpgradeable</code> instances:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"bash\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">src/VRFNFTRandomDraw.sol:127:            IERC721EnumerableUpgradeable(_settings.token).ownerOf(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">src/VRFNFTRandomDraw.sol:187:            IERC721EnumerableUpgradeable(settings.token).transferFrom(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">src/VRFNFTRandomDraw.sol:216:            IERC721EnumerableUpgradeable(settings.token).ownerOf(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">src/VRFNFTRandomDraw.sol:271:            IERC721EnumerableUpgradeable(settings.drawingToken).ownerOf(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">src/VRFNFTRandomDraw.sol:295:        IERC721EnumerableUpgradeable(settings.token).transferFrom(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">src/VRFNFTRandomDraw.sol:315:        IERC721EnumerableUpgradeable(settings.token).transferFrom(</span></span></span></code></pre>\n<p>This could lead to false assumptions when working with this contract (particularly when considering how settings are defined).</p>\n<p>Consider altering to <code>IERC721</code> if the goal is to allow any NFT collection compliant with EIP-721.</p>\n<h2 id=\"n-10-drawingtokenendid-should-be-inclusive-or-altered-to-a-range\" style=\"position:relative;\"><a href=\"#n-10-drawingtokenendid-should-be-inclusive-or-altered-to-a-range\" aria-label=\"n 10 drawingtokenendid should be inclusive or altered to a range permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-10] <code>drawingTokenEndId</code> should be inclusive or altered to a range</h2>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/interfaces/IVRFNFTRandomDraw.sol#L80-L81\">Natspec</a> specifies that the last ID is exclusive in the raffle, but the variable’s name could lead to wrong assumptions. </p>\n<p>Consider altering the logic to the contract to include the ID or to change the logic to a range definition, since it is only used twice (<a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol#L249\">1</a>,<a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol#L113-L114\">2</a>) and could avoid misinterpretations.</p>\n<h2 id=\"n-11-fulfillrandomwords-must-not-revert\" style=\"position:relative;\"><a href=\"#n-11-fulfillrandomwords-must-not-revert\" aria-label=\"n 11 fulfillrandomwords must not revert permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-11] <code>fulfillRandomWords</code> must not revert</h2>\n<p>Accordingly to ChainLinks’ <a href=\"\">documentation</a>:</p>\n<blockquote>\n<p><code>fulfillRandomWords</code> must not revert\nIf your <code>fulfillRandomWords()</code> implementation reverts, the VRF service will not attempt to call it a second time. Make sure your contract logic does not revert. Consider simply storing the randomness and taking more complex follow-on actions in separate contract calls made by you, your users, or an Automation Node.</p>\n</blockquote>\n<p>This project’s current implementation does revert <a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/main/src/VRFNFTRandomDraw.sol#L230-L260\">in two instances</a>, although they are not expected to materialize.</p>\n<p>Nevertheless, consider altering the logic to drop the random generated whenever the requestId does not match and ignore extra words if the array received is greater than the expected amount.</p>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this contest, 24 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/261\">report highlighted below</a> by <strong>c3phas</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/354\">indijanc</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/332\">Aymen0909</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/324\">adriro</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/317\">PaludoX0</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/307\">IllIllI</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/256\">izhelyazkov</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/241\">ctrlc03</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/237\">kuldeep</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/225\">neko_nyaa</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/223\">shark</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/155\">Sathish9098</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/140\">Bobface</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/135\">rvierdiiev</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/123\">nadin</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/120\">0x1f8b</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/114\">RaymondFam</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/79\">chaduke</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/72\">codeislight</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/64\">ReyAdmirado</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/49\">Bnke0x0</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/41\">Rahoz</a>,\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/20\">nicobevi</a>, and\n<a href=\"https://github.com/code-423n4/2022-12-forgeries-findings/issues/18\">Rolezn</a>\n.</em></p>\n<h2 id=\"gas-optimizations-overview\" style=\"position:relative;\"><a href=\"#gas-optimizations-overview\" aria-label=\"gas optimizations overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations Overview</h2>\n<p>NB: Some functions have been truncated where necessary to just show affected parts of the code. </p>\n<p>Throughout the report some places might be denoted with audit tags to show the actual place affected.</p>\n<p>I’ve tried to give the exact amount of gas saved from running the included tests. Whenever the function is within the test coverage, the average gas before and after will be included, and often a diff of the code will also accompany this.</p>\n<p>Some functions are not covered by the test cases or are internal/private functions. In this case, the gas can be estimated by looking at the opcodes involved. </p>\n<h2 id=\"g-01-pack-structs-by-putting-data-types-in-ascending-size-we-can-save-up-to-6k-gas\" style=\"position:relative;\"><a href=\"#g-01-pack-structs-by-putting-data-types-in-ascending-size-we-can-save-up-to-6k-gas\" aria-label=\"g 01 pack structs by putting data types in ascending size we can save up to 6k gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] Pack structs by putting data types in ascending size (We can save up to ~6k gas)</h2>\n<p>As the solidity EVM works with 32 bytes, variables less than 32 bytes should be packed inside a struct so that they can be stored in the same slot, this saves gas when writing to storage ~20000 gas.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/interfaces/IVRFNFTRandomDraw.sol#L59-L68\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/interfaces/IVRFNFTRandomDraw.sol#L59-L68</a></p>\n<h3 id=\"we-can-use-a-smaller-type-for-uint256-drawtimelock-as-its-simply-a-timestamp-using-uint64-should-be-safe-for-532-years-we-save-1-storage-slot-from-4-slots-to-3-slots-2k-gas\" style=\"position:relative;\"><a href=\"#we-can-use-a-smaller-type-for-uint256-drawtimelock-as-its-simply-a-timestamp-using-uint64-should-be-safe-for-532-years-we-save-1-storage-slot-from-4-slots-to-3-slots-2k-gas\" aria-label=\"we can use a smaller type for uint256 drawtimelock as its simply a timestamp using uint64 should be safe for 532 years we save 1 storage slot from 4 slots to 3 slots 2k gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>We can use a smaller type for uint256 drawTimelock as it’s simply a timestamp. Using uint64 should be safe for 532 years. We save 1 Storage SLOT from 4 SLOTS to 3 SLOTS (~2K gas)</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IVRFNFTRandomDraw</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">59</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">CurrentRequest</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">/// @notice current chainlink request id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">61</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentChainlinkRequestId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">62</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">/// @notice current chosen random number</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentChosenTokenId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">64</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">/// @notice has chosen a random number (in case random number = 0(in case random number = 0)(in case random number = 0)(in case random number = 0)(in case random number = 0)(in case random number = 0)(in case random number = 0)(in case random number = 0)(in case random number = 0))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">65</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hasChosenRandomNumber</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">/// @notice time lock (block.timestamp) that a re-draw can be issued</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">67</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">drawTimelock</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">68</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/interfaces/IVRFNFTRandomDraw.sol b/src/interfaces/IVRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 4775288..af1d928 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/interfaces/IVRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/interfaces/IVRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -64,7 +64,7 @@ interface IVRFNFTRandomDraw {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         /// @notice has chosen a random number (in case random number = 0(in case random number = 0)(in case random number = 0)(in case random number = 0)(in case random number = 0)(in case random number = 0)(in case random number = 0)(in case random number = 0)(in case random number = 0))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bool hasChosenRandomNumber;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         /// @notice time lock (block.timestamp) that a re-draw can be issued</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 drawTimelock;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint64 drawTimelock;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/interfaces/IVRFNFTRandomDraw.sol#L71-L90\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/interfaces/IVRFNFTRandomDraw.sol#L71-L90</a></p>\n<h3 id=\"we-can-save-2-slots-here-by-packing-address-token-with-uint64-subscriptionid-and-also-changing-the-type-of--uint256-recovertimelock-which-is-a-timestamp-to-uint64-which-should-be-safe-for-more-than-500-years-saves-4k-gas\" style=\"position:relative;\"><a href=\"#we-can-save-2-slots-here-by-packing-address-token-with-uint64-subscriptionid-and-also-changing-the-type-of--uint256-recovertimelock-which-is-a-timestamp-to-uint64-which-should-be-safe-for-more-than-500-years-saves-4k-gas\" aria-label=\"we can save 2 slots here by packing address token with uint64 subscriptionid and also changing the type of  uint256 recovertimelock which is a timestamp to uint64 which should be safe for more than 500 years saves 4k gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>We can save 2 SLOTs here by packing address token with uint64 subscriptionId and also changing the type of  uint256 recoverTimelock which is a timestamp to uint64 which should be safe for more than 500 years (Saves ~4k gas)</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IVRFNFTRandomDraw</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">71</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Settings</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">72</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">/// @notice Token Contract to put up for raffle</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">74</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">/// @notice Token ID to put up for raffle</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">76</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">/// @notice Token that each (sequential) ID has a entry in the raffle.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">77</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">drawingToken</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">/// @notice Start token ID for the drawing (if totalSupply = 20 but the first token is 5 (5-25), setting this to 5 would fix the ordering)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">drawingTokenStartId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">80</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">/// @notice End token ID for the drawing (exclusive) (token ids 0 - 9 would be 10 in this field)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">81</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">drawingTokenEndId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">82</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">/// @notice Draw buffer time – time until a re-drawing can occur if the selected user cannot or does not claim the NFT.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">83</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">drawBufferTime</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">84</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">/// @notice block.timestamp that the admin can recover the NFT (as a safety fallback)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">85</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recoverTimelock</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">86</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">/// @notice Chainlink gas keyhash</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">87</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">keyHash</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">88</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">/// @notice Chainlink subscription id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">89</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">subscriptionId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">90</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/interfaces/IVRFNFTRandomDraw.sol b/src/interfaces/IVRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 4775288..7923c29 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/interfaces/IVRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/interfaces/IVRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -69,24 +69,24 @@ interface IVRFNFTRandomDraw {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @notice Struct to organize user settings</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     struct Settings {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        /// @notice Chainlink subscription id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint64 subscriptionId;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         /// @notice Token Contract to put up for raffle</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         address token;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         /// @notice Token ID to put up for raffle</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 tokenId;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         /// @notice Token that each (sequential) ID has a entry in the raffle.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         address drawingToken;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        /// @notice block.timestamp that the admin can recover the NFT (as a safety fallback)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint64 recoverTimelock;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         /// @notice Start token ID for the drawing (if totalSupply = 20 but the first token is 5 (5-25), setting this to 5 would fix the ordering)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 drawingTokenStartId;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         /// @notice End token ID for the drawing (exclusive) (token ids 0 - 9 would be 10 in this field)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 drawingTokenEndId;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         /// @notice Draw buffer time – time until a re-drawing can occur if the selected user cannot or does not claim the NFT.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 drawBufferTime;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        /// @notice block.timestamp that the admin can recover the NFT (as a safety fallback)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 recoverTimelock;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         /// @notice Chainlink gas keyhash</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes32 keyHash;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        /// @notice Chainlink subscription id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint64 subscriptionId;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h2 id=\"g-02-emitting-storage-values-instead-of-the-memory-one\" style=\"position:relative;\"><a href=\"#g-02-emitting-storage-values-instead-of-the-memory-one\" aria-label=\"g 02 emitting storage values instead of the memory one permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] Emitting storage values instead of the memory one.</h2>\n<p>Here, the values emitted shouldn’t be read from storage. The existing memory values should be used instead:</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L75-L138\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L75-L138</a></p>\n<h3 id=\"save-499-gas-on-average\" style=\"position:relative;\"><a href=\"#save-499-gas-on-average\" aria-label=\"save 499 gas on average permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Save 499 gas on average</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Average</th>\n<th>Median</th>\n<th>Max</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>43790</td>\n<td>146546</td>\n<td>175523</td>\n<td>192923</td>\n</tr>\n<tr>\n<td>After</td>\n<td>43790</td>\n<td>146047</td>\n<td>174692</td>\n<td>192092</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VRFNFTRandomDraw</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">admin</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Settings</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_settings</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">76:        </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">77:        </span><span class=\"mtk11\">initializer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">78:    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Set new settings</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">80</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">settings</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_settings</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">122</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Emit initialized event for indexing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">123</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InitializedDraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">settings</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/VRFNFTRandomDraw.sol b/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 668bc56..7955234 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -120,7 +120,7 @@ contract VRFNFTRandomDraw is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         __Ownable_init(admin);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Emit initialized event for indexing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        emit InitializedDraw(msg.sender, settings);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        emit InitializedDraw(msg.sender, _settings);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Get owner of raffled tokenId and ensure the current owner is the admin</span></span></span></code></pre>\n<h2 id=\"g-03-cache-storage-values-in-memory-to-minimize-sloads\" style=\"position:relative;\"><a href=\"#g-03-cache-storage-values-in-memory-to-minimize-sloads\" aria-label=\"g 03 cache storage values in memory to minimize sloads permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] Cache storage values in memory to minimize SLOADs</h2>\n<p>The code can be optimized by minimizing the number of SLOADs.</p>\n<p>SLOADs are expensive (100 gas after the 1st one) compared to MLOADs/MSTOREs (3 gas each). Storage values read multiple times should instead be cached in memory the first time (costing 1 SLOAD) and then read from this cache to avoid multiple SLOADs.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L141-L169\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L141-L169</a></p>\n<h3 id=\"vrfnftrandomdrawsol_requestroll-we-could-cache-requestdrawtimelock-instead-of-calling-it-twice\" style=\"position:relative;\"><a href=\"#vrfnftrandomdrawsol_requestroll-we-could-cache-requestdrawtimelock-instead-of-calling-it-twice\" aria-label=\"vrfnftrandomdrawsol_requestroll we could cache requestdrawtimelock instead of calling it twice permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VRFNFTRandomDraw.sol._requestRoll(): We could cache request.drawTimelock instead of calling it twice</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VRFNFTRandomDraw</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">141</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_requestRoll</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">148</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// If the number has been drawn and</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">149</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">150</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">request</span><span class=\"mtk1\">.</span><span class=\"mtk12\">hasChosenRandomNumber</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">151</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// Draw timelock not yet used</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">152</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">request</span><span class=\"mtk1\">.</span><span class=\"mtk12\">drawTimelock</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk3\">//@audit: 1st call </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">153</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">request</span><span class=\"mtk1\">.</span><span class=\"mtk12\">drawTimelock</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> </span><span class=\"mtk3\">//@audit: 2nd call</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">154</span><span class=\"mtk1\">:        ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">155</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">STILL_IN_WAITING_PERIOD_BEFORE_REDRAWING</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">156</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">158</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Setup re-draw timelock</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">159</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">request</span><span class=\"mtk1\">.</span><span class=\"mtk12\">drawTimelock</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">settings</span><span class=\"mtk1\">.</span><span class=\"mtk12\">drawBufferTime</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">169</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/VRFNFTRandomDraw.sol b/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 668bc56..e235c0b 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -145,12 +145,13 @@ contract VRFNFTRandomDraw is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert REQUEST_IN_FLIGHT();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // If the number has been drawn and</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        // If the number has been drawn</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 _requestDrawTimelock = request.drawTimelock ;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             request.hasChosenRandomNumber &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // Draw timelock not yet used</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            request.drawTimelock != 0 &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            request.drawTimelock &gt; block.timestamp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            _requestDrawTimelock != 0 &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            _requestDrawTimelock &gt; block.timestamp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert STILL_IN_WAITING_PERIOD_BEFORE_REDRAWING();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L277-L300\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L277-L300</a></p>\n<h3 id=\"vrfnftrandomdrawsolwinnerclaimnft-settingstoken-and-settingstokenid-should-be-cached-also-no-need-to-cast-settingstoken-as-its-an-address-already---saves-62-gas-on-average\" style=\"position:relative;\"><a href=\"#vrfnftrandomdrawsolwinnerclaimnft-settingstoken-and-settingstokenid-should-be-cached-also-no-need-to-cast-settingstoken-as-its-an-address-already---saves-62-gas-on-average\" aria-label=\"vrfnftrandomdrawsolwinnerclaimnft settingstoken and settingstokenid should be cached also no need to cast settingstoken as its an address already   saves 62 gas on average permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VRFNFTRandomDraw.sol.winnerClaimNFT(): settings.token and settings.tokenId should be cached. Also no need to cast settings.token as it’s an address already - Saves 62 gas on average</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Average</th>\n<th>Median</th>\n<th>Max</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>422</td>\n<td>11638</td>\n<td>2422</td>\n<td>27624</td>\n</tr>\n<tr>\n<td>After</td>\n<td>422</td>\n<td>11576</td>\n<td>2422</td>\n<td>27469</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VRFNFTRandomDraw</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">277</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">winnerClaimNFT</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">287</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">WinnerSentNFT</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">288</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">user</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">289</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">settings</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">290</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">settings</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">291</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">settings</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">292</span><span class=\"mtk1\">:        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">294</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Transfer token to the winter.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">295</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">IERC721EnumerableUpgradeable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">settings</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">296</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">297</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">298</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">settings</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">299</span><span class=\"mtk1\">:        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">300</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/VRFNFTRandomDraw.sol b/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 668bc56..407a5f4 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -283,19 +283,21 @@ contract VRFNFTRandomDraw is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert USER_HAS_NOT_WON();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address _token = settings.token;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 _tokenId = settings.tokenId;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Emit a celebratory event</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         emit WinnerSentNFT(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             user,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            address(settings.token),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            settings.tokenId,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            _token,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            _tokenId,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             settings</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Transfer token to the winter.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        IERC721EnumerableUpgradeable(settings.token).transferFrom(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        IERC721EnumerableUpgradeable(_token).transferFrom(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             address(this),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             msg.sender,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            settings.tokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            _tokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h2 id=\"g-04-the-result-of-a-function-call-should-be-cached-rather-than-re-calling-the-function\" style=\"position:relative;\"><a href=\"#g-04-the-result-of-a-function-call-should-be-cached-rather-than-re-calling-the-function\" aria-label=\"g 04 the result of a function call should be cached rather than re calling the function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] The result of a function call should be cached rather than re-calling the function</h2>\n<p>Consider caching the following:</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L304-L320\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L304-L320</a></p>\n<h3 id=\"vrfnftrandomdrawsollastresorttimelockownerclaimnft-the-results-of-owner-should-be-cached-instead-of-calling-it-twice\" style=\"position:relative;\"><a href=\"#vrfnftrandomdrawsollastresorttimelockownerclaimnft-the-results-of-owner-should-be-cached-instead-of-calling-it-twice\" aria-label=\"vrfnftrandomdrawsollastresorttimelockownerclaimnft the results of owner should be cached instead of calling it twice permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VRFNFTRandomDraw.sol.lastResortTimelockOwnerClaimNFT(): The results of <code>owner()</code> should be cached instead of calling it twice</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Average</th>\n<th>Median</th>\n<th>Max</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>381</td>\n<td>11061</td>\n<td>11061</td>\n<td>21741</td>\n</tr>\n<tr>\n<td>After</td>\n<td>381</td>\n<td>10992</td>\n<td>10992</td>\n<td>21604</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VRFNFTRandomDraw</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">304</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">lastResortTimelockOwnerClaimNFT</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">305</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// If recoverTimelock is not setup, or if not yet occurred</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">306</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">settings</span><span class=\"mtk1\">.</span><span class=\"mtk12\">recoverTimelock</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">307</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// Stop the withdraw</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">308</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RECOVERY_IS_NOT_YET_POSSIBLE</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">309</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">311</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Send event for indexing that the owner reclaimed the NFT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">312</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OwnerReclaimedNFT</span><span class=\"mtk1\">(</span><span class=\"mtk11\">owner</span><span class=\"mtk1\">()); </span><span class=\"mtk3\">//@audit: Initial call</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">314</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Transfer token to the admin/owner.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">315</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">IERC721EnumerableUpgradeable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">settings</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">316</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">317</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">(),</span><span class=\"mtk3\">//@audit: Second call</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">318</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">settings</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">319</span><span class=\"mtk1\">:        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">320</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/VRFNFTRandomDraw.sol b/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 668bc56..00f000d 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -307,14 +307,15 @@ contract VRFNFTRandomDraw is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // Stop the withdraw</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert RECOVERY_IS_NOT_YET_POSSIBLE();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address _ownerAddr = owner();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Send event for indexing that the owner reclaimed the NFT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        emit OwnerReclaimedNFT(owner());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        emit OwnerReclaimedNFT(_ownerAddr);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Transfer token to the admin/owner.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         IERC721EnumerableUpgradeable(settings.token).transferFrom(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             address(this),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            owner(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            _ownerAddr,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             settings.tokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h2 id=\"g-05-using-unchecked-blocks-to-save-gas\" style=\"position:relative;\"><a href=\"#g-05-using-unchecked-blocks-to-save-gas\" aria-label=\"g 05 using unchecked blocks to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] Using unchecked blocks to save gas</h2>\n<p>Solidity version 0.8+ comes with implicit overflow and underflow checks on unsigned integers. When an overflow or an underflow isn’t possible (as an example, when a comparison is made before the arithmetic operation), some gas can be saved by using an unchecked block.</p>\n<p><a href=\"https://github.com/ethereum/solidity/issues/10695\">See resource</a>.</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L112-L115\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L112-L115</a></p>\n<h3 id=\"saves-43-gas-on-average\" style=\"position:relative;\"><a href=\"#saves-43-gas-on-average\" aria-label=\"saves 43 gas on average permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Saves 43 gas on average</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Average</th>\n<th>Median</th>\n<th>Max</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>43790</td>\n<td>146546</td>\n<td>175523</td>\n<td>192923</td>\n</tr>\n<tr>\n<td>After</td>\n<td>43790</td>\n<td>146503</td>\n<td>175451</td>\n<td>192851</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VRFNFTRandomDraw</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">112</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">_settings</span><span class=\"mtk1\">.</span><span class=\"mtk12\">drawingTokenEndId</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_settings</span><span class=\"mtk1\">.</span><span class=\"mtk12\">drawingTokenStartId</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">114</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">_settings</span><span class=\"mtk1\">.</span><span class=\"mtk12\">drawingTokenEndId</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_settings</span><span class=\"mtk1\">.</span><span class=\"mtk12\">drawingTokenStartId</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">:        ) {</span></span></span></code></pre>\n<p>The operation <code>_settings.drawingTokenEndId - _settings.drawingTokenStartId</code> cannot underflow as it would only be performed if the operation <code>_settings.drawingTokenEndId &#x3C; _settings.drawingTokenStartId</code> is false(Short circuit rules)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/VRFNFTRandomDraw.sol b/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 668bc56..b33b93e 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -109,12 +109,15 @@ contract VRFNFTRandomDraw is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Validate token range: end needs to be greater than start</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // and the size of the range needs to be at least 2 (end is exclusive)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             _settings.drawingTokenEndId &lt; _settings.drawingTokenStartId ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             _settings.drawingTokenEndId - _settings.drawingTokenStartId &lt; 2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert DRAWING_TOKEN_RANGE_INVALID();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span></code></pre>\n<h2 id=\"g-06-a-modifier-used-only-once-and-not-being-inherited-should-be-inlined-to-save-gas\" style=\"position:relative;\"><a href=\"#g-06-a-modifier-used-only-once-and-not-being-inherited-should-be-inlined-to-save-gas\" aria-label=\"g 06 a modifier used only once and not being inherited should be inlined to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06] A modifier used only once and not being inherited should be inlined to save gas</h2>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/ownable/OwnableUpgradeable.sol#L44-L49\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/ownable/OwnableUpgradeable.sol#L44-L49</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ownable</span><span class=\"mtk1\">/</span><span class=\"mtk12\">OwnableUpgradeable</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">44</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyPendingOwner</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">45</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">_pendingOwner</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ONLY_PENDING_OWNER</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">47</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">48</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">49</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<p>The above modifer is only used in the following:</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/ownable/OwnableUpgradeable.sol#L119-L125\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/ownable/OwnableUpgradeable.sol#L119-L125</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ownable</span><span class=\"mtk1\">/</span><span class=\"mtk12\">OwnableUpgradeable</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">119</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">acceptOwnership</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyPendingOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">120</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OwnerUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">122</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">_owner</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_pendingOwner</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">124</span><span class=\"mtk1\">:        </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_pendingOwner</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">125</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/ownable/OwnableUpgradeable.sol b/src/ownable/OwnableUpgradeable.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index bfc7eef..d27530c 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/ownable/OwnableUpgradeable.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/ownable/OwnableUpgradeable.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -116,7 +116,10 @@ abstract contract OwnableUpgradeable is IOwnableUpgradeable, Initializable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @notice Accepts an ownership transfer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    function acceptOwnership() public onlyPendingOwner {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    function acceptOwnership() public{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      if (msg.sender != _pendingOwner) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            revert ONLY_PENDING_OWNER();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         emit OwnerUpdated(_owner, msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _owner = _pendingOwner;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t  delete _pendingOwner;     </span></span></span></code></pre>\n<h2 id=\"g-07-caching-global-variables-is-more-expensive-than-using-the-actual-variable-use-msgsender-instead-of-caching-it\" style=\"position:relative;\"><a href=\"#g-07-caching-global-variables-is-more-expensive-than-using-the-actual-variable-use-msgsender-instead-of-caching-it\" aria-label=\"g 07 caching global variables is more expensive than using the actual variable use msgsender instead of caching it permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-07] Caching global variables is more expensive than using the actual variable (use msg.sender instead of caching it)</h2>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDrawFactory.sol#L38-L51\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDrawFactory.sol#L38-L51</a></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Average</th>\n<th>Median</th>\n<th>Max</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>46872</td>\n<td>183639</td>\n<td>213232</td>\n<td>239795</td>\n</tr>\n<tr>\n<td>After</td>\n<td>46860</td>\n<td>183631</td>\n<td>213224</td>\n<td>239783</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VRFNFTRandomDrawFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">makeNewDraw</span><span class=\"mtk1\">(IVRFNFTRandomDraw.Settings </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">settings</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">39:        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">40:        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">41:    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">42</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">admin</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">43</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Clone the contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">44</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newDrawing</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ClonesUpgradeable</span><span class=\"mtk1\">.</span><span class=\"mtk11\">clone</span><span class=\"mtk1\">(</span><span class=\"mtk12\">implementation</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">45</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Setup the new drawing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">IVRFNFTRandomDraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newDrawing</span><span class=\"mtk1\">).</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">admin</span><span class=\"mtk1\">, </span><span class=\"mtk12\">settings</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">47</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Emit event for indexing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">48</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">SetupNewDrawing</span><span class=\"mtk1\">(</span><span class=\"mtk12\">admin</span><span class=\"mtk1\">, </span><span class=\"mtk12\">newDrawing</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">49</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Return address for integration or testing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">50</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newDrawing</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">51</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/VRFNFTRandomDrawFactory.sol b/src/VRFNFTRandomDrawFactory.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 84caedb..616cb0a 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/VRFNFTRandomDrawFactory.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/VRFNFTRandomDrawFactory.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -39,13 +39,12 @@ contract VRFNFTRandomDrawFactory is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         returns (address)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        address admin = msg.sender;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Clone the contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         address newDrawing = ClonesUpgradeable.clone(implementation);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Setup the new drawing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        IVRFNFTRandomDraw(newDrawing).initialize(admin, settings);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        IVRFNFTRandomDraw(newDrawing).initialize(msg.sender, settings);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Emit event for indexing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        emit SetupNewDrawing(admin, newDrawing);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        emit SetupNewDrawing(msg.sender, newDrawing);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Return address for integration or testing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return newDrawing;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L277-L300\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L277-L300</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VRFNFTRandomDraw</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">277</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">winnerClaimNFT</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">278</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Assume (potential) winner calls this fn, cache.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">279</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">281</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Check if this user has indeed won.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">282</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk11\">hasUserWon</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">283</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">USER_HAS_NOT_WON</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">284</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">286</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Emit a celebratory event</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">287</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">WinnerSentNFT</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">288</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">user</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">289</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">settings</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">290</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">settings</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">291</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">settings</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">292</span><span class=\"mtk1\">:        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">294</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Transfer token to the winter.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">295</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">IERC721EnumerableUpgradeable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">settings</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">296</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">297</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">298</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">settings</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">299</span><span class=\"mtk1\">:        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">300</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/VRFNFTRandomDraw.sol b/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 668bc56..06ae5b2 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/VRFNFTRandomDraw.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -276,16 +276,15 @@ contract VRFNFTRandomDraw is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @notice Function for the winner to call to retrieve their NFT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function winnerClaimNFT() external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Assume (potential) winner calls this fn, cache.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        address user = msg.sender;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Check if this user has indeed won.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (!hasUserWon(user)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (!hasUserWon(msg.sender)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert USER_HAS_NOT_WON();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Emit a celebratory event</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         emit WinnerSentNFT(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            user,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            msg.sender,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             address(settings.token),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             settings.tokenId,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             settings</span></span></span></code></pre>\n<h2 id=\"g-08-using-private-rather-than-public-for-constants-saves-gas\" style=\"position:relative;\"><a href=\"#g-08-using-private-rather-than-public-for-constants-saves-gas\" aria-label=\"g 08 using private rather than public for constants saves gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-08] Using <code>private</code> rather than <code>public</code> for constants, saves gas</h2>\n<p>If needed, the values can be read from the verified contract source code, or if there are multiple values there can be a single getter function that <a href=\"https://github.com/code-423n4/2022-08-frax/blob/90f55a9ce4e25bceed3a74290b854341d8de6afa/src/contracts/FraxlendPair.sol#L156-L178\">returns a tuple</a> of the values of all currently-public constants. </p>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDrawFactory.sol#L21\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDrawFactory.sol#L21</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VRFNFTRandomDrawFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">21</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">implementation</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"g-09-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable\" style=\"position:relative;\"><a href=\"#g-09-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable\" aria-label=\"g 09 functions guaranteed to revert when called by normal users can be marked payable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-09] Functions guaranteed to revert when called by normal users can be marked <code>payable</code></h2>\n<p>If a function modifier such as <code>onlyOwner</code> is used, the function will revert if a normal user tries to pay the function. Marking the function as <code>payable</code> will lower the gas cost for legitimate callers because the compiler will not include checks for whether a payment was provided.The extra opcodes avoided costs an average of about <strong>21 gas per call</strong> to the function, in addition to the extra deployment cost</p>\n<p><a href=\"https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L173\">https://github.com/code-423n4/2022-12-forgeries/blob/fc271cf20c05ce857d967728edfb368c58881d85/src/VRFNFTRandomDraw.sol#L173</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VRFNFTRandomDraw</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">173</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">startDraw</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">203</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">redraw</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">304</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">lastResortTimelockOwnerClaimNFT</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-2\">High Risk Findings (2)</a></p>\n<ul>\n<li><a href=\"#h-01-admin-does-not-have-to-wait-to-call-lastresorttimelockownerclaimnft\">[H-01] Admin does not have to wait to call <code>lastResortTimelockOwnerClaimNFT()</code></a></li>\n<li><a href=\"#h-02-draw-organizer-can-rig-the-draw-to-favor-certain-participants-such-as-their-own-account\">[H-02] Draw organizer can rig the draw to favor certain participants such as their own account.</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-3\">Medium Risk Findings (3)</a></p>\n<ul>\n<li><a href=\"#m-01-raffle-creator-might-not-start-raffle-draw\">[M-01] Raffle creator might not start raffle draw</a></li>\n<li><a href=\"#m-02-vrfnftrandomdraw-admin-can-prevent-created-or-started-raffle-from-taking-place\">[M-02] VRFNFTRandomDraw admin can prevent created or started raffle from taking place</a></li>\n<li><a href=\"#m-03-protocol-safeguards-for-time-durations-are-skewed-by-a-factor-of-7-protocol-may-potentially-lock-nft-for-period-of-7-years\">[M-03] Protocol safeguards for time durations are skewed by a factor of 7. Protocol may potentially lock NFT for period of 7 years.</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#low-risk-issues-summary\">Low Risk Issues Summary</a></li>\n<li><a href=\"#l-01-redraw-should-be-called-by-anyone\">L-01 <code>redraw()</code> should be called by anyone</a></li>\n<li><a href=\"#l-02-an-owner-can-resign-and-lead-to-locked-nfts\">L-02 An owner can resign and lead to locked NFTs</a></li>\n<li><a href=\"#l-03-nfts-are-not-guaranteed-to-have-sequential-ids\">L-03 NFTs are not guaranteed to have sequential IDs</a></li>\n<li><a href=\"#non-critical-issues-summary\">Non-Critical Issues Summary</a></li>\n<li><a href=\"#n-01-getrequestdetails-should-include-the-tokenid\">N-01 <code>getRequestDetails()</code> should include the tokenid</a></li>\n<li><a href=\"#n-02-avoid-setting-time-variables-manually\">N-02 Avoid setting time variables manually</a></li>\n<li><a href=\"#n-03-use-constants-instead-of-immutable-variables\">N-03 Use constants instead of immutable variables</a></li>\n<li><a href=\"#n-04-uppercase-immutable-variables\">N-04 Uppercase immutable variables</a></li>\n<li><a href=\"#n-05-empty-blocks-should-be-avoided\">N-05 Empty blocks should be avoided</a></li>\n<li><a href=\"#n-06-missing-natspec\">N-06 Missing <em>NatSpec</em></a></li>\n<li><a href=\"#n-07-contracts-that-extend-interfaces-should-override-its-methods\">N-07 Contracts that extend interfaces should override its methods</a></li>\n<li><a href=\"#n-08-_requestroll-after-confirming-that-the-raffle-is-viable\">N-08 <code>_requestRoll()</code> after confirming that the raffle is viable</a></li>\n<li><a href=\"#n-09--ierc721enumerableupgradeable-may-lead-to-false-assumptions\">N-09  <code>IERC721EnumerableUpgradeable</code> may lead to false assumptions</a></li>\n<li><a href=\"#n-10-drawingtokenendid-should-be-inclusive-or-altered-to-a-range\">N-10 <code>drawingTokenEndId</code> should be inclusive or altered to a range</a></li>\n<li><a href=\"#n-11-fulfillrandomwords-must-not-revert\">N-11 <code>fulfillRandomWords</code> must not revert</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#gas-optimizations-overview\">Gas Optimizations Overview</a></li>\n<li><a href=\"#g-01-pack-structs-by-putting-data-types-in-ascending-size-we-can-save-up-to-6k-gas\">G-01 Pack structs by putting data types in ascending size (We can save up to ~6k gas)</a></li>\n<li><a href=\"#g-02-emitting-storage-values-instead-of-the-memory-one\">G-02 Emitting storage values instead of the memory one.</a></li>\n<li><a href=\"#g-03-cache-storage-values-in-memory-to-minimize-sloads\">G-03 Cache storage values in memory to minimize SLOADs</a></li>\n<li><a href=\"#g-04-the-result-of-a-function-call-should-be-cached-rather-than-re-calling-the-function\">G-04 The result of a function call should be cached rather than re-calling the function</a></li>\n<li><a href=\"#g-05-using-unchecked-blocks-to-save-gas\">G-05 Using unchecked blocks to save gas</a></li>\n<li><a href=\"#g-06-a-modifier-used-only-once-and-not-being-inherited-should-be-inlined-to-save-gas\">G-06 A modifier used only once and not being inherited should be inlined to save gas</a></li>\n<li><a href=\"#g-07-caching-global-variables-is-more-expensive-than-using-the-actual-variable-use-msgsender-instead-of-caching-it\">G-07 Caching global variables is more expensive than using the actual variable (use msg.sender instead of caching it)</a></li>\n<li><a href=\"#g-08-using-private-rather-than-public-for-constants-saves-gas\">G-08 Using <code>private</code> rather than <code>public</code> for constants, saves gas</a></li>\n<li><a href=\"#g-09-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable\">G-09 Functions guaranteed to revert when called by normal users can be marked <code>payable</code></a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}