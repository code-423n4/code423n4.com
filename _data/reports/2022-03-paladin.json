{
  "circa": {
    "title": "Paladin contest",
    "sponsor": "Paladin",
    "slug": "2022-03-paladin",
    "date": "2022-05-10",
    "findings": "https://github.com/code-423n4/2022-03-paladin-findings/issues",
    "contest": 105
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit contest outlined in this document, C4 conducted an analysis of the Paladin smart contract system written in Solidity. The audit contest took place between March 29—April 2 2022.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>44 Wardens contributed reports to the Paladin contest:</p>\n<ol>\n<li>Picodes</li>\n<li>Czar102</li>\n<li>jayjonah8</li>\n<li>hubble (ksk2345 and shri4net)</li>\n<li><a href=\"https://twitter.com/liam_eastwood13\">leastwood</a></li>\n<li>WatchPug (<a href=\"https://github.com/jack-the-pug\">jtp</a> and <a href=\"https://github.com/mingwatch\">ming</a>)</li>\n<li>TerrierLover</li>\n<li>reassor</li>\n<li>IllIllI</li>\n<li><a href=\"https://twitter.com/jah_s3\">jah</a></li>\n<li><a href=\"https://twitter.com/securerodd\">securerodd</a></li>\n<li>cccz</li>\n<li>Jujic</li>\n<li><a href=\"https://twitter.com/danbinnun\">danb</a></li>\n<li><a href=\"https://twitter.com/rayn731\">rayn</a></li>\n<li><a href=\"https://twitter.com/gzeon\">gzeon</a></li>\n<li>0xDjango</li>\n<li>robee</li>\n<li>hyh</li>\n<li>JC</li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li><a href=\"https://twitter.com/defsec_\">defsec</a></li>\n<li><a href=\"http://seanseefried.org/blog\">sseefried</a></li>\n<li><a href=\"https://twitter.com/JustDravee\">Dravee</a></li>\n<li>kenta</li>\n<li>0xkatana</li>\n<li>hake</li>\n<li><a href=\"https://twitter.com/merkleplant_eth\">pmerkleplant</a></li>\n<li>minhquanym</li>\n<li><a href=\"https://twitter.com/_0v3rf10w\">0v3rf10w</a></li>\n<li><a href=\"https://instagram.com/vanensurya\">Funen</a></li>\n<li><a href=\"https://twitter.com/teryanarmenn\">teryanarmen</a></li>\n<li>0xmint</li>\n<li>sorrynotsorry</li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li>okkothejawa</li>\n<li>saian</li>\n<li><a href=\"https://twitter.com/meidhiwirara\">Tomio</a></li>\n<li><a href=\"https://www.instagram.com/riyan_rfa/\">rfa</a></li>\n<li><a href=\"https://github.com/antoncoding\">antonttc</a></li>\n<li><a href=\"https://twitter.com/0xNazgul\">0xNazgul</a></li>\n<li>Cityscape</li>\n</ol>\n<p>This contest was judged by <a href=\"https://github.com/0xean\">0xean</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/liveactionllama\">liveactionllama</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 16 unique vulnerabilities. Of these vulnerabilities, 2 received a risk rating in the category of HIGH severity and 14 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 25 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 25 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2022-03-paladin\">C4 Paladin contest repository</a>, and is composed of 2 smart contracts written in the Solidity programming language and includes 1,226 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>.</p>\n<h1 id=\"high-risk-findings-2\" style=\"position:relative;\"><a href=\"#high-risk-findings-2\" aria-label=\"high risk findings 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (2)</h1>\n<h2 id=\"h-01-droppersecond-is-not-updated-homogeneously-the-rewards-emission-can-be-much-higher-than-expected-in-some-cases\" style=\"position:relative;\"><a href=\"#h-01-droppersecond-is-not-updated-homogeneously-the-rewards-emission-can-be-much-higher-than-expected-in-some-cases\" aria-label=\"h 01 droppersecond is not updated homogeneously the rewards emission can be much higher than expected in some cases permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/44\">[H-01] <code>DropPerSecond</code> is not updated homogeneously, the rewards emission can be much higher than expected in some cases</a></h2>\n<p><em>Submitted by WatchPug, also found by Czar102</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L715-L743\">HolyPaladinToken.sol#L715-L743</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_updateDropPerSecond</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// If no more need for monthly updates =&gt; decrease duration is over</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">startDropTimestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">dropDecreaseDuration</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Set the current DropPerSecond as the end value</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Plus allows to be updated if the end value is later updated</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentDropPerSecond</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">endDropPerSecond</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">currentDropPerSecond</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">endDropPerSecond</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">lastDropUpdate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endDropPerSecond</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">lastDropUpdate</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">MONTH</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentDropPerSecond</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Update it once a month</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dropDecreasePerMonth</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">startDropPerSecond</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">endDropPerSecond</span><span class=\"mtk1\">) / (</span><span class=\"mtk12\">dropDecreaseDuration</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">MONTH</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nbMonthEllapsed</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">lastDropUpdate</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">MONTH</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dropPerSecondDecrease</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">dropDecreasePerMonth</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">nbMonthEllapsed</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// We calculate the new dropPerSecond value</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// We don&#39;t want to go under the endDropPerSecond</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newDropPerSecond</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">currentDropPerSecond</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">dropPerSecondDecrease</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">endDropPerSecond</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">currentDropPerSecond</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">dropPerSecondDecrease</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">endDropPerSecond</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">currentDropPerSecond</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">newDropPerSecond</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">lastDropUpdate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newDropPerSecond</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>When current time is <code>lastDropUpdate + (2*MONTH-1)</code>:</p>\n<p><code>nbMonthEllapsed</code> will be round down to <code>1</code>, while it’s actually 1.99 months passed, but because of precision loss, the smart contract will believe it’s only 1 month elapsed, as a result, <code>DropPerSecond</code> will only decrease by 1 * <code>dropDecreasePerMonth</code>.</p>\n<p>In another word, due to the precision loss in calculating the number of months elapsed, for each <code>_updateDropPerSecond()</code> there can be a short of up to <code>1 * dropDecreasePerMonth</code> for the decrease of emission rate.</p>\n<p>At the very edge case, if all the updates happened just like the scenario above. by the end of the <code>dropDecreaseDuration</code>, it will drop only <code>12 * dropDecreasePerMonth</code> in total, while it’s expected to be <code>24 * dropDecreasePerMonth</code>.</p>\n<p>So only half of <code>(startDropPerSecond - endDropPerSecond)</code> is actually decreased. And the last time <code>updateDropPerSecond</code> is called, <code>DropPerSecond</code> will suddenly drop to <code>endDropPerSecond</code>.</p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>As the <code>DropPerSecond</code> is not updated correctly, in most of the <code>dropDecreaseDuration</code>, the actual rewards emission rate is much higher than expected. As a result, the total rewards emission can be much higher than expected.</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Change to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_updateDropPerSecond</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// If no more need for monthly updates =&gt; decrease duration is over</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">startDropTimestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">dropDecreaseDuration</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Set the current DropPerSecond as the end value</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Plus allows to be updated if the end value is later updated</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentDropPerSecond</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">endDropPerSecond</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">currentDropPerSecond</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">endDropPerSecond</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">lastDropUpdate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endDropPerSecond</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">lastDropUpdate</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">MONTH</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentDropPerSecond</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Update it once a month</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dropDecreasePerMonth</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">startDropPerSecond</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">endDropPerSecond</span><span class=\"mtk1\">) / (</span><span class=\"mtk12\">dropDecreaseDuration</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">MONTH</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nbMonthEllapsed</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">UNIT</span><span class=\"mtk1\"> * (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">lastDropUpdate</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">MONTH</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dropPerSecondDecrease</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">dropDecreasePerMonth</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">nbMonthEllapsed</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">UNIT</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// We calculate the new dropPerSecond value</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// We don&#39;t want to go under the endDropPerSecond</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newDropPerSecond</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">currentDropPerSecond</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">dropPerSecondDecrease</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">endDropPerSecond</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">currentDropPerSecond</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">dropPerSecondDecrease</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">endDropPerSecond</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">currentDropPerSecond</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">newDropPerSecond</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">lastDropUpdate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newDropPerSecond</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/44#issuecomment-1086723036\">Kogaroshi (Paladin) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Mitigation for this issue can be found here: <a href=\"https://github.com/PaladinFinance/Paladin-Tokenomics/pull/9/commits/4d050ebcdbef0eed84b2382dce22b6888d8e7045\">PaladinFinance/Paladin-Tokenomics@4d050eb</a>.<br></p>\n<p>Mitigation chosen is different from the Warden recommendation: since we want to keep the <code>dropPerSecond</code> to have a monthly decrease, we set the new <code>lastUpdate</code> as the previous <code>lastUpdate</code> + (<code>nb_of_months_since_last_update</code> * <code>month_duration</code>).</p>\n</blockquote>\n<hr>\n<h2 id=\"h-02-system-could-be-wrapped-and-made-useless-without-contract-whitelisting\" style=\"position:relative;\"><a href=\"#h-02-system-could-be-wrapped-and-made-useless-without-contract-whitelisting\" aria-label=\"h 02 system could be wrapped and made useless without contract whitelisting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/77\">[H-02] System could be wrapped and made useless without contract whitelisting</a></h2>\n<p><em>Submitted by Picodes</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L253\">HolyPaladinToken.sol#L253</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L284\">HolyPaladinToken.sol#L284</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L268\">HolyPaladinToken.sol#L268</a><br></p>\n<p>Anyone could create a contract or a contract factory “PAL Locker” with a fonction to deposit PAL tokens through a contract, lock them and delegate the voting power to the contract owner. Then, the ownership of this contract could be sold. By doing so, locked hPAL would be made liquid and transferrable again. This would eventually break the overall system of hPAL, where the idea is that you have to lock them to make them non liquid to get a boosted voting power and reward rate.</p>\n<p>Paladin should expect this behavior to happen as we’ve seen it happening with veToken models and model implying locking features (see <a href=\"https://lockers.stakedao.org/\">https://lockers.stakedao.org/</a> and <a href=\"https://www.convexfinance.com/\">https://www.convexfinance.com/</a>).</p>\n<p>This behavior could eventually be beneficial to the original DAO (ex. <a href=\"https://www.convexfinance.com/\">https://www.convexfinance.com/</a> for Curve and Frax), but the original DAO needs to at least be able to blacklist / whitelist such contracts and actors to ensure their interests are aligned with the protocol.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>To make locked hPAL liquid, Alice could create a contact C. Then, she can deposit hPAL through the contract, lock them and delegate voting power to herself. She can then sell or tokenize the ownership of the contract C.</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Depending on if Paladin wants to be optimistic or pessimistic, implement a whitelisting / blacklisting system for contracts.</p>\n<p>See:\n<a href=\"https://github.com/curvefi/curve-dao-contracts/blob/4e428823c8ae9c0f8a669d796006fade11edb141/contracts/VotingEscrow.vy#L185\">Curve-Dao-Contracts/VotingEscrow.vy#L185</a><br></p>\n<p><a href=\"https://github.com/FraxFinance/frax-solidity/blob/7375949a73042c1e6dd14848fc4ea1ba62e36fb5/src/hardhat/contracts/FXS/veFXS_Solidity.sol.old#L370\">FraxFinance/veFXS_Solidity.sol.old#L370</a><br></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/77#issuecomment-1087503108\">Kogaroshi (Paladin) confirmed, resolved, and commented</a>:</strong></p>\n<blockquote>\n<p>Changes were made to use a Whitelist similar to the veCRV &#x26; veANGLE (changes in this PR: <a href=\"https://github.com/PaladinFinance/Paladin-Tokenomics/pull/12\">PaladinFinance/Paladin-Tokenomics#12</a>).<br>\nThe checker will only block for Locking, allowing smart contracts to stake and use the basic version of hPAL without locking.</p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-15\" style=\"position:relative;\"><a href=\"#medium-risk-findings-15\" aria-label=\"medium risk findings 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (15)</h1>\n<h2 id=\"m-01-holypaladintokensol-uses-erc20-token-with-a-highly-unsafe-pattern\" style=\"position:relative;\"><a href=\"#m-01-holypaladintokensol-uses-erc20-token-with-a-highly-unsafe-pattern\" aria-label=\"m 01 holypaladintokensol uses erc20 token with a highly unsafe pattern permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/3\">[M-01] <code>HolyPaladinToken.sol</code> uses <code>ERC20</code> token with a highly unsafe pattern</a></h2>\n<p><em>Submitted by jayjonah8</em></p>\n<p>In <code>HolyPaladinToken.sol</code> it imports <code>ERC20.sol</code> with some changes from the original Open Zeppelin standard.  One change is that the <code>transferFrom()</code> function does not follow the Checks Effect and Interactions safety pattern to safely make external calls to other contracts. All checks should be handled first, then any effects/state updates,  followed by the external call to prevent reentrancy attacks.  Currently the <code>transferFrom()</code> function in <code>ERC20.sol</code> used by <code>HolyPaladinToken.sol</code> calls <code>_transfer()</code> first and then updates the <code>sender</code> allowance which is highly unsafe.  The openZeppelin <code>ER20.sol</code> contract which is the industry standard first updates the <code>sender</code> allowance before calling <code>_transfer</code>.  The external call should always be done last to avoid any double spending bugs or reentrancy attacks.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://fravoll.github.io/solidity-patterns/checks_effects_interactions.html\">https://fravoll.github.io/solidity-patterns/checks_effects_interactions.html</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/open-zeppelin/ERC20.sol#L149\">https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/open-zeppelin/ERC20.sol#L149</a></p>\n<p>Open Zeppelins Implementation:<br>\n<a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\">https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol</a></p>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Be sure to follow the Checks Effects and Interactions safety pattern as the <code>transferFrom</code> function is one of the most important functions in any protocol.  Consider importing the Open Zeppelin <code>ERC20.sol</code> contract code directly as it is battle tested and safe code.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/3#issuecomment-1084437064\">Kogaroshi (Paladin) confirmed, resolved, and commented</a>:</strong></p>\n<blockquote>\n<p>ERC20.sol used was an older version from OpenZeppelin.<br>\nUpdated in the codebase via the PR: <a href=\"https://github.com/PaladinFinance/Paladin-Tokenomics/pull/1\">PaladinFinance/Paladin-Tokenomics#1</a>.<br>\nWe now use the latest version of ERC20.sol that has the correct Checks Effects and Interactions safety pattern.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/3#issuecomment-1093338779\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>While I agree this is an issue, I think the severity has been overstated slightly.  The transferFrom() function itself does not make any external calls so there is no exposure to reentrancy issues. That being said in the future if the contract had been extended in a way that enable an external call this would prove problematic.  </p>\n<p>Since the sponsor has confirmed the issue <em>and</em> this does violate well known best practices and open up the codebase to future issues, I will award the medium severity. </p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-incorrect-number-of-seconds-in-one_year-variable\" style=\"position:relative;\"><a href=\"#m-02-incorrect-number-of-seconds-in-one_year-variable\" aria-label=\"m 02 incorrect number of seconds in one_year variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/4\">[M-02] Incorrect number of seconds in <code>ONE_YEAR</code> variable</a></h2>\n<p><em>Submitted by jayjonah8</em></p>\n<p>In <code>HolyPaladinToken.sol</code> the <code>ONE_YEAR</code> variable claims that there are <code>31557600</code> seconds in a year when this is incorrect.  The <code>ONE_YEAR</code> variable is used in the <code>getCurrentVotes()</code> function as well as the <code>getPastVotes()</code> function so it is vital that the correct time in seconds be used as it can effect users negatively.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L25\">HolyPaladinToken.sol#L25</a><br></p>\n<p>86,400 seconds in a day x 365 = 31_536_000</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The correct number of seconds in a year is 31_536_000 so the <code>ONE_YEAR</code> variable should be changed to <code>ONE_YEAR = 31_536_000</code></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/4#issuecomment-1084441192\">Kogaroshi (Paladin) confirmed, resolved, and commented</a>:</strong></p>\n<blockquote>\n<p>An incorrect value for MONTH was used, leading to all temporal constants (YEAR, max lock time, etc …) to be incorrect.<br>\nAll values were fixed in: <a href=\"https://github.com/PaladinFinance/Paladin-Tokenomics/pull/3\">PaladinFinance/Paladin-Tokenomics#3</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-03-users-at-unstake_period-can-assist-other-users-in-unstaking-tokens\" style=\"position:relative;\"><a href=\"#m-03-users-at-unstake_period-can-assist-other-users-in-unstaking-tokens\" aria-label=\"m 03 users at unstake_period can assist other users in unstaking tokens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/7\">[M-03] Users at <code>UNSTAKE_PERIOD</code> can assist other users in unstaking tokens.</a></h2>\n<p><em>Submitted by cccz, also found by JC and gzeon</em></p>\n<p>Consider the following scenario:\nDay 0: User A stakes 200 tokens and calls the cooldown function. At this time, user A’s cooldown is Day 0.\nDay 15: User B stakes 100 tokens, but then wants to unstake tokens. So user A said that he could assist user B in unstaking tokens, and this could be done by deploying a smart contract.\nIn the smart contract deployed by user A, user B first needs to transfer 100 tokens to user A. In the _getNewReceiverCooldown function, _senderCooldown is Day 15 and receiverCooldown is Day 0, so the latest cooldown of user A is (100 * Day 15 + 200 * Day 0)/(100+200) = Day 5.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function _getNewReceiverCooldown(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 senderCooldown,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 amount,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address receiver,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 receiverBalance</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) internal view returns(uint256) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 receiverCooldown = cooldowns[receiver];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // If receiver has no cooldown, no need to set a new one</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if(receiverCooldown == 0) return 0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 minValidCooldown = block.timestamp - (COOLDOWN_PERIOD + UNSTAKE_PERIOD);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // If last receiver cooldown is expired, set it back to 0</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if(receiverCooldown &lt; minValidCooldown) return 0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // In case the given senderCooldown is 0 (sender has no cooldown, or minting)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 _senderCooldown = senderCooldown &lt; minValidCooldown ? block.timestamp : senderCooldown;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // If the sender cooldown is better, we keep the receiver cooldown</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if(_senderCooldown &lt; receiverCooldown) return receiverCooldown;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Default new cooldown, weighted average based on the amount and the previous balance</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return ((amount * _senderCooldown) + (receiverBalance * receiverCooldown)) / (amount + receiverBalance);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>Since User A is still at UNSTAKE_PERIOD after receiving the tokens, User A unstakes 100 tokens and sends it to User B.</p>\n<p>After calculation, we found that when user A has a balance of X and is at the edge of UNSTAKE_PERIOD, user A can assist in unstaking the X/2 amount of tokens just staked.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1131\">HolyPaladinToken.sol#L1131</a></p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>After calculation, we found that the number of tokens that users at the edge of UNSTAKE<em>PERIOD can assist in unstaking conforms to the following equation\nUNSTAKE</em>PERIOD/COOLDOWN<em>PERIOD = UNSTAKE</em>AMOUNT/USER<em>BALANCE, when COOLDOWN</em>PERIOD remains unchanged, the smaller the UNSTAKE<em>PERIOD, the less tokens the user can assist in unstaking, so UNSTAKE</em>PERIOD can be adjusted to alleviate this situation.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/7#issuecomment-1084951519\">Kogaroshi (Paladin) confirmed, resolved, and commented</a>:</strong></p>\n<blockquote>\n<p>Reduced the Unstake Period to 2 days to reduce the possibility of such scenario.<br>\n<a href=\"https://github.com/PaladinFinance/Paladin-Tokenomics/pull/4\">PaladinFinance/Paladin-Tokenomics#4</a></p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-cooldown-is-set-to-0-when-the-user-sends-all-tokens-to-himself\" style=\"position:relative;\"><a href=\"#m-04-cooldown-is-set-to-0-when-the-user-sends-all-tokens-to-himself\" aria-label=\"m 04 cooldown is set to 0 when the user sends all tokens to himself permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/8\">[M-04] <code>cooldown</code> is set to 0 when the user sends all tokens to himself</a></h2>\n<p><em>Submitted by cccz, also found by hyh and Czar102</em></p>\n<p>In the _beforeTokenTransfer function, cooldowns will be set to 0 when the user transfers all tokens to himself.<br>\nConsider the following scenario:<br>\nDay 0: The user stakes 100 tokens and calls the cooldown function.<br>\nDay 10: the user wanted to unstake the tokens, but accidentally transferred all the tokens to himself, which caused the cooldown to be set to 0 and the user could not unstake.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L891-L905\">HolyPaladinToken.sol#L891-L905</a></p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  function _beforeTokenTransfer(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      address from,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      address to,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      uint256 amount</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  ) internal virtual override {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      if(from != address(0)) { //check must be skipped on minting</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          // Only allow the balance that is unlocked to be transfered</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          require(amount &lt;= _availableBalanceOf(from), &quot;hPAL: Available balance too low&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // Update user rewards before any change on their balance (staked and locked)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      _updateUserRewards(from);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      uint256 fromCooldown = cooldowns[from]; //If from is address 0x00...0, cooldown is always 0</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      if(from != to) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          // Update user rewards before any change on their balance (staked and locked)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          _updateUserRewards(to);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          // =&gt; we don&#39;t want a self-transfer to double count new claimable rewards</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          // + no need to update the cooldown on a self-transfer</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          uint256 previousToBalance = balanceOf(to);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          cooldowns[to] = _getNewReceiverCooldown(fromCooldown, amount, to, previousToBalance);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          // If from transfer all of its balance, reset the cooldown to 0</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          uint256 previousFromBalance = balanceOf(from);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          if(previousFromBalance == amount &amp;&amp; fromCooldown != 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">              cooldowns[from] = 0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/8#issuecomment-1084439556\">Kogaroshi (Paladin) confirmed, resolved, and commented</a>:</strong></p>\n<blockquote>\n<p>Issue fixed in the PR: <a href=\"https://github.com/PaladinFinance/Paladin-Tokenomics/pull/2\">PaladinFinance/Paladin-Tokenomics#2</a>.<br>\nApplying the recommended mitigation.<br>\nAn extra test for that scenario was added to the hPAL tests.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/8#issuecomment-1093324484\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Based on additional information this doesn’t permanently lock user funds, but it does unintentionally extend the duration of the lock.</p>\n<p>See <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/88\">issue #88</a>:<br>\n<code>This effectively means that user funds be frozen for an additional period, which is the difference between his former cooldown and current timestamp. There is no reason for that and it will go against user’s expectations.</code></p>\n<p>Therefore, I agree this should be a medium severity issue.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-05-past-state-query-results-are-susceptible-to-manipulation-due-to-multiple-states-with-same-block-number\" style=\"position:relative;\"><a href=\"#m-05-past-state-query-results-are-susceptible-to-manipulation-due-to-multiple-states-with-same-block-number\" aria-label=\"m 05 past state query results are susceptible to manipulation due to multiple states with same block number permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/20\">[M-05] Past state query results are susceptible to manipulation due to multiple states with same block number</a></h2>\n<p><em>Submitted by rayn, also found by IllIllI and Czar102</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L466\">HolyPaladinToken.sol#L466</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L492\">HolyPaladinToken.sol#L492</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L644\">HolyPaladinToken.sol#L644</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L663\">HolyPaladinToken.sol#L663</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L917\">HolyPaladinToken.sol#L917</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L961\">HolyPaladinToken.sol#L961</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L993\">HolyPaladinToken.sol#L993</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1148\">HolyPaladinToken.sol#L1148</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1164\">HolyPaladinToken.sol#L1164</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1184\">HolyPaladinToken.sol#L1184</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1199\">HolyPaladinToken.sol#L1199</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1225\">HolyPaladinToken.sol#L1225</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1250\">HolyPaladinToken.sol#L1250</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1260\">HolyPaladinToken.sol#L1260</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1287\">HolyPaladinToken.sol#L1287</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1293\">HolyPaladinToken.sol#L1293</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1324\">HolyPaladinToken.sol#L1324</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1352\">HolyPaladinToken.sol#L1352</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1357\">HolyPaladinToken.sol#L1357</a><br></p>\n<p>4 kinds of states (<code>UserLock</code>, <code>TotalLock</code>, <code>Checkpoint</code>, <code>DelegateCheckpoint</code>) are maintained in the protocol to keep record of history. For functions that query history states, target block number is used as an index to search for the corresponding state.</p>\n<p>However, 3 (<code>DelegateCheckpoint</code>, <code>TotalLock</code>, <code>UserLocks</code>) out of the 4 states are allowed to have multiple entries with same <code>fromBlock</code>, resulting in a one-to-many mapping between block number and history entry. This makes queried results at best imprecise, and at worst manipulatable by malicious users to present an incorrect history.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Functions that query history states including <code>_getPastLock</code>, <code>getPastTotalLock</code>, <code>_getPastDelegate</code> perform a binary search through the array of history states to find entry matching queried block number. However, the searched arrays can contain multiple entries with the same <code>fromBlock</code>.</p>\n<p>For example the <code>_lock</code> function pushes a new <code>UserLock</code> to <code>userLocks[user]</code> regardless of previous lock block number.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function _lock(address user, uint256 amount, uint256 duration, LockAction action) internal {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(user != address(0)); //Never supposed to happen, but security check</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(amount != 0, &quot;hPAL: Null amount&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 userBalance = balanceOf(user);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(amount &lt;= userBalance, &quot;hPAL: Amount over balance&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(duration &gt;= MIN_LOCK_DURATION, &quot;hPAL: Lock duration under min&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(duration &lt;= MAX_LOCK_DURATION, &quot;hPAL: Lock duration over max&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if(userLocks[user].length == 0){</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            // Get the current user Lock</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            uint256 currentUserLockIndex = userLocks[user].length - 1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            UserLock storage currentUserLock = userLocks[user][currentUserLockIndex];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            // Calculate the end of the user current lock</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            uint256 userCurrentLockEnd = currentUserLock.startTimestamp + currentUserLock.duration;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            uint256 startTimestamp = block.timestamp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if(currentUserLock.amount == 0 || userCurrentLockEnd &lt; block.timestamp) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                // User locked, and then unlocked</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                // or user lock expired</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                userLocks[user].push(UserLock(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    safe128(amount),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    safe48(startTimestamp),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    safe48(duration),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    safe32(block.number)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                ));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                // Update of the current Lock : increase amount or increase duration</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                // or renew with the same parameters, but starting at the current timestamp</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                require(amount &gt;=  currentUserLock.amount,&quot;hPAL: smaller amount&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                require(duration &gt;=  currentUserLock.duration,&quot;hPAL: smaller duration&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                // If the method is called with INCREASE_AMOUNT, then we don&#39;t change the startTimestamp of the Lock</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                userLocks[user].push(UserLock(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    safe128(amount),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    action == LockAction.INCREASE_AMOUNT ? currentUserLock.startTimestamp : safe48(startTimestamp),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    safe48(duration),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    safe32(block.number)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                ));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>This makes the history searches imprecise at best. Additionally, if a user intends to shadow his past states from queries through public search functions, it is possible to control the number of entries precisely such that binsearch returns the entry he wants to show.</p>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>vim, ganache-cli</p>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Adopt the same strategy as checkpoint, and modify last entry in array instead of pushing new one if it <code>fromBlock == block.number</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/20#issuecomment-1086661290\">Kogaroshi (Paladin) confirmed, resolved, and commented</a>:</strong></p>\n<blockquote>\n<p>Changes made in the PR: <a href=\"https://github.com/PaladinFinance/Paladin-Tokenomics/pull/7\">PaladinFinance/Paladin-Tokenomics#7</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/20#issuecomment-1092315248\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Agree with severity assigned in this issue. Assets are not directly compromised by this vulnerability, which would be required for 3.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-06-paladinrewardreservesol-may-have-potential-bugs-if-it-uses-new-tokens-as-rewards\" style=\"position:relative;\"><a href=\"#m-06-paladinrewardreservesol-may-have-potential-bugs-if-it-uses-new-tokens-as-rewards\" aria-label=\"m 06 paladinrewardreservesol may have potential bugs if it uses new tokens as rewards permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/26\">[M-06] <code>PaladinRewardReserve.sol</code> may have potential bugs if it uses new tokens as rewards</a></h2>\n<p><em>Submitted by TerrierLover</em></p>\n<p><code>PaladinRewardReserve.sol</code> may have potential bugs if it uses new tokens as rewards.</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Currently, <code>PaladinRewardReserve.sol</code> has following behaviors:</p>\n<ul>\n<li><code>mapping(address => bool) public approvedSpenders</code> does not store the info regarding which token it targets</li>\n<li><code>setNewSpender</code>, <code>updateSpenderAllowance</code>, <code>removeSpender</code> and <code>transferToken</code> functions can set <code>token</code> arbitrarily</li>\n</ul>\n<p>Hence, some corner cases may happen as follows:</p>\n<ul>\n<li>Use TokenA at PaladinRewardReserve.sol and do operations.</li>\n<li>Start TokenB as rewards at PaladinRewardReserve.sol.</li>\n<li>\n<p>All the information stored in <code>approvedSpenders</code> was intended for TokenA. So it is possible that following corner cases happen:</p>\n<ul>\n<li><code>setNewSpender</code> function cannot set new token</li>\n<li>If userA is already added in <code>approvedSpenders</code> for TokenA, it can call <code>updateSpenderAllowance</code>.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Do either of followings depending on the product specification:</p>\n<p>(1) If PAL token is only used and other token will never be used at <code>PaladinRewardReserve.sol</code>, stop having <code>address token</code> argument at <code>setNewSpender</code>, <code>updateSpenderAllowance</code>, <code>removeSpender</code> and <code>transferToken</code> functions. Instead, set <code>token</code> at the constructor or other ways, and limit the ability to flexibly set <code>token</code> from functions.</p>\n<p>(2) If other tokens potentially will be used at <code>PaladinRewardReserve.sol</code>, update data structure of <code>approvedSpenders</code> mapping and change the logic.\nFirstly, it should also contain the info which <code>token</code> it targets such as <code>mapping(address => address => bool)</code>.\nSecondly, it should rewrite the <code>require</code> logic at each function as follows.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">require(!approvedSpenders[spender][token], &quot;Already Spender on the specified Token&quot;);</span></span></code></pre>\n<!---->\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">require(approvedSpenders[spender][token], &quot;Not approved Spender on the specified Token&quot;);</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/26#issuecomment-1086827435\">Kogaroshi (Paladin) confirmed, resolved, and commented</a>:</strong></p>\n<blockquote>\n<p>Changes made in the PR: <a href=\"https://github.com/PaladinFinance/Paladin-Tokenomics/pull/11\">PaladinFinance/Paladin-Tokenomics#11</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-07-updating-the-state\" style=\"position:relative;\"><a href=\"#m-07-updating-the-state\" aria-label=\"m 07 updating the state permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/27\">[M-07] Updating the state</a></h2>\n<p><em>Submitted by jah, also found by securerodd</em></p>\n<p>In the Emergency withdraw function  userCurrentBonusRatio and  durationRatio aren’t update which will user clime funds with the wrong ratio.</p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1338\">HolyPaladinToken.sol#L1338</a></p>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Set these variables to zero in the EmergencyWithdraw function.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/27#issuecomment-1086590462\">Kogaroshi (Paladin) disagreed with High severity and commented</a>:</strong></p>\n<blockquote>\n<p>PR with the changes: <a href=\"https://github.com/PaladinFinance/Paladin-Tokenomics/pull/5\">PaladinFinance/Paladin-Tokenomics#5</a>.<br></p>\n<p>Contesting the severity of the issue: even after an emergency withdraw, where the BonusRatio of the user isn’t reset back to 0, users have no way to claim extra accrued rewards, as the claim method will be blocked by the Emergency state: <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L381\">HolyPaladinToken.sol#L381</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/27#issuecomment-1094135945\">0xean (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Given that the contract can be moved back out of the emergency state, I don’t think the sponsor’s assessment of this being a low risk issue is correct. I do think due to the external circumstances required for this to be achieved that it probably best qualifies as a medium risk.</p>\n<p><code>2 — Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.</code></p>\n</blockquote>\n<hr>\n<h2 id=\"m-08-add-a-timelock-to-paladinrewardreserve-functions\" style=\"position:relative;\"><a href=\"#m-08-add-a-timelock-to-paladinrewardreserve-functions\" aria-label=\"m 08 add a timelock to paladinrewardreserve functions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/31\">[M-08] Add a timelock to <code>PaladinRewardReserve</code> functions</a></h2>\n<p><em>Submitted by Jujic, also found by danb</em></p>\n<p>The owner of PaladinRewardReserve can approve and transfer any amount of tokens with no limits on any account. This is not good for investors. To give more trust to users: these functions should be put behind a timelock.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L28\">PaladinRewardReserve.sol#L28</a><br></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L52\">PaladinRewardReserve.sol#L52</a><br></p>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code</p>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add a timelock to transfer and spender approved functions.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/31#issuecomment-1086661744\">Kogaroshi (Paladin) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>Those 2 smart contracts will be owned by a Multisig, executing decisions based on Governance Votes in the Paladin DAO. In future evolutions of the DAO, it should have a Timelock and an on-chain Governance controlling the smart contract.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-09-function-cooldown-is-not-protected-when-protocol-in-emergency-mode\" style=\"position:relative;\"><a href=\"#m-09-function-cooldown-is-not-protected-when-protocol-in-emergency-mode\" aria-label=\"m 09 function cooldown is not protected when protocol in emergency mode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/54\">[M-09] Function <code>cooldown()</code> is not protected when protocol in emergency mode</a></h2>\n<p><em>Submitted by hubble</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L228-L235\">HolyPaladinToken.sol#L228-L235</a><br></p>\n<p>Function cooldown() is not protected when protocol is in emergency mode.<br>\nIts behavior is not consistent with the other major functions defined.</p>\n<h3 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>While other major functions like stake, unstake, lock, unlock, etc., of this contract is protected by checking for emergency flag and reverting,\nthis function cooldown() is not checked. The impact of this is that during emergency mode, users can set immediately the cooldown() and plan for unstaking when the emergency mode is lifted and cooldown period expires. This may not be the desirable behaviour expected by the protocol.</p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Contract Name : HolyPaladinToken.sol\nFunction cooldown()</p>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add checking for emergency mode for this function also.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if(emergency) revert EmergencyBlock();</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/54#issuecomment-1086726017\">Kogaroshi (Paladin) confirmed, resolved, and commented</a>:</strong></p>\n<blockquote>\n<p>Changes made in: <a href=\"https://github.com/PaladinFinance/Paladin-Tokenomics/pull/10\">PaladinFinance/Paladin-Tokenomics#10</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-10-userlock-information-can-be-found-during-emergency-mode\" style=\"position:relative;\"><a href=\"#m-10-userlock-information-can-be-found-during-emergency-mode\" aria-label=\"m 10 userlock information can be found during emergency mode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/59\">[M-10] <code>UserLock</code> information can be found during emergency mode</a></h2>\n<p><em>Submitted by hubble</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L446-L468\">HolyPaladinToken.sol#L446-L468</a><br></p>\n<p>When the contract is in blocked state (emergency mode), the protocol wants to return an empty UserLock info, on calling the function getUserLock.\nHowever, there is another way, by which the users can find the same information.</p>\n<p>The below function is not protected when in emergency mode, and users can use this alternatively.\nLine#466 function getUserPastLock(address user, uint256 blockNumber)</p>\n<h3 id=\"impact-2\" style=\"position:relative;\"><a href=\"#impact-2\" aria-label=\"impact 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>There is no loss of funds, however the intention to block information (return empty lock info) is defeated, because not all functions are protected.<br>\nThere is inconsistency in implementing the emergency mode check.</p>\n<h3 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Contract Name : HolyPaladinToken.sol<br>\nFunctions getUserLock and getUserPastLock</p>\n<h3 id=\"recommended-mitigation-steps-11\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-11\" aria-label=\"recommended mitigation steps 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add checking for emergency mode for this function getUserPastLock.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if(emergency) revert EmergencyBlock();</span></span></code></pre>\n<p>Additional user access check can be added, so that the function returns correct value when the caller(msg.sender) is admin or owner.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/59#issuecomment-1087535469\">Kogaroshi (Paladin) confirmed, resolved, and commented</a>:</strong></p>\n<blockquote>\n<p>Instead of reverting the call, we return an empty Lock (as for <code>getUserLock()</code>).<br>\nChanges in the PR: <a href=\"https://github.com/PaladinFinance/Paladin-Tokenomics/pull/13\">PaladinFinance/Paladin-Tokenomics#13</a><br></p>\n</blockquote>\n<hr>\n<h2 id=\"m-11-emergency-mode-enabledisable-issue\" style=\"position:relative;\"><a href=\"#m-11-emergency-mode-enabledisable-issue\" aria-label=\"m 11 emergency mode enabledisable issue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/64\">[M-11] Emergency mode enable/disable issue</a></h2>\n<p><em>Submitted by reassor</em></p>\n<p>Enabling emergency mode should be one way process that sets contract(s) in emergency mode. It should be not possible to revert that process, otherwise it puts owner of the contract(s) in very privileged position. Owner can trigger emergency mode, perform emergency withdrawal operations without any restrictions and then disable emergency mode.</p>\n<h3 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1425\">HolyPaladinToken.sol#L1425</a></p>\n<h3 id=\"recommended-mitigation-steps-12\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-12\" aria-label=\"recommended mitigation steps 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>It is recommended to remove <code>bool trigger</code> parameter from <code>triggerEmergencyWithdraw</code> function and set <code>emergency</code> to <code>true</code> after successfully executing function.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/64#issuecomment-1086848734\">Kogaroshi (Paladin) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>This Issue is acknowledged. The current emergency system will not be updated.<br>\nDuring deployment, the admin of the contract will be set to be the Paladin DAO multisig, and the Governance will decide on admin decision for this contract. Yet we don’t want the emergency system to totally kill the contract, but to allow users to exit if there is an issue that can be remediated.</p>\n<p>As much as any version of this contract that will be deployed as a single signer being admin of this system could present the risk of the presented scenario, in our case we use the layer that is the multisig to prevent this type of abuse.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-12-users-with-large-cooldowns-can-grief-other-users\" style=\"position:relative;\"><a href=\"#m-12-users-with-large-cooldowns-can-grief-other-users\" aria-label=\"m 12 users with large cooldowns can grief other users permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/69\">[M-12] Users with large <code>cooldown</code>s can grief other users</a></h2>\n<p><em>Submitted by IllIllI, also found by 0xDjango and csanuragjain</em></p>\n<p>If an account has a large cooldown, that account can grief other accounts that are waiting for their own cooldowns, by sending small amounts to them.</p>\n<h3 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Every transfer to an account increases the cooldown</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Hook called before any transfer */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_beforeTokenTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) { </span><span class=\"mtk3\">//check must be skipped on minting</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// Only allow the balance that is unlocked to be transfered</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk11\">_availableBalanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;hPAL: Available balance too low&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Update user rewards before any change on their balance (staked and locked)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_updateUserRewards</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fromCooldown</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">cooldowns</span><span class=\"mtk1\">[</span><span class=\"mtk12\">from</span><span class=\"mtk1\">]; </span><span class=\"mtk3\">//If from is address 0x00...0, cooldown is always 0 </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">to</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// Update user rewards before any change on their balance (staked and locked)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">_updateUserRewards</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// =&gt; we don&#39;t want a self-transfer to double count new claimable rewards</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// + no need to update the cooldown on a self-transfer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">previousToBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">cooldowns</span><span class=\"mtk1\">[</span><span class=\"mtk12\">to</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">_getNewReceiverCooldown</span><span class=\"mtk1\">(</span><span class=\"mtk12\">fromCooldown</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">previousToBalance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L875-L899\">HolyPaladinToken.sol#L875-L899</a><br></p>\n<p>The amount of the increase is proportional to the sender’s cooldown:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Default new cooldown, weighted average based on the amount and the previous balance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> ((</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_senderCooldown</span><span class=\"mtk1\">) + (</span><span class=\"mtk12\">receiverBalance</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">receiverCooldown</span><span class=\"mtk1\">)) / (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">receiverBalance</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1130-L1131\">HolyPaladinToken.sol#L1130-L1131</a><br></p>\n<h3 id=\"recommended-mitigation-steps-13\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-13\" aria-label=\"recommended mitigation steps 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Only allow a total of one cooldown increase when the sender is not the recipient.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/69#issuecomment-1086789570\">Kogaroshi (Paladin) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>As explained in the documentation &#x26; the comments for this method, this is required to prevent users to game the system and unstake by skipping the cooldown period.<br>\nAs stated in another Issue of the same kind, this type of behavior, to have an impact on another user cooldown, would require to send an amount of token consequent compared to the receiver balance, acting as a “financial safeguard” against this type of scenario being used frequently.</p>\n<p>For another example of this logic, see the stkAAVE system, using the same logic and the same cooldown imapct calculation on transfers.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/69#issuecomment-1094992936\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p><code>2 — Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.</code></p>\n<p>I am going to side with the warden here. I do see the sponsors argument that this attack is expensive to execute, but is certainly feasible. I think this qualifies as a <code>hypothetical attack path with stated assumptions, but external requirements</code>.  The external requirements being someone with enough malice to waste their own money to do so.</p>\n<p>While there may not be an easy solution to solve this, it’s still a valid risk to raise and for the sponsors to (potentially) disclose to users if there is in fact no way to mitigate it without undesired side effects.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-13-users-can-bypass-emergency-restrictions-on-updateuserrewardstate\" style=\"position:relative;\"><a href=\"#m-13-users-can-bypass-emergency-restrictions-on-updateuserrewardstate\" aria-label=\"m 13 users can bypass emergency restrictions on updateuserrewardstate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/94\">[M-13] Users Can Bypass Emergency Restrictions on <code>updateUserRewardState()</code></a></h2>\n<p><em>Submitted by leastwood</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1338-L1378\">HolyPaladinToken.sol#L1338-L1378</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L876-L906\">HolyPaladinToken.sol#L876-L906</a></p>\n<p>The <code>emergencyWithdraw()</code> function intends to withdraw their tokens regardless if they are locked up for any duration. This emergency must be triggered by the owner of the contract by calling <code>triggerEmergencyWithdraw()</code>. A number of functions will revert when the protocol is in an emergency state, including all stake, lock, unlock and kick actions and the updating of a user’s rewards. However, a user could bypass the restriction on <code>_updateUserRewards()</code> by transferring a small amount of unlocked tokens to their account. <code>_beforeTokenTransfer()</code> will call <code>_updateUserRewards()</code> on the <code>from</code> and <code>to</code> accounts. As a result, users can continue to accrue rewards while the protocol is in an emergency state and it makes sense for users to delay their emergency withdraw as they will be able to claim a higher proportion of the allocated rewards.</p>\n<h3 id=\"recommended-mitigation-steps-14\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-14\" aria-label=\"recommended mitigation steps 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider adding a check for the boolean <code>emergency</code> value in <code>_beforeTokenTransfer()</code> to not call <code>_updateUserRewards</code> on any account if this value is set. Alternatively, a check could be added into the <code>_updateUserRewards()</code> function to return if <code>emergency</code> is true.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/94#issuecomment-1088380966\">Kogaroshi (Paladin) confirmed, resolved, and commented</a>:</strong></p>\n<blockquote>\n<p>Changes made in the commit: <a href=\"https://github.com/PaladinFinance/Paladin-Tokenomics/pull/6/commits/ce9a4e25502dd13fee015800f0e538c1be5612f9\">PaladinFinance/Paladin-Tokenomics@ce9a4e2</a>.<br>\n(made in this PR so we can use Custom Errors directly)</p>\n</blockquote>\n<hr>\n<h2 id=\"m-14-increasing-the-lock-amount-on-an-expired-lock-will-cause-users-to-miss-out-on-rewards\" style=\"position:relative;\"><a href=\"#m-14-increasing-the-lock-amount-on-an-expired-lock-will-cause-users-to-miss-out-on-rewards\" aria-label=\"m 14 increasing the lock amount on an expired lock will cause users to miss out on rewards permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/95\">[M-14] Increasing the Lock Amount on an Expired Lock Will Cause Users to Miss Out on Rewards</a></h2>\n<p><em>Submitted by leastwood</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L284-L294\">HolyPaladinToken.sol#L284-L294</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1137-L1233\">HolyPaladinToken.sol#L1137-L1233</a></p>\n<p>Paladin protocol allows users to increase the amount or duration of their lock while it is stil active. Increasing the amount of an active lock should only increase the total locked amount and it shouldn’t make any changes to the associated bonus ratios as the duration remains unchanged.</p>\n<p>However, if a user increases the lock amount on an expired lock, a new lock will be created with the duration of the previous lock and the provided non-zero amount. Because the <code>action != LockAction.INCREASE_AMOUNT</code> check later on in the function does not hold true, <code>userCurrentBonusRatio</code> will contain the last updated value from the previous lock. As a result, the user will not receive any rewards for their active lock and they will need to increase the duration of the lock to fix lock’s bonus ratio.</p>\n<h3 id=\"recommended-mitigation-steps-15\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-15\" aria-label=\"recommended mitigation steps 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider preventing users from increasing the amount on an expired lock. This should help to mitigate this issue.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/95#issuecomment-1088396419\">Kogaroshi (Paladin) confirmed, resolved, and commented</a>:</strong></p>\n<blockquote>\n<p>Changes made in this commit: <a href=\"https://github.com/PaladinFinance/Paladin-Tokenomics/pull/6/commits/b9f7ece48abaf306b81a94891807de18992d516c\">PaladinFinance/Paladin-Tokenomics@b9f7ece</a>.<br>\n(made in the PR to use the Custom Errors directly)</p>\n<ul>\n<li>added extra tests to make sure this behavior is respected</li>\n</ul>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this contest, 25 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/72\">report highlighted below</a> by <strong>IllIllI</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/66\">reassor</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/1\">robee</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/80\">sseefried</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/29\">TerrierLover</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/52\">defsec</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/22\">rayn</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/92\">kenta</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/78\">hake</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/90\">Czar102</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/41\">Dravee</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/55\">sorrynotsorry</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/32\">pmerkleplant</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/60\">gzeon</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/70\">0xDjango</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/15\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/12\">0v3rf10w</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/18\">minhquanym</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/36\">teryanarmen</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/24\">jah</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/51\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/62\">0xkatana</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/81\">hyh</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/19\">okkothejawa</a>, and <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/75\">0xmint</a>.</em></p>\n<h2 id=\"l-01-paladinrewardreserves-approvals-break-if-the-same-contract-is-in-charge-of-two-tokens-eg-a-palpool\" style=\"position:relative;\"><a href=\"#l-01-paladinrewardreserves-approvals-break-if-the-same-contract-is-in-charge-of-two-tokens-eg-a-palpool\" aria-label=\"l 01 paladinrewardreserves approvals break if the same contract is in charge of two tokens eg a palpool permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-01] <code>PaladinRewardReserve</code>’s approvals break if the same contract is in charge of two tokens (e.g. a <a href=\"https://doc.paladin.vote/paladin-protocol/palpool\">PalPool</a>)</h2>\n<p>The <code>approvedSpenders</code> mapping only takes in a spender, rather than both a spender and a token. Approval for one token means approval for all tokens the account controls. Removal for one means removal for all.</p>\n<ol>\n<li>File: contracts/PaladinRewardReserve.sol (lines <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L28-L31\">28-31</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setNewSpender</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">spender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">approvedSpenders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">spender</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;Already Spender&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">approvedSpenders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">spender</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span><span class=\"mtk12\">spender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"2\">\n<li>File: contracts/PaladinRewardReserve.sol (lines <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L36-L37\">36-37</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateSpenderAllowance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">spender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">approvedSpenders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">spender</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;Not approved Spender&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"3\">\n<li>File: contracts/PaladinRewardReserve.sol (lines <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L44-L46\">44-46</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">removeSpender</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">spender</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">approvedSpenders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">spender</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;Not approved Spender&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">approvedSpenders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">spender</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"n-01-requirerevert-statements-should-have-descriptive-reason-strings\" style=\"position:relative;\"><a href=\"#n-01-requirerevert-statements-should-have-descriptive-reason-strings\" aria-label=\"n 01 requirerevert statements should have descriptive reason strings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-01] <code>require()</code>/<code>revert()</code> statements should have descriptive reason strings</h2>\n<ol>\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L182\">182</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">palToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<ol start=\"2\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L183\">183</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_admin</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<ol start=\"3\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1138\">1138</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)); </span><span class=\"mtk3\">//Never supposed to happen, but security check</span></span></span></code></pre>\n<ol start=\"4\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1236\">1236</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)); </span><span class=\"mtk3\">//Never supposed to happen, but security check</span></span></span></code></pre>\n<h2 id=\"n-02-constants-should-be-defined-rather-than-using-magic-numbers\" style=\"position:relative;\"><a href=\"#n-02-constants-should-be-defined-rather-than-using-magic-numbers\" aria-label=\"n 02 constants should be defined rather than using magic numbers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-02] <code>constant</code>s should be defined rather than using magic numbers</h2>\n<ol>\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1417\">1417</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newKickRatioPerWeek</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">newKickRatioPerWeek</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">5000</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IncorrectParameters</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<h2 id=\"n-03-the-nonreentrant-modifier-should-occur-before-all-other-modifiers\" style=\"position:relative;\"><a href=\"#n-03-the-nonreentrant-modifier-should-occur-before-all-other-modifiers\" aria-label=\"n 03 the nonreentrant modifier should occur before all other modifiers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-03] The <code>nonReentrant</code> <code>modifier</code> should occur before all other modifiers</h2>\n<p>This is a best-practice to protect against reentrancy in other modifiers</p>\n<ol>\n<li>File: contracts/PaladinRewardReserve.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L52\">52</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">transferToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<h2 id=\"n-04-safeapprove-is-deprecated\" style=\"position:relative;\"><a href=\"#n-04-safeapprove-is-deprecated\" aria-label=\"n 04 safeapprove is deprecated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-04] <code>safeApprove()</code> is deprecated</h2>\n<p><a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/bfff03c0d2a59bcd8e2ead1da9aed9edf0080d05/contracts/token/ERC20/utils/SafeERC20.sol#L38-L45\">Deprecated</a> in favor of <code>safeIncreaseAllowance()</code> and <code>safeDecreaseAllowance()</code></p>\n<ol>\n<li>File: contracts/PaladinRewardReserve.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L31\">31</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span><span class=\"mtk12\">spender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"2\">\n<li>File: contracts/PaladinRewardReserve.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L38\">38</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span><span class=\"mtk12\">spender</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"3\">\n<li>File: contracts/PaladinRewardReserve.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L39\">39</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span><span class=\"mtk12\">spender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"4\">\n<li>File: contracts/PaladinRewardReserve.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L47\">47</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span><span class=\"mtk12\">spender</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"n-05-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct-where-appropriate\" style=\"position:relative;\"><a href=\"#n-05-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct-where-appropriate\" aria-label=\"n 05 multiple address mappings can be combined into a single mapping of an address to a struct where appropriate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-05] Multiple <code>address</code> mappings can be combined into a single <code>mapping</code> of an <code>address</code> to a <code>struct</code>, where appropriate</h2>\n<ol>\n<li>File: contracts/HolyPaladinToken.sol (lines <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L88-L94\">88-94</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">address</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">delegates</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> List of Vote checkpoints for each user  */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Checkpoint</span><span class=\"mtk1\">[]) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">checkpoints</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> List of Delegate checkpoints for each user  */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">DelegateCheckpoint</span><span class=\"mtk1\">[]) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">delegateCheckpoints</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"2\">\n<li>File: contracts/HolyPaladinToken.sol (lines <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L127-L131\">127-131</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userRewardIndex</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Current amount of rewards claimable for the user  */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">claimableRewards</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Timestamp of last update for user rewards  */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardsLastUpdate</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"3\">\n<li>File: contracts/HolyPaladinToken.sol (lines <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L141-L143\">141-143</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userCurrentBonusRatio</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Value by which user Bonus Ratio decrease each second  */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userBonusRatioDecrease</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"n-06-non-libraryinterface-files-should-use-fixed-compiler-versions-not-floating-ones\" style=\"position:relative;\"><a href=\"#n-06-non-libraryinterface-files-should-use-fixed-compiler-versions-not-floating-ones\" aria-label=\"n 06 non libraryinterface files should use fixed compiler versions not floating ones permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-06] Non-library/interface files should use fixed compiler versions, not floating ones</h2>\n<ol>\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">10</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"2\">\n<li>File: contracts/PaladinRewardReserve.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"n-07-use-the-same-solidity-version-in-all-non-libraryinterface-files\" style=\"position:relative;\"><a href=\"#n-07-use-the-same-solidity-version-in-all-non-libraryinterface-files\" aria-label=\"n 07 use the same solidity version in all non libraryinterface files permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-07] Use the same solidity version in all non-library/interface files</h2>\n<ol>\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">10</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"2\">\n<li>File: contracts/PaladinRewardReserve.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"n-08-use-native-time-units-such-as-seconds-minutes-hours-days-weeks-and-years-rather-than-numbers-of-seconds\" style=\"position:relative;\"><a href=\"#n-08-use-native-time-units-such-as-seconds-minutes-hours-days-weeks-and-years-rather-than-numbers-of-seconds\" aria-label=\"n 08 use native time units such as seconds minutes hours days weeks and years rather than numbers of seconds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-08] Use native time units such as seconds, minutes, hours, days, weeks and years, rather than numbers of seconds</h2>\n<ol>\n<li>File: contracts/HolyPaladinToken.sol (lines <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L17-L39\">17-39</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">WEEK</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">604800</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Seconds in a Month */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MONTH</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">2629800</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> 1e18 scale */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">UNIT</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Max BPS value (100%) */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MAX_BPS</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">10000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Seconds in a Year */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ONE_YEAR</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">31557600</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\">  Period to wait before unstaking tokens  */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">COOLDOWN_PERIOD</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">864000</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// 10 days</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** @notice  Duration of the unstaking period</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    After that period, unstaking cooldown is expired  */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">UNSTAKE_PERIOD</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">432000</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// 5 days</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Period to unlock/re-lock tokens without possibility of punishement   */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">UNLOCK_DELAY</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1209600</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// 2 weeks</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Minimum duration of a Lock  */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MIN_LOCK_DURATION</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">7889400</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// 3 months</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Maximum duration of a Lock  */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MAX_LOCK_DURATION</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">63115200</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// 2 years</span></span></span></code></pre>\n<h2 id=\"n-09-typos\" style=\"position:relative;\"><a href=\"#n-09-typos\" aria-label=\"n 09 typos permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-09] Typos</h2>\n<ol>\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L33\">33</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Period to unlock/re-lock tokens without possibility of punishement   */</span></span></span></code></pre>\n<p>punishement</p>\n<ol start=\"2\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L59\">59</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Struct trancking the total amount locked  */</span></span></span></code></pre>\n<p>trancking</p>\n<ol start=\"3\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L110\">110</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Timstamp of last update for global reward index  */</span></span></span></code></pre>\n<p>Timstamp</p>\n<ol start=\"4\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L113\">113</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Amount of rewards distriubted per second at the start  */</span></span></span></code></pre>\n<p>distriubted</p>\n<ol start=\"5\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L239\">239</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     * @</span><span class=\"mtk12\">param</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ot</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdraw</span></span></span></code></pre>\n<p>ot</p>\n<ol start=\"6\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L258\">258</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// If the user does not deelegate currently, automatically self-delegate</span></span></span></code></pre>\n<p>deelegate</p>\n<ol start=\"7\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L421\">421</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     * @</span><span class=\"mtk12\">param</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\"> </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span></span></span></code></pre>\n<p>fo</p>\n<ol start=\"8\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L706\">706</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Find the user available balance (staked - locked) =&gt; the balance that can be transfered</span></span></span></code></pre>\n<p>transfered</p>\n<ol start=\"9\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L802\">802</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// (using avaialable balance to count the locked balance with the multiplier later in this function)</span></span></span></code></pre>\n<p>avaialable</p>\n<ol start=\"10\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L840\">840</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                            </span><span class=\"mtk3\">// a ratio based on the rpevious one and the newly calculated one</span></span></span></code></pre>\n<p>rpevious</p>\n<ol start=\"11\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1323\">1323</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// update the the Delegate chekpoint for the delegatee</span></span></span></code></pre>\n<p>chekpoint</p>\n<ol start=\"12\">\n<li>File: contracts/PaladinRewardReserve.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L19\">19</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/** </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Emitted when the allowance of a spander is updated */</span></span></span></code></pre>\n<p>spander</p>\n<h2 id=\"n-10-event-is-missing-indexed-fields\" style=\"position:relative;\"><a href=\"#n-10-event-is-missing-indexed-fields\" aria-label=\"n 10 event is missing indexed fields permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-10] Event is missing <code>indexed</code> fields</h2>\n<p>Each <code>event</code> should use three <code>indexed</code> fields if there are three or more fields</p>\n<ol>\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L151\">151</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Stake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"2\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L153\">153</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Unstake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"3\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L159\">159</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Unlock</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalLocked</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"4\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L161\">161</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Kick</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">kicker</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">penalty</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalLocked</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"5\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L163\">163</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ClaimRewards</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"6\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L167\">167</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">DelegateVotesChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">delegate</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">previousBalance</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newBalance</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"7\">\n<li>File: contracts/HolyPaladinToken.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L169\">169</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">EmergencyUnstake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"8\">\n<li>File: contracts/PaladinRewardReserve.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L18\">18</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NewSpender</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">spender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"9\">\n<li>File: contracts/PaladinRewardReserve.sol (line <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L20\">20</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">UpdateSpender</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">spender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this contest, 25 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/28\">report highlighted below</a> by <strong>TerrierLover</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/2\">robee</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/73\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/5\">Dravee</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/48\">defsec</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/61\">0xkatana</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/40\">saian</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/68\">Tomio</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/82\">Czar102</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/93\">rfa</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/13\">securerodd</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/58\">gzeon</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/91\">kenta</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/79\">hake</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/9\">antonttc</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/50\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/17\">minhquanym</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/10\">0v3rf10w</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/49\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/34\">pmerkleplant</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/16\">Cityscape</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/23\">rayn</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/85\">teryanarmen</a>, <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/76\">0xmint</a>, and <a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/39\">0xDjango</a>.</em></p>\n<h2 id=\"g-01-using-the-latest-code-of-openzeppelin-ownablesol-and-use-_transferownership-function-at-constructor-of-paladinrewardreservesol\" style=\"position:relative;\"><a href=\"#g-01-using-the-latest-code-of-openzeppelin-ownablesol-and-use-_transferownership-function-at-constructor-of-paladinrewardreservesol\" aria-label=\"g 01 using the latest code of openzeppelin ownablesol and use _transferownership function at constructor of paladinrewardreservesol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] Using the latest code of openzeppelin <code>Ownable.sol</code> and use <code>_transferOwnership</code> function at constructor of <code>PaladinRewardReserve.sol</code></h2>\n<h3 id=\"target-codebase\" style=\"position:relative;\"><a href=\"#target-codebase\" aria-label=\"target codebase permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p>Currently, it uses <code>transferOwnership</code> function at the constructor of <code>PaladinRewardReserve.sol</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">constructor(address _admin) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    transferOwnership(_admin);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L25\">PaladinRewardReserve.sol#L25</a><br></p>\n<h3 id=\"potential-improvements\" style=\"position:relative;\"><a href=\"#potential-improvements\" aria-label=\"potential improvements permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<p>With following steps, it can reduce the deployment gas cost.</p>\n<p>Step1: Use the latest <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/2a4ca654046e65553af89355e24785e50735a92c/contracts/access/Ownable.sol\">Ownable.sol</a><br></p>\n<p>Step2: <code>_transferOwnership</code> internal function instead of <code>transferOwnership</code> function in <code>PaladinRewardReserve.sol</code></p>\n<h3 id=\"deployment-gas-change\" style=\"position:relative;\"><a href=\"#deployment-gas-change\" aria-label=\"deployment gas change permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment Gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>PaladinRewardReserve</td>\n<td>752599</td>\n<td>749055</td>\n<td>-3544</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"g-02-using-the-latest-code-of-openzeppelin-ownablesol-and-use-_transferownership-function-at-constructor-of-holypaladintokensol\" style=\"position:relative;\"><a href=\"#g-02-using-the-latest-code-of-openzeppelin-ownablesol-and-use-_transferownership-function-at-constructor-of-holypaladintokensol\" aria-label=\"g 02 using the latest code of openzeppelin ownablesol and use _transferownership function at constructor of holypaladintokensol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] Using the latest code of openzeppelin <code>Ownable.sol</code> and use <code>_transferOwnership</code> function at constructor of <code>HolyPaladinToken.sol</code></h2>\n<h3 id=\"target-codebase-1\" style=\"position:relative;\"><a href=\"#target-codebase-1\" aria-label=\"target codebase 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L187\">HolyPaladinToken.sol#L187</a><br></p>\n<p>Currently, it uses <code>transferOwnership</code> function at the constructor of <code>HolyPaladinToken.sol</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">constructor(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address palToken,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address _admin,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address _rewardsVault,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 _startDropPerSecond,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 _endDropPerSecond,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 _dropDecreaseDuration,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 _baseLockBonusRatio,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 _minLockBonusRatio,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 _maxLockBonusRatio</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">){</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    transferOwnership(_admin);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<h3 id=\"potential-improvements-1\" style=\"position:relative;\"><a href=\"#potential-improvements-1\" aria-label=\"potential improvements 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<p>With following steps, it can reduce the deployment gas cost.</p>\n<p>Step1: Use the latest <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/2a4ca654046e65553af89355e24785e50735a92c/contracts/access/Ownable.sol\">Ownable.sol</a><br></p>\n<p>Step2: <code>_transferOwnership</code> internal function instead of <code>transferOwnership</code> function in <code>HolyPaladinToken.sol</code></p>\n<h3 id=\"deployment-gas-change-1\" style=\"position:relative;\"><a href=\"#deployment-gas-change-1\" aria-label=\"deployment gas change 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment Gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>PaladinRewardReserve</td>\n<td>752599</td>\n<td>749055</td>\n<td>-3544</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"g-03-usage-of-errors-can-reduce-gas-cost-and-contract-size-at-paladinrewardreservesol\" style=\"position:relative;\"><a href=\"#g-03-usage-of-errors-can-reduce-gas-cost-and-contract-size-at-paladinrewardreservesol\" aria-label=\"g 03 usage of errors can reduce gas cost and contract size at paladinrewardreservesol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] Usage of <code>Errors</code> can reduce gas cost and contract size at PaladinRewardReserve.sol</h2>\n<h3 id=\"target-codebase-2\" style=\"position:relative;\"><a href=\"#target-codebase-2\" aria-label=\"target codebase 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L29\">PaladinRewardReserve.sol#L29</a><br></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L37\">PaladinRewardReserve.sol#L37</a><br></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L45\">PaladinRewardReserve.sol#L45</a><br></p>\n<p>It uses <code>require</code> but using <a href=\"https://docs.soliditylang.org/en/v0.8.13/contracts.html?highlight=error#errors-and-the-revert-statement\"><code>Errors</code></a> in solidity can reduce the deployment gas cost.</p>\n<h3 id=\"potential-improvements-2\" style=\"position:relative;\"><a href=\"#potential-improvements-2\" aria-label=\"potential improvements 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">// Define error </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">error AlreadySpender();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">error NotApprovedSpender();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// Update the logic accordingly</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">if (approvedSpenders[spender]) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    revert AlreadySpender();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">if (!approvedSpenders[spender]) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    revert NotApprovedSpender();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<h3 id=\"deployment-gas-change-2\" style=\"position:relative;\"><a href=\"#deployment-gas-change-2\" aria-label=\"deployment gas change 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment Gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>PaladinRewardReserve</td>\n<td>752599</td>\n<td>729041</td>\n<td>-23558</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"g-04-no-need-to-set-false-at-emergency-variable-in-holypaladintokensol\" style=\"position:relative;\"><a href=\"#g-04-no-need-to-set-false-at-emergency-variable-in-holypaladintokensol\" aria-label=\"g 04 no need to set false at emergency variable in holypaladintokensol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] No need to set false at <code>emergency</code> variable in HolyPaladinToken.sol</h2>\n<h3 id=\"target-codebase-3\" style=\"position:relative;\"><a href=\"#target-codebase-3\" aria-label=\"target codebase 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L103\">HolyPaladinToken.sol#L103</a><br></p>\n<h3 id=\"potential-improvements-3\" style=\"position:relative;\"><a href=\"#potential-improvements-3\" aria-label=\"potential improvements 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<p>The default value of bool is false. So there is no need to set false at <code>emergency</code> variable.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">bool public emergency;</span></span></code></pre>\n<h3 id=\"deployment-gas-change-3\" style=\"position:relative;\"><a href=\"#deployment-gas-change-3\" aria-label=\"deployment gas change 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment Gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>5505231</td>\n<td>5502829</td>\n<td>-2402</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"g-05-usage-of-errors-can-reduce-gas-cost-and-contract-size-at-holypaladintokensol\" style=\"position:relative;\"><a href=\"#g-05-usage-of-errors-can-reduce-gas-cost-and-contract-size-at-holypaladintokensol\" aria-label=\"g 05 usage of errors can reduce gas cost and contract size at holypaladintokensol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] Usage of <code>Errors</code> can reduce gas cost and contract size at HolyPaladinToken.sol</h2>\n<h3 id=\"target-codebase-4\" style=\"position:relative;\"><a href=\"#target-codebase-4\" aria-label=\"target codebase 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p>Where it uses <code>require</code> in <a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol\"><code>HolyPaladinToken.sol</code></a>.<br></p>\n<p>There are 39 callers of <code>require</code>.</p>\n<h3 id=\"potential-improvements-4\" style=\"position:relative;\"><a href=\"#potential-improvements-4\" aria-label=\"potential improvements 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<p>Use <code>Errors</code> instead of <code>require</code>. <a href=\"https://docs.soliditylang.org/en/v0.8.13/contracts.html?highlight=error#errors-and-the-revert-statement\">(Errors and the Revert Statement)</a>.<br></p>\n<p>The gas and size improvements after using <code>Errors</code> instead of <code>require</code> with “hPAL: No Lock” is shown below:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">// Before change</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">require(..., &quot;hPAL: No Lock&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// After change</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">if (...) revert NoLock();</span></span></code></pre>\n<p>There are 8 callers of <code>require(..., \"hPAL: No Lock\")</code>.<br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L270\">HolyPaladinToken.sol#L270</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L286\">HolyPaladinToken.sol#L286</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L301\">HolyPaladinToken.sol#L301</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L348\">HolyPaladinToken.sol#L348</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1237\">HolyPaladinToken.sol#L1237</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1246\">HolyPaladinToken.sol#L1246</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1272\">HolyPaladinToken.sol#L1272</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1281\">HolyPaladinToken.sol#L1281</a><br></p>\n<h3 id=\"deployment-gas-change-4\" style=\"position:relative;\"><a href=\"#deployment-gas-change-4\" aria-label=\"deployment gas change 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment Gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>5505231</td>\n<td>5498562</td>\n<td>-6669</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"contract-size-change\" style=\"position:relative;\"><a href=\"#contract-size-change\" aria-label=\"contract size change permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contract size change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change(KB)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>24.018</td>\n<td>23.987</td>\n<td>-0.031</td>\n</tr>\n</tbody>\n</table>\n<p>Only converting the above mentioned 8 callers has -6669 deployment gas cost reduction and -0.031 size reduction. There are 31 callers of <code>require</code> in HolyPaladinToken.sol, using <code>Errors</code> instead of <code>require</code> may potentially reduce many gas costs and sizes.</p>\n<hr>\n<h2 id=\"g-06-use--0-instead-of--0-in-holypaladintokensol\" style=\"position:relative;\"><a href=\"#g-06-use--0-instead-of--0-in-holypaladintokensol\" aria-label=\"g 06 use  0 instead of  0 in holypaladintokensol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06] Use <code>!= 0</code> instead of <code>> 0</code> in HolyPaladinToken.sol</h2>\n<h3 id=\"target-codebase-5\" style=\"position:relative;\"><a href=\"#target-codebase-5\" aria-label=\"target codebase 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L229\">HolyPaladinToken.sol#L229</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L385\">HolyPaladinToken.sol#L385</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L758\">HolyPaladinToken.sol#L758</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L800\">HolyPaladinToken.sol#L800</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L809\">HolyPaladinToken.sol#L809</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L819\">HolyPaladinToken.sol#L819</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L822\">HolyPaladinToken.sol#L822</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1026\">HolyPaladinToken.sol#L1026</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1051\">HolyPaladinToken.sol#L1051</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1062\">HolyPaladinToken.sol#L1062</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1078\">HolyPaladinToken.sol#L1078</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1237\">HolyPaladinToken.sol#L1237</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1246\">HolyPaladinToken.sol#L1246</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1272\">HolyPaladinToken.sol#L1272</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1281\">HolyPaladinToken.sol#L1281</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1342\">HolyPaladinToken.sol#L1342</a><br></p>\n<h3 id=\"potential-improvements-5\" style=\"position:relative;\"><a href=\"#potential-improvements-5\" aria-label=\"potential improvements 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<p>Use <code>!= 0</code> instead of <code>> 0</code> at the above mentioned codes. The variable is uint, so it will not be below 0 so it can just check <code>!= 0</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">require(balanceOf(msg.sender) != 0, &quot;hPAL: No balance&quot;);</span></span></code></pre>\n<h3 id=\"methods-gas-change\" style=\"position:relative;\"><a href=\"#methods-gas-change\" aria-label=\"methods gas change permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Methods Gas change</h3>\n<p>Following methods in HolyPaladinToken.sol can reduce gas (from 5 to 20) by the above mentioned changes.</p>\n<ul>\n<li>claim function</li>\n<li>cooldown function</li>\n<li>emergencyWithdraw function</li>\n<li>increaseLock function</li>\n<li>increaseLockDuration function</li>\n<li>kick function</li>\n<li>lock function</li>\n<li>stake function</li>\n<li>stakeAndIncreaseLock function</li>\n<li>stakeAndLock function</li>\n<li>transfer function</li>\n<li>transferFrom function</li>\n<li>unlock function</li>\n<li>unstake function</li>\n<li>updateRewardState function</li>\n<li>updateUserRewardState function</li>\n</ul>\n<h3 id=\"deployment-gas-change-5\" style=\"position:relative;\"><a href=\"#deployment-gas-change-5\" aria-label=\"deployment gas change 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment Gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>5505231</td>\n<td>5501226</td>\n<td>-4005</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"g-07-usage-of-unchecked-can-reduce-the-gas-cost-at-claim-function-at--holypaladintokensol\" style=\"position:relative;\"><a href=\"#g-07-usage-of-unchecked-can-reduce-the-gas-cost-at-claim-function-at--holypaladintokensol\" aria-label=\"g 07 usage of unchecked can reduce the gas cost at claim function at  holypaladintokensol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-07] Usage of unchecked can reduce the gas cost at claim function at  HolyPaladinToken.sol</h2>\n<h3 id=\"target-codebase-6\" style=\"position:relative;\"><a href=\"#target-codebase-6\" aria-label=\"target codebase 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L392\">HolyPaladinToken.sol#L392</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">// Cannot claim more than accrued rewards, but we can use a higher amount to claim all the rewards</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 claimAmount = amount &lt; claimableRewards[msg.sender] ? amount : claimableRewards[msg.sender];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// remove the claimed amount from the claimable mapping for the user, </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// and transfer the PAL from the rewardsVault to the user</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">claimableRewards[msg.sender] -= claimAmount;</span></span></code></pre>\n<p><code>claimAmount</code> will not be more than <code>claimableRewards[msg.sender]</code>. Therefore, <code>claimableRewards[msg.sender] -= claimAmount</code> can be wrapped by unchecked.</p>\n<h3 id=\"potential-improvements-6\" style=\"position:relative;\"><a href=\"#potential-improvements-6\" aria-label=\"potential improvements 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<p>Wrap <code>claimableRewards[msg.sender] -= claimAmount</code> with unchecked.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">// Cannot claim more than accrued rewards, but we can use a higher amount to claim all the rewards</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 claimAmount = amount &lt; claimableRewards[msg.sender] ? amount : claimableRewards[msg.sender];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// remove the claimed amount from the claimable mapping for the user, </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// and transfer the PAL from the rewardsVault to the user</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    claimableRewards[msg.sender] -= claimAmount;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<h3 id=\"method-gas-change\" style=\"position:relative;\"><a href=\"#method-gas-change\" aria-label=\"method gas change permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Method Gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Method</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>claim</td>\n<td>97548</td>\n<td>97469</td>\n<td>-79</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"deployment-gas-change-6\" style=\"position:relative;\"><a href=\"#deployment-gas-change-6\" aria-label=\"deployment gas change 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment Gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>5505231</td>\n<td>5502014</td>\n<td>-3217</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"g-08-the-usage-of-unchecked-in-average-function-in-mathsol-can-reduce-deployment-gas-fee-and-contract-size-of-holypaladintokensol\" style=\"position:relative;\"><a href=\"#g-08-the-usage-of-unchecked-in-average-function-in-mathsol-can-reduce-deployment-gas-fee-and-contract-size-of-holypaladintokensol\" aria-label=\"g 08 the usage of unchecked in average function in mathsol can reduce deployment gas fee and contract size of holypaladintokensol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-08] The usage of unchecked in average function in Math.sol can reduce deployment gas fee and contract size of HolyPaladinToken.sol</h2>\n<h3 id=\"target-codebase-7\" style=\"position:relative;\"><a href=\"#target-codebase-7\" aria-label=\"target codebase 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/open-zeppelin/utils/Math.sol#L29\">Math.sol#L29</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function average(uint256 a, uint256 b) internal pure returns (uint256) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // (a + b) / 2 can overflow.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    return (a &amp; b) + (a ^ b) / 2;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>The above logic would not overflow, so can use unchecked.</p>\n<h3 id=\"potential-improvements-7\" style=\"position:relative;\"><a href=\"#potential-improvements-7\" aria-label=\"potential improvements 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function average(uint256 a, uint256 b) internal pure returns (uint256) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // (a + b) / 2 can overflow.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return (a &amp; b) + (a ^ b) / 2;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<h3 id=\"deployment-gas-change-7\" style=\"position:relative;\"><a href=\"#deployment-gas-change-7\" aria-label=\"deployment gas change 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment Gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>5505231</td>\n<td>5498742</td>\n<td>-6489</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"contract-size-change-1\" style=\"position:relative;\"><a href=\"#contract-size-change-1\" aria-label=\"contract size change 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contract size change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change(KB)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>24.018</td>\n<td>23.988</td>\n<td>-0.03</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"g-09-the-usage-of-unchecked-in-binary-search-can-reduce-deployment-gas-fee-and-contract-size-of-holypaladintokensol\" style=\"position:relative;\"><a href=\"#g-09-the-usage-of-unchecked-in-binary-search-can-reduce-deployment-gas-fee-and-contract-size-of-holypaladintokensol\" aria-label=\"g 09 the usage of unchecked in binary search can reduce deployment gas fee and contract size of holypaladintokensol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-09] The usage of unchecked in binary search can reduce deployment gas fee and contract size of HolyPaladinToken.sol</h2>\n<h3 id=\"target-codebase-8\" style=\"position:relative;\"><a href=\"#target-codebase-8\" aria-label=\"target codebase 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p><code>low = mid + 1</code> used in the binary search can be wrapped by unchecked</p>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L526\">HolyPaladinToken.sol#L526</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L698\">HolyPaladinToken.sol#L698</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L955\">HolyPaladinToken.sol#L955</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L987\">HolyPaladinToken.sol#L987</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1019\">HolyPaladinToken.sol#L1019</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">while (low &lt; high) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    mid = Math.average(low, high);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (totalLocks[mid].fromBlock == blockNumber) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return totalLocks[mid];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (totalLocks[mid].fromBlock &gt; blockNumber) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        high = mid;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        low = mid + 1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<h3 id=\"potential-improvements-8\" style=\"position:relative;\"><a href=\"#potential-improvements-8\" aria-label=\"potential improvements 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<p>Wrap <code>low = mid + 1</code> by unchecked.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"64\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">while (low &lt; high) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    mid = Math.average(low, high);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (totalLocks[mid].fromBlock == blockNumber) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return totalLocks[mid];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (totalLocks[mid].fromBlock &gt; blockNumber) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        high = mid;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            low = mid + 1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<h3 id=\"deployment-gas-change-8\" style=\"position:relative;\"><a href=\"#deployment-gas-change-8\" aria-label=\"deployment gas change 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment Gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>5505231</td>\n<td>5499198</td>\n<td>-6033</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"contract-size-change-2\" style=\"position:relative;\"><a href=\"#contract-size-change-2\" aria-label=\"contract size change 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contract size change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change(KB)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>24.018</td>\n<td>23.990</td>\n<td>-0.028</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"g-10-some-currentuserlockindex-varaible-does-not-need-to-be-defined-in-holypalatintokensol\" style=\"position:relative;\"><a href=\"#g-10-some-currentuserlockindex-varaible-does-not-need-to-be-defined-in-holypalatintokensol\" aria-label=\"g 10 some currentuserlockindex varaible does not need to be defined in holypalatintokensol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-10] Some <code>currentUserLockIndex</code> varaible does not need to be defined in HolyPalatinToken.sol</h2>\n<h3 id=\"target-codebase-9\" style=\"position:relative;\"><a href=\"#target-codebase-9\" aria-label=\"target codebase 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L272-L273\">HolyPaladinToken.sol#L272-L273</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L288-L289\">HolyPaladinToken.sol#L288-L289</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1173-L1174\">HolyPaladinToken.sol#L1173-L1174</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1241-L1242\">HolyPaladinToken.sol#L1241-L1242</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1276-L1277\">HolyPaladinToken.sol#L1276-L1277</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1347-L1348\">HolyPaladinToken.sol#L1347-L1348</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"65\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">// Find the current Lock</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 currentUserLockIndex = userLocks[msg.sender].length - 1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">UserLock storage currentUserLock = userLocks[msg.sender][currentUserLockIndex];</span></span></code></pre>\n<p>Some <code>currentUserLockIndex</code> varaibles is defined even though they are used once. Not defining variables can reduce gas cost and contract size.</p>\n<h3 id=\"potential-improvements-9\" style=\"position:relative;\"><a href=\"#potential-improvements-9\" aria-label=\"potential improvements 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<p>Avoid defining <code>currentUserLockIndex</code> variable as follows:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"66\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">// Find the current Lock</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">UserLock storage currentUserLock = userLocks[msg.sender][userLocks[msg.sender].length - 1];</span></span></code></pre>\n<h3 id=\"deployment-gas-change-9\" style=\"position:relative;\"><a href=\"#deployment-gas-change-9\" aria-label=\"deployment gas change 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment Gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>5505231</td>\n<td>5471346</td>\n<td>-33885</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"methods-gas-change-1\" style=\"position:relative;\"><a href=\"#methods-gas-change-1\" aria-label=\"methods gas change 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Methods Gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Method</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>emergencyWithdraw</td>\n<td>191020</td>\n<td>190966</td>\n<td>-54</td>\n</tr>\n<tr>\n<td>HolyPaladinToken</td>\n<td>increaseLock</td>\n<td>141196</td>\n<td>140997</td>\n<td>-199</td>\n</tr>\n<tr>\n<td>HolyPaladinToken</td>\n<td>increaseLockDuration</td>\n<td>116450</td>\n<td>116251</td>\n<td>-199</td>\n</tr>\n<tr>\n<td>HolyPaladinToken</td>\n<td>kick</td>\n<td>231670</td>\n<td>231561</td>\n<td>-109</td>\n</tr>\n<tr>\n<td>HolyPaladinToken</td>\n<td>lock</td>\n<td>336775</td>\n<td>336764</td>\n<td>-11</td>\n</tr>\n<tr>\n<td>HolyPaladinToken</td>\n<td>stakeAndIncreaseLock</td>\n<td>227758</td>\n<td>227649</td>\n<td>-109</td>\n</tr>\n<tr>\n<td>HolyPaladinToken</td>\n<td>unlock</td>\n<td>134273</td>\n<td>134164</td>\n<td>-109</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"contract-size-change-3\" style=\"position:relative;\"><a href=\"#contract-size-change-3\" aria-label=\"contract size change 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contract size change</h3>\n<p>It can reduce about 0.6% of the size of HolyPaladinToken.sol.</p>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change(KB)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>24.018</td>\n<td>23.861</td>\n<td>-0.157</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"g-11-the-logic-to-call-emergencyblock-in-emergency-can-be-put-in-private-function\" style=\"position:relative;\"><a href=\"#g-11-the-logic-to-call-emergencyblock-in-emergency-can-be-put-in-private-function\" aria-label=\"g 11 the logic to call emergencyblock in emergency can be put in private function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-11] The logic to call <code>EmergencyBlock()</code> in emergency can be put in private function</h2>\n<h3 id=\"target-codebase-10\" style=\"position:relative;\"><a href=\"#target-codebase-10\" aria-label=\"target codebase 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L221\">HolyPaladinToken.sol#L221</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L244\">HolyPaladinToken.sol#L244</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L254\">HolyPaladinToken.sol#L254</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L269\">HolyPaladinToken.sol#L269</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L285\">HolyPaladinToken.sol#L285</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L300\">HolyPaladinToken.sol#L300</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L312\">HolyPaladinToken.sol#L312</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L328\">HolyPaladinToken.sol#L328</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L347\">HolyPaladinToken.sol#L347</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L372\">HolyPaladinToken.sol#L372</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L381\">HolyPaladinToken.sol#L381</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L403\">HolyPaladinToken.sol#L403</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L412\">HolyPaladinToken.sol#L412</a><br></p>\n<p>Following check is called by 13 callsites. This can be put into the private function to reduce the contract size and deployment gas cost.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"67\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if(emergency) revert EmergencyBlock();</span></span></code></pre>\n<h3 id=\"potential-improvements-10\" style=\"position:relative;\"><a href=\"#potential-improvements-10\" aria-label=\"potential improvements 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<p>Define a private function to include the above mentioned logic, and use isEmergent function at each callsite.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"68\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function isEmergent() private view {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if(emergency) revert EmergencyBlock();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<h3 id=\"gas-change\" style=\"position:relative;\"><a href=\"#gas-change\" aria-label=\"gas change permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas change</h3>\n<p>Please note that the method gas fee increases while deployment gas fee reduces. So it depends on what this project prioritizes.</p>\n<ul>\n<li>Method gas fee</li>\n</ul>\n<p>Some methods have 10 ~ 30 increase of method gas cost.</p>\n<ul>\n<li>Deployment gas fee</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>5505231</td>\n<td>5433502</td>\n<td>-71729</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"contract-size-change-4\" style=\"position:relative;\"><a href=\"#contract-size-change-4\" aria-label=\"contract size change 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contract size change</h3>\n<p>It can reduce about 1.3% of the size of HolyPaladinToken.sol.</p>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change(KB)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>24.018</td>\n<td>23.686</td>\n<td>-0.332</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"g-12-not-defining-lastuserlockindex-variable-decreases-contract-size-and-gas-cost\" style=\"position:relative;\"><a href=\"#g-12-not-defining-lastuserlockindex-variable-decreases-contract-size-and-gas-cost\" aria-label=\"g 12 not defining lastuserlockindex variable decreases contract size and gas cost permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-12] Not defining lastUserLockIndex variable decreases contract size and gas cost</h2>\n<h3 id=\"target-codebase-11\" style=\"position:relative;\"><a href=\"#target-codebase-11\" aria-label=\"target codebase 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L456-L457\">HolyPaladinToken.sol#L456-L457</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L709-L710\">HolyPaladinToken.sol#L709-L710</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"69\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 lastUserLockIndex = userLocks[user].length - 1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">return userLocks[user][lastUserLockIndex];</span></span></code></pre>\n<h3 id=\"potential-improvements-11\" style=\"position:relative;\"><a href=\"#potential-improvements-11\" aria-label=\"potential improvements 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<h3 id=\"gas-change-1\" style=\"position:relative;\"><a href=\"#gas-change-1\" aria-label=\"gas change 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas change</h3>\n<ul>\n<li>Method gas fee</li>\n</ul>\n<p>Following methods in HolyPaladinToken.sol have reduced 20~200 gas cost</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"70\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">emergencyWithdraw</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">increaseLock</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">increaseLockDuration</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">kick</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">stakeAndIncreaseLock</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">unlock</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">unstake</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">updateUserRewardState</span></span></code></pre>\n<ul>\n<li>Deployment gas fee</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>5505231</td>\n<td>5433502</td>\n<td>-71729</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"contract-size-change-5\" style=\"position:relative;\"><a href=\"#contract-size-change-5\" aria-label=\"contract size change 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contract size change</h3>\n<p>It can reduce about 0.2% of the size of HolyPaladinToken.sol.</p>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change(KB)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>24.018</td>\n<td>23.959</td>\n<td>-0.059</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"g-13-definitions-sendercooldown-and-receiverbalance-variables-are-not-necessary-at-getnewreceivercooldown-function-in-holypaladintokensol\" style=\"position:relative;\"><a href=\"#g-13-definitions-sendercooldown-and-receiverbalance-variables-are-not-necessary-at-getnewreceivercooldown-function-in-holypaladintokensol\" aria-label=\"g 13 definitions sendercooldown and receiverbalance variables are not necessary at getnewreceivercooldown function in holypaladintokensol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-13] Definitions senderCooldown and receiverBalance variables are not necessary at getNewReceiverCooldown function in HolyPaladinToken.sol</h2>\n<h3 id=\"target-codebase-12\" style=\"position:relative;\"><a href=\"#target-codebase-12\" aria-label=\"target codebase 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L426-L427\">HolyPaladinToken.sol#L426-L427</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"71\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function getNewReceiverCooldown(address sender, address receiver, uint256 amount) external view returns(uint256) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 senderCooldown = cooldowns[sender];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 receiverBalance = balanceOf(receiver);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    return _getNewReceiverCooldown(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        senderCooldown,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        amount,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        receiver,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        receiverBalance</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>Definitions senderCooldown and receiverBalance variables are not necessary at getNewReceiverCooldown function in HolyPaladinToken.sol</p>\n<h3 id=\"potential-improvements-12\" style=\"position:relative;\"><a href=\"#potential-improvements-12\" aria-label=\"potential improvements 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<p>Avoid defining the above mentioned variables.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"72\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function getNewReceiverCooldown(address sender, address receiver, uint256 amount) external view returns(uint256) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    return _getNewReceiverCooldown(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        cooldowns[sender],</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        amount,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        receiver,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        balanceOf(receiver)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<h3 id=\"deployment-gas-change-10\" style=\"position:relative;\"><a href=\"#deployment-gas-change-10\" aria-label=\"deployment gas change 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>5505231</td>\n<td>5503083</td>\n<td>-2148</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"contract-size-change-6\" style=\"position:relative;\"><a href=\"#contract-size-change-6\" aria-label=\"contract size change 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contract size change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change(KB)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>24.018</td>\n<td>24.008</td>\n<td>-0.01</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"g-14-not-defining-previoustobalance-and-previousfrombalance-variables-can-reduce-gas-cost-and-contract-size\" style=\"position:relative;\"><a href=\"#g-14-not-defining-previoustobalance-and-previousfrombalance-variables-can-reduce-gas-cost-and-contract-size\" aria-label=\"g 14 not defining previoustobalance and previousfrombalance variables can reduce gas cost and contract size permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-14] Not defining previousToBalance and previousFromBalance variables can reduce gas cost and contract size</h2>\n<h3 id=\"target-codebase-13\" style=\"position:relative;\"><a href=\"#target-codebase-13\" aria-label=\"target codebase 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L897-L898\">HolyPaladinToken.sol#L897-L898</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"73\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 previousToBalance = balanceOf(to);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">cooldowns[to] = _getNewReceiverCooldown(fromCooldown, amount, to, previousToBalance);</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L902-L903\">HolyPaladinToken.sol#L902-L903</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"74\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 previousFromBalance = balanceOf(from);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">if(previousFromBalance == amount &amp;&amp; fromCooldown != 0) {</span></span></code></pre>\n<h3 id=\"potential-improvements-13\" style=\"position:relative;\"><a href=\"#potential-improvements-13\" aria-label=\"potential improvements 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<p>Avoid defining previousToBalance and previousFromBalance.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"75\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">cooldowns[to] = _getNewReceiverCooldown(fromCooldown, amount, to, balanceOf(to));</span></span></code></pre>\n<!---->\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"76\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if(balanceOf(from) == amount &amp;&amp; fromCooldown != 0) {</span></span></code></pre>\n<h3 id=\"method-gas-change-1\" style=\"position:relative;\"><a href=\"#method-gas-change-1\" aria-label=\"method gas change 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Method gas change</h3>\n<p>Following methods in HolyPaladinToken.sol can reduce around 10~20 gas cost</p>\n<ul>\n<li>emergencyWithdraw</li>\n<li>kick</li>\n<li>stake</li>\n<li>stakeAndIncreaseLock</li>\n<li>transferFrom</li>\n<li>unstake</li>\n</ul>\n<h3 id=\"deployment-gas-change-11\" style=\"position:relative;\"><a href=\"#deployment-gas-change-11\" aria-label=\"deployment gas change 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>5505231</td>\n<td>5502651</td>\n<td>-2580</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"contract-size-change-7\" style=\"position:relative;\"><a href=\"#contract-size-change-7\" aria-label=\"contract size change 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contract size change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change(KB)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>24.018</td>\n<td>24.006</td>\n<td>-0.012</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"g-15-avoiding-calling-balanceofuser-multiple-times-can-reduce-deployment-gas-cost\" style=\"position:relative;\"><a href=\"#g-15-avoiding-calling-balanceofuser-multiple-times-can-reduce-deployment-gas-cost\" aria-label=\"g 15 avoiding calling balanceofuser multiple times can reduce deployment gas cost permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-15] Avoiding calling balanceOf(user) multiple times can reduce deployment gas cost</h2>\n<h3 id=\"target-codebase-14\" style=\"position:relative;\"><a href=\"#target-codebase-14\" aria-label=\"target codebase 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L558-L560\">HolyPaladinToken.sol#L558-L560</a><br></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L570-L572\">HolyPaladinToken.sol#L570-L572</a><br></p>\n<h3 id=\"potential-improvements-14\" style=\"position:relative;\"><a href=\"#potential-improvements-14\" aria-label=\"potential improvements 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"77\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 balance = balanceOf(user);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// If the contract was blocked (emergency mode) or</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// If the user has no Lock</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// then available == staked</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">if(emergency || userLocks[user].length == 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    return(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        balance,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        0,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        balance</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// If a Lock exists</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// Then return</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// total staked balance</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// locked balance</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// available balance (staked - locked)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 lastUserLockIndex = userLocks[user].length - 1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">return(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    balance,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256(userLocks[user][lastUserLockIndex].amount),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    balance - uint256(userLocks[user][lastUserLockIndex].amount)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">);</span></span></code></pre>\n<h3 id=\"deployment-gas-change-12\" style=\"position:relative;\"><a href=\"#deployment-gas-change-12\" aria-label=\"deployment gas change 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>5505231</td>\n<td>5500878</td>\n<td>-4353</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"contract-size-change-8\" style=\"position:relative;\"><a href=\"#contract-size-change-8\" aria-label=\"contract size change 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contract size change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change(KB)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>24.018</td>\n<td>23.998</td>\n<td>-0.02</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"g-16-avoid-defining-at-_getnewindex-function-in-holypaladintokensol-can-reduce-contract-size-and-gas-cost\" style=\"position:relative;\"><a href=\"#g-16-avoid-defining-at-_getnewindex-function-in-holypaladintokensol-can-reduce-contract-size-and-gas-cost\" aria-label=\"g 16 avoid defining at _getnewindex function in holypaladintokensol can reduce contract size and gas cost permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-16] Avoid defining at _getNewIndex function in HolyPaladinToken.sol can reduce contract size and gas cost</h2>\n<h3 id=\"target-codebase-15\" style=\"position:relative;\"><a href=\"#target-codebase-15\" aria-label=\"target codebase 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L748-L755\">HolyPaladinToken.sol#L748-L755</a><br></p>\n<p>ellapsedTime variable does not need to be defined.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"78\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 ellapsedTime = block.timestamp - lastRewardUpdate;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 accruedBaseAmount = ellapsedTime * baseDropPerSecond;</span></span></code></pre>\n<h3 id=\"potential-improvements-15\" style=\"position:relative;\"><a href=\"#potential-improvements-15\" aria-label=\"potential improvements 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<p>Avoid defining ellapsedTime variable.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"79\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 accruedBaseAmount = (block.timestamp - lastRewardUpdate) * baseDropPerSecond;</span></span></code></pre>\n<h3 id=\"method-gas-change-2\" style=\"position:relative;\"><a href=\"#method-gas-change-2\" aria-label=\"method gas change 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Method gas change</h3>\n<p>This change reduces the method gas cost of more than 10 functions. The reductions are around 10~20.</p>\n<h3 id=\"deployment-gas-change-13\" style=\"position:relative;\"><a href=\"#deployment-gas-change-13\" aria-label=\"deployment gas change 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>5505231</td>\n<td>5500878</td>\n<td>-4353</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"contract-size-change-9\" style=\"position:relative;\"><a href=\"#contract-size-change-9\" aria-label=\"contract size change 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contract size change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change(KB)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>24.018</td>\n<td>24.015</td>\n<td>-0.002</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"g-17-avoiding-defining-_currentdroppersecond-and-newindex-at-_updaterewardstate-function-in-holypaladintokensol-can-reduce-gas-cost-and-contract-size\" style=\"position:relative;\"><a href=\"#g-17-avoiding-defining-_currentdroppersecond-and-newindex-at-_updaterewardstate-function-in-holypaladintokensol-can-reduce-gas-cost-and-contract-size\" aria-label=\"g 17 avoiding defining _currentdroppersecond and newindex at _updaterewardstate function in holypaladintokensol can reduce gas cost and contract size permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-17] Avoiding defining _currentDropPerSecond and newIndex at _updateRewardState function in HolyPaladinToken.sol can reduce gas cost and contract size</h2>\n<h3 id=\"target-codebase-16\" style=\"position:relative;\"><a href=\"#target-codebase-16\" aria-label=\"target codebase 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L768-L772\">HolyPaladinToken.sol#L768-L772</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"80\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 _currentDropPerSecond = _updateDropPerSecond();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// Update the index</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 newIndex = _getNewIndex(_currentDropPerSecond);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">rewardIndex = newIndex;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">lastRewardUpdate = block.timestamp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">return newIndex;</span></span></code></pre>\n<h3 id=\"potential-improvements-16\" style=\"position:relative;\"><a href=\"#potential-improvements-16\" aria-label=\"potential improvements 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"81\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">// Update the index</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">rewardIndex = _getNewIndex(_updateDropPerSecond());</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">lastRewardUpdate = block.timestamp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">return rewardIndex;</span></span></code></pre>\n<h3 id=\"method-gas-change-3\" style=\"position:relative;\"><a href=\"#method-gas-change-3\" aria-label=\"method gas change 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Method gas change</h3>\n<p>This change reduces the method gas cost of more than 10 functions. The reductions are around 10~20.</p>\n<h3 id=\"deployment-gas-change-14\" style=\"position:relative;\"><a href=\"#deployment-gas-change-14\" aria-label=\"deployment gas change 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>5505231</td>\n<td>5503323</td>\n<td>-1908</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"contract-size-change-10\" style=\"position:relative;\"><a href=\"#contract-size-change-10\" aria-label=\"contract size change 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contract size change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change(KB)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>24.018</td>\n<td>24.009</td>\n<td>-0.009</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"g-18-not-using-userlockrewardvars-struct-in-_getuseraccruedrewards-function-can-greatly-reduces-gas-cost-and-contract-size\" style=\"position:relative;\"><a href=\"#g-18-not-using-userlockrewardvars-struct-in-_getuseraccruedrewards-function-can-greatly-reduces-gas-cost-and-contract-size\" aria-label=\"g 18 not using userlockrewardvars struct in _getuseraccruedrewards function can greatly reduces gas cost and contract size permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-18] Not using UserLockRewardVars struct in _getUserAccruedRewards function can greatly reduces gas cost and contract size</h2>\n<h3 id=\"target-codebase-17\" style=\"position:relative;\"><a href=\"#target-codebase-17\" aria-label=\"target codebase 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target codebase</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L805-L848\">HolyPaladinToken.sol#L805-L848</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"82\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if(balanceOf(user) &gt; 0){</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // calculate the base rewards for the user staked balance</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // (using avaialable balance to count the locked balance with the multiplier later in this function)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 indexDiff = currentRewardsIndex - userLastIndex;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 stakingRewards = (userStakedBalance * indexDiff) / UNIT;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 lockingRewards = 0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if(userLocks[user].length &gt; 0){</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        UserLockRewardVars memory vars;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // and if an user has a lock, calculate the locked rewards</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        vars.lastUserLockIndex = userLocks[user].length - 1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // using the locked balance, and the lock duration</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        userLockedBalance = uint256(userLocks[user][vars.lastUserLockIndex].amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Check that the user&#39;s Lock is not empty</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if(userLockedBalance &gt; 0 &amp;&amp; userLocks[user][vars.lastUserLockIndex].duration != 0){</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            vars.previousBonusRatio = userCurrentBonusRatio[user];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if(vars.previousBonusRatio &gt; 0){</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                vars.userRatioDecrease = userBonusRatioDecrease[user];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                // Find the new multiplier for user:</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                // From the last Ratio, where we remove userBonusRatioDecrease for each second since last update</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                vars.bonusRatioDecrease = (block.timestamp - rewardsLastUpdate[user]) * vars.userRatioDecrease;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                newBonusRatio = vars.bonusRatioDecrease &gt;= vars.previousBonusRatio ? 0 : vars.previousBonusRatio - vars.bonusRatioDecrease;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                if(vars.bonusRatioDecrease &gt;= vars.previousBonusRatio){</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    // Since the last update, bonus ratio decrease under 0</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    // We count the bonusRatioDecrease as the difference between the last Bonus Ratio and 0</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    vars.bonusRatioDecrease = vars.previousBonusRatio;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    // In the case this update is made far after the end of the lock, this method would mean</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    // the user could get a multiplier for longer than expected</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    // We count on the Kick logic to avoid that scenario</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                // and calculate the locking rewards based on the locked balance &amp; </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                // a ratio based on the rpevious one and the newly calculated one</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                vars.periodBonusRatio = newBonusRatio + ((vars.userRatioDecrease + vars.bonusRatioDecrease) / 2);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                lockingRewards = (userLockedBalance * ((indexDiff * vars.periodBonusRatio) / UNIT)) / UNIT;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // sum up the accrued rewards, and return it</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    accruedRewards = stakingRewards + lockingRewards;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p><code>UserLockRewardVars</code> struct does not need to be used.</p>\n<h3 id=\"potential-improvements-17\" style=\"position:relative;\"><a href=\"#potential-improvements-17\" aria-label=\"potential improvements 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Potential improvements</h3>\n<p>Here is an example codebase which avoids using <code>UserLockRewardVars memory vars</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"83\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if(balanceOf(user) &gt; 0){</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // calculate the base rewards for the user staked balance</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // (using avaialable balance to count the locked balance with the multiplier later in this function)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 indexDiff = currentRewardsIndex - userLastIndex;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 lockingRewards = 0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if(userLocks[user].length &gt; 0){</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // and if an user has a lock, calculate the locked rewards</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 lastUserLockIndex = userLocks[user].length - 1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // using the locked balance, and the lock duration</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        userLockedBalance = uint256(userLocks[user][lastUserLockIndex].amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Check that the user&#39;s Lock is not empty</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if(userLockedBalance &gt; 0 &amp;&amp; userLocks[user][lastUserLockIndex].duration != 0){</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            uint256 previousBonusRatio = userCurrentBonusRatio[user];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if(previousBonusRatio &gt; 0){</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                uint256 userRatioDecrease = userBonusRatioDecrease[user];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                // Find the new multiplier for user:</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                // From the last Ratio, where we remove userBonusRatioDecrease for each second since last update</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                uint256 bonusRatioDecrease = (block.timestamp - rewardsLastUpdate[user]) * userRatioDecrease;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                newBonusRatio = bonusRatioDecrease &gt;= previousBonusRatio ? 0 : previousBonusRatio - bonusRatioDecrease;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                if(bonusRatioDecrease &gt;= previousBonusRatio){</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    // Since the last update, bonus ratio decrease under 0</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    // We count the bonusRatioDecrease as the difference between the last Bonus Ratio and 0</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    bonusRatioDecrease = previousBonusRatio;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    // In the case this update is made far after the end of the lock, this method would mean</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    // the user could get a multiplier for longer than expected</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    // We count on the Kick logic to avoid that scenario</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                // and calculate the locking rewards based on the locked balance &amp; </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                // a ratio based on the rpevious one and the newly calculated one</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                uint256 periodBonusRatio = newBonusRatio + ((userRatioDecrease + bonusRatioDecrease) / 2);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                lockingRewards = (userLockedBalance * ((indexDiff * periodBonusRatio) / UNIT)) / UNIT;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // sum up the accrued rewards, and return it</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    accruedRewards = (userStakedBalance * indexDiff) / UNIT + lockingRewards;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>In this example, it also does not define <code>userStakedBalance</code> variable.</p>\n<h3 id=\"method-gas-change-4\" style=\"position:relative;\"><a href=\"#method-gas-change-4\" aria-label=\"method gas change 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Method gas change</h3>\n<p>This change reduces the method gas cost of more than 10 functions. The reductions are around 100~200.</p>\n<h3 id=\"deployment-gas-change-15\" style=\"position:relative;\"><a href=\"#deployment-gas-change-15\" aria-label=\"deployment gas change 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment gas change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>5505231</td>\n<td>5481972</td>\n<td>-23259</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"contract-size-change-11\" style=\"position:relative;\"><a href=\"#contract-size-change-11\" aria-label=\"contract size change 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contract size change</h3>\n<table>\n<thead>\n<tr>\n<th>Contract</th>\n<th>Before</th>\n<th>After</th>\n<th>Change(KB)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HolyPaladinToken</td>\n<td>24.018</td>\n<td>23.910</td>\n<td>-0.108</td>\n</tr>\n</tbody>\n</table>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/28#issuecomment-1086687334\">Kogaroshi (Paladin) commented</a>:</strong></p>\n<blockquote>\n<p>For update of Ownable inherited contract and use of the internal transfer ownership method: <a href=\"https://github.com/PaladinFinance/Paladin-Tokenomics/pull/1/commits/4d0840c9c9fe8a1a4b043d2a33696fea8bf9176c\">PaladinFinance/Paladin-Tokenomics@4d0840c</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-paladin-findings/issues/28#issuecomment-1087669099\">Kogaroshi (Paladin) commented</a>:</strong></p>\n<blockquote>\n<p>QA &#x26; gas optimizations changes are done in the PR: <a href=\"https://github.com/PaladinFinance/Paladin-Tokenomics/pull/6\">PaladinFinance/Paladin-Tokenomics#6</a>.<br>\n(some changes/tips were implemented, others are noted but won’t be applied)<br></p>\n<p>Really high quality Gas optimizations report.</p>\n</blockquote>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-2\">High Risk Findings (2)</a></p>\n<ul>\n<li><a href=\"#h-01-droppersecond-is-not-updated-homogeneously-the-rewards-emission-can-be-much-higher-than-expected-in-some-cases\">[H-01] <code>DropPerSecond</code> is not updated homogeneously, the rewards emission can be much higher than expected in some cases</a></li>\n<li><a href=\"#h-02-system-could-be-wrapped-and-made-useless-without-contract-whitelisting\">[H-02] System could be wrapped and made useless without contract whitelisting</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-15\">Medium Risk Findings (15)</a></p>\n<ul>\n<li><a href=\"#m-01-holypaladintokensol-uses-erc20-token-with-a-highly-unsafe-pattern\">[M-01] <code>HolyPaladinToken.sol</code> uses <code>ERC20</code> token with a highly unsafe pattern</a></li>\n<li><a href=\"#m-02-incorrect-number-of-seconds-in-one_year-variable\">[M-02] Incorrect number of seconds in <code>ONE_YEAR</code> variable</a></li>\n<li><a href=\"#m-03-users-at-unstake_period-can-assist-other-users-in-unstaking-tokens\">[M-03] Users at <code>UNSTAKE_PERIOD</code> can assist other users in unstaking tokens.</a></li>\n<li><a href=\"#m-04-cooldown-is-set-to-0-when-the-user-sends-all-tokens-to-himself\">[M-04] <code>cooldown</code> is set to 0 when the user sends all tokens to himself</a></li>\n<li><a href=\"#m-05-past-state-query-results-are-susceptible-to-manipulation-due-to-multiple-states-with-same-block-number\">[M-05] Past state query results are susceptible to manipulation due to multiple states with same block number</a></li>\n<li><a href=\"#m-06-paladinrewardreservesol-may-have-potential-bugs-if-it-uses-new-tokens-as-rewards\">[M-06] <code>PaladinRewardReserve.sol</code> may have potential bugs if it uses new tokens as rewards</a></li>\n<li><a href=\"#m-07-updating-the-state\">[M-07] Updating the state</a></li>\n<li><a href=\"#m-08-add-a-timelock-to-paladinrewardreserve-functions\">[M-08] Add a timelock to <code>PaladinRewardReserve</code> functions</a></li>\n<li><a href=\"#m-09-function-cooldown-is-not-protected-when-protocol-in-emergency-mode\">[M-09] Function <code>cooldown()</code> is not protected when protocol in emergency mode</a></li>\n<li><a href=\"#m-10-userlock-information-can-be-found-during-emergency-mode\">[M-10] <code>UserLock</code> information can be found during emergency mode</a></li>\n<li><a href=\"#m-11-emergency-mode-enabledisable-issue\">[M-11] Emergency mode enable/disable issue</a></li>\n<li><a href=\"#m-12-users-with-large-cooldowns-can-grief-other-users\">[M-12] Users with large <code>cooldown</code>s can grief other users</a></li>\n<li><a href=\"#m-13-users-can-bypass-emergency-restrictions-on-updateuserrewardstate\">[M-13] Users Can Bypass Emergency Restrictions on <code>updateUserRewardState()</code></a></li>\n<li><a href=\"#m-14-increasing-the-lock-amount-on-an-expired-lock-will-cause-users-to-miss-out-on-rewards\">[M-14] Increasing the Lock Amount on an Expired Lock Will Cause Users to Miss Out on Rewards</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#l-01-paladinrewardreserves-approvals-break-if-the-same-contract-is-in-charge-of-two-tokens-eg-a-palpool\">L-01 <code>PaladinRewardReserve</code>’s approvals break if the same contract is in charge of two tokens (e.g. a PalPool)</a></li>\n<li><a href=\"#n-01-requirerevert-statements-should-have-descriptive-reason-strings\">N-01 <code>require()</code>/<code>revert()</code> statements should have descriptive reason strings</a></li>\n<li><a href=\"#n-02-constants-should-be-defined-rather-than-using-magic-numbers\">N-02 <code>constant</code>s should be defined rather than using magic numbers</a></li>\n<li><a href=\"#n-03-the-nonreentrant-modifier-should-occur-before-all-other-modifiers\">N-03 The <code>nonReentrant</code> <code>modifier</code> should occur before all other modifiers</a></li>\n<li><a href=\"#n-04-safeapprove-is-deprecated\">N-04 <code>safeApprove()</code> is deprecated</a></li>\n<li><a href=\"#n-05-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct-where-appropriate\">N-05 Multiple <code>address</code> mappings can be combined into a single <code>mapping</code> of an <code>address</code> to a <code>struct</code>, where appropriate</a></li>\n<li><a href=\"#n-06-non-libraryinterface-files-should-use-fixed-compiler-versions-not-floating-ones\">N-06 Non-library/interface files should use fixed compiler versions, not floating ones</a></li>\n<li><a href=\"#n-07-use-the-same-solidity-version-in-all-non-libraryinterface-files\">N-07 Use the same solidity version in all non-library/interface files</a></li>\n<li><a href=\"#n-08-use-native-time-units-such-as-seconds-minutes-hours-days-weeks-and-years-rather-than-numbers-of-seconds\">N-08 Use native time units such as seconds, minutes, hours, days, weeks and years, rather than numbers of seconds</a></li>\n<li><a href=\"#n-09-typos\">N-09 Typos</a></li>\n<li><a href=\"#n-10-event-is-missing-indexed-fields\">N-10 Event is missing <code>indexed</code> fields</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#g-01-using-the-latest-code-of-openzeppelin-ownablesol-and-use-_transferownership-function-at-constructor-of-paladinrewardreservesol\">G-01 Using the latest code of openzeppelin <code>Ownable.sol</code> and use <code>_transferOwnership</code> function at constructor of <code>PaladinRewardReserve.sol</code></a></li>\n<li><a href=\"#g-02-using-the-latest-code-of-openzeppelin-ownablesol-and-use-_transferownership-function-at-constructor-of-holypaladintokensol\">G-02 Using the latest code of openzeppelin <code>Ownable.sol</code> and use <code>_transferOwnership</code> function at constructor of <code>HolyPaladinToken.sol</code></a></li>\n<li><a href=\"#g-03-usage-of-errors-can-reduce-gas-cost-and-contract-size-at-paladinrewardreservesol\">G-03 Usage of <code>Errors</code> can reduce gas cost and contract size at PaladinRewardReserve.sol</a></li>\n<li><a href=\"#g-04-no-need-to-set-false-at-emergency-variable-in-holypaladintokensol\">G-04 No need to set false at <code>emergency</code> variable in HolyPaladinToken.sol</a></li>\n<li><a href=\"#g-05-usage-of-errors-can-reduce-gas-cost-and-contract-size-at-holypaladintokensol\">G-05 Usage of <code>Errors</code> can reduce gas cost and contract size at HolyPaladinToken.sol</a></li>\n<li><a href=\"#g-06-use--0-instead-of--0-in-holypaladintokensol\">G-06 Use <code>!= 0</code> instead of <code>> 0</code> in HolyPaladinToken.sol</a></li>\n<li><a href=\"#g-07-usage-of-unchecked-can-reduce-the-gas-cost-at-claim-function-at--holypaladintokensol\">G-07 Usage of unchecked can reduce the gas cost at claim function at  HolyPaladinToken.sol</a></li>\n<li><a href=\"#g-08-the-usage-of-unchecked-in-average-function-in-mathsol-can-reduce-deployment-gas-fee-and-contract-size-of-holypaladintokensol\">G-08 The usage of unchecked in average function in Math.sol can reduce deployment gas fee and contract size of HolyPaladinToken.sol</a></li>\n<li><a href=\"#g-09-the-usage-of-unchecked-in-binary-search-can-reduce-deployment-gas-fee-and-contract-size-of-holypaladintokensol\">G-09 The usage of unchecked in binary search can reduce deployment gas fee and contract size of HolyPaladinToken.sol</a></li>\n<li><a href=\"#g-10-some-currentuserlockindex-varaible-does-not-need-to-be-defined-in-holypalatintokensol\">G-10 Some <code>currentUserLockIndex</code> varaible does not need to be defined in HolyPalatinToken.sol</a></li>\n<li><a href=\"#g-11-the-logic-to-call-emergencyblock-in-emergency-can-be-put-in-private-function\">G-11 The logic to call <code>EmergencyBlock()</code> in emergency can be put in private function</a></li>\n<li><a href=\"#g-12-not-defining-lastuserlockindex-variable-decreases-contract-size-and-gas-cost\">G-12 Not defining lastUserLockIndex variable decreases contract size and gas cost</a></li>\n<li><a href=\"#g-13-definitions-sendercooldown-and-receiverbalance-variables-are-not-necessary-at-getnewreceivercooldown-function-in-holypaladintokensol\">G-13 Definitions senderCooldown and receiverBalance variables are not necessary at getNewReceiverCooldown function in HolyPaladinToken.sol</a></li>\n<li><a href=\"#g-14-not-defining-previoustobalance-and-previousfrombalance-variables-can-reduce-gas-cost-and-contract-size\">G-14 Not defining previousToBalance and previousFromBalance variables can reduce gas cost and contract size</a></li>\n<li><a href=\"#g-15-avoiding-calling-balanceofuser-multiple-times-can-reduce-deployment-gas-cost\">G-15 Avoiding calling balanceOf(user) multiple times can reduce deployment gas cost</a></li>\n<li><a href=\"#g-16-avoid-defining-at-_getnewindex-function-in-holypaladintokensol-can-reduce-contract-size-and-gas-cost\">G-16 Avoid defining at _getNewIndex function in HolyPaladinToken.sol can reduce contract size and gas cost</a></li>\n<li><a href=\"#g-17-avoiding-defining-_currentdroppersecond-and-newindex-at-_updaterewardstate-function-in-holypaladintokensol-can-reduce-gas-cost-and-contract-size\">G-17 Avoiding defining _currentDropPerSecond and newIndex at _updateRewardState function in HolyPaladinToken.sol can reduce gas cost and contract size</a></li>\n<li><a href=\"#g-18-not-using-userlockrewardvars-struct-in-_getuseraccruedrewards-function-can-greatly-reduces-gas-cost-and-contract-size\">G-18 Not using UserLockRewardVars struct in _getUserAccruedRewards function can greatly reduces gas cost and contract size</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>",
  "md": "\n# Overview\n\n## About C4\n\nCode4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.\n\nA C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.\n\nDuring the audit contest outlined in this document, C4 conducted an analysis of the Paladin smart contract system written in Solidity. The audit contest took place between March 29—April 2 2022.\n\n## Wardens\n\n44 Wardens contributed reports to the Paladin contest:\n\n  1. Picodes\n  1. Czar102\n  1. jayjonah8\n  1. hubble (ksk2345 and shri4net)\n  1. [leastwood](https://twitter.com/liam_eastwood13)\n  1. WatchPug ([jtp](https://github.com/jack-the-pug) and [ming](https://github.com/mingwatch))\n  1. TerrierLover\n  1. reassor\n  1. IllIllI\n  1. [jah](https://twitter.com/jah_s3)\n  1. [securerodd](https://twitter.com/securerodd)\n  1. cccz\n  1. Jujic\n  1. [danb](https://twitter.com/danbinnun)\n  1. [rayn](https://twitter.com/rayn731)\n  1. [gzeon](https://twitter.com/gzeon)\n  1. 0xDjango\n  1. robee\n  1. hyh\n  1. JC\n  1. [csanuragjain](https://twitter.com/csanuragjain)\n  1. [defsec](https://twitter.com/defsec_)\n  1. [sseefried](http://seanseefried.org/blog)\n  1. [Dravee](https://twitter.com/JustDravee)\n  1. kenta\n  1. 0xkatana\n  1. hake\n  1. [pmerkleplant](https://twitter.com/merkleplant_eth)\n  1. minhquanym\n  1. [0v3rf10w](https://twitter.com/_0v3rf10w)\n  1. [Funen](https://instagram.com/vanensurya)\n  1. [teryanarmen](https://twitter.com/teryanarmenn)\n  1. 0xmint\n  1. sorrynotsorry\n  1. [Ruhum](https://twitter.com/0xruhum)\n  1. okkothejawa\n  1. saian\n  1. [Tomio](https://twitter.com/meidhiwirara)\n  1. [rfa](https://www.instagram.com/riyan_rfa/)\n  1. [antonttc](https://github.com/antoncoding)\n  1. [0xNazgul](https://twitter.com/0xNazgul)\n  1. Cityscape\n\nThis contest was judged by [0xean](https://github.com/0xean).\n\nFinal report assembled by [liveactionllama](https://twitter.com/liveactionllama).\n\n# Summary\n\nThe C4 analysis yielded an aggregated total of 16 unique vulnerabilities. Of these vulnerabilities, 2 received a risk rating in the category of HIGH severity and 14 received a risk rating in the category of MEDIUM severity.\n\nAdditionally, C4 analysis included 25 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 25 reports recommending gas optimizations.\n\nAll of the issues presented here are linked back to their original finding.\n\n# Scope\n\nThe code under review can be found within the [C4 Paladin contest repository](https://github.com/code-423n4/2022-03-paladin), and is composed of 2 smart contracts written in the Solidity programming language and includes 1,226 lines of Solidity code.\n\n# Severity Criteria\n\nC4 assesses the severity of disclosed vulnerabilities according to a methodology based on [OWASP standards](https://owasp.org/www-community/OWASP_Risk_Rating_Methodology).\n\nVulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.\n\nHigh-level considerations for vulnerabilities span the following key areas when conducting assessments:\n\n- Malicious Input Handling\n- Escalation of privileges\n- Arithmetic\n- Gas use\n\nFurther information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on [the C4 website](https://code4rena.com).\n\n# High Risk Findings (2)\n## [[H-01] `DropPerSecond` is not updated homogeneously, the rewards emission can be much higher than expected in some cases](https://github.com/code-423n4/2022-03-paladin-findings/issues/44)\n_Submitted by WatchPug, also found by Czar102_\n\n[HolyPaladinToken.sol#L715-L743](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L715-L743)<br>\n\n```solidity\nfunction _updateDropPerSecond() internal returns (uint256){\n    // If no more need for monthly updates => decrease duration is over\n    if(block.timestamp > startDropTimestamp + dropDecreaseDuration) {\n        // Set the current DropPerSecond as the end value\n        // Plus allows to be updated if the end value is later updated\n        if(currentDropPerSecond != endDropPerSecond) {\n            currentDropPerSecond = endDropPerSecond;\n            lastDropUpdate = block.timestamp;\n        }\n\n        return endDropPerSecond;\n    }\n\n    if(block.timestamp < lastDropUpdate + MONTH) return currentDropPerSecond; // Update it once a month\n\n    uint256 dropDecreasePerMonth = (startDropPerSecond - endDropPerSecond) / (dropDecreaseDuration / MONTH);\n    uint256 nbMonthEllapsed = (block.timestamp - lastDropUpdate) / MONTH;\n\n    uint256 dropPerSecondDecrease = dropDecreasePerMonth * nbMonthEllapsed;\n\n    // We calculate the new dropPerSecond value\n    // We don't want to go under the endDropPerSecond\n    uint256 newDropPerSecond = currentDropPerSecond - dropPerSecondDecrease > endDropPerSecond ? currentDropPerSecond - dropPerSecondDecrease : endDropPerSecond;\n\n    currentDropPerSecond = newDropPerSecond;\n    lastDropUpdate = block.timestamp;\n\n    return newDropPerSecond;\n}\n```\n\nWhen current time is `lastDropUpdate + (2*MONTH-1)`:\n\n`nbMonthEllapsed` will be round down to `1`, while it's actually 1.99 months passed, but because of precision loss, the smart contract will believe it's only 1 month elapsed, as a result, `DropPerSecond` will only decrease by 1 \\* `dropDecreasePerMonth`.\n\nIn another word, due to the precision loss in calculating the number of months elapsed, for each `_updateDropPerSecond()` there can be a short of up to `1 * dropDecreasePerMonth` for the decrease of emission rate.\n\nAt the very edge case, if all the updates happened just like the scenario above. by the end of the `dropDecreaseDuration`, it will drop only `12 * dropDecreasePerMonth` in total, while it's expected to be `24 * dropDecreasePerMonth`.\n\nSo only half of `(startDropPerSecond - endDropPerSecond)` is actually decreased. And the last time `updateDropPerSecond` is called, `DropPerSecond` will suddenly drop to `endDropPerSecond`.\n\n### Impact\n\nAs the `DropPerSecond` is not updated correctly, in most of the `dropDecreaseDuration`, the actual rewards emission rate is much higher than expected. As a result, the total rewards emission can be much higher than expected.\n\n### Recommended Mitigation Steps\n\nChange to:\n\n```solidity\nfunction _updateDropPerSecond() internal returns (uint256){\n    // If no more need for monthly updates => decrease duration is over\n    if(block.timestamp > startDropTimestamp + dropDecreaseDuration) {\n        // Set the current DropPerSecond as the end value\n        // Plus allows to be updated if the end value is later updated\n        if(currentDropPerSecond != endDropPerSecond) {\n            currentDropPerSecond = endDropPerSecond;\n            lastDropUpdate = block.timestamp;\n        }\n\n        return endDropPerSecond;\n    }\n\n    if(block.timestamp < lastDropUpdate + MONTH) return currentDropPerSecond; // Update it once a month\n\n    uint256 dropDecreasePerMonth = (startDropPerSecond - endDropPerSecond) / (dropDecreaseDuration / MONTH);\n    uint256 nbMonthEllapsed = UNIT * (block.timestamp - lastDropUpdate) / MONTH;\n\n    uint256 dropPerSecondDecrease = dropDecreasePerMonth * nbMonthEllapsed / UNIT;\n\n    // We calculate the new dropPerSecond value\n    // We don't want to go under the endDropPerSecond\n    uint256 newDropPerSecond = currentDropPerSecond - dropPerSecondDecrease > endDropPerSecond ? currentDropPerSecond - dropPerSecondDecrease : endDropPerSecond;\n\n    currentDropPerSecond = newDropPerSecond;\n    lastDropUpdate = block.timestamp;\n\n    return newDropPerSecond;\n}\n```\n\n**[Kogaroshi (Paladin) confirmed and commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/44#issuecomment-1086723036):**\n > Mitigation for this issue can be found here: [PaladinFinance/Paladin-Tokenomics@4d050eb](https://github.com/PaladinFinance/Paladin-Tokenomics/pull/9/commits/4d050ebcdbef0eed84b2382dce22b6888d8e7045).<br>\n> \n> Mitigation chosen is different from the Warden recommendation: since we want to keep the `dropPerSecond` to have a monthly decrease, we set the new `lastUpdate` as the previous `lastUpdate` + (`nb_of_months_since_last_update` * `month_duration`).\n\n\n\n***\n\n## [[H-02] System could be wrapped and made useless without contract whitelisting](https://github.com/code-423n4/2022-03-paladin-findings/issues/77)\n_Submitted by Picodes_\n\n[HolyPaladinToken.sol#L253](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L253)<br>\n[HolyPaladinToken.sol#L284](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L284)<br>\n[HolyPaladinToken.sol#L268](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L268)<br>\n\nAnyone could create a contract or a contract factory \"PAL Locker\" with a fonction to deposit PAL tokens through a contract, lock them and delegate the voting power to the contract owner. Then, the ownership of this contract could be sold. By doing so, locked hPAL would be made liquid and transferrable again. This would eventually break the overall system of hPAL, where the idea is that you have to lock them to make them non liquid to get a boosted voting power and reward rate.\n\nPaladin should expect this behavior to happen as we've seen it happening with veToken models and model implying locking features (see <https://lockers.stakedao.org/> and <https://www.convexfinance.com/>).\n\nThis behavior could eventually be beneficial to the original DAO (ex. <https://www.convexfinance.com/> for Curve and Frax), but the original DAO needs to at least be able to blacklist / whitelist such contracts and actors to ensure their interests are aligned with the protocol.\n\n### Proof of Concept\n\nTo make locked hPAL liquid, Alice could create a contact C. Then, she can deposit hPAL through the contract, lock them and delegate voting power to herself. She can then sell or tokenize the ownership of the contract C.\n\n### Recommended Mitigation Steps\n\nDepending on if Paladin wants to be optimistic or pessimistic, implement a whitelisting / blacklisting system for contracts.\n\nSee:\n[Curve-Dao-Contracts/VotingEscrow.vy#L185](https://github.com/curvefi/curve-dao-contracts/blob/4e428823c8ae9c0f8a669d796006fade11edb141/contracts/VotingEscrow.vy#L185)<br>\n\n[FraxFinance/veFXS_Solidity.sol.old#L370](https://github.com/FraxFinance/frax-solidity/blob/7375949a73042c1e6dd14848fc4ea1ba62e36fb5/src/hardhat/contracts/FXS/veFXS_Solidity.sol.old#L370)<br>\n\n**[Kogaroshi (Paladin) confirmed, resolved, and commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/77#issuecomment-1087503108):**\n > Changes were made to use a Whitelist similar to the veCRV & veANGLE (changes in this PR: [PaladinFinance/Paladin-Tokenomics#12](https://github.com/PaladinFinance/Paladin-Tokenomics/pull/12)).<br>\n> The checker will only block for Locking, allowing smart contracts to stake and use the basic version of hPAL without locking.\n\n\n\n***\n\n# Medium Risk Findings (15)\n## [[M-01] `HolyPaladinToken.sol` uses `ERC20` token with a highly unsafe pattern](https://github.com/code-423n4/2022-03-paladin-findings/issues/3)\n_Submitted by jayjonah8_\n\nIn `HolyPaladinToken.sol` it imports `ERC20.sol` with some changes from the original Open Zeppelin standard.  One change is that the `transferFrom()` function does not follow the Checks Effect and Interactions safety pattern to safely make external calls to other contracts. All checks should be handled first, then any effects/state updates,  followed by the external call to prevent reentrancy attacks.  Currently the `transferFrom()` function in `ERC20.sol` used by `HolyPaladinToken.sol` calls `_transfer()` first and then updates the `sender` allowance which is highly unsafe.  The openZeppelin `ER20.sol` contract which is the industry standard first updates the `sender` allowance before calling `_transfer`.  The external call should always be done last to avoid any double spending bugs or reentrancy attacks.\n\n### Proof of Concept\n\n<https://fravoll.github.io/solidity-patterns/checks_effects_interactions.html>\n\n<https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/open-zeppelin/ERC20.sol#L149>\n\nOpen Zeppelins Implementation:<br>\n<https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol>\n\n### Recommended Mitigation Steps\n\nBe sure to follow the Checks Effects and Interactions safety pattern as the `transferFrom` function is one of the most important functions in any protocol.  Consider importing the Open Zeppelin `ERC20.sol` contract code directly as it is battle tested and safe code.\n\n**[Kogaroshi (Paladin) confirmed, resolved, and commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/3#issuecomment-1084437064):**\n > ERC20.sol used was an older version from OpenZeppelin.<br>\n> Updated in the codebase via the PR: [PaladinFinance/Paladin-Tokenomics#1](https://github.com/PaladinFinance/Paladin-Tokenomics/pull/1).<br>\n> We now use the latest version of ERC20.sol that has the correct Checks Effects and Interactions safety pattern.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/3#issuecomment-1093338779):**\n > While I agree this is an issue, I think the severity has been overstated slightly.  The transferFrom() function itself does not make any external calls so there is no exposure to reentrancy issues. That being said in the future if the contract had been extended in a way that enable an external call this would prove problematic.  \n> \n> Since the sponsor has confirmed the issue _and_ this does violate well known best practices and open up the codebase to future issues, I will award the medium severity. \n\n\n\n***\n\n## [[M-02] Incorrect number of seconds in `ONE_YEAR` variable](https://github.com/code-423n4/2022-03-paladin-findings/issues/4)\n_Submitted by jayjonah8_\n\nIn `HolyPaladinToken.sol` the `ONE_YEAR` variable claims that there are `31557600` seconds in a year when this is incorrect.  The `ONE_YEAR` variable is used in the `getCurrentVotes()` function as well as the `getPastVotes()` function so it is vital that the correct time in seconds be used as it can effect users negatively.\n\n### Proof of Concept\n\n[HolyPaladinToken.sol#L25](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L25)<br>\n\n86,400 seconds in a day x 365 = 31\\_536\\_000\n\n### Recommended Mitigation Steps\n\nThe correct number of seconds in a year is 31\\_536\\_000 so the `ONE_YEAR` variable should be changed to `ONE_YEAR = 31_536_000`\n\n**[Kogaroshi (Paladin) confirmed, resolved, and commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/4#issuecomment-1084441192):**\n > An incorrect value for MONTH was used, leading to all temporal constants (YEAR, max lock time, etc ...) to be incorrect.<br>\n> All values were fixed in: [PaladinFinance/Paladin-Tokenomics#3](https://github.com/PaladinFinance/Paladin-Tokenomics/pull/3).\n\n\n\n***\n\n## [[M-03] Users at `UNSTAKE_PERIOD` can assist other users in unstaking tokens.](https://github.com/code-423n4/2022-03-paladin-findings/issues/7)\n_Submitted by cccz, also found by JC and gzeon_\n\nConsider the following scenario:\nDay 0: User A stakes 200 tokens and calls the cooldown function. At this time, user A's cooldown is Day 0.\nDay 15: User B stakes 100 tokens, but then wants to unstake tokens. So user A said that he could assist user B in unstaking tokens, and this could be done by deploying a smart contract.\nIn the smart contract deployed by user A, user B first needs to transfer 100 tokens to user A. In the \\_getNewReceiverCooldown function, \\_senderCooldown is Day 15 and receiverCooldown is Day 0, so the latest cooldown of user A is (100 \\* Day 15 + 200 \\* Day 0)/(100+200) = Day 5.\n\n        function _getNewReceiverCooldown(\n            uint256 senderCooldown,\n            uint256 amount,\n            address receiver,\n            uint256 receiverBalance\n        ) internal view returns(uint256) {\n            uint256 receiverCooldown = cooldowns[receiver];\n\n            // If receiver has no cooldown, no need to set a new one\n            if(receiverCooldown == 0) return 0;\n\n            uint256 minValidCooldown = block.timestamp - (COOLDOWN_PERIOD + UNSTAKE_PERIOD);\n\n            // If last receiver cooldown is expired, set it back to 0\n            if(receiverCooldown < minValidCooldown) return 0;\n\n            // In case the given senderCooldown is 0 (sender has no cooldown, or minting)\n            uint256 _senderCooldown = senderCooldown < minValidCooldown ? block.timestamp : senderCooldown;\n\n            // If the sender cooldown is better, we keep the receiver cooldown\n            if(_senderCooldown < receiverCooldown) return receiverCooldown;\n\n            // Default new cooldown, weighted average based on the amount and the previous balance\n            return ((amount * _senderCooldown) + (receiverBalance * receiverCooldown)) / (amount + receiverBalance);\n\n        }\n\nSince User A is still at UNSTAKE_PERIOD after receiving the tokens, User A unstakes 100 tokens and sends it to User B.\n\nAfter calculation, we found that when user A has a balance of X and is at the edge of UNSTAKE_PERIOD, user A can assist in unstaking the X/2 amount of tokens just staked.\n\n### Proof of Concept\n\n[HolyPaladinToken.sol#L1131](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1131)\n\n### Recommended Mitigation Steps\n\nAfter calculation, we found that the number of tokens that users at the edge of UNSTAKE_PERIOD can assist in unstaking conforms to the following equation\nUNSTAKE_PERIOD/COOLDOWN_PERIOD = UNSTAKE_AMOUNT/USER_BALANCE, when COOLDOWN_PERIOD remains unchanged, the smaller the UNSTAKE_PERIOD, the less tokens the user can assist in unstaking, so UNSTAKE_PERIOD can be adjusted to alleviate this situation.\n\n**[Kogaroshi (Paladin) confirmed, resolved, and commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/7#issuecomment-1084951519):**\n > Reduced the Unstake Period to 2 days to reduce the possibility of such scenario.<br>\n> [PaladinFinance/Paladin-Tokenomics#4](https://github.com/PaladinFinance/Paladin-Tokenomics/pull/4)\n\n\n\n***\n\n## [[M-04] `cooldown` is set to 0 when the user sends all tokens to himself](https://github.com/code-423n4/2022-03-paladin-findings/issues/8)\n_Submitted by cccz, also found by hyh and Czar102_\n\nIn the \\_beforeTokenTransfer function, cooldowns will be set to 0 when the user transfers all tokens to himself.<br>\nConsider the following scenario:<br>\nDay 0: The user stakes 100 tokens and calls the cooldown function.<br>\nDay 10: the user wanted to unstake the tokens, but accidentally transferred all the tokens to himself, which caused the cooldown to be set to 0 and the user could not unstake.\n\n### Proof of Concept\n\n[HolyPaladinToken.sol#L891-L905](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L891-L905)\n\n### Recommended Mitigation Steps\n\n      function _beforeTokenTransfer(\n          address from,\n          address to,\n          uint256 amount\n      ) internal virtual override {\n          if(from != address(0)) { //check must be skipped on minting\n              // Only allow the balance that is unlocked to be transfered\n              require(amount <= _availableBalanceOf(from), \"hPAL: Available balance too low\");\n          }\n\n          // Update user rewards before any change on their balance (staked and locked)\n          _updateUserRewards(from);\n\n          uint256 fromCooldown = cooldowns[from]; //If from is address 0x00...0, cooldown is always 0\n\n          if(from != to) {\n              // Update user rewards before any change on their balance (staked and locked)\n              _updateUserRewards(to);\n              // => we don't want a self-transfer to double count new claimable rewards\n              // + no need to update the cooldown on a self-transfer\n\n              uint256 previousToBalance = balanceOf(to);\n              cooldowns[to] = _getNewReceiverCooldown(fromCooldown, amount, to, previousToBalance);\n              // If from transfer all of its balance, reset the cooldown to 0\n              uint256 previousFromBalance = balanceOf(from);\n              if(previousFromBalance == amount && fromCooldown != 0) {\n                  cooldowns[from] = 0;\n              }\n          }\n      }\n\n**[Kogaroshi (Paladin) confirmed, resolved, and commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/8#issuecomment-1084439556):**\n > Issue fixed in the PR: [PaladinFinance/Paladin-Tokenomics#2](https://github.com/PaladinFinance/Paladin-Tokenomics/pull/2).<br>\n> Applying the recommended mitigation.<br>\n> An extra test for that scenario was added to the hPAL tests.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/8#issuecomment-1093324484):**\n > Based on additional information this doesn't permanently lock user funds, but it does unintentionally extend the duration of the lock.\n> \n> See [issue #88](https://github.com/code-423n4/2022-03-paladin-findings/issues/88):<br> \n> `\n> This effectively means that user funds be frozen for an additional period, which is the difference between his former cooldown and current timestamp. There is no reason for that and it will go against user’s expectations.\n> `\n> \n> Therefore, I agree this should be a medium severity issue.\n\n\n\n***\n\n## [[M-05] Past state query results are susceptible to manipulation due to multiple states with same block number](https://github.com/code-423n4/2022-03-paladin-findings/issues/20)\n_Submitted by rayn, also found by IllIllI and Czar102_\n\n[HolyPaladinToken.sol#L466](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L466)<br>\n[HolyPaladinToken.sol#L492](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L492)<br>\n[HolyPaladinToken.sol#L644](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L644)<br>\n[HolyPaladinToken.sol#L663](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L663)<br>\n[HolyPaladinToken.sol#L917](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L917)<br>\n[HolyPaladinToken.sol#L961](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L961)<br>\n[HolyPaladinToken.sol#L993](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L993)<br>\n[HolyPaladinToken.sol#L1148](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1148)<br>\n[HolyPaladinToken.sol#L1164](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1164)<br>\n[HolyPaladinToken.sol#L1184](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1184)<br>\n[HolyPaladinToken.sol#L1199](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1199)<br>\n[HolyPaladinToken.sol#L1225](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1225)<br>\n[HolyPaladinToken.sol#L1250](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1250)<br>\n[HolyPaladinToken.sol#L1260](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1260)<br>\n[HolyPaladinToken.sol#L1287](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1287)<br>\n[HolyPaladinToken.sol#L1293](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1293)<br>\n[HolyPaladinToken.sol#L1324](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1324)<br>\n[HolyPaladinToken.sol#L1352](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1352)<br>\n[HolyPaladinToken.sol#L1357](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1357)<br>\n\n4 kinds of states (`UserLock`, `TotalLock`, `Checkpoint`, `DelegateCheckpoint`) are maintained in the protocol to keep record of history. For functions that query history states, target block number is used as an index to search for the corresponding state.\n\nHowever, 3 (`DelegateCheckpoint`, `TotalLock`, `UserLocks`) out of the 4 states are allowed to have multiple entries with same `fromBlock`, resulting in a one-to-many mapping between block number and history entry. This makes queried results at best imprecise, and at worst manipulatable by malicious users to present an incorrect history.\n\n### Proof of Concept\n\nFunctions that query history states including `_getPastLock`, `getPastTotalLock`, `_getPastDelegate` perform a binary search through the array of history states to find entry matching queried block number. However, the searched arrays can contain multiple entries with the same `fromBlock`.\n\nFor example the `_lock` function pushes a new `UserLock` to `userLocks[user]` regardless of previous lock block number.\n\n        function _lock(address user, uint256 amount, uint256 duration, LockAction action) internal {\n            require(user != address(0)); //Never supposed to happen, but security check\n            require(amount != 0, \"hPAL: Null amount\");\n            uint256 userBalance = balanceOf(user);\n            require(amount <= userBalance, \"hPAL: Amount over balance\");\n            require(duration >= MIN_LOCK_DURATION, \"hPAL: Lock duration under min\");\n            require(duration <= MAX_LOCK_DURATION, \"hPAL: Lock duration over max\");\n\n            if(userLocks[user].length == 0){\n                ...\n            }\n            else {\n                // Get the current user Lock\n                uint256 currentUserLockIndex = userLocks[user].length - 1;\n                UserLock storage currentUserLock = userLocks[user][currentUserLockIndex];\n                // Calculate the end of the user current lock\n                uint256 userCurrentLockEnd = currentUserLock.startTimestamp + currentUserLock.duration;\n\n                uint256 startTimestamp = block.timestamp;\n\n                if(currentUserLock.amount == 0 || userCurrentLockEnd < block.timestamp) {\n                    // User locked, and then unlocked\n                    // or user lock expired\n\n                    userLocks[user].push(UserLock(\n                        safe128(amount),\n                        safe48(startTimestamp),\n                        safe48(duration),\n                        safe32(block.number)\n                    ));\n                }\n                else {\n                    // Update of the current Lock : increase amount or increase duration\n                    // or renew with the same parameters, but starting at the current timestamp\n                    require(amount >=  currentUserLock.amount,\"hPAL: smaller amount\");\n                    require(duration >=  currentUserLock.duration,\"hPAL: smaller duration\");\n\n                    // If the method is called with INCREASE_AMOUNT, then we don't change the startTimestamp of the Lock\n\n                    userLocks[user].push(UserLock(\n                        safe128(amount),\n                        action == LockAction.INCREASE_AMOUNT ? currentUserLock.startTimestamp : safe48(startTimestamp),\n                        safe48(duration),\n                        safe32(block.number)\n                    ));\n                    ...\n                }\n            ...\n        }\n\nThis makes the history searches imprecise at best. Additionally, if a user intends to shadow his past states from queries through public search functions, it is possible to control the number of entries precisely such that binsearch returns the entry he wants to show.\n\n### Tools Used\n\nvim, ganache-cli\n\n### Recommended Mitigation Steps\n\nAdopt the same strategy as checkpoint, and modify last entry in array instead of pushing new one if it `fromBlock == block.number`.\n\n**[Kogaroshi (Paladin) confirmed, resolved, and commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/20#issuecomment-1086661290):**\n > Changes made in the PR: [PaladinFinance/Paladin-Tokenomics#7](https://github.com/PaladinFinance/Paladin-Tokenomics/pull/7).\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/20#issuecomment-1092315248):**\n > Agree with severity assigned in this issue. Assets are not directly compromised by this vulnerability, which would be required for 3.\n\n\n\n***\n\n## [[M-06] `PaladinRewardReserve.sol` may have potential bugs if it uses new tokens as rewards](https://github.com/code-423n4/2022-03-paladin-findings/issues/26)\n_Submitted by TerrierLover_\n\n`PaladinRewardReserve.sol` may have potential bugs if it uses new tokens as rewards.\n\n### Proof of Concept\n\nCurrently, `PaladinRewardReserve.sol` has following behaviors:\n\n*   `mapping(address => bool) public approvedSpenders` does not store the info regarding which token it targets\n*   `setNewSpender`, `updateSpenderAllowance`, `removeSpender` and `transferToken` functions can set `token` arbitrarily\n\nHence, some corner cases may happen as follows:\n\n*   Use TokenA at PaladinRewardReserve.sol and do operations.\n*   Start TokenB as rewards at PaladinRewardReserve.sol.\n*   All the information stored in `approvedSpenders` was intended for TokenA. So it is possible that following corner cases happen:\n    *   `setNewSpender` function cannot set new token\n    *   If userA is already added in `approvedSpenders` for TokenA, it can call `updateSpenderAllowance`.\n\n### Recommended Mitigation Steps\n\nDo either of followings depending on the product specification:\n\n(1) If PAL token is only used and other token will never be used at `PaladinRewardReserve.sol`, stop having `address token` argument at `setNewSpender`, `updateSpenderAllowance`, `removeSpender` and `transferToken` functions. Instead, set `token` at the constructor or other ways, and limit the ability to flexibly set `token` from functions.\n\n(2) If other tokens potentially will be used at `PaladinRewardReserve.sol`, update data structure of `approvedSpenders` mapping and change the logic.\nFirstly, it should also contain the info which `token` it targets such as `mapping(address => address => bool)`.\nSecondly, it should rewrite the `require` logic at each function as follows.\n\n    require(!approvedSpenders[spender][token], \"Already Spender on the specified Token\");\n\n<!---->\n\n    require(approvedSpenders[spender][token], \"Not approved Spender on the specified Token\");\n\n**[Kogaroshi (Paladin) confirmed, resolved, and commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/26#issuecomment-1086827435):**\n > Changes made in the PR: [PaladinFinance/Paladin-Tokenomics#11](https://github.com/PaladinFinance/Paladin-Tokenomics/pull/11).\n\n\n\n***\n\n## [[M-07] Updating the state](https://github.com/code-423n4/2022-03-paladin-findings/issues/27)\n_Submitted by jah, also found by securerodd_\n\nIn the Emergency withdraw function  userCurrentBonusRatio and  durationRatio aren't update which will user clime funds with the wrong ratio.\n\n### Proof of Concept\n\n[HolyPaladinToken.sol#L1338](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1338)\n\n### Recommended Mitigation Steps\n\nSet these variables to zero in the EmergencyWithdraw function.\n\n**[Kogaroshi (Paladin) disagreed with High severity and commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/27#issuecomment-1086590462):**\n> PR with the changes: [PaladinFinance/Paladin-Tokenomics#5](https://github.com/PaladinFinance/Paladin-Tokenomics/pull/5).<br>\n> \n> Contesting the severity of the issue: even after an emergency withdraw, where the BonusRatio of the user isn't reset back to 0, users have no way to claim extra accrued rewards, as the claim method will be blocked by the Emergency state: [HolyPaladinToken.sol#L381](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L381).\n\n**[0xean (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/27#issuecomment-1094135945):**\n > Given that the contract can be moved back out of the emergency state, I don't think the sponsor's assessment of this being a low risk issue is correct. I do think due to the external circumstances required for this to be achieved that it probably best qualifies as a medium risk.\n> \n> `\n> 2 — Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.\n> `\n\n\n\n***\n\n## [[M-08] Add a timelock to `PaladinRewardReserve` functions](https://github.com/code-423n4/2022-03-paladin-findings/issues/31)\n_Submitted by Jujic, also found by danb_\n\nThe owner of PaladinRewardReserve can approve and transfer any amount of tokens with no limits on any account. This is not good for investors. To give more trust to users: these functions should be put behind a timelock.\n\n### Proof of Concept\n\n[PaladinRewardReserve.sol#L28](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L28)<br>\n\n[PaladinRewardReserve.sol#L52](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L52)<br>\n\n### Tools Used\n\nVS Code\n\n### Recommended Mitigation Steps\n\nAdd a timelock to transfer and spender approved functions.\n\n**[Kogaroshi (Paladin) acknowledged and commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/31#issuecomment-1086661744):**\n > Those 2 smart contracts will be owned by a Multisig, executing decisions based on Governance Votes in the Paladin DAO. In future evolutions of the DAO, it should have a Timelock and an on-chain Governance controlling the smart contract.\n\n\n\n***\n\n## [[M-09] Function `cooldown()` is not protected when protocol in emergency mode](https://github.com/code-423n4/2022-03-paladin-findings/issues/54)\n_Submitted by hubble_\n\n[HolyPaladinToken.sol#L228-L235](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L228-L235)<br>\n\nFunction cooldown() is not protected when protocol is in emergency mode.<br>\nIts behavior is not consistent with the other major functions defined.\n\n### Impact\n\nWhile other major functions like stake, unstake, lock, unlock, etc., of this contract is protected by checking for emergency flag and reverting,\nthis function cooldown() is not checked. The impact of this is that during emergency mode, users can set immediately the cooldown() and plan for unstaking when the emergency mode is lifted and cooldown period expires. This may not be the desirable behaviour expected by the protocol.\n\n### Proof of Concept\n\nContract Name : HolyPaladinToken.sol\nFunction cooldown()\n\n### Recommended Mitigation Steps\n\nAdd checking for emergency mode for this function also.\n\n    if(emergency) revert EmergencyBlock();\n\n**[Kogaroshi (Paladin) confirmed, resolved, and commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/54#issuecomment-1086726017):**\n > Changes made in: [PaladinFinance/Paladin-Tokenomics#10](https://github.com/PaladinFinance/Paladin-Tokenomics/pull/10).\n\n\n\n***\n\n## [[M-10] `UserLock` information can be found during emergency mode](https://github.com/code-423n4/2022-03-paladin-findings/issues/59)\n_Submitted by hubble_\n\n[HolyPaladinToken.sol#L446-L468](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L446-L468)<br>\n\nWhen the contract is in blocked state (emergency mode), the protocol wants to return an empty UserLock info, on calling the function getUserLock.\nHowever, there is another way, by which the users can find the same information.\n\nThe below function is not protected when in emergency mode, and users can use this alternatively.\nLine#466 function getUserPastLock(address user, uint256 blockNumber)\n\n### Impact\n\nThere is no loss of funds, however the intention to block information (return empty lock info) is defeated, because not all functions are protected.<br>\nThere is inconsistency in implementing the emergency mode check.\n\n### Proof of Concept\n\nContract Name : HolyPaladinToken.sol<br>\nFunctions getUserLock and getUserPastLock\n\n### Recommended Mitigation Steps\n\nAdd checking for emergency mode for this function getUserPastLock.\n\n    if(emergency) revert EmergencyBlock();\n\nAdditional user access check can be added, so that the function returns correct value when the caller(msg.sender) is admin or owner.\n\n**[Kogaroshi (Paladin) confirmed, resolved, and commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/59#issuecomment-1087535469):**\n > Instead of reverting the call, we return an empty Lock (as for `getUserLock()`).<br>\n> Changes in the PR: [PaladinFinance/Paladin-Tokenomics#13](https://github.com/PaladinFinance/Paladin-Tokenomics/pull/13)<br>\n\n\n\n***\n\n## [[M-11] Emergency mode enable/disable issue](https://github.com/code-423n4/2022-03-paladin-findings/issues/64)\n_Submitted by reassor_\n\nEnabling emergency mode should be one way process that sets contract(s) in emergency mode. It should be not possible to revert that process, otherwise it puts owner of the contract(s) in very privileged position. Owner can trigger emergency mode, perform emergency withdrawal operations without any restrictions and then disable emergency mode.\n\n### Proof of Concept\n\n[HolyPaladinToken.sol#L1425](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1425)\n\n### Recommended Mitigation Steps\n\nIt is recommended to remove `bool trigger` parameter from `triggerEmergencyWithdraw` function and set `emergency` to `true` after successfully executing function.\n\n**[Kogaroshi (Paladin) acknowledged and commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/64#issuecomment-1086848734):**\n > This Issue is acknowledged. The current emergency system will not be updated.<br>\n> During deployment, the admin of the contract will be set to be the Paladin DAO multisig, and the Governance will decide on admin decision for this contract. Yet we don't want the emergency system to totally kill the contract, but to allow users to exit if there is an issue that can be remediated.\n> \n> As much as any version of this contract that will be deployed as a single signer being admin of this system could present the risk of the presented scenario, in our case we use the layer that is the multisig to prevent this type of abuse.\n\n\n\n***\n\n## [[M-12] Users with large `cooldown`s can grief other users](https://github.com/code-423n4/2022-03-paladin-findings/issues/69)\n_Submitted by IllIllI, also found by 0xDjango and csanuragjain_\n\nIf an account has a large cooldown, that account can grief other accounts that are waiting for their own cooldowns, by sending small amounts to them.\n\n### Proof of Concept\n\nEvery transfer to an account increases the cooldown\n\n```solidity\n    /** @dev Hook called before any transfer */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override {\n        if(from != address(0)) { //check must be skipped on minting\n            // Only allow the balance that is unlocked to be transfered\n            require(amount <= _availableBalanceOf(from), \"hPAL: Available balance too low\");\n        }\n\n        // Update user rewards before any change on their balance (staked and locked)\n        _updateUserRewards(from);\n\n        uint256 fromCooldown = cooldowns[from]; //If from is address 0x00...0, cooldown is always 0 \n\n        if(from != to) {\n            // Update user rewards before any change on their balance (staked and locked)\n            _updateUserRewards(to);\n            // => we don't want a self-transfer to double count new claimable rewards\n            // + no need to update the cooldown on a self-transfer\n\n            uint256 previousToBalance = balanceOf(to);\n            cooldowns[to] = _getNewReceiverCooldown(fromCooldown, amount, to, previousToBalance);\n        }\n```\n\n[HolyPaladinToken.sol#L875-L899](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L875-L899)<br>\n\nThe amount of the increase is proportional to the sender's cooldown:\n\n```solidity\n        // Default new cooldown, weighted average based on the amount and the previous balance\n        return ((amount * _senderCooldown) + (receiverBalance * receiverCooldown)) / (amount + receiverBalance);\n```\n\n[HolyPaladinToken.sol#L1130-L1131](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1130-L1131)<br>\n\n### Recommended Mitigation Steps\n\nOnly allow a total of one cooldown increase when the sender is not the recipient.\n\n**[Kogaroshi (Paladin) disputed and commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/69#issuecomment-1086789570):**\n > As explained in the documentation & the comments for this method, this is required to prevent users to game the system and unstake by skipping the cooldown period.<br>\n> As stated in another Issue of the same kind, this type of behavior, to have an impact on another user cooldown, would require to send an amount of token consequent compared to the receiver balance, acting as a \"financial safeguard\" against this type of scenario being used frequently.\n> \n> For another example of this logic, see the stkAAVE system, using the same logic and the same cooldown imapct calculation on transfers.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/69#issuecomment-1094992936):**\n > `\n> 2 — Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.\n> `\n> \n> I am going to side with the warden here. I do see the sponsors argument that this attack is expensive to execute, but is certainly feasible. I think this qualifies as a `hypothetical attack path with stated assumptions, but external requirements`.  The external requirements being someone with enough malice to waste their own money to do so.\n> \n> While there may not be an easy solution to solve this, it's still a valid risk to raise and for the sponsors to (potentially) disclose to users if there is in fact no way to mitigate it without undesired side effects.\n\n\n\n***\n\n## [[M-13] Users Can Bypass Emergency Restrictions on `updateUserRewardState()`](https://github.com/code-423n4/2022-03-paladin-findings/issues/94)\n_Submitted by leastwood_\n\n[HolyPaladinToken.sol#L1338-L1378](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1338-L1378)<br>\n[HolyPaladinToken.sol#L876-L906](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L876-L906)\n\nThe `emergencyWithdraw()` function intends to withdraw their tokens regardless if they are locked up for any duration. This emergency must be triggered by the owner of the contract by calling `triggerEmergencyWithdraw()`. A number of functions will revert when the protocol is in an emergency state, including all stake, lock, unlock and kick actions and the updating of a user's rewards. However, a user could bypass the restriction on `_updateUserRewards()` by transferring a small amount of unlocked tokens to their account. `_beforeTokenTransfer()` will call `_updateUserRewards()` on the `from` and `to` accounts. As a result, users can continue to accrue rewards while the protocol is in an emergency state and it makes sense for users to delay their emergency withdraw as they will be able to claim a higher proportion of the allocated rewards.\n\n### Recommended Mitigation Steps\n\nConsider adding a check for the boolean `emergency` value in `_beforeTokenTransfer()` to not call `_updateUserRewards` on any account if this value is set. Alternatively, a check could be added into the `_updateUserRewards()` function to return if `emergency` is true.\n\n**[Kogaroshi (Paladin) confirmed, resolved, and commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/94#issuecomment-1088380966):**\n > Changes made in the commit: [PaladinFinance/Paladin-Tokenomics@ce9a4e2](https://github.com/PaladinFinance/Paladin-Tokenomics/pull/6/commits/ce9a4e25502dd13fee015800f0e538c1be5612f9).<br>\n> (made in this PR so we can use Custom Errors directly)\n\n\n\n***\n\n## [[M-14] Increasing the Lock Amount on an Expired Lock Will Cause Users to Miss Out on Rewards](https://github.com/code-423n4/2022-03-paladin-findings/issues/95)\n_Submitted by leastwood_\n\n[HolyPaladinToken.sol#L284-L294](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L284-L294)<br>\n[HolyPaladinToken.sol#L1137-L1233](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/HolyPaladinToken.sol#L1137-L1233)\n\nPaladin protocol allows users to increase the amount or duration of their lock while it is stil active. Increasing the amount of an active lock should only increase the total locked amount and it shouldn't make any changes to the associated bonus ratios as the duration remains unchanged.\n\nHowever, if a user increases the lock amount on an expired lock, a new lock will be created with the duration of the previous lock and the provided non-zero amount. Because the `action != LockAction.INCREASE_AMOUNT` check later on in the function does not hold true, `userCurrentBonusRatio` will contain the last updated value from the previous lock. As a result, the user will not receive any rewards for their active lock and they will need to increase the duration of the lock to fix lock's bonus ratio.\n\n### Recommended Mitigation Steps\n\nConsider preventing users from increasing the amount on an expired lock. This should help to mitigate this issue.\n\n**[Kogaroshi (Paladin) confirmed, resolved, and commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/95#issuecomment-1088396419):**\n > Changes made in this commit: [PaladinFinance/Paladin-Tokenomics@b9f7ece](https://github.com/PaladinFinance/Paladin-Tokenomics/pull/6/commits/b9f7ece48abaf306b81a94891807de18992d516c).<br>\n> (made in the PR to use the Custom Errors directly)\n> + added extra tests to make sure this behavior is respected\n\n\n\n***\n\n# Low Risk and Non-Critical Issues\n\nFor this contest, 25 reports were submitted by wardens detailing low risk and non-critical issues. The [report highlighted below](https://github.com/code-423n4/2022-03-paladin-findings/issues/72) by **IllIllI** received the top score from the judge.\n\n*The following wardens also submitted reports: [reassor](https://github.com/code-423n4/2022-03-paladin-findings/issues/66), [robee](https://github.com/code-423n4/2022-03-paladin-findings/issues/1), [sseefried](https://github.com/code-423n4/2022-03-paladin-findings/issues/80), [TerrierLover](https://github.com/code-423n4/2022-03-paladin-findings/issues/29), [defsec](https://github.com/code-423n4/2022-03-paladin-findings/issues/52), [rayn](https://github.com/code-423n4/2022-03-paladin-findings/issues/22), [kenta](https://github.com/code-423n4/2022-03-paladin-findings/issues/92), [hake](https://github.com/code-423n4/2022-03-paladin-findings/issues/78), [Czar102](https://github.com/code-423n4/2022-03-paladin-findings/issues/90), [Dravee](https://github.com/code-423n4/2022-03-paladin-findings/issues/41), [sorrynotsorry](https://github.com/code-423n4/2022-03-paladin-findings/issues/55), [pmerkleplant](https://github.com/code-423n4/2022-03-paladin-findings/issues/32), [gzeon](https://github.com/code-423n4/2022-03-paladin-findings/issues/60), [0xDjango](https://github.com/code-423n4/2022-03-paladin-findings/issues/70), [Ruhum](https://github.com/code-423n4/2022-03-paladin-findings/issues/15), [0v3rf10w](https://github.com/code-423n4/2022-03-paladin-findings/issues/12), [minhquanym](https://github.com/code-423n4/2022-03-paladin-findings/issues/18), [teryanarmen](https://github.com/code-423n4/2022-03-paladin-findings/issues/36), [jah](https://github.com/code-423n4/2022-03-paladin-findings/issues/24), [Funen](https://github.com/code-423n4/2022-03-paladin-findings/issues/51), [0xkatana](https://github.com/code-423n4/2022-03-paladin-findings/issues/62), [hyh](https://github.com/code-423n4/2022-03-paladin-findings/issues/81), [okkothejawa](https://github.com/code-423n4/2022-03-paladin-findings/issues/19), and [0xmint](https://github.com/code-423n4/2022-03-paladin-findings/issues/75).*\n\n## [L-01] `PaladinRewardReserve`'s approvals break if the same contract is in charge of two tokens (e.g. a [PalPool](https://doc.paladin.vote/paladin-protocol/palpool))\n\nThe `approvedSpenders` mapping only takes in a spender, rather than both a spender and a token. Approval for one token means approval for all tokens the account controls. Removal for one means removal for all.\n\n1.  File: contracts/PaladinRewardReserve.sol (lines [28-31](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L28-L31))\n\n```solidity\n    function setNewSpender(address token, address spender, uint256 amount) external onlyOwner {\n        require(!approvedSpenders[spender], \"Already Spender\");\n        approvedSpenders[spender] = true;\n        IERC20(token).safeApprove(spender, amount);\n```\n\n2.  File: contracts/PaladinRewardReserve.sol (lines [36-37](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L36-L37))\n\n```solidity\n    function updateSpenderAllowance(address token, address spender, uint256 amount) external onlyOwner {\n        require(approvedSpenders[spender], \"Not approved Spender\");\n```\n\n3.  File: contracts/PaladinRewardReserve.sol (lines [44-46](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L44-L46))\n\n```solidity\n    function removeSpender(address token, address spender) external onlyOwner {\n        require(approvedSpenders[spender], \"Not approved Spender\");\n        approvedSpenders[spender] = false;\n```\n\n## [N-01] `require()`/`revert()` statements should have descriptive reason strings\n\n1.  File: contracts/HolyPaladinToken.sol (line [182](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L182))\n\n```solidity\n        require(palToken != address(0));\n```\n\n2.  File: contracts/HolyPaladinToken.sol (line [183](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L183))\n\n```solidity\n        require(_admin != address(0));\n```\n\n3.  File: contracts/HolyPaladinToken.sol (line [1138](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1138))\n\n```solidity\n        require(user != address(0)); //Never supposed to happen, but security check\n```\n\n4.  File: contracts/HolyPaladinToken.sol (line [1236](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1236))\n\n```solidity\n        require(user != address(0)); //Never supposed to happen, but security check\n```\n\n## [N-02] `constant`s should be defined rather than using magic numbers\n\n1.  File: contracts/HolyPaladinToken.sol (line [1417](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1417))\n\n```solidity\n        if(newKickRatioPerWeek == 0 || newKickRatioPerWeek > 5000) revert IncorrectParameters();\n```\n\n## [N-03] The `nonReentrant` `modifier` should occur before all other modifiers\n\nThis is a best-practice to protect against reentrancy in other modifiers\n\n1.  File: contracts/PaladinRewardReserve.sol (line [52](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L52))\n\n```solidity\n    function transferToken(address token, address receiver, uint256 amount) external onlyOwner nonReentrant {\n```\n\n## [N-04] `safeApprove()` is deprecated\n\n[Deprecated](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/bfff03c0d2a59bcd8e2ead1da9aed9edf0080d05/contracts/token/ERC20/utils/SafeERC20.sol#L38-L45) in favor of `safeIncreaseAllowance()` and `safeDecreaseAllowance()`\n\n1.  File: contracts/PaladinRewardReserve.sol (line [31](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L31))\n\n```solidity\n        IERC20(token).safeApprove(spender, amount);\n```\n\n2.  File: contracts/PaladinRewardReserve.sol (line [38](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L38))\n\n```solidity\n        IERC20(token).safeApprove(spender, 0);\n```\n\n3.  File: contracts/PaladinRewardReserve.sol (line [39](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L39))\n\n```solidity\n        IERC20(token).safeApprove(spender, amount);\n```\n\n4.  File: contracts/PaladinRewardReserve.sol (line [47](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L47))\n\n```solidity\n        IERC20(token).safeApprove(spender, 0);\n```\n\n## [N-05] Multiple `address` mappings can be combined into a single `mapping` of an `address` to a `struct`, where appropriate\n\n1.  File: contracts/HolyPaladinToken.sol (lines [88-94](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L88-L94))\n\n```solidity\n    mapping(address => address) public delegates;\n\n    /** @notice List of Vote checkpoints for each user  */\n    mapping(address => Checkpoint[]) public checkpoints;\n\n    /** @notice List of Delegate checkpoints for each user  */\n    mapping(address => DelegateCheckpoint[]) public delegateCheckpoints;\n```\n\n2.  File: contracts/HolyPaladinToken.sol (lines [127-131](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L127-L131))\n\n```solidity\n    mapping(address => uint256) public userRewardIndex;\n    /** @notice Current amount of rewards claimable for the user  */\n    mapping(address => uint256) public claimableRewards;\n    /** @notice Timestamp of last update for user rewards  */\n    mapping(address => uint256) public rewardsLastUpdate;\n```\n\n3.  File: contracts/HolyPaladinToken.sol (lines [141-143](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L141-L143))\n\n```solidity\n    mapping(address => uint256) public userCurrentBonusRatio;\n    /** @notice Value by which user Bonus Ratio decrease each second  */\n    mapping(address => uint256) public userBonusRatioDecrease;\n```\n\n## [N-06] Non-library/interface files should use fixed compiler versions, not floating ones\n\n1.  File: contracts/HolyPaladinToken.sol (line [2](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L2))\n\n```solidity\npragma solidity ^0.8.10;\n```\n\n2.  File: contracts/PaladinRewardReserve.sol (line [2](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L2))\n\n```solidity\npragma solidity ^0.8.4;\n```\n\n## [N-07] Use the same solidity version in all non-library/interface files\n\n1.  File: contracts/HolyPaladinToken.sol (line [2](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L2))\n\n```solidity\npragma solidity ^0.8.10;\n```\n\n2.  File: contracts/PaladinRewardReserve.sol (line [2](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L2))\n\n```solidity\npragma solidity ^0.8.4;\n```\n\n## [N-08] Use native time units such as seconds, minutes, hours, days, weeks and years, rather than numbers of seconds\n\n1.  File: contracts/HolyPaladinToken.sol (lines [17-39](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L17-L39))\n\n```solidity\n    uint256 public constant WEEK = 604800;\n    /** @notice Seconds in a Month */\n    uint256 public constant MONTH = 2629800;\n    /** @notice 1e18 scale */\n    uint256 public constant UNIT = 1e18;\n    /** @notice Max BPS value (100%) */\n    uint256 public constant MAX_BPS = 10000;\n    /** @notice Seconds in a Year */\n    uint256 public constant ONE_YEAR = 31557600;\n\n    /** @notice  Period to wait before unstaking tokens  */\n    uint256 public constant COOLDOWN_PERIOD = 864000; // 10 days\n    /** @notice  Duration of the unstaking period\n    After that period, unstaking cooldown is expired  */\n    uint256 public constant UNSTAKE_PERIOD = 432000; // 5 days\n\n    /** @notice Period to unlock/re-lock tokens without possibility of punishement   */\n    uint256 public constant UNLOCK_DELAY = 1209600; // 2 weeks\n\n    /** @notice Minimum duration of a Lock  */\n    uint256 public constant MIN_LOCK_DURATION = 7889400; // 3 months\n    /** @notice Maximum duration of a Lock  */\n    uint256 public constant MAX_LOCK_DURATION = 63115200; // 2 years\n```\n\n## [N-09] Typos\n\n1.  File: contracts/HolyPaladinToken.sol (line [33](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L33))\n\n```solidity\n    /** @notice Period to unlock/re-lock tokens without possibility of punishement   */\n```\n\npunishement\n\n2.  File: contracts/HolyPaladinToken.sol (line [59](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L59))\n\n```solidity\n    /** @notice Struct trancking the total amount locked  */\n```\n\ntrancking\n\n3.  File: contracts/HolyPaladinToken.sol (line [110](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L110))\n\n```solidity\n    /** @notice Timstamp of last update for global reward index  */\n```\n\nTimstamp\n\n4.  File: contracts/HolyPaladinToken.sol (line [113](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L113))\n\n```solidity\n    /** @notice Amount of rewards distriubted per second at the start  */\n```\n\ndistriubted\n\n5.  File: contracts/HolyPaladinToken.sol (line [239](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L239))\n\n```solidity\n     * @param amount amount ot withdraw\n```\n\not\n\n6.  File: contracts/HolyPaladinToken.sol (line [258](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L258))\n\n```solidity\n            // If the user does not deelegate currently, automatically self-delegate\n```\n\ndeelegate\n\n7.  File: contracts/HolyPaladinToken.sol (line [421](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L421))\n\n```solidity\n     * @param receiver address fo the receiver\n```\n\nfo\n\n8.  File: contracts/HolyPaladinToken.sol (line [706](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L706))\n\n```solidity\n    // Find the user available balance (staked - locked) => the balance that can be transfered\n```\n\ntransfered\n\n9.  File: contracts/HolyPaladinToken.sol (line [802](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L802))\n\n```solidity\n                // (using avaialable balance to count the locked balance with the multiplier later in this function)\n```\n\navaialable\n\n10. File: contracts/HolyPaladinToken.sol (line [840](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L840))\n\n```solidity\n                            // a ratio based on the rpevious one and the newly calculated one\n```\n\nrpevious\n\n11. File: contracts/HolyPaladinToken.sol (line [1323](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1323))\n\n```solidity\n        // update the the Delegate chekpoint for the delegatee\n```\n\nchekpoint\n\n12. File: contracts/PaladinRewardReserve.sol (line [19](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L19))\n\n```solidity\n    /** @notice Emitted when the allowance of a spander is updated */\n```\n\nspander\n\n## [N-10] Event is missing `indexed` fields\n\nEach `event` should use three `indexed` fields if there are three or more fields\n\n1.  File: contracts/HolyPaladinToken.sol (line [151](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L151))\n\n```solidity\n    event Stake(address indexed user, uint256 amount);\n```\n\n2.  File: contracts/HolyPaladinToken.sol (line [153](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L153))\n\n```solidity\n    event Unstake(address indexed user, uint256 amount);\n```\n\n3.  File: contracts/HolyPaladinToken.sol (line [159](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L159))\n\n```solidity\n    event Unlock(address indexed user, uint256 amount, uint256 totalLocked);\n```\n\n4.  File: contracts/HolyPaladinToken.sol (line [161](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L161))\n\n```solidity\n    event Kick(address indexed user, address indexed kicker, uint256 amount, uint256 penalty, uint256 totalLocked);\n```\n\n5.  File: contracts/HolyPaladinToken.sol (line [163](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L163))\n\n```solidity\n    event ClaimRewards(address indexed user, uint256 amount);\n```\n\n6.  File: contracts/HolyPaladinToken.sol (line [167](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L167))\n\n```solidity\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n```\n\n7.  File: contracts/HolyPaladinToken.sol (line [169](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L169))\n\n```solidity\n    event EmergencyUnstake(address indexed user, uint256 amount);\n```\n\n8.  File: contracts/PaladinRewardReserve.sol (line [18](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L18))\n\n```solidity\n    event NewSpender(address indexed token, address indexed spender, uint256 amount);\n```\n\n9.  File: contracts/PaladinRewardReserve.sol (line [20](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L20))\n\n```solidity\n    event UpdateSpender(address indexed token, address indexed spender, uint256 amount);\n```\n\n\n\n***\n\n# Gas Optimizations\n\nFor this contest, 25 reports were submitted by wardens detailing gas optimizations. The [report highlighted below](https://github.com/code-423n4/2022-03-paladin-findings/issues/28) by **TerrierLover** received the top score from the judge.\n\n*The following wardens also submitted reports: [robee](https://github.com/code-423n4/2022-03-paladin-findings/issues/2), [IllIllI](https://github.com/code-423n4/2022-03-paladin-findings/issues/73), [Dravee](https://github.com/code-423n4/2022-03-paladin-findings/issues/5), [defsec](https://github.com/code-423n4/2022-03-paladin-findings/issues/48), [0xkatana](https://github.com/code-423n4/2022-03-paladin-findings/issues/61), [saian](https://github.com/code-423n4/2022-03-paladin-findings/issues/40), [Tomio](https://github.com/code-423n4/2022-03-paladin-findings/issues/68), [Czar102](https://github.com/code-423n4/2022-03-paladin-findings/issues/82), [rfa](https://github.com/code-423n4/2022-03-paladin-findings/issues/93), [securerodd](https://github.com/code-423n4/2022-03-paladin-findings/issues/13), [gzeon](https://github.com/code-423n4/2022-03-paladin-findings/issues/58), [kenta](https://github.com/code-423n4/2022-03-paladin-findings/issues/91), [hake](https://github.com/code-423n4/2022-03-paladin-findings/issues/79), [antonttc](https://github.com/code-423n4/2022-03-paladin-findings/issues/9), [Funen](https://github.com/code-423n4/2022-03-paladin-findings/issues/50), [minhquanym](https://github.com/code-423n4/2022-03-paladin-findings/issues/17), [0v3rf10w](https://github.com/code-423n4/2022-03-paladin-findings/issues/10), [0xNazgul](https://github.com/code-423n4/2022-03-paladin-findings/issues/49), [pmerkleplant](https://github.com/code-423n4/2022-03-paladin-findings/issues/34), [Cityscape](https://github.com/code-423n4/2022-03-paladin-findings/issues/16), [rayn](https://github.com/code-423n4/2022-03-paladin-findings/issues/23), [teryanarmen](https://github.com/code-423n4/2022-03-paladin-findings/issues/85), [0xmint](https://github.com/code-423n4/2022-03-paladin-findings/issues/76), and [0xDjango](https://github.com/code-423n4/2022-03-paladin-findings/issues/39).*\n\n## [G-01] Using the latest code of openzeppelin `Ownable.sol` and use `_transferOwnership` function at constructor of `PaladinRewardReserve.sol`\n\n### Target codebase\n\nCurrently, it uses `transferOwnership` function at the constructor of `PaladinRewardReserve.sol`.\n\n    constructor(address _admin) {\n        transferOwnership(_admin);\n    }\n\n[PaladinRewardReserve.sol#L25](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L25)<br>\n\n### Potential improvements\n\nWith following steps, it can reduce the deployment gas cost.\n\nStep1: Use the latest [Ownable.sol](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/2a4ca654046e65553af89355e24785e50735a92c/contracts/access/Ownable.sol)<br>\n\nStep2: `_transferOwnership` internal function instead of `transferOwnership` function in `PaladinRewardReserve.sol`\n\n### Deployment Gas change\n\n| Contract             | Before | After  | Change |\n| -------------------- | ------ | ------ | ------ |\n| PaladinRewardReserve | 752599 | 749055 | -3544  |\n\n***\n\n## [G-02] Using the latest code of openzeppelin `Ownable.sol` and use `_transferOwnership` function at constructor of `HolyPaladinToken.sol`\n\n### Target codebase\n\n[HolyPaladinToken.sol#L187](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L187)<br>\n\nCurrently, it uses `transferOwnership` function at the constructor of `HolyPaladinToken.sol`.\n\n    constructor(\n        address palToken,\n        address _admin,\n        address _rewardsVault,\n        uint256 _startDropPerSecond,\n        uint256 _endDropPerSecond,\n        uint256 _dropDecreaseDuration,\n        uint256 _baseLockBonusRatio,\n        uint256 _minLockBonusRatio,\n        uint256 _maxLockBonusRatio\n    ){\n        ...\n        transferOwnership(_admin);\n    }\n\n### Potential improvements\n\nWith following steps, it can reduce the deployment gas cost.\n\nStep1: Use the latest [Ownable.sol](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/2a4ca654046e65553af89355e24785e50735a92c/contracts/access/Ownable.sol)<br>\n\nStep2: `_transferOwnership` internal function instead of `transferOwnership` function in `HolyPaladinToken.sol`\n\n### Deployment Gas change\n\n| Contract             | Before | After  | Change |\n| -------------------- | ------ | ------ | ------ |\n| PaladinRewardReserve | 752599 | 749055 | -3544  |\n\n***\n\n## [G-03] Usage of `Errors` can reduce gas cost and contract size at PaladinRewardReserve.sol\n\n### Target codebase\n\n[PaladinRewardReserve.sol#L29](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L29)<br>\n\n[PaladinRewardReserve.sol#L37](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L37)<br>\n\n[PaladinRewardReserve.sol#L45](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/PaladinRewardReserve.sol#L45)<br>\n\nIt uses `require` but using [`Errors`](https://docs.soliditylang.org/en/v0.8.13/contracts.html?highlight=error#errors-and-the-revert-statement) in solidity can reduce the deployment gas cost.\n\n### Potential improvements\n\n    // Define error \n    error AlreadySpender();\n    error NotApprovedSpender();\n\n    // Update the logic accordingly\n    if (approvedSpenders[spender]) {\n        revert AlreadySpender();\n    }\n\n    if (!approvedSpenders[spender]) {\n        revert NotApprovedSpender();\n    }\n\n### Deployment Gas change\n\n| Contract             | Before | After  | Change |\n| -------------------- | ------ | ------ | ------ |\n| PaladinRewardReserve | 752599 | 729041 | -23558 |\n\n***\n\n## [G-04] No need to set false at `emergency` variable in HolyPaladinToken.sol\n\n### Target codebase\n\n[HolyPaladinToken.sol#L103](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L103)<br>\n\n### Potential improvements\n\nThe default value of bool is false. So there is no need to set false at `emergency` variable.\n\n    bool public emergency;\n\n### Deployment Gas change\n\n| Contract         | Before  | After   | Change |\n| ---------------- | ------- | ------- | ------ |\n| HolyPaladinToken | 5505231 | 5502829 | -2402  |\n\n***\n\n## [G-05] Usage of `Errors` can reduce gas cost and contract size at HolyPaladinToken.sol\n\n### Target codebase\n\nWhere it uses `require` in [`HolyPaladinToken.sol`](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol).<br>\n\nThere are 39 callers of `require`.\n\n### Potential improvements\n\nUse `Errors` instead of `require`. [(Errors and the Revert Statement)](https://docs.soliditylang.org/en/v0.8.13/contracts.html?highlight=error#errors-and-the-revert-statement).<br>\n\nThe gas and size improvements after using `Errors` instead of `require` with \"hPAL: No Lock\" is shown below:\n\n    // Before change\n    require(..., \"hPAL: No Lock\");\n\n    // After change\n    if (...) revert NoLock();\n\nThere are 8 callers of `require(..., \"hPAL: No Lock\")`.<br>\n[HolyPaladinToken.sol#L270](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L270)<br>\n[HolyPaladinToken.sol#L286](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L286)<br>\n[HolyPaladinToken.sol#L301](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L301)<br>\n[HolyPaladinToken.sol#L348](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L348)<br>\n[HolyPaladinToken.sol#L1237](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1237)<br>\n[HolyPaladinToken.sol#L1246](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1246)<br>\n[HolyPaladinToken.sol#L1272](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1272)<br>\n[HolyPaladinToken.sol#L1281](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1281)<br>\n\n###   Deployment Gas change\n\n| Contract         | Before  | After   | Change |\n| ---------------- | ------- | ------- | ------ |\n| HolyPaladinToken | 5505231 | 5498562 | -6669  |\n\n###   Contract size change\n\n| Contract         | Before | After  | Change(KB) |\n| ---------------- | ------ | ------ | ---------- |\n| HolyPaladinToken | 24.018 | 23.987 | -0.031     |\n\nOnly converting the above mentioned 8 callers has -6669 deployment gas cost reduction and -0.031 size reduction. There are 31 callers of `require` in HolyPaladinToken.sol, using `Errors` instead of `require` may potentially reduce many gas costs and sizes.\n\n***\n\n## [G-06] Use `!= 0` instead of `> 0` in HolyPaladinToken.sol\n\n### Target codebase\n\n[HolyPaladinToken.sol#L229](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L229)<br>\n[HolyPaladinToken.sol#L385](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L385)<br>\n[HolyPaladinToken.sol#L758](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L758)<br>\n[HolyPaladinToken.sol#L800](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L800)<br>\n[HolyPaladinToken.sol#L809](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L809)<br>\n[HolyPaladinToken.sol#L819](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L819)<br>\n[HolyPaladinToken.sol#L822](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L822)<br>\n[HolyPaladinToken.sol#L1026](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1026)<br>\n[HolyPaladinToken.sol#L1051](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1051)<br>\n[HolyPaladinToken.sol#L1062](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1062)<br>\n[HolyPaladinToken.sol#L1078](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1078)<br>\n[HolyPaladinToken.sol#L1237](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1237)<br>\n[HolyPaladinToken.sol#L1246](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1246)<br>\n[HolyPaladinToken.sol#L1272](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1272)<br>\n[HolyPaladinToken.sol#L1281](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1281)<br>\n[HolyPaladinToken.sol#L1342](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1342)<br>\n\n### Potential improvements\n\nUse `!= 0` instead of `> 0` at the above mentioned codes. The variable is uint, so it will not be below 0 so it can just check `!= 0`.\n\n    require(balanceOf(msg.sender) != 0, \"hPAL: No balance\");\n\n### Methods Gas change\n\nFollowing methods in HolyPaladinToken.sol can reduce gas (from 5 to 20) by the above mentioned changes.\n\n*   claim function\n*   cooldown function\n*   emergencyWithdraw function\n*   increaseLock function\n*   increaseLockDuration function\n*   kick function\n*   lock function\n*   stake function\n*   stakeAndIncreaseLock function\n*   stakeAndLock function\n*   transfer function\n*   transferFrom function\n*   unlock function\n*   unstake function\n*   updateRewardState function\n*   updateUserRewardState function\n\n### Deployment Gas change\n\n| Contract         | Before  | After   | Change |\n| ---------------- | ------- | ------- | ------ |\n| HolyPaladinToken | 5505231 | 5501226 | -4005  |\n\n***\n\n## [G-07] Usage of unchecked can reduce the gas cost at claim function at  HolyPaladinToken.sol\n\n### Target codebase\n\n[HolyPaladinToken.sol#L392](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L392)<br>\n\n    // Cannot claim more than accrued rewards, but we can use a higher amount to claim all the rewards\n    uint256 claimAmount = amount < claimableRewards[msg.sender] ? amount : claimableRewards[msg.sender];\n\n    // remove the claimed amount from the claimable mapping for the user, \n    // and transfer the PAL from the rewardsVault to the user\n    claimableRewards[msg.sender] -= claimAmount;\n\n`claimAmount` will not be more than `claimableRewards[msg.sender]`. Therefore, `claimableRewards[msg.sender] -= claimAmount` can be wrapped by unchecked.\n\n### Potential improvements\n\nWrap `claimableRewards[msg.sender] -= claimAmount` with unchecked.\n\n    // Cannot claim more than accrued rewards, but we can use a higher amount to claim all the rewards\n    uint256 claimAmount = amount < claimableRewards[msg.sender] ? amount : claimableRewards[msg.sender];\n\n    // remove the claimed amount from the claimable mapping for the user, \n    // and transfer the PAL from the rewardsVault to the user\n    unchecked {\n        claimableRewards[msg.sender] -= claimAmount;\n    }\n\n### Method Gas change\n\n| Contract         | Method | Before | After | Change |\n| ---------------- | ------ | ------ | ----- | ------ |\n| HolyPaladinToken | claim  | 97548  | 97469 | -79    |\n\n### Deployment Gas change\n\n| Contract         | Before  | After   | Change |\n| ---------------- | ------- | ------- | ------ |\n| HolyPaladinToken | 5505231 | 5502014 | -3217  |\n\n***\n\n## [G-08] The usage of unchecked in average function in Math.sol can reduce deployment gas fee and contract size of HolyPaladinToken.sol\n\n### Target codebase\n\n[Math.sol#L29](https://github.com/code-423n4/2022-03-paladin/blob/main/contracts/open-zeppelin/utils/Math.sol#L29)<br>\n\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\nThe above logic would not overflow, so can use unchecked.\n\n### Potential improvements\n\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        unchecked {\n            return (a & b) + (a ^ b) / 2;\n        }\n    }\n\n### Deployment Gas change\n\n| Contract         | Before  | After   | Change |\n| ---------------- | ------- | ------- | ------ |\n| HolyPaladinToken | 5505231 | 5498742 | -6489  |\n\n### Contract size change\n\n| Contract         | Before | After  | Change(KB) |\n| ---------------- | ------ | ------ | ---------- |\n| HolyPaladinToken | 24.018 | 23.988 | -0.03      |\n\n***\n\n## [G-09] The usage of unchecked in binary search can reduce deployment gas fee and contract size of HolyPaladinToken.sol\n\n### Target codebase\n\n`low = mid + 1` used in the binary search can be wrapped by unchecked\n\n[HolyPaladinToken.sol#L526](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L526)<br>\n[HolyPaladinToken.sol#L698](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L698)<br>\n[HolyPaladinToken.sol#L955](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L955)<br>\n[HolyPaladinToken.sol#L987](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L987)<br>\n[HolyPaladinToken.sol#L1019](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1019)<br>\n\n    while (low < high) {\n        mid = Math.average(low, high);\n        if (totalLocks[mid].fromBlock == blockNumber) {\n            return totalLocks[mid];\n        }\n        if (totalLocks[mid].fromBlock > blockNumber) {\n            high = mid;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n### Potential improvements\n\nWrap `low = mid + 1` by unchecked.\n\n    while (low < high) {\n        mid = Math.average(low, high);\n        if (totalLocks[mid].fromBlock == blockNumber) {\n            return totalLocks[mid];\n        }\n        if (totalLocks[mid].fromBlock > blockNumber) {\n            high = mid;\n        } else {\n            unchecked {\n                low = mid + 1;\n            }\n        }\n    }\n\n### Deployment Gas change\n\n| Contract         | Before  | After   | Change |\n| ---------------- | ------- | ------- | ------ |\n| HolyPaladinToken | 5505231 | 5499198 | -6033  |\n\n### Contract size change\n\n| Contract         | Before | After  | Change(KB) |\n| ---------------- | ------ | ------ | ---------- |\n| HolyPaladinToken | 24.018 | 23.990 | -0.028     |\n\n***\n\n## [G-10] Some `currentUserLockIndex` varaible does not need to be defined in HolyPalatinToken.sol\n\n### Target codebase\n\n[HolyPaladinToken.sol#L272-L273](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L272-L273)<br>\n[HolyPaladinToken.sol#L288-L289](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L288-L289)<br>\n[HolyPaladinToken.sol#L1173-L1174](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1173-L1174)<br>\n[HolyPaladinToken.sol#L1241-L1242](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1241-L1242)<br>\n[HolyPaladinToken.sol#L1276-L1277](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1276-L1277)<br>\n[HolyPaladinToken.sol#L1347-L1348](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L1347-L1348)<br>\n\n    // Find the current Lock\n    uint256 currentUserLockIndex = userLocks[msg.sender].length - 1;\n    UserLock storage currentUserLock = userLocks[msg.sender][currentUserLockIndex];\n\nSome `currentUserLockIndex` varaibles is defined even though they are used once. Not defining variables can reduce gas cost and contract size.\n\n### Potential improvements\n\nAvoid defining `currentUserLockIndex` variable as follows:\n\n    // Find the current Lock\n    UserLock storage currentUserLock = userLocks[msg.sender][userLocks[msg.sender].length - 1];\n\n### Deployment Gas change\n\n| Contract         | Before  | After   | Change |\n| ---------------- | ------- | ------- | ------ |\n| HolyPaladinToken | 5505231 | 5471346 | -33885 |\n\n### Methods Gas change\n\n| Contract         | Method               | Before | After  | Change |\n| ---------------- | -------------------- | ------ | ------ | ------ |\n| HolyPaladinToken | emergencyWithdraw    | 191020 | 190966 | -54    |\n| HolyPaladinToken | increaseLock         | 141196 | 140997 | -199   |\n| HolyPaladinToken | increaseLockDuration | 116450 | 116251 | -199   |\n| HolyPaladinToken | kick                 | 231670 | 231561 | -109   |\n| HolyPaladinToken | lock                 | 336775 | 336764 | -11    |\n| HolyPaladinToken | stakeAndIncreaseLock | 227758 | 227649 | -109   |\n| HolyPaladinToken | unlock               | 134273 | 134164 | -109   |\n\n### Contract size change\n\nIt can reduce about 0.6% of the size of HolyPaladinToken.sol.\n\n| Contract         | Before | After  | Change(KB) |\n| ---------------- | ------ | ------ | ---------- |\n| HolyPaladinToken | 24.018 | 23.861 | -0.157     |\n\n***\n\n## [G-11] The logic to call `EmergencyBlock()` in emergency can be put in private function\n\n### Target codebase\n\n[HolyPaladinToken.sol#L221](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L221)<br>\n[HolyPaladinToken.sol#L244](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L244)<br>\n[HolyPaladinToken.sol#L254](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L254)<br>\n[HolyPaladinToken.sol#L269](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L269)<br>\n[HolyPaladinToken.sol#L285](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L285)<br>\n[HolyPaladinToken.sol#L300](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L300)<br>\n[HolyPaladinToken.sol#L312](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L312)<br>\n[HolyPaladinToken.sol#L328](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L328)<br>\n[HolyPaladinToken.sol#L347](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L347)<br>\n[HolyPaladinToken.sol#L372](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L372)<br>\n[HolyPaladinToken.sol#L381](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L381)<br>\n[HolyPaladinToken.sol#L403](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L403)<br>\n[HolyPaladinToken.sol#L412](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L412)<br>\n\nFollowing check is called by 13 callsites. This can be put into the private function to reduce the contract size and deployment gas cost.\n\n    if(emergency) revert EmergencyBlock();\n\n### Potential improvements\n\nDefine a private function to include the above mentioned logic, and use isEmergent function at each callsite.\n\n    function isEmergent() private view {\n        if(emergency) revert EmergencyBlock();\n    }\n\n### Gas change\n\nPlease note that the method gas fee increases while deployment gas fee reduces. So it depends on what this project prioritizes.\n\n*   Method gas fee\n\nSome methods have 10 \\~ 30 increase of method gas cost.\n\n*   Deployment gas fee\n\n| Contract         | Before  | After   | Change |\n| ---------------- | ------- | ------- | ------ |\n| HolyPaladinToken | 5505231 | 5433502 | -71729 |\n\n### Contract size change\n\nIt can reduce about 1.3% of the size of HolyPaladinToken.sol.\n\n| Contract         | Before | After  | Change(KB) |\n| ---------------- | ------ | ------ | ---------- |\n| HolyPaladinToken | 24.018 | 23.686 | -0.332     |\n\n***\n\n## [G-12] Not defining lastUserLockIndex variable decreases contract size and gas cost\n\n### Target codebase\n\n[HolyPaladinToken.sol#L456-L457](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L456-L457)<br>\n[HolyPaladinToken.sol#L709-L710](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L709-L710)<br>\n\n    uint256 lastUserLockIndex = userLocks[user].length - 1;\n    return userLocks[user][lastUserLockIndex];\n\n### Potential improvements\n\n### Gas change\n\n*   Method gas fee\n\nFollowing methods in HolyPaladinToken.sol have reduced 20\\~200 gas cost\n\n    emergencyWithdraw\n    increaseLock\n    increaseLockDuration\n    kick\n    stakeAndIncreaseLock\n    unlock\n    unstake\n    updateUserRewardState\n\n*   Deployment gas fee\n\n| Contract         | Before  | After   | Change |\n| ---------------- | ------- | ------- | ------ |\n| HolyPaladinToken | 5505231 | 5433502 | -71729 |\n\n### Contract size change\n\nIt can reduce about 0.2% of the size of HolyPaladinToken.sol.\n\n| Contract         | Before | After  | Change(KB) |\n| ---------------- | ------ | ------ | ---------- |\n| HolyPaladinToken | 24.018 | 23.959 | -0.059     |\n\n***\n\n## [G-13] Definitions senderCooldown and receiverBalance variables are not necessary at getNewReceiverCooldown function in HolyPaladinToken.sol\n\n### Target codebase\n\n[HolyPaladinToken.sol#L426-L427](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L426-L427)<br>\n\n    function getNewReceiverCooldown(address sender, address receiver, uint256 amount) external view returns(uint256) {\n        uint256 senderCooldown = cooldowns[sender];\n        uint256 receiverBalance = balanceOf(receiver);\n\n        return _getNewReceiverCooldown(\n            senderCooldown,\n            amount,\n            receiver,\n            receiverBalance\n        );\n    }\n\nDefinitions senderCooldown and receiverBalance variables are not necessary at getNewReceiverCooldown function in HolyPaladinToken.sol\n\n### Potential improvements\n\nAvoid defining the above mentioned variables.\n\n    function getNewReceiverCooldown(address sender, address receiver, uint256 amount) external view returns(uint256) {\n        return _getNewReceiverCooldown(\n            cooldowns[sender],\n            amount,\n            receiver,\n            balanceOf(receiver)\n        );\n    }\n\n### Deployment gas change\n\n| Contract         | Before  | After   | Change |\n| ---------------- | ------- | ------- | ------ |\n| HolyPaladinToken | 5505231 | 5503083 | -2148  |\n\n### Contract size change\n\n| Contract         | Before | After  | Change(KB) |\n| ---------------- | ------ | ------ | ---------- |\n| HolyPaladinToken | 24.018 | 24.008 | -0.01      |\n\n***\n\n## [G-14] Not defining previousToBalance and previousFromBalance variables can reduce gas cost and contract size\n\n### Target codebase\n\n[HolyPaladinToken.sol#L897-L898](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L897-L898)<br>\n\n    uint256 previousToBalance = balanceOf(to);\n    cooldowns[to] = _getNewReceiverCooldown(fromCooldown, amount, to, previousToBalance);\n\n[HolyPaladinToken.sol#L902-L903](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L902-L903)<br>\n\n    uint256 previousFromBalance = balanceOf(from);\n    if(previousFromBalance == amount && fromCooldown != 0) {\n\n### Potential improvements\n\nAvoid defining previousToBalance and previousFromBalance.\n\n    cooldowns[to] = _getNewReceiverCooldown(fromCooldown, amount, to, balanceOf(to));\n\n<!---->\n\n    if(balanceOf(from) == amount && fromCooldown != 0) {\n\n### Method gas change\n\nFollowing methods in HolyPaladinToken.sol can reduce around 10\\~20 gas cost\n\n*   emergencyWithdraw\n*   kick\n*   stake\n*   stakeAndIncreaseLock\n*   transferFrom\n*   unstake\n\n### Deployment gas change\n\n| Contract         | Before  | After   | Change |\n| ---------------- | ------- | ------- | ------ |\n| HolyPaladinToken | 5505231 | 5502651 | -2580  |\n\n### Contract size change\n\n| Contract         | Before | After  | Change(KB) |\n| ---------------- | ------ | ------ | ---------- |\n| HolyPaladinToken | 24.018 | 24.006 | -0.012     |\n\n***\n\n## [G-15] Avoiding calling balanceOf(user) multiple times can reduce deployment gas cost\n\n### Target codebase\n\n[HolyPaladinToken.sol#L558-L560](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L558-L560)<br>\n\n[HolyPaladinToken.sol#L570-L572](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L570-L572)<br>\n\n### Potential improvements\n\n    uint256 balance = balanceOf(user);\n    // If the contract was blocked (emergency mode) or\n    // If the user has no Lock\n    // then available == staked\n    if(emergency || userLocks[user].length == 0) {\n        return(\n            balance,\n            0,\n            balance\n        );\n    }\n    // If a Lock exists\n    // Then return\n    // total staked balance\n    // locked balance\n    // available balance (staked - locked)\n    uint256 lastUserLockIndex = userLocks[user].length - 1;\n    return(\n        balance,\n        uint256(userLocks[user][lastUserLockIndex].amount),\n        balance - uint256(userLocks[user][lastUserLockIndex].amount)\n    );\n\n### Deployment gas change\n\n| Contract         | Before  | After   | Change |\n| ---------------- | ------- | ------- | ------ |\n| HolyPaladinToken | 5505231 | 5500878 | -4353  |\n\n### Contract size change\n\n| Contract         | Before | After  | Change(KB) |\n| ---------------- | ------ | ------ | ---------- |\n| HolyPaladinToken | 24.018 | 23.998 | -0.02      |\n\n***\n\n## [G-16] Avoid defining at \\_getNewIndex function in HolyPaladinToken.sol can reduce contract size and gas cost\n\n### Target codebase\n\n[HolyPaladinToken.sol#L748-L755](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L748-L755)<br>\n\nellapsedTime variable does not need to be defined.\n\n    uint256 ellapsedTime = block.timestamp - lastRewardUpdate;\n    ...\n    uint256 accruedBaseAmount = ellapsedTime * baseDropPerSecond;\n\n### Potential improvements\n\nAvoid defining ellapsedTime variable.\n\n    uint256 accruedBaseAmount = (block.timestamp - lastRewardUpdate) * baseDropPerSecond;\n\n### Method gas change\n\nThis change reduces the method gas cost of more than 10 functions. The reductions are around 10\\~20.\n\n### Deployment gas change\n\n| Contract         | Before  | After   | Change |\n| ---------------- | ------- | ------- | ------ |\n| HolyPaladinToken | 5505231 | 5500878 | -4353  |\n\n### Contract size change\n\n| Contract         | Before | After  | Change(KB) |\n| ---------------- | ------ | ------ | ---------- |\n| HolyPaladinToken | 24.018 | 24.015 | -0.002     |\n\n***\n\n## [G-17] Avoiding defining \\_currentDropPerSecond and newIndex at \\_updateRewardState function in HolyPaladinToken.sol can reduce gas cost and contract size\n\n### Target codebase\n\n[HolyPaladinToken.sol#L768-L772](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L768-L772)<br>\n\n    uint256 _currentDropPerSecond = _updateDropPerSecond();\n\n    // Update the index\n    uint256 newIndex = _getNewIndex(_currentDropPerSecond);\n    rewardIndex = newIndex;\n    lastRewardUpdate = block.timestamp;\n\n    return newIndex;\n\n### Potential improvements\n\n    // Update the index\n    rewardIndex = _getNewIndex(_updateDropPerSecond());\n    lastRewardUpdate = block.timestamp;\n\n    return rewardIndex;\n\n### Method gas change\n\nThis change reduces the method gas cost of more than 10 functions. The reductions are around 10\\~20.\n\n### Deployment gas change\n\n| Contract         | Before  | After   | Change |\n| ---------------- | ------- | ------- | ------ |\n| HolyPaladinToken | 5505231 | 5503323 | -1908  |\n\n### Contract size change\n\n| Contract         | Before | After  | Change(KB) |\n| ---------------- | ------ | ------ | ---------- |\n| HolyPaladinToken | 24.018 | 24.009 | -0.009     |\n\n***\n\n## [G-18] Not using UserLockRewardVars struct in \\_getUserAccruedRewards function can greatly reduces gas cost and contract size\n\n### Target codebase\n\n[HolyPaladinToken.sol#L805-L848](https://github.com/code-423n4/2022-03-paladin/blob/9c26ec8556298fb1dc3cf71f471aadad3a5c74a0/contracts/HolyPaladinToken.sol#L805-L848)<br>\n\n    if(balanceOf(user) > 0){\n        // calculate the base rewards for the user staked balance\n        // (using avaialable balance to count the locked balance with the multiplier later in this function)\n        uint256 indexDiff = currentRewardsIndex - userLastIndex;\n\n        uint256 stakingRewards = (userStakedBalance * indexDiff) / UNIT;\n\n        uint256 lockingRewards = 0;\n\n        if(userLocks[user].length > 0){\n            UserLockRewardVars memory vars;\n\n            // and if an user has a lock, calculate the locked rewards\n            vars.lastUserLockIndex = userLocks[user].length - 1;\n\n            // using the locked balance, and the lock duration\n            userLockedBalance = uint256(userLocks[user][vars.lastUserLockIndex].amount);\n\n            // Check that the user's Lock is not empty\n            if(userLockedBalance > 0 && userLocks[user][vars.lastUserLockIndex].duration != 0){\n                vars.previousBonusRatio = userCurrentBonusRatio[user];\n\n                if(vars.previousBonusRatio > 0){\n                    vars.userRatioDecrease = userBonusRatioDecrease[user];\n                    // Find the new multiplier for user:\n                    // From the last Ratio, where we remove userBonusRatioDecrease for each second since last update\n                    vars.bonusRatioDecrease = (block.timestamp - rewardsLastUpdate[user]) * vars.userRatioDecrease;\n                    \n                    newBonusRatio = vars.bonusRatioDecrease >= vars.previousBonusRatio ? 0 : vars.previousBonusRatio - vars.bonusRatioDecrease;\n\n                    if(vars.bonusRatioDecrease >= vars.previousBonusRatio){\n                        // Since the last update, bonus ratio decrease under 0\n                        // We count the bonusRatioDecrease as the difference between the last Bonus Ratio and 0\n                        vars.bonusRatioDecrease = vars.previousBonusRatio;\n                        // In the case this update is made far after the end of the lock, this method would mean\n                        // the user could get a multiplier for longer than expected\n                        // We count on the Kick logic to avoid that scenario\n                    }\n\n                    // and calculate the locking rewards based on the locked balance & \n                    // a ratio based on the rpevious one and the newly calculated one\n                    vars.periodBonusRatio = newBonusRatio + ((vars.userRatioDecrease + vars.bonusRatioDecrease) / 2);\n                    lockingRewards = (userLockedBalance * ((indexDiff * vars.periodBonusRatio) / UNIT)) / UNIT;\n                }\n            }\n\n        }\n        // sum up the accrued rewards, and return it\n        accruedRewards = stakingRewards + lockingRewards;\n    }\n\n`UserLockRewardVars` struct does not need to be used.\n\n### Potential improvements\n\nHere is an example codebase which avoids using `UserLockRewardVars memory vars`.\n\n    if(balanceOf(user) > 0){\n        // calculate the base rewards for the user staked balance\n        // (using avaialable balance to count the locked balance with the multiplier later in this function)\n        uint256 indexDiff = currentRewardsIndex - userLastIndex;\n\n        uint256 lockingRewards = 0;\n\n        if(userLocks[user].length > 0){\n            // and if an user has a lock, calculate the locked rewards\n            uint256 lastUserLockIndex = userLocks[user].length - 1;\n\n            // using the locked balance, and the lock duration\n            userLockedBalance = uint256(userLocks[user][lastUserLockIndex].amount);\n\n            // Check that the user's Lock is not empty\n            if(userLockedBalance > 0 && userLocks[user][lastUserLockIndex].duration != 0){\n                uint256 previousBonusRatio = userCurrentBonusRatio[user];\n\n                if(previousBonusRatio > 0){\n                    uint256 userRatioDecrease = userBonusRatioDecrease[user];\n                    // Find the new multiplier for user:\n                    // From the last Ratio, where we remove userBonusRatioDecrease for each second since last update\n                    uint256 bonusRatioDecrease = (block.timestamp - rewardsLastUpdate[user]) * userRatioDecrease;\n                    \n                    newBonusRatio = bonusRatioDecrease >= previousBonusRatio ? 0 : previousBonusRatio - bonusRatioDecrease;\n\n                    if(bonusRatioDecrease >= previousBonusRatio){\n                        // Since the last update, bonus ratio decrease under 0\n                        // We count the bonusRatioDecrease as the difference between the last Bonus Ratio and 0\n                        bonusRatioDecrease = previousBonusRatio;\n                        // In the case this update is made far after the end of the lock, this method would mean\n                        // the user could get a multiplier for longer than expected\n                        // We count on the Kick logic to avoid that scenario\n                    }\n\n                    // and calculate the locking rewards based on the locked balance & \n                    // a ratio based on the rpevious one and the newly calculated one\n                    uint256 periodBonusRatio = newBonusRatio + ((userRatioDecrease + bonusRatioDecrease) / 2);\n                    lockingRewards = (userLockedBalance * ((indexDiff * periodBonusRatio) / UNIT)) / UNIT;\n                }\n            }\n\n        }\n        // sum up the accrued rewards, and return it\n        accruedRewards = (userStakedBalance * indexDiff) / UNIT + lockingRewards;\n    }\n\nIn this example, it also does not define `userStakedBalance` variable.\n\n### Method gas change\n\nThis change reduces the method gas cost of more than 10 functions. The reductions are around 100\\~200.\n\n### Deployment gas change\n\n| Contract         | Before  | After   | Change |\n| ---------------- | ------- | ------- | ------ |\n| HolyPaladinToken | 5505231 | 5481972 | -23259 |\n\n### Contract size change\n\n| Contract         | Before | After  | Change(KB) |\n| ---------------- | ------ | ------ | ---------- |\n| HolyPaladinToken | 24.018 | 23.910 | -0.108     |\n\n**[Kogaroshi (Paladin) commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/28#issuecomment-1086687334):**\n > For update of Ownable inherited contract and use of the internal transfer ownership method: [PaladinFinance/Paladin-Tokenomics@4d0840c](https://github.com/PaladinFinance/Paladin-Tokenomics/pull/1/commits/4d0840c9c9fe8a1a4b043d2a33696fea8bf9176c).\n\n**[Kogaroshi (Paladin) commented](https://github.com/code-423n4/2022-03-paladin-findings/issues/28#issuecomment-1087669099):**\n > QA & gas optimizations changes are done in the PR: [PaladinFinance/Paladin-Tokenomics#6](https://github.com/PaladinFinance/Paladin-Tokenomics/pull/6).<br>\n> (some changes/tips were implemented, others are noted but won't be applied)<br>\n>\n> Really high quality Gas optimizations report.\n\n\n\n***\n\n# Disclosures\n\nC4 is an open organization governed by participants in the community.\n\nC4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.\n\nC4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.\n"
}