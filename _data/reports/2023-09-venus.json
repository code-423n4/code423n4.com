{
  "circa": {
    "title": "Venus Prime",
    "sponsor": "Venus Protocol",
    "slug": "2023-09-venus",
    "date": "2023-11-29",
    "findings": "https://github.com/code-423n4/2023-09-venus-findings/issues",
    "contest": 290
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit outlined in this document, C4 conducted an analysis of the Venus Prime smart contract system written in Solidity. The audit took place between September 28—October 4 2023.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>130 Wardens contributed reports to Venus Prime:</p>\n<ol>\n<li><a href=\"https://code4rena.com/@Testerbot\">Testerbot</a></li>\n<li><a href=\"https://code4rena.com/@0xTheC0der\">0xTheC0der</a></li>\n<li><a href=\"https://code4rena.com/@0xDetermination\">0xDetermination</a></li>\n<li><a href=\"https://code4rena.com/@Brenzee\">Brenzee</a></li>\n<li><a href=\"https://code4rena.com/@ether_sky\">ether_sky</a></li>\n<li><a href=\"https://code4rena.com/@SpicyMeatball\">SpicyMeatball</a></li>\n<li><a href=\"https://code4rena.com/@Breeje\">Breeje</a></li>\n<li><a href=\"https://code4rena.com/@tapir\">tapir</a></li>\n<li><a href=\"https://code4rena.com/@santipu_\">santipu_</a></li>\n<li><a href=\"https://code4rena.com/@sces60107\">sces60107</a></li>\n<li><a href=\"https://code4rena.com/@ast3ros\">ast3ros</a></li>\n<li><a href=\"https://code4rena.com/@pep7siup\">pep7siup</a></li>\n<li><a href=\"https://code4rena.com/@ThreeSigma\">ThreeSigma</a> (<a href=\"https://code4rena.com/@0x73696d616f\">0x73696d616f</a>, <a href=\"https://code4rena.com/@0xCarolina\">0xCarolina</a>, <a href=\"https://code4rena.com/@EduCatarino\">EduCatarino</a>, and <a href=\"https://code4rena.com/@SolidityDev99\">SolidityDev99</a>)</li>\n<li><a href=\"https://code4rena.com/@said\">said</a></li>\n<li><a href=\"https://code4rena.com/@3agle\">3agle</a></li>\n<li><a href=\"https://code4rena.com/@rokinot\">rokinot</a></li>\n<li><a href=\"https://code4rena.com/@PwnStars\">PwnStars</a> (<a href=\"https://code4rena.com/@qbs\">qbs</a> and <a href=\"https://code4rena.com/@sakshamguruji\">sakshamguruji</a>)</li>\n<li><a href=\"https://code4rena.com/@neumo\">neumo</a></li>\n<li><a href=\"https://code4rena.com/@blutorque\">blutorque</a></li>\n<li><a href=\"https://code4rena.com/@Pessimistic\">Pessimistic</a> (<a href=\"https://code4rena.com/@olegggatttor\">olegggatttor</a>, <a href=\"https://code4rena.com/@yhtyyar\">yhtyyar</a>, and <a href=\"https://code4rena.com/@PavelCore\">PavelCore</a>)</li>\n<li><a href=\"https://code4rena.com/@DavidGiladi\">DavidGiladi</a></li>\n<li><a href=\"https://code4rena.com/@oakcobalt\">oakcobalt</a></li>\n<li><a href=\"https://code4rena.com/@hals\">hals</a></li>\n<li><a href=\"https://code4rena.com/@bin2chen\">bin2chen</a></li>\n<li><a href=\"https://code4rena.com/@DeFiHackLabs\">DeFiHackLabs</a> (<a href=\"https://code4rena.com/@AkshaySrivastav\">AkshaySrivastav</a>, <a href=\"https://code4rena.com/@Cache_and_Burn\">Cache_and_Burn</a>, <a href=\"https://code4rena.com/@IceBear\">IceBear</a>, <a href=\"https://code4rena.com/@Ronin\">Ronin</a>, <a href=\"https://code4rena.com/@Sm4rty\">Sm4rty</a>, <a href=\"https://code4rena.com/@SunSec\">SunSec</a>, <a href=\"https://code4rena.com/@sashik_eth\">sashik_eth</a>, <a href=\"https://code4rena.com/@zuhaibmohd\">zuhaibmohd</a>, and <a href=\"https://code4rena.com/@ret2basic\">ret2basic</a>)</li>\n<li><a href=\"https://code4rena.com/@Norah\">Norah</a></li>\n<li><a href=\"https://code4rena.com/@seerether\">seerether</a></li>\n<li><a href=\"https://code4rena.com/@turvy_fuzz\">turvy_fuzz</a></li>\n<li><a href=\"https://code4rena.com/@dirk_y\">dirk_y</a></li>\n<li><a href=\"https://code4rena.com/@deadrxsezzz\">deadrxsezzz</a></li>\n<li><a href=\"https://code4rena.com/@0xprinc\">0xprinc</a></li>\n<li><a href=\"https://code4rena.com/@0x3b\">0x3b</a></li>\n<li><a href=\"https://code4rena.com/@deth\">deth</a></li>\n<li><a href=\"https://code4rena.com/@J4X\">J4X</a></li>\n<li><a href=\"https://code4rena.com/@Satyam_Sharma\">Satyam_Sharma</a></li>\n<li><a href=\"https://code4rena.com/@gkrastenov\">gkrastenov</a></li>\n<li><a href=\"https://code4rena.com/@merlin\">merlin</a></li>\n<li><a href=\"https://code4rena.com/@Flora\">Flora</a></li>\n<li><a href=\"https://code4rena.com/@KrisApostolov\">KrisApostolov</a></li>\n<li><a href=\"https://code4rena.com/@berlin-101\">berlin-101</a></li>\n<li><a href=\"https://code4rena.com/@twicek\">twicek</a></li>\n<li><a href=\"https://code4rena.com/@0xpiken\">0xpiken</a></li>\n<li><a href=\"https://code4rena.com/@rvierdiiev\">rvierdiiev</a></li>\n<li><a href=\"https://code4rena.com/@HChang26\">HChang26</a></li>\n<li><a href=\"https://code4rena.com/@mahdirostami\">mahdirostami</a></li>\n<li><a href=\"https://code4rena.com/@lsaudit\">lsaudit</a></li>\n<li><a href=\"https://code4rena.com/@aycozynfada\">aycozynfada</a></li>\n<li><a href=\"https://code4rena.com/@sl1\">sl1</a></li>\n<li><a href=\"https://code4rena.com/@0xhacksmithh\">0xhacksmithh</a></li>\n<li><a href=\"https://code4rena.com/@pavankv\">pavankv</a></li>\n<li><a href=\"https://code4rena.com/@Bauchibred\">Bauchibred</a></li>\n<li><a href=\"https://code4rena.com/@maanas\">maanas</a></li>\n<li><a href=\"https://code4rena.com/@josephdara\">josephdara</a></li>\n<li><a href=\"https://code4rena.com/@0xweb3boy\">0xweb3boy</a></li>\n<li><a href=\"https://code4rena.com/@al88nsk\">al88nsk</a></li>\n<li><a href=\"https://code4rena.com/@xAriextz\">xAriextz</a></li>\n<li><a href=\"https://code4rena.com/@pina\">pina</a></li>\n<li><a href=\"https://code4rena.com/@SBSecurity\">SBSecurity</a> (<a href=\"https://code4rena.com/@Slavcheww\">Slavcheww</a> and <a href=\"https://code4rena.com/@Blckhv\">Blckhv</a>)</li>\n<li><a href=\"https://code4rena.com/@dethera\">dethera</a></li>\n<li><a href=\"https://code4rena.com/@0xblackskull\">0xblackskull</a></li>\n<li><a href=\"https://code4rena.com/@tsvetanovv\">tsvetanovv</a></li>\n<li><a href=\"https://code4rena.com/@ADM\">ADM</a></li>\n<li><a href=\"https://code4rena.com/@debo\">debo</a></li>\n<li><a href=\"https://code4rena.com/@ArmedGoose\">ArmedGoose</a></li>\n<li><a href=\"https://code4rena.com/@jkoppel\">jkoppel</a></li>\n<li><a href=\"https://code4rena.com/@0xWaitress\">0xWaitress</a></li>\n<li><a href=\"https://code4rena.com/@radev_sw\">radev_sw</a></li>\n<li><a href=\"https://code4rena.com/@hunter_w3b\">hunter_w3b</a></li>\n<li><a href=\"https://code4rena.com/@kaveyjoe\">kaveyjoe</a></li>\n<li><a href=\"https://code4rena.com/@versiyonbir\">versiyonbir</a></li>\n<li><a href=\"https://code4rena.com/@jamshed\">jamshed</a></li>\n<li><a href=\"https://code4rena.com/@pontifex\">pontifex</a></li>\n<li><a href=\"https://code4rena.com/@hihen\">hihen</a></li>\n<li><a href=\"https://code4rena.com/@0xScourgedev\">0xScourgedev</a></li>\n<li><a href=\"https://code4rena.com/@Maroutis\">Maroutis</a></li>\n<li><a href=\"https://code4rena.com/@inzinko\">inzinko</a></li>\n<li><a href=\"https://code4rena.com/@ge6a\">ge6a</a></li>\n<li><a href=\"https://code4rena.com/@0xMosh\">0xMosh</a></li>\n<li><a href=\"https://code4rena.com/@btk\">btk</a></li>\n<li><a href=\"https://code4rena.com/@0xdice91\">0xdice91</a></li>\n<li><a href=\"https://code4rena.com/@Fulum\">Fulum</a></li>\n<li><a href=\"https://code4rena.com/@imare\">imare</a></li>\n<li><a href=\"https://code4rena.com/@Aymen0909\">Aymen0909</a></li>\n<li><a href=\"https://code4rena.com/@SPYBOY\">SPYBOY</a></li>\n<li><a href=\"https://code4rena.com/@jnforja\">jnforja</a></li>\n<li><a href=\"https://code4rena.com/@alexweb3\">alexweb3</a></li>\n<li><a href=\"https://code4rena.com/@Mirror\">Mirror</a></li>\n<li><a href=\"https://code4rena.com/@0xTiwa\">0xTiwa</a></li>\n<li><a href=\"https://code4rena.com/@d3e4\">d3e4</a></li>\n<li><a href=\"https://code4rena.com/@tonisives\">tonisives</a></li>\n<li><a href=\"https://code4rena.com/@MohammedRizwan\">MohammedRizwan</a></li>\n<li><a href=\"https://code4rena.com/@Tricko\">Tricko</a></li>\n<li><a href=\"https://code4rena.com/@0xfusion\">0xfusion</a></li>\n<li><a href=\"https://code4rena.com/@glcanvas\">glcanvas</a></li>\n<li><a href=\"https://code4rena.com/@lotux\">lotux</a></li>\n<li><a href=\"https://code4rena.com/@y4y\">y4y</a></li>\n<li><a href=\"https://code4rena.com/@sashik_eth\">sashik_eth</a></li>\n<li><a href=\"https://code4rena.com/@Krace\">Krace</a></li>\n<li><a href=\"https://code4rena.com/@Daniel526\">Daniel526</a></li>\n<li><a href=\"https://code4rena.com/@squeaky_cactus\">squeaky_cactus</a></li>\n<li><a href=\"https://code4rena.com/@joaovwfreire\">joaovwfreire</a></li>\n<li><a href=\"https://code4rena.com/@peanuts\">peanuts</a></li>\n<li><a href=\"https://code4rena.com/@vagrant\">vagrant</a></li>\n<li><a href=\"https://code4rena.com/@nobody2018\">nobody2018</a></li>\n<li><a href=\"https://code4rena.com/@nisedo\">nisedo</a></li>\n<li><a href=\"https://code4rena.com/@IceBear\">IceBear</a></li>\n<li><a href=\"https://code4rena.com/@terrancrypt\">terrancrypt</a></li>\n<li><a href=\"https://code4rena.com/@Hama\">Hama</a></li>\n<li><a href=\"https://code4rena.com/@n1punp\">n1punp</a></li>\n<li><a href=\"https://code4rena.com/@nadin\">nadin</a></li>\n<li><a href=\"https://code4rena.com/@e0d1n\">e0d1n</a></li>\n<li><a href=\"https://code4rena.com/@kutugu\">kutugu</a></li>\n<li><a href=\"https://code4rena.com/@TangYuanShen\">TangYuanShen</a></li>\n<li><a href=\"https://code4rena.com/@orion\">orion</a></li>\n<li><a href=\"https://code4rena.com/@ptsanev\">ptsanev</a></li>\n</ol>\n<p>This audit was judged by <a href=\"https://code4rena.com/@0xdjango\">0xDjango</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/PaperP_C4\">PaperParachute</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 5 unique vulnerabilities. Of these vulnerabilities, 3 received a risk rating in the category of HIGH severity and 3 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 88 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 11 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2023-09-venus\">C4 Venus Prime repository</a>, and is composed of 7 smart contracts written in the Solidity programming language and includes 1039 lines of Solidity code.</p>\n<p>In addition to the known issues identified by the project team, a Code4rena bot race was conducted at the start of the audit. The winning bot, <strong>Tera Bot</strong> from warden <a href=\"https://code4rena.com/@kn0t\">kn0t</a>, generated the <a href=\"https://gist.github.com/code423n4/9e80eddfb29953d8b5a424084a54e4ed\">Automated Findings report</a> and all findings therein were classified as out of scope.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities based on three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>For more information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>, specifically our section on <a href=\"https://docs.code4rena.com/awarding/judging-criteria/severity-categorization\">Severity Categorization</a>.</p>\n<h1 id=\"high-risk-findings-3\" style=\"position:relative;\"><a href=\"#high-risk-findings-3\" aria-label=\"high risk findings 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (3)</h1>\n<h2 id=\"h-01-primesol---user-can-claim-prime-token-without-having-any-staked-xvs-because-his-stakedat-isnt-reset-whenever-he-is-issued-an-irrevocable-token\" style=\"position:relative;\"><a href=\"#h-01-primesol---user-can-claim-prime-token-without-having-any-staked-xvs-because-his-stakedat-isnt-reset-whenever-he-is-issued-an-irrevocable-token\" aria-label=\"h 01 primesol   user can claim prime token without having any staked xvs because his stakedat isnt reset whenever he is issued an irrevocable token permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/633\">[H-01] Prime.sol - User can claim Prime token without having any staked XVS, because his <code>stakedAt</code> isn’t reset whenever he is issued an irrevocable token</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/633\">deth</a>, also found by <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/684\">rokinot</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/680\">gkrastenov</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/645\">merlin</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/592\">Testerbot</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/553\">0xDetermination</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/469\">3agle</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/468\">aycozynfada</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/447\">Flora</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/439\">KrisApostolov</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/273\">berlin-101</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/255\">santipu_</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/251\">twicek</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/215\">sl1</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/211\">0xpiken</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/199\">Brenzee</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/145\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/144\">tapir</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/109\">HChang26</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/106\">Satyam_Sharma</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/102\">mahdirostami</a>, and <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/66\">said</a></em></p>\n<p>Whenever a new Prime token is created, the users <code>stakedAt</code> is reset to 0. This happens when the user <code>claim</code> a revocable token and when he is <code>issue</code> a revocable token, but it does not happen when a user is <code>issue</code> an irrevocable token.</p>\n<p>This is <code>issue()</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">issue</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isIrrevocable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">users</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_checkAccessAllowed</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;issue(bool,address[])&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">isIrrevocable</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">users</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">Token</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userToken</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">users</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">userToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">exists</span><span class=\"mtk1\"> &amp;&amp; !</span><span class=\"mtk12\">userToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">isIrrevocable</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">_upgrade</span><span class=\"mtk1\">(</span><span class=\"mtk12\">users</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// We don&#39;t reset here.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">, </span><span class=\"mtk12\">users</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">_initializeMarkets</span><span class=\"mtk1\">(</span><span class=\"mtk12\">users</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">users</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk4\">false</span><span class=\"mtk1\">, </span><span class=\"mtk12\">users</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">_initializeMarkets</span><span class=\"mtk1\">(</span><span class=\"mtk12\">users</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// We reset stakedAt here</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stakedAt</span><span class=\"mtk1\">[</span><span class=\"mtk12\">users</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>We can see that when a revocable token is issued and minted the user’s <code>stakedAt</code> is reset to 0. Whenever a user’s token is upgraded, his <code>stakedAt</code> has already been reset to 0 inside <code>claim</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">claim</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">stakedAt</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IneligibleToClaim</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">stakedAt</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] &lt; </span><span class=\"mtk12\">STAKING_PERIOD</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">WaitMoreTime</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// We reset stakedAt here</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">stakedAt</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk4\">false</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_initializeMarkets</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>The only one time when we don’t reset the user’s <code>stakedAt</code> and it’s when he is issued an irrevocable token.</p>\n<p>Let’s see an example and see why this is a problem:</p>\n<ol>\n<li>Alice deposits 10k XVS.</li>\n<li>The protocol/DAO/admin decides to issue Alice an irrevocable prime token, because she deposited such a large amount of tokens. Keep in mind that the 90 day staking period still hasn’t passed and her <code>stakedAt</code> is the original time that she deposited 10k XVS.</li>\n<li>Time passes and Alice decides to withdraw her entire XVS, so now she has 0 XVS. Her token isn’t burned as she has an irrevocable token.</li>\n<li>Even more time passes and the protocol/DAO/admin decides to burn Alice’s irrevocable token because she is inactive.</li>\n<li>EVEN more time passes and Alice returns to the protocol and instead of depositing anything, she calls <code>claim</code>.</li>\n</ol>\n<p>Her tx goes through, since her <code>stakedAt</code> wasn’t reset to 0 when she got issued her irrevocable token.</p>\n<p>This way, Alice claimed a revocable token without having any XVS staked in the contract.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Add the following line at the top of <code>tests/hardhat/Prime/Prime.ts</code>. We’ll use this to simulate time passing</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">time</span><span class=\"mtk1\"> } </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@nomicfoundation/hardhat-network-helpers&quot;</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>Paste the following inside <code>tests/hardhat/Prime/Prime.ts</code> and run <code>npx hardhat test tests/hardhat/Prime/Prime.ts</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">it</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;User can get Prime token without any XVS staked&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// User1 deposits 10k XVS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user1</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(), </span><span class=\"mtk11\">parseUnits</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10000&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseUnits</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10000&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseUnits</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10000&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userInfo</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getUserInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">user1</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">userInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">eq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">parseUnits</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10000&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Venus decides to issue an irrevocable Prime token to User1 for staking such a large amount.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Note that the 90 day staking period still hasn&#39;t passed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">issue</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">, [</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">()]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk12\">exists</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk12\">isIrrevocable</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// User1 withdraws her entire balance XVS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">requestWithdrawal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk11\">parseUnits</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10000&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">userInfo</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getUserInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">user1</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">userInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pendingWithdrawals</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">eq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">parseUnits</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10000&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// User1&#39;s Prime token gets burned by protocol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">token</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk12\">exists</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk12\">isIrrevocable</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// 100 days pass</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">time</span><span class=\"mtk1\">.</span><span class=\"mtk11\">increase</span><span class=\"mtk1\">(</span><span class=\"mtk7\">8640000</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// User1 can claim a revocable Prime token without any XVS staked, because his stakedAt wasn&#39;t reset to 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stakedAt</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user1</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">())).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">not</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">claim</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">token</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk12\">exists</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk12\">isIrrevocable</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span></code></pre>\n<p>If you are having trouble running the test, this change might fix it. Inside <code>Prime.sol</code>, <code>burn()</code> remove the access control from the function. This doesn’t change the attack and the test outcome.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// _checkAccessAllowed(&quot;burn(address)&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Hardhat</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Reset the user’s <code>stakedAt</code> whenever he is issued an irrevocable token.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">issue</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isIrrevocable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">users</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_checkAccessAllowed</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;issue(bool,address[])&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">isIrrevocable</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">users</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">Token</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userToken</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">users</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">userToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">exists</span><span class=\"mtk1\"> &amp;&amp; !</span><span class=\"mtk12\">userToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">isIrrevocable</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">_upgrade</span><span class=\"mtk1\">(</span><span class=\"mtk12\">users</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">, </span><span class=\"mtk12\">users</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">_initializeMarkets</span><span class=\"mtk1\">(</span><span class=\"mtk12\">users</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stakedAt</span><span class=\"mtk1\">[</span><span class=\"mtk12\">users</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]]; </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          ...</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/633#issuecomment-1777540916\">chechu (Venus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed <a href=\"https://github.com/VenusProtocol/venus-protocol/commit/9d318165333b5ae4d2350a4b674d7d7237066642\">here</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/633#issuecomment-1787932866\">0xDjango (Judge) commented</a>:</strong></p>\n<blockquote>\n<p>Valid issue with serious impact to the protocol.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-02-a-malicious-user-can-avoid-unfavorable-score-updates-after-alphamultiplier-changes-resulting-in-accrual-of-outsized-rewards-for-the-attacker-at-the-expense-of-other-users\" style=\"position:relative;\"><a href=\"#h-02-a-malicious-user-can-avoid-unfavorable-score-updates-after-alphamultiplier-changes-resulting-in-accrual-of-outsized-rewards-for-the-attacker-at-the-expense-of-other-users\" aria-label=\"h 02 a malicious user can avoid unfavorable score updates after alphamultiplier changes resulting in accrual of outsized rewards for the attacker at the expense of other users permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/555\">[H-02] A malicious user can avoid unfavorable score updates after alpha/multiplier changes, resulting in accrual of outsized rewards for the attacker at the expense of other users</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/555\">0xDetermination</a>, also found by <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/685\">hals</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/586\">Testerbot</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/545\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/537\">Pessimistic</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/533\">rokinot</a>, ThreeSigma (<a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/530\">1</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/524\">2</a>), <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/505\">ether_sky</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/463\">PwnStars</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/427\">neumo</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/346\">DeFiHackLabs</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/341\">turvy_fuzz</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/304\">Norah</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/295\">dirk_y</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/231\">deadrxsezzz</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/217\">blutorque</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/136\">SpicyMeatball</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/104\">seerether</a>, and <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/60\">said</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L397-L405\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L397-L405</a> </p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L704-L756\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L704-L756</a> </p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L623-L639\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L623-L639</a> </p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L827-L833\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L827-L833</a> </p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L200-L219\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L200-L219</a> </p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/tests/hardhat/Prime/Prime.ts#L294-L301\">https://github.com/code-423n4/2023-09-venus/blob/main/tests/hardhat/Prime/Prime.ts#L294-L301</a></p>\n<p>Please note: All functions/properties referred to are in the <code>Prime.sol</code> contract.</p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>A malicious user can accrue outsized rewards at the expense of other users after <code>updateAlpha()</code> or <code>updateMultipliers()</code> is called.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>An attacker can prevent their score from being updated and decreased after the protocol’s alpha or multipliers change. This is done by manipulatively decreasing the value of <code>pendingScoreUpdates</code>, then ensuring that only other user scores are updated until <code>pendingScoreUpdates</code> reaches zero, at which point calls to <code>updateScores()</code> will revert with the error <code>NoScoreUpdatesRequired()</code>. This can be done via the attacker calling <code>updateScores()</code> to update other users’ scores first and/or DoSing calls to <code>updateScores()</code> that would update the attacker’s score (see the issue titled “DoS and gas griefing of Prime.updateScores()”).</p>\n<p>The core of this vulnerability is the attacker’s ability to manipulate <code>pendingScoreUpdates</code>. Notice below that <code>claim()</code>, which is called to mint a user’s Prime token, doesn’t change the value of <code>pendingScoreUpdates</code>:</p>\n<details>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function claim() external { </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (stakedAt[msg.sender] == 0) revert IneligibleToClaim();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (block.timestamp - stakedAt[msg.sender] &lt; STAKING_PERIOD) revert WaitMoreTime();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        stakedAt[msg.sender] = 0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _mint(false, msg.sender);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _initializeMarkets(msg.sender);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    function _mint(bool isIrrevocable, address user) internal {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (tokens[user].exists) revert IneligibleToClaim();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        tokens[user].exists = true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        tokens[user].isIrrevocable = isIrrevocable;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (isIrrevocable) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            totalIrrevocable++;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            totalRevocable++;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (totalIrrevocable &gt; irrevocableLimit || totalRevocable &gt; revocableLimit) revert InvalidLimit();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        emit Mint(user, isIrrevocable);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    function _initializeMarkets(address account) internal {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address[] storage _allMarkets = allMarkets;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        for (uint256 i = 0; i &lt; _allMarkets.length; ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            address market = _allMarkets[i];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            accrueInterest(market);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            interests[market][account].rewardIndex = markets[market].rewardIndex;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            uint256 score = _calculateScore(market, account);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            interests[market][account].score = score;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            markets[market].sumOfMembersScore = markets[market].sumOfMembersScore + score;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                i++;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n</details>\n<p>However, burning a token decrements <code>pendingScoreUpdates</code>. (Burning a token is done by withdrawing XVS from <code>XVSVault.sol</code> so that the resulting amount staked is below the minimum amount required to possess a Prime token.) Notice below:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function _burn(address user) internal {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _updateRoundAfterTokenBurned(user);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        emit Burn(user);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    function _updateRoundAfterTokenBurned(address user) internal { </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (totalScoreUpdatesRequired &gt; 0) totalScoreUpdatesRequired--;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (pendingScoreUpdates &gt; 0 &amp;&amp; !isScoreUpdated[nextScoreUpdateRoundId][user]) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            pendingScoreUpdates--;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>To inappropriately decrement the value of <code>pendingScoreUpdates</code>, the attacker can backrun the transaction updating the alpha/multiplier, minting and burning a Prime token (this requires the attacker to have staked the minimum amount of XVS 90 days in advance). If the number of Prime tokens minted is often at the max number of Prime tokens minted, the attacker could burn an existing token and then mint and burn a new one. Since the value of <code>!isScoreUpdated[nextScoreUpdateRoundId][user]</code> is default false, pendingScoreUpdates will be inappropriately decremented if the burned token was minted after the call to <code>updateMultipliers()</code>/<code>updateAlpha()</code>.</p>\n<p>As aforementioned, the attacker can ensure that only other users’ scores are updated until <code>pendingScoreUpdates</code> reaches zero, at which point further calls to <code>updateScores</code> will revert with the custom error <code>NoScoreUpdatesRequired()</code>.</p>\n<p>Relevant code from <code>updateScores()</code> for reference:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function updateScores(address[] memory users) external {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (pendingScoreUpdates == 0) revert NoScoreUpdatesRequired(); </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (nextScoreUpdateRoundId == 0) revert NoScoreUpdatesRequired();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        for (uint256 i = 0; i &lt; users.length; ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            pendingScoreUpdates--;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            isScoreUpdated[nextScoreUpdateRoundId][user] = true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                i++;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            emit UserScoreUpdated(user);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>As seen, the attacker’s score can avoid being updated. This is signficant if a change in multiplier or alpha would decrease the attacker’s score. Because rewards are distributed according to the user’s score divided by the total score, the attacker can ‘freeze’ their score at a higher than appropriate value and accrue increased rewards at the cost of the other users in the market.</p>\n<p>The attacker can also prevent score updates for other users. The attacker can ‘freeze’ a user’s score that would otherwise increase after the alpha/multiplier changes, resulting in even greater rewards accrued for the attacker and denied from other users. This is because it is possible to decrease the value of <code>pendingScoreUpdates</code> by more than one if the attacker mints and burns more than one token after the alpha/multiplier is updated.</p>\n<h3 id=\"math-to-support-that-a-larger-score-results-in-greater-reward-accrual\" style=\"position:relative;\"><a href=\"#math-to-support-that-a-larger-score-results-in-greater-reward-accrual\" aria-label=\"math to support that a larger score results in greater reward accrual permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Math to support that a larger score results in greater reward accrual</h3>\n<p>Let $a$ represent the attacker’s score if it is properly updated after a change in alpha/multiplier, $b$ represent the properly updated total score, and $c$ represent the difference between the attacker’s larger unupdated score and the attacker’s smaller updated score. Clearly $a$, $b$, and $c$ are positive with $a < b$. Consider the following inequality, which holds true since $a \\< b$ :</p>\n<p>$`\\frac{a+c}{b+c} > \\frac{a}{b} \\iff a+c > \\frac{a(b+c)}{b} \\iff a+c > a+\\frac{ac}{b}$</p>\n<h3 id=\"test\" style=\"position:relative;\"><a href=\"#test\" aria-label=\"test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test</h3>\n<p>Paste and run the below test in the ‘mint and burn’ scenario in Prime.ts (line 302)</p>\n<details>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    it(&quot;prevent_Update&quot;, async () =&gt; { //test to show attacker can arbitrarily prevent multiple users from being updated by `updateScores()`</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //setup 3 users</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await prime.issue(false, [user1.getAddress(), user2.getAddress(), user3.getAddress()]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvs.connect(user1).approve(xvsVault.address, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvsVault.connect(user1).deposit(xvs.address, 0, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvs.connect(user2).approve(xvsVault.address, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvsVault.connect(user2).deposit(xvs.address, 0, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvs.connect(user3).approve(xvsVault.address, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvsVault.connect(user3).deposit(xvs.address, 0, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //attacker sets up addresses to mint/burn and manipulate pendingScoreUpdates</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      const [,,,,user4,user5] = await ethers.getSigners();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvs.transfer(user4.address, bigNumber18.mul(1000000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvs.transfer(user5.address, bigNumber18.mul(1000000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvs.connect(user4).approve(xvsVault.address, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvsVault.connect(user4).deposit(xvs.address, 0, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvs.connect(user5).approve(xvsVault.address, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvsVault.connect(user5).deposit(xvs.address, 0, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await mine(90 * 24 * 60 * 60);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //change alpha, pendingScoreUpdates changed to 3</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await prime.updateAlpha(1, 5);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //attacker backruns alpha update with minting and burning tokens, decreasing pendingScoreUpdates by 2</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await prime.connect(user4).claim();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvsVault.connect(user4).requestWithdrawal(xvs.address, 0, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await prime.connect(user5).claim();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvsVault.connect(user5).requestWithdrawal(xvs.address, 0, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //attacker updates user 3, decreasing pendingScoreUpdates by 1</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await prime.connect(user1).updateScores([user3.getAddress()])</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //users 1 and 2 won&#39;t be updated because pendingScoreUpdates is 0</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await expect(prime.updateScores([user1.getAddress(), user2.getAddress()])).to.be.revertedWithCustomError(prime, &quot;NoScoreUpdatesRequired&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span></code></pre>\n</details>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Hardhat</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Check if <code>pendingScoreUpdates</code> is nonzero when a token is minted, and increment it if so. This removes the attacker’s ability to manipulate <code>pendingScoreUpdates</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    function _mint(bool isIrrevocable, address user) internal {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        if (tokens[user].exists) revert IneligibleToClaim();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        tokens[user].exists = true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        tokens[user].isIrrevocable = isIrrevocable;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        if (isIrrevocable) { //@Gas</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            totalIrrevocable++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            totalRevocable++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        if (totalIrrevocable &gt; irrevocableLimit || totalRevocable &gt; revocableLimit) revert InvalidLimit();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       if (pendingScoreUpdates != 0) {unchecked{++pendingScoreUpdates;}} </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        emit Mint(user, isIrrevocable);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"further-considerations\" style=\"position:relative;\"><a href=\"#further-considerations\" aria-label=\"further considerations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Further Considerations</h3>\n<p>The call to <code>updateMultipliers()</code> can be frontrun by the attacker with staking XVS and/or lending/borrowing transactions in order to increase the attacker’s score before ‘freezing’ it.</p>\n<p>If the attacker wants to keep the inflated score, no actions that update the attacker’s score can be taken. However, the attacker can claim the outsized rewards earned at any time and as often as desired since <code>claimInterest()</code> does not update user scores.</p>\n<p>If anyone has knowledge that the exploit has occurred, it is possible for any user’s score in a market to be updated with a call to <code>accrueInterestAndUpdateScore()</code>, which can neutralize the attack.</p>\n<p>The required amount of XVS staked for this exploit can be reduced by 1000 if this exploit is combined with the exploit titled “Irrevocable token holders can instantly mint a revocable token after burning and bypass the minimum XVS stake for revocable tokens”.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/555#issuecomment-1777704548\">chechu (Venus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed <a href=\"https://github.com/VenusProtocol/venus-protocol/commit/dab203f882359193b3bf5ff7f1a33fec19abd468\">here</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-03-incorrect-decimal-usage-in-score-calculation-leads-to-reduced-user-reward-earnings\" style=\"position:relative;\"><a href=\"#h-03-incorrect-decimal-usage-in-score-calculation-leads-to-reduced-user-reward-earnings\" aria-label=\"h 03 incorrect decimal usage in score calculation leads to reduced user reward earnings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/122\">[H-03] Incorrect decimal usage in score calculation leads to reduced user reward earnings</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/122\">Brenzee</a>, also found by <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/588\">Testerbot</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/549\">0xDetermination</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/433\">santipu_</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/410\">ast3ros</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/387\">ether_sky</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/349\">sces60107</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/311\">pep7siup</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/261\">Breeje</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/141\">tapir</a>, 0xTheC0der (<a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/91\">1</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/85\">2</a>), and <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/84\">SpicyMeatball</a></em></p>\n<p>Users earned rewards are calculated incorrectly because of the incorrect decimals value used to calculate user’s <code>score</code> and markets <code>sumOfMembersScore</code>, which impacts the <code>delta</code> that is added to market’s <code>rewardIndex</code> when <code>Prime.accrueInterest</code> function is called.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>All users rewards are calculated with the following formula:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">rewards = (rewardIndex - userRewardIndex) * scoreOfUser;</span></span></code></pre>\n<p>This means that for user to earn rewards, market’s <code>rewardIndex</code> needs to periodically increase.</p>\n<p><code>markets[vToken].rewardIndex</code> is updated (increased), when <code>Prime.accrueInterest</code> is called.</p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/b11d9ef9db8237678567e66759003138f2368d23/contracts/Tokens/Prime/Prime.sol#L583-L588\"><code>Prime.sol:L583-L588</code></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">delta</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">markets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">vToken</span><span class=\"mtk1\">].</span><span class=\"mtk12\">sumOfMembersScore</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">delta</span><span class=\"mtk1\"> = ((</span><span class=\"mtk12\">distributionIncome</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">EXP_SCALE</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">markets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">vToken</span><span class=\"mtk1\">].</span><span class=\"mtk12\">sumOfMembersScore</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">markets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">vToken</span><span class=\"mtk1\">].</span><span class=\"mtk12\">rewardIndex</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">markets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">vToken</span><span class=\"mtk1\">].</span><span class=\"mtk12\">rewardIndex</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">delta</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>From the code snippet above it is assumed that <code>markets[vToken].sumOfMembersScore</code> is precision of 18 decimals.</p>\n<p>To ensure that user’s <code>score</code> and markets <code>sumOfMemberScore</code> are correctly calculated, in <a href=\"https://github.com/code-423n4/2023-09-venus/blob/b11d9ef9db8237678567e66759003138f2368d23/contracts/Tokens/Prime/Prime.sol#L647-L664\"><code>Prime._calculateScore</code></a> function <code>capital</code> is adjusted to 18 decimals. After that <code>capital</code> is used in <code>Scores.calculateScore</code> function.\nNote: <code>capital</code> precision from <a href=\"https://github.com/code-423n4/2023-09-venus/blob/b11d9ef9db8237678567e66759003138f2368d23/contracts/Tokens/Prime/Prime.sol#L872-L897\"><code>_capitalForScore</code></a> function is in precision of <strong>underlying token decimals</strong>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/b11d9ef9db8237678567e66759003138f2368d23/contracts/Tokens/Prime/Prime.sol#L660-L663\"><code>Prime.sol:660-L663</code></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">capital</span><span class=\"mtk1\">, , ) = </span><span class=\"mtk11\">_capitalForScore</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvsBalanceForScore</span><span class=\"mtk1\">, </span><span class=\"mtk12\">borrow</span><span class=\"mtk1\">, </span><span class=\"mtk12\">supply</span><span class=\"mtk1\">, </span><span class=\"mtk12\">market</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">capital</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">capital</span><span class=\"mtk1\"> * (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** (</span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">vToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">()));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Scores</span><span class=\"mtk1\">.</span><span class=\"mtk11\">calculateScore</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvsBalanceForScore</span><span class=\"mtk1\">, </span><span class=\"mtk12\">capital</span><span class=\"mtk1\">, </span><span class=\"mtk12\">alphaNumerator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">alphaDenominator</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>The mistake is made when <code>vToken.decimals()</code> is used instead of <code>vToken.underlying().decimals()</code>.</p>\n<p>To prove that this is the case, here are vTokens deployed on Binance Smart chain, their decimals and underlying token decimals:</p>\n<table>\n<thead>\n<tr>\n<th>vToken</th>\n<th>vToken decimals</th>\n<th>Underlying token decimals</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://bscscan.com/token/0xecA88125a5ADbe82614ffC12D0DB554E2e2867C8\">vUSDC</a></td>\n<td>8</td>\n<td>18</td>\n</tr>\n<tr>\n<td><a href=\"https://bscscan.com/token/0xf508fcd89b8bd15579dc79a6827cb4686a3592c8\">vETH</a></td>\n<td>8</td>\n<td>18</td>\n</tr>\n<tr>\n<td><a href=\"https://bscscan.com/token/0xa07c5b74c9b40447a954e1466938b865b6bbea36\">vBNB</a></td>\n<td>8</td>\n<td>18</td>\n</tr>\n<tr>\n<td><a href=\"https://bscscan.com/token/0x882c173bc7ff3b7786ca16dfed3dfffb9ee7847b\">vBTC</a></td>\n<td>8</td>\n<td>18</td>\n</tr>\n<tr>\n<td><a href=\"https://bscscan.com/token/0xfd5840cd36d94d7229439859c0112a4185bc0255\">vUSDT</a></td>\n<td>8</td>\n<td>18</td>\n</tr>\n</tbody>\n</table>\n<p>Since <code>vToken.decimals()</code> is used, this means the precision of <code>capital</code> is <code>18 + (18 - 8) = 28</code> decimals instead of 18 decimals, which makes the <code>score</code> calculation from <a href=\"https://github.com/code-423n4/2023-09-venus/blob/b11d9ef9db8237678567e66759003138f2368d23/contracts/Tokens/Prime/libs/Scores.sol#L22-L69\"><code>Score.calculateScore</code></a> function incorrect, since the function expects <code>capital</code> to be in precision of 18 decimals.</p>\n<p>As a result, <code>delta</code> for market’s <code>rewardIndex</code> is incorrectly calculated and it can be 0 even though it shouldn’t be, which means that users will not accrue any rewards.</p>\n<h3 id=\"update-current-test-with-correct-decimals-for-vtokens\" style=\"position:relative;\"><a href=\"#update-current-test-with-correct-decimals-for-vtokens\" aria-label=\"update current test with correct decimals for vtokens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Update current test with correct decimals for vTokens</h3>\n<p>Developers have made a mistake when writing the tests for <code>Prime.sol</code> - in the tests they have set vToken decimals to 18 instead of 8, which makes the tests pass, but on the Binance Smart Chain all of the vToken decimals are 8.</p>\n<p>If the decimal value of vToken is set to 8 in the tests, then the tests will fail.</p>\n<p>Change the <code>vusdt</code>, <code>veth</code> and <code>vbnb</code> decimals to 8 and run:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"bash\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">npx hardhat </span><span class=\"mtk11\">test</span><span class=\"mtk1\"> tests/hardhat/Prime/*.ts tests/hardhat/integration/index.ts</span></span></span></code></pre>\n<p>This will make the current tests fail.</p>\n<h3 id=\"poc-test\" style=\"position:relative;\"><a href=\"#poc-test\" aria-label=\"poc test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PoC Test</h3>\n<p>Here is a test where it shows, that <code>rewardIndex</code> is still 0 after <code>Prime.accrueInterest</code> is called, even though it should be > 0.</p>\n<details>\n<summary>PoC test</summary>\n<p>To run the following test:</p>\n<ol>\n<li>Create <code>PoC.ts</code> file under the <code>tests/hardhat/Prime</code> path.</li>\n<li>Copy the code below and paste it into the <code>PoC.ts</code> file.</li>\n<li>Run <code>npx hardhat test tests/hardhat/Prime/PoC.ts</code></li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"typescript\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">FakeContract</span><span class=\"mtk1\">, </span><span class=\"mtk12\">MockContract</span><span class=\"mtk1\">, </span><span class=\"mtk12\">smock</span><span class=\"mtk1\"> } </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@defi-wonderland/smock&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">loadFixture</span><span class=\"mtk1\">, </span><span class=\"mtk12\">mine</span><span class=\"mtk1\"> } </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@nomicfoundation/hardhat-network-helpers&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk12\">chai</span><span class=\"mtk1\"> </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;chai&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">BigNumber</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Signer</span><span class=\"mtk1\"> } </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;ethers&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">, </span><span class=\"mtk12\">upgrades</span><span class=\"mtk1\"> } </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;hardhat&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">convertToUnit</span><span class=\"mtk1\"> } </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../../helpers/utils&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">BEP20Harness</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">ComptrollerLens</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">ComptrollerLens__factory</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">ComptrollerMock</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">ComptrollerMock__factory</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">IAccessControlManager</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">IProtocolShareReserve</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">InterestRateModelHarness</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">PrimeLiquidityProvider</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">PrimeScenario</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">ResilientOracleInterface</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">VBep20Harness</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">XVS</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">XVSStore</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">XVSVault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">XVSVaultScenario</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../../typechain&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">expect</span><span class=\"mtk1\"> } = </span><span class=\"mtk12\">chai</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">chai</span><span class=\"mtk1\">.</span><span class=\"mtk11\">use</span><span class=\"mtk1\">(</span><span class=\"mtk12\">smock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">matchers</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">export</span><span class=\"mtk1\"> </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">BigNumber</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1000000000000000000&quot;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// 1e18</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">export</span><span class=\"mtk1\"> </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bigNumber16</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">BigNumber</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10000000000000000&quot;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// 1e16</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">export</span><span class=\"mtk1\"> </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vTokenDecimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">BigNumber</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk7\">8</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">type</span><span class=\"mtk1\"> </span><span class=\"mtk10\">SetupProtocolFixture</span><span class=\"mtk1\"> = {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">: </span><span class=\"mtk10\">FakeContract</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">ResilientOracleInterface</span><span class=\"mtk1\">&gt;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">accessControl</span><span class=\"mtk1\">: </span><span class=\"mtk10\">FakeContract</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">IAccessControlManager</span><span class=\"mtk1\">&gt;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">comptrollerLens</span><span class=\"mtk1\">: </span><span class=\"mtk10\">MockContract</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">ComptrollerLens</span><span class=\"mtk1\">&gt;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">: </span><span class=\"mtk10\">MockContract</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">ComptrollerMock</span><span class=\"mtk1\">&gt;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">usdt</span><span class=\"mtk1\">: </span><span class=\"mtk10\">BEP20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\">: </span><span class=\"mtk10\">VBep20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">eth</span><span class=\"mtk1\">: </span><span class=\"mtk10\">BEP20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">veth</span><span class=\"mtk1\">: </span><span class=\"mtk10\">VBep20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">: </span><span class=\"mtk10\">XVSVaultScenario</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">: </span><span class=\"mtk10\">XVS</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">xvsStore</span><span class=\"mtk1\">: </span><span class=\"mtk10\">XVSStore</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">: </span><span class=\"mtk10\">PrimeScenario</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">protocolShareReserve</span><span class=\"mtk1\">: </span><span class=\"mtk10\">FakeContract</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">IProtocolShareReserve</span><span class=\"mtk1\">&gt;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">primeLiquidityProvider</span><span class=\"mtk1\">: </span><span class=\"mtk10\">PrimeLiquidityProvider</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">};</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">async</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deployProtocol</span><span class=\"mtk1\">(): </span><span class=\"mtk10\">Promise</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">SetupProtocolFixture</span><span class=\"mtk1\">&gt; {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> [</span><span class=\"mtk12\">wallet</span><span class=\"mtk1\">, </span><span class=\"mtk12\">user1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">user2</span><span class=\"mtk1\">, </span><span class=\"mtk12\">user3</span><span class=\"mtk1\">] = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getSigners</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">oracle</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">smock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">fake</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">ResilientOracleInterface</span><span class=\"mtk1\">&gt;(</span><span class=\"mtk8\">&quot;ResilientOracleInterface&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolShareReserve</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">smock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">fake</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">IProtocolShareReserve</span><span class=\"mtk1\">&gt;(</span><span class=\"mtk8\">&quot;IProtocolShareReserve&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">accessControl</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">smock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">fake</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">IAccessControlManager</span><span class=\"mtk1\">&gt;(</span><span class=\"mtk8\">&quot;AccessControlManager&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">accessControl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">isAllowedToCall</span><span class=\"mtk1\">.</span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ComptrollerLensFactory</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">smock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mock</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">ComptrollerLens__factory</span><span class=\"mtk1\">&gt;(</span><span class=\"mtk8\">&quot;ComptrollerLens&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ComptrollerFactory</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">smock</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mock</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">ComptrollerMock__factory</span><span class=\"mtk1\">&gt;(</span><span class=\"mtk8\">&quot;ComptrollerMock&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ComptrollerFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deploy</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptrollerLens</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ComptrollerLensFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deploy</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_setAccessControl</span><span class=\"mtk1\">(</span><span class=\"mtk12\">accessControl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_setComptrollerLens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">comptrollerLens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_setPriceOracle</span><span class=\"mtk1\">(</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_setLiquidationIncentive</span><span class=\"mtk1\">(</span><span class=\"mtk11\">convertToUnit</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolShareReserve</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MAX_PERCENT</span><span class=\"mtk1\">.</span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;100&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenFactory</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractFactory</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;BEP20Harness&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">usdt</span><span class=\"mtk1\"> = (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deploy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100000000</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;usdt&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">BigNumber</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk7\">18</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;BEP20 usdt&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )) </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">BEP20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">eth</span><span class=\"mtk1\"> = (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deploy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100000000</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;eth&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">BigNumber</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk7\">18</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;BEP20 eth&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )) </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">BEP20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wbnb</span><span class=\"mtk1\"> = (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deploy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100000000</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;wbnb&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">BigNumber</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk7\">18</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;BEP20 wbnb&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )) </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">BEP20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interestRateModelHarnessFactory</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractFactory</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;InterestRateModelHarness&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">InterestRateModelHarness</span><span class=\"mtk1\"> = (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interestRateModelHarnessFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deploy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">BigNumber</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk7\">18</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">5</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )) </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">InterestRateModelHarness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vTokenFactory</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractFactory</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;VBep20Harness&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\"> = (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vTokenFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deploy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">usdt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">InterestRateModelHarness</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;VToken usdt&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;vusdt&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vTokenDecimals</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">wallet</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )) </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">VBep20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">veth</span><span class=\"mtk1\"> = (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vTokenFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deploy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">eth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">InterestRateModelHarness</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;VToken eth&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;veth&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vTokenDecimals</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">wallet</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )) </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">VBep20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\"> = (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vTokenFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deploy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">wbnb</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">InterestRateModelHarness</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;VToken bnb&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;vbnb&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vTokenDecimals</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">wallet</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )) </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">VBep20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//0.2 reserve factor</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">veth</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_setReserveFactor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bigNumber16</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">20</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_setReserveFactor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bigNumber16</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">20</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">getUnderlyingPrice</span><span class=\"mtk1\">.</span><span class=\"mtk11\">returns</span><span class=\"mtk1\">((</span><span class=\"mtk12\">vToken</span><span class=\"mtk1\">: </span><span class=\"mtk10\">string</span><span class=\"mtk1\">) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vToken</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToUnit</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vToken</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">veth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToUnit</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1200</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">getPrice</span><span class=\"mtk1\">.</span><span class=\"mtk11\">returns</span><span class=\"mtk1\">((</span><span class=\"mtk12\">token</span><span class=\"mtk1\">: </span><span class=\"mtk10\">string</span><span class=\"mtk1\">) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">token</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToUnit</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">half</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">convertToUnit</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;0.5&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_supportMarket</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_setCollateralFactor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">half</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_supportMarket</span><span class=\"mtk1\">(</span><span class=\"mtk12\">veth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_setCollateralFactor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">veth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">half</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">eth</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">usdt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_setMarketSupplyCaps</span><span class=\"mtk1\">([</span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">veth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">], [</span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10000</span><span class=\"mtk1\">), </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">)]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_setMarketBorrowCaps</span><span class=\"mtk1\">([</span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">veth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">], [</span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10000</span><span class=\"mtk1\">), </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">)]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsFactory</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractFactory</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;XVS&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">: </span><span class=\"mtk10\">XVS</span><span class=\"mtk1\"> = (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deploy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">wallet</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)) </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">XVS</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsStoreFactory</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractFactory</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;XVSStore&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsStore</span><span class=\"mtk1\">: </span><span class=\"mtk10\">XVSStore</span><span class=\"mtk1\"> = (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsStoreFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deploy</span><span class=\"mtk1\">()) </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">XVSStore</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsVaultFactory</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractFactory</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;XVSVaultScenario&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">: </span><span class=\"mtk10\">XVSVaultScenario</span><span class=\"mtk1\"> = (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsVaultFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deploy</span><span class=\"mtk1\">()) </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">XVSVaultScenario</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsStore</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setNewOwner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setXvsStore</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">xvsStore</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setAccessControl</span><span class=\"mtk1\">(</span><span class=\"mtk12\">accessControl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvsStore</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user3</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsStore</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setRewardToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lockPeriod</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">300</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">allocPoint</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">100</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">poolId</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardPerBlock</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">allocPoint</span><span class=\"mtk1\">, </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rewardPerBlock</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lockPeriod</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">primeLiquidityProviderFactory</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractFactory</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;PrimeLiquidityProvider&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">primeLiquidityProvider</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">upgrades</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deployProxy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">primeLiquidityProviderFactory</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    [</span><span class=\"mtk12\">accessControl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, [</span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">usdt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">eth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">], [</span><span class=\"mtk7\">10</span><span class=\"mtk1\">, </span><span class=\"mtk7\">10</span><span class=\"mtk1\">, </span><span class=\"mtk7\">10</span><span class=\"mtk1\">]],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {},</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">primeFactory</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractFactory</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;PrimeScenario&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">: </span><span class=\"mtk10\">PrimeScenario</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">upgrades</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deployProxy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">primeFactory</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">1</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">2</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">accessControl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">protocolShareReserve</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">primeLiquidityProvider</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">10</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">constructorArgs:</span><span class=\"mtk1\"> [</span><span class=\"mtk12\">wbnb</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">10512000</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">unsafeAllow:</span><span class=\"mtk1\"> [</span><span class=\"mtk8\">&quot;constructor&quot;</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setPrimeToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setLimit</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addMarket</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addMarket</span><span class=\"mtk1\">(</span><span class=\"mtk12\">veth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_setPrimeToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">togglePause</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">comptrollerLens</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">accessControl</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">usdt</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">eth</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">veth</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">xvsStore</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">protocolShareReserve</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">primeLiquidityProvider</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  };</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">describe</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;PoC&quot;</span><span class=\"mtk1\">, () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployer</span><span class=\"mtk1\">: </span><span class=\"mtk10\">Signer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user1</span><span class=\"mtk1\">: </span><span class=\"mtk10\">Signer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user2</span><span class=\"mtk1\">: </span><span class=\"mtk10\">Signer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user3</span><span class=\"mtk1\">: </span><span class=\"mtk10\">Signer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">: </span><span class=\"mtk10\">MockContract</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">ComptrollerMock</span><span class=\"mtk1\">&gt;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">: </span><span class=\"mtk10\">PrimeScenario</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\">: </span><span class=\"mtk10\">VBep20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">veth</span><span class=\"mtk1\">: </span><span class=\"mtk10\">VBep20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">usdt</span><span class=\"mtk1\">: </span><span class=\"mtk10\">BEP20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">eth</span><span class=\"mtk1\">: </span><span class=\"mtk10\">BEP20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">: </span><span class=\"mtk10\">XVSVault</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">: </span><span class=\"mtk10\">XVS</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">: </span><span class=\"mtk10\">FakeContract</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">ResilientOracleInterface</span><span class=\"mtk1\">&gt;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolShareReserve</span><span class=\"mtk1\">: </span><span class=\"mtk10\">FakeContract</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">IProtocolShareReserve</span><span class=\"mtk1\">&gt;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">primeLiquidityProvider</span><span class=\"mtk1\">: </span><span class=\"mtk10\">PrimeLiquidityProvider</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\">: </span><span class=\"mtk10\">VBep20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bnb</span><span class=\"mtk1\">: </span><span class=\"mtk10\">BEP20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">before</span><span class=\"mtk1\">(</span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    [</span><span class=\"mtk12\">deployer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">user1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">user2</span><span class=\"mtk1\">, </span><span class=\"mtk12\">user3</span><span class=\"mtk1\">] = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getSigners</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">veth</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">usdt</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">eth</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">protocolShareReserve</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">primeLiquidityProvider</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">loadFixture</span><span class=\"mtk1\">(</span><span class=\"mtk12\">deployProtocol</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolShareReserve</span><span class=\"mtk1\">.</span><span class=\"mtk12\">getUnreleasedFunds</span><span class=\"mtk1\">.</span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolShareReserve</span><span class=\"mtk1\">.</span><span class=\"mtk12\">getPercentageDistribution</span><span class=\"mtk1\">.</span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;100&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mine</span><span class=\"mtk1\">(</span><span class=\"mtk7\">90</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">24</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">60</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">60</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">claim</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user2</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user2</span><span class=\"mtk1\">).</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">eth</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">veth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">90</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">veth</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">90</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">usdt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user2</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">9000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user2</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">9000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">enterMarkets</span><span class=\"mtk1\">([</span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">veth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user2</span><span class=\"mtk1\">).</span><span class=\"mtk11\">enterMarkets</span><span class=\"mtk1\">([</span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">veth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">).</span><span class=\"mtk11\">borrow</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">5</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">veth</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user2</span><span class=\"mtk1\">).</span><span class=\"mtk11\">borrow</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenFactory</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractFactory</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;BEP20Harness&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bnb</span><span class=\"mtk1\"> = (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deploy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100000000</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk8\">&quot;bnb&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">BigNumber</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk7\">18</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk8\">&quot;BEP20 bnb&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )) </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">BEP20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interestRateModelHarnessFactory</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractFactory</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;InterestRateModelHarness&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">InterestRateModelHarness</span><span class=\"mtk1\"> = (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interestRateModelHarnessFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deploy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">BigNumber</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk7\">18</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">5</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )) </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">InterestRateModelHarness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vTokenFactory</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractFactory</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;VBep20Harness&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\"> = (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vTokenFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deploy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">bnb</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">InterestRateModelHarness</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk8\">&quot;VToken bnb&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk8\">&quot;vbnb&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">BigNumber</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk7\">8</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">deployer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )) </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">VBep20Harness</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_setReserveFactor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bigNumber16</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">20</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">primeLiquidityProvider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initializeTokens</span><span class=\"mtk1\">([</span><span class=\"mtk12\">bnb</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">getUnderlyingPrice</span><span class=\"mtk1\">.</span><span class=\"mtk11\">returns</span><span class=\"mtk1\">((</span><span class=\"mtk12\">vToken</span><span class=\"mtk1\">: </span><span class=\"mtk10\">string</span><span class=\"mtk1\">) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vToken</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">vusdt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToUnit</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vToken</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">veth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToUnit</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1200</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vToken</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToUnit</span><span class=\"mtk1\">(</span><span class=\"mtk7\">300</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">getPrice</span><span class=\"mtk1\">.</span><span class=\"mtk11\">returns</span><span class=\"mtk1\">((</span><span class=\"mtk12\">token</span><span class=\"mtk1\">: </span><span class=\"mtk10\">string</span><span class=\"mtk1\">) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">token</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToUnit</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">half</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">convertToUnit</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;0.5&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">8</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_supportMarket</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_setCollateralFactor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">half</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bnb</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user3</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_setMarketSupplyCaps</span><span class=\"mtk1\">([</span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">], [</span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">)]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_setMarketBorrowCaps</span><span class=\"mtk1\">([</span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">], [</span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">)]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bnb</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user3</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">90</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user3</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">90</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user2</span><span class=\"mtk1\">).</span><span class=\"mtk11\">borrow</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_setPrimeToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">it</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;PoC&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bob</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">user3</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Bob deposits XVS in the vault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bob</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bob</span><span class=\"mtk1\">).</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2000</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">issue</span><span class=\"mtk1\">(</span><span class=\"mtk4\">false</span><span class=\"mtk1\">, [</span><span class=\"mtk12\">bob</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">()]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addMarket</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">), </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Bob mints vBNB/deposits BNB. This calls Prime.accrueInterestAndUpdateScore</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bnb</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bob</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">90</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bob</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">market</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">markets</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Expect that market.sumOfMembersScore is not 0. This means that the score was updated</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">market</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sumOfMembersScore</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">not</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// We make the PSR.getUnreleasedFunds to return 103683. This lets Prime contract know that</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// there are unreleased funds and rewardIndex should be updated.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolShareReserve</span><span class=\"mtk1\">.</span><span class=\"mtk12\">getUnreleasedFunds</span><span class=\"mtk1\">.</span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk7\">103683</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Call accrueInterest manually.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Since there are unreleased funds AND the sumOfMembersScore !== 0,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// the reward index should be updated.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">accrueInterest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">market</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">markets</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vbnb</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// The reward index should be &gt; 0, but it is not updated.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">market</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardIndex</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n</details>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Make sure that underlying token decimals are used instead of vToken decimals when calculating <code>capital</code> in <code>Prime._calculateScore</code> function.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">capital</span><span class=\"mtk1\">, , ) = </span><span class=\"mtk11\">_capitalForScore</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvsBalanceForScore</span><span class=\"mtk1\">, </span><span class=\"mtk12\">borrow</span><span class=\"mtk1\">, </span><span class=\"mtk12\">supply</span><span class=\"mtk1\">, </span><span class=\"mtk12\">market</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">capital</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">capital</span><span class=\"mtk1\"> * (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** (</span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">IERC20Upgradeable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_getUnderlying</span><span class=\"mtk1\">(</span><span class=\"mtk12\">market</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">()));</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/588\">chechu (Venus) confirmed via duplicate issue 588 and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed. See <a href=\"https://github.com/VenusProtocol/venus-protocol/commit/f1fecacada4bb5d7e4b8cad5b6ca498f2d0d16be\">here</a> and <a href=\"https://github.com/VenusProtocol/venus-protocol/commit/8ac02bc898607d775969694469e012bfbcf1a3cc\">here</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/122#issuecomment-1793594920\">0xDjango (Judge) commented</a>:</strong></p>\n<blockquote>\n<p>Agree with high severity as the core mechanic of interest calculation is incorrect.</p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-3\" style=\"position:relative;\"><a href=\"#medium-risk-findings-3\" aria-label=\"medium risk findings 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (3)</h1>\n<h2 id=\"m-01-scoressol-incorrect-computation-of-users-score-when-alpha-is-1\" style=\"position:relative;\"><a href=\"#m-01-scoressol-incorrect-computation-of-users-score-when-alpha-is-1\" aria-label=\"m 01 scoressol incorrect computation of users score when alpha is 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/591\">[M-01] Scores.sol: Incorrect computation of user’s score when alpha is 1</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/591\">Testerbot</a></em></p>\n<p>The formula for a user’s score depends on the <code>xvs</code> staked and the <code>capital</code>. One core variable in the calculation of a user’s score is <code>alpha</code> which represents the weight for <code>xvs</code> and <code>capital</code>. It has been stated in the <a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/README.md#rewards\">documentation</a> that <code>alpha</code> can range from 0 to 1 depending on what kind of incentive the protocol wants to drive (XVS Staking or supply/borrow). Please review <strong><em>Significance of α</em></strong> subsection.</p>\n<p>When <code>alpha</code> is 1, <code>xvs</code> has all the weight when calculating a user’s score, and <code>capital</code> has no weight. If we see the Cobb-Douglas function, the value of <code>capital</code> doesn’t matter, it will always return 1 since <code>capital^0</code> is always 1. So, a user does not need to borrow or lend in a given market since <code>capital</code> does not have any weight in the score calculation.</p>\n<p>The issue is an inconsistency in the implementation of the Cobb-Douglas function.</p>\n<p>Developers have added an exception: <code>if (xvs == 0 || capital == 0) return 0;</code><br>\nBecause of this the code will always return 0 if either the <code>xvs</code> or the <code>capital</code> is zero, but we know this should not be the case when the <code>alpha</code> value is 1.</p>\n<h3 id=\"poc\" style=\"position:relative;\"><a href=\"#poc\" aria-label=\"poc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PoC</h3>\n<p>To check how it works:</p>\n<p>In <code>describe('boosted yield')</code> add the following code:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"typescript\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">it</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;calculate score only staking&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvsBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">5000</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">capital</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">bigNumber18</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">updateAlpha</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">//  5000^1 * 0^0 = 5000</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// BUT IS RETURNING 0!!!</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">((</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">.</span><span class=\"mtk11\">calculateScore</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvsBalance</span><span class=\"mtk1\">, </span><span class=\"mtk12\">capital</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">toString</span><span class=\"mtk1\">()).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Only return 0 when (<code>xvs = 0</code> or <code>capital = 0</code>) * and <code>alpha</code> is not 1.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/591#issuecomment-1777558655\">chechu (Venus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed <a href=\"https://github.com/VenusProtocol/venus-protocol/commit/64daba3f757085585a705f685e86e468580c0eb5\">here</a>. (Alpha cannot be 0 or 1 anymore)</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/591#issuecomment-1795000916\">0xDjango (Judge) commented</a>:</strong></p>\n<blockquote>\n<p>I agree with Medium severity. In the case where Venus decides to make XVS staking the sole factor in user score, this function should calculate correctly. Also given that the documentation specifically states “The value of α is between 0-1”.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-dos-and-gas-griefing-of-calls-to-primeupdatescores\" style=\"position:relative;\"><a href=\"#m-02-dos-and-gas-griefing-of-calls-to-primeupdatescores\" aria-label=\"m 02 dos and gas griefing of calls to primeupdatescores permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/556\">[M-02] DoS and gas griefing of calls to Prime.updateScores()</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/556\">0xDetermination</a>, also found by <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/682\">SBSecurity</a>, maanas (<a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/681\">1</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/559\">2</a>), <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/679\">al88nsk</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/542\">PwnStars</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/526\">Pessimistic</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/510\">dethera</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/506\">ThreeSigma</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/502\">0xblackskull</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/457\">xAriextz</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/438\">blutorque</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/426\">neumo</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/423\">tsvetanovv</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/334\">sces60107</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/274\">pina</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/232\">oakcobalt</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/182\">Breeje</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/150\">ADM</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/88\">tapir</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/57\">said</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/30\">debo</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/24\">0xweb3boy</a>, and <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/6\">Satyam_Sharma</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L200-L230\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L200-L230</a> </p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/tests/hardhat/Prime/Prime.ts#L294-L301\">https://github.com/code-423n4/2023-09-venus/blob/main/tests/hardhat/Prime/Prime.ts#L294-L301</a></p>\n<p><code>updateScores()</code> is meant to be called to update the scores of many users after reward alpha is changed or reward multipliers are changed. An attacker can cause calls to <code>Prime.updateScores()</code> to out-of-gas revert, delaying score updates. Rewards will be distributed incorrectly until scores are properly updated.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>updateScores()</code> will run out of gas and revert if any of the <code>users</code> passed in the argument array have already been updated. This is due to the <code>continue</code> statement and the incrementing location of <code>i</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function updateScores(address[] memory users) external {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (pendingScoreUpdates == 0) revert NoScoreUpdatesRequired();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (nextScoreUpdateRoundId == 0) revert NoScoreUpdatesRequired();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        for (uint256 i = 0; i &lt; users.length; ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            address user = users[i];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (!tokens[user].exists) revert UserHasNoPrimeToken();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (isScoreUpdated[nextScoreUpdateRoundId][user]) continue;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                i++;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            emit UserScoreUpdated(user);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>An attacker can frontrun calls to <code>updateScores()</code> with a call to <code>updateScores()</code>, passing in a 1-member array of one of the addresses in the frontran call’s argument array. The frontran call will run out of gas and revert, and only one of the users intended to be updated will actually be updated.</p>\n<h3 id=\"test-1\" style=\"position:relative;\"><a href=\"#test-1\" aria-label=\"test 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test</h3>\n<p>Paste and run the below test in the ‘mint and burn’ scenario in Prime.ts (line 302)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    it(&quot;dos_updateScores&quot;, async () =&gt; {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //setup 3 users</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await prime.issue(true, [user1.getAddress(), user2.getAddress(), user3.getAddress()]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvs.connect(user1).approve(xvsVault.address, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvsVault.connect(user1).deposit(xvs.address, 0, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvs.connect(user2).approve(xvsVault.address, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvsVault.connect(user2).deposit(xvs.address, 0, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvs.connect(user3).approve(xvsVault.address, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await xvsVault.connect(user3).deposit(xvs.address, 0, bigNumber18.mul(1000));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //change alpha</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await prime.updateAlpha(1, 5);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //user 1 frontruns updateScores([many users]) with updateScores([solely user3])</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await prime.connect(user1).updateScores([user3.getAddress()])</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      //frontran call should revert</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      await expect(prime.updateScores([user1.getAddress(), user2.getAddress(), user3.getAddress()])).to.be.reverted;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span></code></pre>\n<h3 id=\"tools-used-2\" style=\"position:relative;\"><a href=\"#tools-used-2\" aria-label=\"tools used 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Hardhat</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Increment <code>i</code> such that <code>continue</code> doesn’t result in infinite looping:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    function updateScores(address[] memory users) external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       for (uint256 i = 0; i &lt; users.length; ++i} ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-       for (uint256 i = 0; i &lt; users.length; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-           unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-               i++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-           }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/556#issuecomment-1747724530\">0xRobocop (Lookout) commented</a>:</strong></p>\n<blockquote>\n<p>Finding is correct. The function <code>updateScore</code> will unsuccessfully increment <code>i</code> and hence will not skip the user, causing the call to revert.</p>\n<p>Consider QA, since the function can be called again.</p>\n<p>Marking as primary for sponsor review anyways.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/556#issuecomment-1777561604\">chechu (Venus) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Consider QA.</p>\n<p><code>updateScores</code> could be invoked again.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/556#issuecomment-1787703933\">0xDjango (Judge) commented</a>:</strong></p>\n<blockquote>\n<p>I agree with medium severity. Take the scenario where each user update costs 10_000 gas.</p>\n<ul>\n<li>100 users need to be updated = <code>10_000 * 100</code> = 1_000_000 gas.</li>\n<li>Attacker frontruns as described above, costing themselves ~10,000 gas.</li>\n<li>OOG error will cause original caller to spend 1_000_000 gas.</li>\n<li>Original caller tries again.</li>\n<li>Attacker frontruns again.</li>\n<li>OOG error will cause original caller to spend another 1_000_000 gas.</li>\n</ul>\n<p>This griefing attack can cause a significant amount of required spending. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/556#issuecomment-1828139845\">chechu (Venus) commented</a>:</strong></p>\n<blockquote>\n<p>Fixed <a href=\"https://github.com/VenusProtocol/venus-protocol/commit/fc6a76e29c6b59a03a9ca8f5b4072aa2b9492fa7\">here</a>.</p>\n</blockquote>\n<h2 id=\"m-03-the-owner-is-a-single-point-of-failure-and-a-centralization-risk\" style=\"position:relative;\"><a href=\"#m-03-the-owner-is-a-single-point-of-failure-and-a-centralization-risk\" aria-label=\"m 03 the owner is a single point of failure and a centralization risk permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://gist.github.com/code423n4/9e80eddfb29953d8b5a424084a54e4ed?permalink_comment_id=4762845#m01-the-owner-is-a-single-point-of-failure-and-a-centralization-risk\">[M-03] The <code>owner</code> is a single point of failure and a centralization risk</a></h2>\n<p><em>Submitted by [Tera Bot](<a href=\"https://gist.github.com/code423n4/9e80eddfb29953d8b5a424084a54e4ed?permalink\">https://gist.github.com/code423n4/9e80eddfb29953d8b5a424084a54e4ed?permalink</a></em>comment<em>id=4762845#m01-the-owner-is-a-single-point-of-failure-and-a-centralization-risk)</em></p>\n<p><em>Note: this finding was reported via the winning <a href=\"https://gist.github.com/code423n4/9e80eddfb29953d8b5a424084a54e4ed\">Automated Findings report</a>. It was declared out of scope for the audit, but is being included here for completeness.</em></p>\n<p>Having a single EOA as the only owner of contracts is a large centralization risk and a single point of failure. A single private key may be taken in a hack, or the sole holder of the key may become unable to retrieve the key when necessary. Consider changing to a multi-signature setup, or having a role-based authorization model.</p>\n<p><em>There are 3 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Tokens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Prime</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrimeLiquidityProvider</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">118</span><span class=\"mtk1\">         </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initializeTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokens_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">177</span><span class=\"mtk1\">         </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setPrimeToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prime_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">216</span><span class=\"mtk1\">         </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">sweepToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IERC20Upgradeable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><em>GitHub</em>: [<a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/PrimeLiquidityProvider.sol#L118-L118\">118</a>, <a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/PrimeLiquidityProvider.sol#L177-L177\">177</a>, <a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/PrimeLiquidityProvider.sol#L216-L216\">216</a>]</p>\n<p><strong><a href=\"https://gist.github.com/code423n4/9e80eddfb29953d8b5a424084a54e4ed?permalink_comment_id=4762845#gistcomment-4762845\">chechu (Venus) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>Regarding [M‑03] The owner is a single point of failure and a centralization risk, the owner won’t be an EOA, but that cannot be specified in the solidity code. The owner of our contracts is always the Normal Timelock contract deployed at 0x939bD8d64c0A9583A7Dcea9933f7b21697ab6396. This contract is used in the Governance process, so after a voting period of 24 hours, and an extra delay of 48 hours if the vote passed, this contract will execute the commands agreed on the Venus Improvement Proposal.</p>\n</blockquote>\n<p><strong><a href=\"https://gist.github.com/code423n4/9e80eddfb29953d8b5a424084a54e4ed?permalink_comment_id=4762962#gistcomment-4762962\">0xDjango (Judge) commented</a>:</strong></p>\n<blockquote>\n<p>Confirming medium severity for centralization risk, though Venus does has safeguards in place to ensure that decentralization is achieved through governance. From a user-perspective, the potentiality of centralization risks must be highlighted.</p>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this audit, 88 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/639\">report highlighted below</a> by <strong>Bauchibred</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/634\">0xprinc</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/513\">0xDetermination</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/437\">DavidGiladi</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/291\">josephdara</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/97\">0xTheC0der</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/664\">Testerbot</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/654\">0xScourgedev</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/641\">Maroutis</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/611\">inzinko</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/608\">ge6a</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/602\">merlin</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/593\">rokinot</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/566\">0xMosh</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/561\">btk</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/548\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/546\">0xdice91</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/531\">Fulum</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/521\">PwnStars</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/518\">gkrastenov</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/511\">ThreeSigma</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/504\">imare</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/500\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/485\">Flora</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/482\">DeFiHackLabs</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/478\">SPYBOY</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/477\">KrisApostolov</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/458\">J4X</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/456\">neumo</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/446\">jnforja</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/445\">alexweb3</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/440\">Mirror</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/429\">berlin-101</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/425\">deth</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/424\">pina</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/422\">0xTiwa</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/421\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/412\">twicek</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/411\">ast3ros</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/407\">tonisives</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/382\">0xpiken</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/344\">MohammedRizwan</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/338\">ether_sky</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/336\">pep7siup</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/309\">Brenzee</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/306\">Tricko</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/297\">jkoppel</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/290\">lsaudit</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/271\">0xfusion</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/264\">glcanvas</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/258\">lotux</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/257\">santipu_</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/254\">xAriextz</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/248\">y4y</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/242\">blutorque</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/240\">ArmedGoose</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/234\">sashik_eth</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/233\">Krace</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/204\">Daniel526</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/203\">al88nsk</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/201\">Norah</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/188\">HChang26</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/186\">squeaky_cactus</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/185\">joaovwfreire</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/177\">Breeje</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/167\">oakcobalt</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/161\">hals</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/140\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/131\">peanuts</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/129\">mahdirostami</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/128\">vagrant</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/120\">nobody2018</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/117\">nisedo</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/100\">IceBear</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/83\">terrancrypt</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/81\">Hama</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/79\">said</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/76\">n1punp</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/70\">nadin</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/58\">e0d1n</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/53\">kutugu</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/51\">seerether</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/42\">0xWaitress</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/28\">0x3b</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/25\">0xweb3boy</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/22\">TangYuanShen</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/10\">orion</a>, and <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/5\">ptsanev</a>.</em></p>\n<h2 id=\"01-primesols-_claiminterest-should-apply-a-slippage-or-allow-users-to-partially-claim-their-interest\" style=\"position:relative;\"><a href=\"#01-primesols-_claiminterest-should-apply-a-slippage-or-allow-users-to-partially-claim-their-interest\" aria-label=\"01 primesols _claiminterest should apply a slippage or allow users to partially claim their interest permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[01] Prime.sol’s <code>_claimInterest()</code> should apply a slippage or allow users to partially claim their interest</h2>\n<p>Medium to low impact. The <code>_claimInterest</code> function hardcodes a 0% percent slippage and does not perform a final check after attempting to release funds from various sources. If the contract’s balance is still insufficient after these fund releases, it could lead to a revert on the <code>safeTransfer</code> call, preventing users from claiming their interest.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Take a look at the <code>_claimInterest()</code> function:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_claimInterest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getInterestAccrued</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">user</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">interests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">vToken</span><span class=\"mtk1\">][</span><span class=\"mtk12\">user</span><span class=\"mtk1\">].</span><span class=\"mtk12\">accrued</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">interests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">vToken</span><span class=\"mtk1\">][</span><span class=\"mtk12\">user</span><span class=\"mtk1\">].</span><span class=\"mtk12\">rewardIndex</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">markets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">vToken</span><span class=\"mtk1\">].</span><span class=\"mtk12\">rewardIndex</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">interests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">vToken</span><span class=\"mtk1\">][</span><span class=\"mtk12\">user</span><span class=\"mtk1\">].</span><span class=\"mtk12\">accrued</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlying</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getUnderlying</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vToken</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">IERC20Upgradeable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">asset</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20Upgradeable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">underlying</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">asset</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">address</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IProtocolShareReserve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">protocolShareReserve</span><span class=\"mtk1\">).</span><span class=\"mtk11\">releaseFunds</span><span class=\"mtk1\">(</span><span class=\"mtk12\">comptroller</span><span class=\"mtk1\">, </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">asset</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">IPrimeLiquidityProvider</span><span class=\"mtk1\">(</span><span class=\"mtk12\">primeLiquidityProvider</span><span class=\"mtk1\">).</span><span class=\"mtk11\">releaseFunds</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">asset</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">//@audit-issue M no extra check to see if the balance is still not enough, in the case where it isn&#39;t then the attempt to safetransfer the tokens  would always revert so at least available balance could be sent to user and then later on extras get sent, no?</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">unreleasedPLPIncome</span><span class=\"mtk1\">[</span><span class=\"mtk12\">underlying</span><span class=\"mtk1\">] = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">asset</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InterestClaimed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">, </span><span class=\"mtk12\">vToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>In the above function, the contract tries to ensure it has enough balance to pay out the user’s interest in the following way:</p>\n<ol>\n<li>If the required <code>amount</code> is greater than the contract’s balance, it releases funds from <code>IProtocolShareReserve</code>.</li>\n<li>If the amount is still greater, it attempts to release funds from <code>IPrimeLiquidityProvider</code>.</li>\n</ol>\n<p>The potential issue arises after this. There is no final check to ensure that the <code>amount</code> is less than or equal to the contract’s balance before executing <code>safeTransfer</code>, do note that a slippage of 0% has been applied.</p>\n<p>If both releases (from <code>IProtocolShareReserve</code> and <code>IPrimeLiquidityProvider</code>) do not provide sufficient tokens, the <code>safeTransfer</code> will revert, and the user will be unable to claim their interest.</p>\n<p>Depending on the situation this might not only lead to user frustration but also cause trust issues with the platform and would lead to user funds to be stuck s</p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>To address this issue, the following changes are suggested:</p>\n<ul>\n<li>Add a final balance check.</li>\n<li>If the balance is still insufficient, send whatever is available to the user.</li>\n<li>Store the deficit somewhere and inform the user that there’s more to claim once the contract has sufficient funds.</li>\n</ul>\n<p>A diff for the recommended changes might look like:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">function _claimInterest(address vToken, address user) internal returns (uint256) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    if (amount &gt; asset.balanceOf(address(this))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        address[] memory assets = new address[](1);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        assets[0] = address(asset);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        IProtocolShareReserve(protocolShareReserve).releaseFunds(comptroller, assets);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        if (amount &gt; asset.balanceOf(address(this))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            IPrimeLiquidityProvider(primeLiquidityProvider).releaseFunds(address(asset));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            unreleasedPLPIncome[underlying] = 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   uint256 availableBalance = asset.balanceOf(address(this));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   uint256 transferAmount = (amount &lt;= availableBalance) ? amount : availableBalance;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-   asset.safeTransfer(user, amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   asset.safeTransfer(user, transferAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    emit InterestClaimed(user, vToken, transferAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    return transferAmount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This ensures that a user always gets whatever is available, if the third suggestion is going to be implemented then do not forget to store the differences in a variable</p>\n<blockquote>\n<p>NB: Submitting as QA, due to the chances of this happening being relatively low, but leaving the final decision to judge to upgrade to Medium if they see fit.</p>\n</blockquote>\n<h2 id=\"02-geteffectivedistributionspeed-should-prevent-reversion-and-return-0-if-accrued-is-ever-more-than-balance\" style=\"position:relative;\"><a href=\"#02-geteffectivedistributionspeed-should-prevent-reversion-and-return-0-if-accrued-is-ever-more-than-balance\" aria-label=\"02 geteffectivedistributionspeed should prevent reversion and return 0 if accrued is ever more than balance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[02] <code>getEffectiveDistributionSpeed()</code> should prevent reversion and return <code>0</code> if <code>accrued</code> is ever more than <code>balance</code></h2>\n<p>Low impact, since this is just how to better implement <code>getEffectiveDistributionSpeed()</code> to cover more valid <em>edge cases</em>.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Take a look at <code>getEffectiveDistributionSpeed()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getEffectiveDistributionSpeed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">distributionSpeed</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenDistributionSpeeds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token_</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20Upgradeable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token_</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">accrued</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenAmountAccrued</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token_</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">accrued</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">distributionSpeed</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>As seen, the above function is used to get the rewards per block for a specific token; the issue is that an assumption is made that <code>balance >= accrued</code> is always true, which is not the case.</p>\n<p>To support my argument above, note that the <code>PrimeLiquidityProvider.sol</code> also employs functions like <code>sweepTokens()</code> and <code>releaseFunds</code>. Whereas the latter makes an update to the accrual during its execution (i.e., setting the <code>tokenAmountAccrued[token_]</code> to <code>0</code>), the former does not. This can be seen below:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">sweepToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IERC20Upgradeable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">amount_</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InsufficientBalance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">SweepToken</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token_</span><span class=\"mtk1\">), </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">releaseFunds</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">prime</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCaller</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">paused</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FundsTransferIsPaused</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">accrueTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">accruedAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenAmountAccrued</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token_</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">tokenAmountAccrued</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token_</span><span class=\"mtk1\">] = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TokenTransferredToPrime</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">accruedAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">IERC20Upgradeable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token_</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">prime</span><span class=\"mtk1\">, </span><span class=\"mtk12\">accruedAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Now, in a case where a portion of a token has been swept and the accrual is now more than the balance of said token, the <code>getEffectiveDistributionSpeed()</code> function reverts due to an underflow from the check here:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">distributionSpeed</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenDistributionSpeeds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token_</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20Upgradeable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token_</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">accrued</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenAmountAccrued</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token_</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">accrued</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Make an addition to cover up the edge case in the <code>getEffectiveDistributionSpeed()</code> function, i.e., if accrued is already more than the balance then the distribution speed should be the same as if the difference is 0.</p>\n<p>An approach to the recommended fix can be seen from the diff below:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    function getEffectiveDistributionSpeed(address token_) external view returns (uint256) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        uint256 distributionSpeed = tokenDistributionSpeeds[token_];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        uint256 balance = IERC20Upgradeable(token_).balanceOf(address(this));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        uint256 accrued = tokenAmountAccrued[token_];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (balance - accrued &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (balance &gt; accrued) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            return distributionSpeed;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        return 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"03-inconsistency-in-parameter-validations-between-sister-functions\" style=\"position:relative;\"><a href=\"#03-inconsistency-in-parameter-validations-between-sister-functions\" aria-label=\"03 inconsistency in parameter validations between sister functions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[03] Inconsistency in parameter validations between sister functions</h2>\n<p>Impact is low/informational.</p>\n<p>The inconsistency in validation checks between similar functions can lead to unexpected behavior.</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Take a look at <code>updateAlpha()</code>:</p>\n<details>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateAlpha</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_alphaNumerator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_alphaDenominator</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">_checkAccessAllowed</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;updateAlpha(uint128,uint128)&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">_checkAlphaArguments</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_alphaNumerator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_alphaDenominator</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AlphaUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">alphaNumerator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">alphaDenominator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_alphaNumerator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_alphaDenominator</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">alphaNumerator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_alphaNumerator</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">alphaDenominator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_alphaDenominator</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">allMarkets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">accrueInterest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">allMarkets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">_startScoreUpdateRound</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateMultipliers</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">market</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supplyMultiplier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">borrowMultiplier</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">_checkAccessAllowed</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;updateMultipliers(address,uint256,uint256)&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">markets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">market</span><span class=\"mtk1\">].</span><span class=\"mtk12\">exists</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MarketNotSupported</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">accrueInterest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">market</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MultiplierUpdated</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">market</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">markets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">market</span><span class=\"mtk1\">].</span><span class=\"mtk12\">supplyMultiplier</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">markets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">market</span><span class=\"mtk1\">].</span><span class=\"mtk12\">borrowMultiplier</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">supplyMultiplier</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">borrowMultiplier</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">markets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">market</span><span class=\"mtk1\">].</span><span class=\"mtk12\">supplyMultiplier</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">supplyMultiplier</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">markets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">market</span><span class=\"mtk1\">].</span><span class=\"mtk12\">borrowMultiplier</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">borrowMultiplier</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">_startScoreUpdateRound</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n</details>\n<p>In the <code>updateAlpha</code> function, there is a check <code>_checkAlphaArguments(_alphaNumerator, _alphaDenominator)</code> which ensures the correctness of the arguments provided. This establishes a certain standard of validation for updating alpha values.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_checkAlphaArguments</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_alphaNumerator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_alphaDenominator</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_alphaDenominator</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">_alphaNumerator</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">_alphaDenominator</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidAlphaArguments</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>However, in the <code>updateMultipliers</code> function, there is no equivalent validation function like <code>_checkAlphaArguments</code>. This discrepancy implies that the two functions, which are logically do not maintain a consistent standard of input validation.</p>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider introducing a validation function (e.g., <code>_checkMultipliersArguments</code>) that will validate the parameters <code>supplyMultiplier</code> and <code>borrowMultiplier</code>.</p>\n<ul>\n<li>Incorporate this validation function into the <code>updateMultipliers</code> function, similar to how <code>_checkAlphaArguments</code> is used in the <code>updateAlpha</code> function.</li>\n<li>Make sure that the validation function checks for logical constraints, edge cases, or any other relevant criteria for these parameters.</li>\n</ul>\n<p>A diff for the recommended changes might appear as:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ function _checkMultipliersArguments(uint256 supplyMultiplier, uint256 borrowMultiplier) internal {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+     // Implement the validation logic here</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+     ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">function updateMultipliers(address market, uint256 supplyMultiplier, uint256 borrowMultiplier) external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   _checkMultipliersArguments(supplyMultiplier, borrowMultiplier);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    if (!markets[market].exists) revert MarketNotSupported();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    emit MultiplierUpdated(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    markets[market].supplyMultiplier = supplyMultiplier;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    markets[market].borrowMultiplier = borrowMultiplier;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    _startScoreUpdateRound();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h2 id=\"04-the-lastaccruedblock-naming-needs-to-be-refactored\" style=\"position:relative;\"><a href=\"#04-the-lastaccruedblock-naming-needs-to-be-refactored\" aria-label=\"04 the lastaccruedblock naming needs to be refactored permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[04] The <code>lastAccruedBlock</code> naming needs to be refactored</h2>\n<p>Low impact, confusing comment/docs since the <code>lastAccruedBlock</code> is either wrongly implemented or wrongly named.</p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Take a look at <a href=\"https://github.com/code-423n4/2023-09-venus/blob/b11d9ef9db8237678567e66759003138f2368d23/contracts/Tokens/Prime/PrimeLiquidityProvider.sol#L22-L24\">PrimeLiquidityProvider.sol#L22-L24</a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"soldidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    /// @notice The rate at which token is distributed to the Prime contract</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    mapping(address =&gt; uint256) public lastAccruedBlock;</span></span></code></pre>\n<p>As seen, <code>lastAccruedBlock</code> currently claims to be the rate at which a token is distributed to the prime contract, but this is wrong since this mapping actuallly holds value for the last block an accrual was made for an address.</p>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Fix the comments around the <code>lastAccruedBlock</code> mapping or change the name itself.</p>\n<h2 id=\"05-more-sanity-checks-should-be-applied-to-calculatescore\" style=\"position:relative;\"><a href=\"#05-more-sanity-checks-should-be-applied-to-calculatescore\" aria-label=\"05 more sanity checks should be applied to calculatescore permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[05] More sanity checks should be applied to <code>calculateScore()</code></h2>\n<p>Low impact, since the chances of passing a valuse above type(int256).max is relatively slim.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Take a look at <code>calculateScore()</code>:</p>\n<details>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">calculateScore</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">capital</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">alphaNumerator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">alphaDenominator</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Score function is:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// xvs^𝝰 * capital^(1-𝝰)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//    = capital * capital^(-𝝰) * xvs^𝝰</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//    = capital * (xvs / capital)^𝝰</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//    = capital * (e ^ (ln(xvs / capital))) ^ 𝝰</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//    = capital * e ^ (𝝰 * ln(xvs / capital))     (1)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// or</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//    = capital / ( 1 / e ^ (𝝰 * ln(xvs / capital)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//    = capital / (e ^ (𝝰 * ln(xvs / capital)) ^ -1)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//    = capital / e ^ (𝝰 * -1 * ln(xvs / capital))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//    = capital / e ^ (𝝰 * ln(capital / xvs))     (2)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// To avoid overflows, use (1) when xvs &lt; capital and</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// use (2) when capital &lt; xvs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// If any side is 0, exit early</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">xvs</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">capital</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// If both sides are equal, we have:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// xvs^𝝰 * capital^(1-𝝰)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//    = xvs^𝝰 * xvs^(1-𝝰)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//    = xvs^(𝝰 + 1 - 𝝰)     = xvs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">xvs</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">capital</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lessxvsThanCapital</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">capital</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// (xvs / capital) or (capital / xvs), always in range (0, 1)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ratio</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">lessxvsThanCapital</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">FixedMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toFixed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">, </span><span class=\"mtk12\">capital</span><span class=\"mtk1\">) : </span><span class=\"mtk12\">FixedMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toFixed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">capital</span><span class=\"mtk1\">, </span><span class=\"mtk12\">xvs</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// e ^ ( ln(ratio) * 𝝰 )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">exponentiation</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">FixedMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">exp</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">FixedMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ln</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ratio</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">alphaNumerator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toInt256</span><span class=\"mtk1\">()) / </span><span class=\"mtk12\">alphaDenominator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toInt256</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">lessxvsThanCapital</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">FixedMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uintMul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">capital</span><span class=\"mtk1\">, </span><span class=\"mtk12\">exponentiation</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// capital / e ^ (𝝰 * ln(capital / xvs))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">FixedMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uintDiv</span><span class=\"mtk1\">(</span><span class=\"mtk12\">capital</span><span class=\"mtk1\">, </span><span class=\"mtk12\">exponentiation</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n</details>\n<p>Do note that the function is used to calculate a membership score given some amount of <code>xvs</code> and <code>capital</code>, issue is that both alpha numerators and denoimantors are passed in as <code>uint256</code> values and then while getting the <code>exponentiation</code> value these values are converted to <code>int256</code> which would cause a revert.</p>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Better code structure could be applied, from the get go the values passed in for numerators and denominators could be checked to ensure that they are not above the max value of int256.</p>\n<h2 id=\"06-the-getpendinginterests-should-be-better-implemented-to-handle-cases-where-a-market-is-unavailable\" style=\"position:relative;\"><a href=\"#06-the-getpendinginterests-should-be-better-implemented-to-handle-cases-where-a-market-is-unavailable\" aria-label=\"06 the getpendinginterests should be better implemented to handle cases where a market is unavailable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[06] The <code>getPendingInterests()</code> should be better implemented to handle cases where a market is unavailable</h2>\n<p>Low impact. If one market goes down or becomes unresponsive, users won’t be able to retrieve their pending interests for any of the subsequent markets. This can lead to misinformation and might affect user decisions.</p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Take a look at<code>getPendingInterests()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getPendingInterests</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">PendingInterest</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pendingInterests</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_allMarkets</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">allMarkets</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">PendingInterest</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pendingInterests</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">PendingInterest</span><span class=\"mtk1\">[](</span><span class=\"mtk12\">_allMarkets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//@audit-ok this function currently does not take into account that one of the markets could go down in that case a break in this loop could occur, check perennial sherlock</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_allMarkets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">market</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_allMarkets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interestAccrued</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getInterestAccrued</span><span class=\"mtk1\">(</span><span class=\"mtk12\">market</span><span class=\"mtk1\">, </span><span class=\"mtk12\">user</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">accrued</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">interests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">market</span><span class=\"mtk1\">][</span><span class=\"mtk12\">user</span><span class=\"mtk1\">].</span><span class=\"mtk12\">accrued</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">pendingInterests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">PendingInterest</span><span class=\"mtk1\">({ </span><span class=\"mtk12\">market:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IVToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">market</span><span class=\"mtk1\">).</span><span class=\"mtk11\">underlying</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">amount:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interestAccrued</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">accrued</span><span class=\"mtk1\"> });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pendingInterests</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>As seen, there’s a loop that goes through all available markets to fetch the boosted pending interests for a user. However, if any of these calls (like <code>getInterestAccrued</code>) fail due to market unavailability or any other issue, the loop will be interrupted.</p>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>To ensure the function’s resilience and provide accurate information even if some markets are down, wrap the calls inside the loop in a <code>try/catch</code> block. If a call fails, log an event indicating the market that caused the failure:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MarketCallFailed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">market</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_allMarkets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">market</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_allMarkets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">try</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interestAccrued</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getInterestAccrued</span><span class=\"mtk1\">(</span><span class=\"mtk12\">market</span><span class=\"mtk1\">, </span><span class=\"mtk12\">user</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">accrued</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">interests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">market</span><span class=\"mtk1\">][</span><span class=\"mtk12\">user</span><span class=\"mtk1\">].</span><span class=\"mtk12\">accrued</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pendingInterests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">PendingInterest</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">market:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IVToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">market</span><span class=\"mtk1\">).</span><span class=\"mtk11\">underlying</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">amount:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interestAccrued</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">accrued</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">catch</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MarketCallFailed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">market</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>By incorporating this change, even if a market fails, the loop won’t break, and the function will continue to retrieve the pending interests for the remaining markets. The emitted event will notify off-chain systems or users about the problematic market.</p>\n<h2 id=\"07-missing-zeroiscontract-checks-in-important-functions\" style=\"position:relative;\"><a href=\"#07-missing-zeroiscontract-checks-in-important-functions\" aria-label=\"07 missing zeroiscontract checks in important functions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[07] Missing zero/isContract checks in important functions</h2>\n<p>Low impact, since this requires a bit of an admin error, but some functions which could be more secure using the <code>_ensureZeroAddress()</code> currently do not implement this and could lead to issues.</p>\n<h3 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Using the <code>PrimeLiquidityProvider.sol</code> in scope as acase study.\nBelow is the implementation of <code>_ensureZeroAddress()</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_ensureZeroAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">address_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address_</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidArguments</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>As seen the above is used within protocol as a modifier/function to revert whenever addresses are being passed, this can be seen to be implemented in the <code>setPrime()</code> function and others, but that’s not always the case and in some instances addresses are not ensured to not be zero.</p>\n<p>Additionally, as a security measure an <code>isContract()</code> function could be added and used to check for instances where the provided addresses must be valid contracts with code.</p>\n<h3 id=\"recommended-mitigation-steps-11\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-11\" aria-label=\"recommended mitigation steps 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Make use of <code>_ensureZeroAddress()</code> in all instances where addresses could be passed.</p>\n<p>If the <code>isContract()</code> is going to be implemented then the functionality to be added could look something like this:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">size</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    size := </span><span class=\"mtk11\">extcodesize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">size</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>And then, this could be applied to instances where addreses must have byte code.</p>\n<h2 id=\"08-the-uintdiv-function-from-fixedmathsol-should-protect-against-division-by-0\" style=\"position:relative;\"><a href=\"#08-the-uintdiv-function-from-fixedmathsol-should-protect-against-division-by-0\" aria-label=\"08 the uintdiv function from fixedmathsol should protect against division by 0 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[08] The <code>uintDiv()</code> function from <code>FixedMath.sol</code> should protect against division by <code>0</code></h2>\n<p>Low impact, just info on how to prevent panic errors cause by <code>division by zero</code></p>\n<h3 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Take a look at <code>uintDiv()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">uintDiv</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">u</span><span class=\"mtk1\">, </span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">f</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">f</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidFixedPoint</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">//@audit</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// multiply `u` by FIXED_1 to cancel out the built-in FIXED_1 in f</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">((</span><span class=\"mtk12\">u</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toInt256</span><span class=\"mtk1\">() * </span><span class=\"mtk12\">FixedMath0x</span><span class=\"mtk1\">.</span><span class=\"mtk12\">FIXED_1</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">f</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>As seen, this function is used to divide an unsigned <code>int</code> in this case <code>u</code> by a fixed number <code>f</code>, but currently the only check applied to the <code>uintDiv()</code> function in regards to the divisor <code>f</code> is:\n<code>if (f &#x3C; 0) revert InvalidFixedPoint();</code>\nThe above means that a value of <code>0</code> would get accepted for <code>f</code> which would result in a panic error.</p>\n<h3 id=\"recommended-mitigation-steps-12\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-12\" aria-label=\"recommended mitigation steps 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Make changes to the <code>uintDiv()</code> function</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    function uintDiv(uint256 u, int256 f) internal pure returns (uint256) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (f &lt; 0) revert InvalidFixedPoint();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (f &lt;= 0) revert InvalidFixedPoint();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        // multiply `u` by FIXED_1 to cancel out the built-in FIXED_1 in f</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        return uint256((u.toInt256() * FixedMath0x.FIXED_1) / f);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"09-fix-typo-in-docs\" style=\"position:relative;\"><a href=\"#09-fix-typo-in-docs\" aria-label=\"09 fix typo in docs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[09] Fix typo in docs</h2>\n<p>Low impact, info on how to have a better code documentation.</p>\n<h3 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Take a look at the Prime token’s <a href=\"https://github.com/code-423n4/2023-09-venus/blob/b11d9ef9db8237678567e66759003138f2368d23/contracts/Tokens/Prime/README.md?plain=1#L295-L296\">ReadMe</a></p>\n<p>Line 296 states:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">The OpenZeppelin Plausable contract is used. Only the `claimInterest` function is under control of this pause mechanism.</span></span></code></pre>\n<p>As seen an evident typo has been missed.</p>\n<h3 id=\"recommended-mitigation-steps-13\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-13\" aria-label=\"recommended mitigation steps 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Change the line, from:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">The OpenZeppelin Plausable contract is used. Only the `claimInterest` function is under control of this pause mechanism.</span></span></code></pre>\n<p>To:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">The OpenZeppelin Pausable contract is used. Only the `claimInterest` function is under control of this pause mechanism.</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/639#issuecomment-1795027936\">0xDjango (Judge) commented</a>:</strong></p>\n<blockquote>\n<p>Agree with all QA points, though a couple require design changes that may outweigh the benefit to the protocol from an added risk standpoint.</p>\n</blockquote>\n<p> <strong><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/639#issuecomment-1828144005\">chechu (Venus) commented</a>:</strong></p>\n<blockquote>\n<ol>\n<li>The warden doesn’t explain how Prime can get from the sources less funds than needed. Accounting avoids that scenario. Fee-on-transfer tokens could generate this issue, but they shouldn’t be added as Prime market.\nWhen claimInterest() is called we transfer tokens from PrimeLiquidityProvider to Prime contract when there is insufficient funds. So users can always claim full rewards. </li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"2\">\n<li>Fixed <a href=\"https://github.com/VenusProtocol/venus-protocol/commit/b0ff7ba0f5e304f6b88bedfc13b20d125dc026e6\">here</a>.</li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"3\">\n<li>Acknowledged.</li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"4\">\n<li>Fixed <a href=\"https://github.com/VenusProtocol/venus-protocol/commit/a567d94a7f79f257ab759ff6f154f6f258c2ce13\">here</a>.</li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"5\">\n<li>Acknowledged.</li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"6\">\n<li>Acknowledged.</li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"7\">\n<li>Partially fixed <a href=\"https://github.com/VenusProtocol/venus-protocol/commit/df9e9af4b009bf138dfce8965f07f1c555b3686a\">here</a>.</li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"8\">\n<li>Acknowledged.</li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"9\">\n<li>Fixed <a href=\"https://github.com/VenusProtocol/venus-protocol-documentation/pull/120/commits/5aad7c85da0824f9e0bbc7d699e318ff424340e1\">here</a>.</li>\n</ol>\n</blockquote>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this audit, 11 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/357\">report highlighted below</a> by <strong>DavidGiladi</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/658\">0xhacksmithh</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/635\">0xprinc</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/285\">lsaudit</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/64\">pavankv</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/655\">pontifex</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/571\">hihen</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/192\">jkoppel</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/171\">oakcobalt</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/27\">0x3b</a>, and <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/3\">0xWaitress</a>.</em></p>\n<h2 id=\"g-01-avoid-unnecessary-storage-updates\" style=\"position:relative;\"><a href=\"#g-01-avoid-unnecessary-storage-updates\" aria-label=\"g 01 avoid unnecessary storage updates permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] Avoid unnecessary storage updates</h2>\n<ul>\n<li>Severity: Gas Optimization</li>\n<li>Confidence: High</li>\n<li>Total Gas Saved: 2400</li>\n</ul>\n<h3 id=\"note\" style=\"position:relative;\"><a href=\"#note\" aria-label=\"note permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Note</h3>\n<p>I reported only on three issues that were missing in the winning bot.</p>\n<h3 id=\"description\" style=\"position:relative;\"><a href=\"#description\" aria-label=\"description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>Avoid updating storage when the value hasn’t changed. If the old value is equal to the new value, not re-storing the value will avoid a <code>SSTORE</code> operation (costing 2900 gas), potentially at the expense of a <code>SLOAD</code> operation (2100 gas) or a <code>WARMACCESS</code> operation (100 gas).</p>\n<details>\n<summary>\nThere are 3 instances of this issue:\n</summary>\n<h3 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h1 id=\"-1\" style=\"position:relative;\"><a href=\"#-1\" aria-label=\" 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p>The function <code>updateAlpha()</code> changes the state variable without first verifying if the values are different.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/Prime.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">243    alphaNumerator = _alphaNumerator</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L243\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L243</a></p>\n<h1 id=\"-2\" style=\"position:relative;\"><a href=\"#-2\" aria-label=\" 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p>The function <code>updateAlpha()</code> changes the state variable without first verifying if the values are different.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/Prime.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">244    alphaDenominator = _alphaDenominator</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L244\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L244</a></p>\n<h1 id=\"-3\" style=\"position:relative;\"><a href=\"#-3\" aria-label=\" 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p>The function <code>updateAssetsState()</code> changes the state variable without first verifying if the values are different.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/Prime.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">460    unreleasedPSRIncome[_getUnderlying(address(market))] = 0</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L460\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L460</a></p>\n</details>\n<h1 id=\"-4\" style=\"position:relative;\"><a href=\"#-4\" aria-label=\" 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<h2 id=\"g-02-multiplication-and-division-by-2-should-use-in-bit-shifting\" style=\"position:relative;\"><a href=\"#g-02-multiplication-and-division-by-2-should-use-in-bit-shifting\" aria-label=\"g 02 multiplication and division by 2 should use in bit shifting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] Multiplication and Division by 2 Should use in Bit Shifting</h2>\n<ul>\n<li>Severity: Gas Optimization</li>\n<li>Confidence: High</li>\n<li>Total Gas Saved: 100</li>\n</ul>\n<h3 id=\"description-1\" style=\"position:relative;\"><a href=\"#description-1\" aria-label=\"description 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>The expressions ‘x * 2’ and ‘x / 2’ can be optimized for gas efficiency by utilizing bitwise operations. In Solidity, you can achieve the same results by using bitwise left shift (x &#x3C;&#x3C; 1) for multiplication and bitwise right shift (x >> 1) for division.</p>\n<p>Using bitwise shift operations (SHL and SHR) instead of multiplication (MUL) and division (DIV) opcodes can lead to significant gas savings. The MUL and DIV opcodes cost 5 gas, while the SHL and SHR opcodes incur a lower cost of only 3 gas.</p>\n<p>By leveraging these more efficient bitwise operations, you can reduce the gas consumption of your smart contracts and enhance their overall performance.</p>\n<details>\n<summary>\nThere are 5 instances of this issue:\n</summary>\n<h3 id=\"-5\" style=\"position:relative;\"><a href=\"#-5\" aria-label=\" 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h1 id=\"-6\" style=\"position:relative;\"><a href=\"#-6\" aria-label=\" 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/libs/FixedMath0x.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">122    r += (z * (0x100000000000000000000000000000000 - y)) / 0x100000000000000000000000000000000</span></span></code></pre>\n<p> instead <code>340282366920938463463374607431768211456</code> use bit shifting <code>128</code> </p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath0x.sol#L122\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath0x.sol#L122</a></p>\n<h1 id=\"-7\" style=\"position:relative;\"><a href=\"#-7\" aria-label=\" 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/libs/FixedMath0x.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">124    r += (z * (0x0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa - y)) / 0x200000000000000000000000000000000</span></span></code></pre>\n<p> instead <code>680564733841876926926749214863536422912</code> use bit shifting <code>129</code> </p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath0x.sol#L124\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath0x.sol#L124</a></p>\n<h1 id=\"-8\" style=\"position:relative;\"><a href=\"#-8\" aria-label=\" 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/libs/FixedMath0x.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">128    r += (z * (0x092492492492492492492492492492492 - y)) / 0x400000000000000000000000000000000</span></span></code></pre>\n<p> instead <code>1361129467683753853853498429727072845824</code> use bit shifting <code>130</code> </p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath0x.sol#L128\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath0x.sol#L128</a></p>\n<h1 id=\"-9\" style=\"position:relative;\"><a href=\"#-9\" aria-label=\" 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/libs/FixedMath0x.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">136    r += (z * (0x088888888888888888888888888888888 - y)) / 0x800000000000000000000000000000000</span></span></code></pre>\n<p> instead <code>2722258935367507707706996859454145691648</code> use bit shifting <code>131</code> </p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath0x.sol#L136\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath0x.sol#L136</a></p>\n<h1 id=\"-10\" style=\"position:relative;\"><a href=\"#-10\" aria-label=\" 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/libs/FixedMath0x.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">200    r += z * 0x0000000000000001</span></span></code></pre>\n<p> instead <code>1</code> use bit shifting <code>0</code> </p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath0x.sol#L200\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath0x.sol#L200</a></p>\n</details>\n<h1 id=\"-11\" style=\"position:relative;\"><a href=\"#-11\" aria-label=\" 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<h2 id=\"g-03-modulus-operations-that-could-be-unchecked\" style=\"position:relative;\"><a href=\"#g-03-modulus-operations-that-could-be-unchecked\" aria-label=\"g 03 modulus operations that could be unchecked permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] Modulus operations that could be unchecked</h2>\n<ul>\n<li>Severity: Gas Optimization</li>\n<li>Confidence: High</li>\n<li>Total Gas Saved: 85</li>\n</ul>\n<h3 id=\"description-2\" style=\"position:relative;\"><a href=\"#description-2\" aria-label=\"description 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>Modulus operations should be unchecked to save gas since they cannot overflow or underflow. Execution of modulus operations outside <code>unchecked</code> blocks adds nothing but overhead. Saves about 30 gas.</p>\n<details>\n<summary>\nThere is 1 instance of this issue:\n</summary>\n<h3 id=\"-12\" style=\"position:relative;\"><a href=\"#-12\" aria-label=\" 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h1 id=\"-13\" style=\"position:relative;\"><a href=\"#-13\" aria-label=\" 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/libs/FixedMath0x.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">162    x % 0x0000000000000000000000000000000010000000000000000000000000000000</span></span></code></pre>\n<p> should be unchecked</p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath0x.sol#L162\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath0x.sol#L162</a></p>\n</details>\n<h1 id=\"-14\" style=\"position:relative;\"><a href=\"#-14\" aria-label=\" 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<h2 id=\"g-04-short-circuit-rules-can-be-used-to-optimize-some-gas-usage\" style=\"position:relative;\"><a href=\"#g-04-short-circuit-rules-can-be-used-to-optimize-some-gas-usage\" aria-label=\"g 04 short circuit rules can be used to optimize some gas usage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] Short-circuit rules can be used to optimize some gas usage</h2>\n<ul>\n<li>Severity: Gas Optimization</li>\n<li>Confidence: Medium</li>\n<li>Total Gas Saved: 6300</li>\n</ul>\n<h3 id=\"description-3\" style=\"position:relative;\"><a href=\"#description-3\" aria-label=\"description 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>Some conditions may be reordered to save an SLOAD (2100 gas), as we avoid reading state variables when the first part of the condition fails (with &#x26;&#x26;), or succeeds (with ||). For instance, consider a scenario where you have a <code>stateVariable</code> (a variable stored in contract storage) and a <code>localVariable</code> (a variable in memory). </p>\n<p>If you have a condition like <code>stateVariable > 0 &#x26;&#x26; localVariable > 0</code>, if <code>localVariable > 0</code> is false, the Solidity runtime will still execute <code>stateVariable > 0</code>, which costs an SLOAD operation (2100 gas). However, if you reorder the condition to <code>localVariable > 0 &#x26;&#x26; stateVariable > 0</code>, the <code>stateVariable > 0</code> check won’t happen if <code>localVariable > 0</code> is false, saving you the SLOAD gas cost.</p>\n<p>Similarly, for the <code>||</code> operator, if you have a condition like <code>stateVariable > 0 || localVariable > 0</code>, and <code>stateVariable > 0</code> is true, the Solidity runtime will still execute <code>localVariable > 0</code>. But if you reorder the condition to <code>localVariable > 0 || stateVariable > 0</code>, and <code>localVariable > 0</code> is true, the <code>stateVariable > 0</code> check won’t happen, again saving you the SLOAD gas cost.</p>\n<p>This detector checks for such conditions in the contract and reports if any condition could be optimized by taking advantage of the short-circuiting behavior of <code>&#x26;&#x26;</code> and <code>||</code>.</p>\n<details>\n<summary>\nThere are 3 instances of this issue:\n</summary>\n<h3 id=\"-15\" style=\"position:relative;\"><a href=\"#-15\" aria-label=\" 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h1 id=\"-16\" style=\"position:relative;\"><a href=\"#-16\" aria-label=\" 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/Prime.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">377    stakedAt[user] == 0 &amp;&amp; isAccountEligible &amp;&amp; !tokens[user].exists</span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"> // @audit: Switch isAccountEligible &amp;&amp; stakedAt[user] == 0 </span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L377\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L377</a></p>\n<h1 id=\"-17\" style=\"position:relative;\"><a href=\"#-17\" aria-label=\" 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/Prime.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">379    tokens[user].exists &amp;&amp; isAccountEligible</span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"> // @audit: Switch isAccountEligible &amp;&amp; tokens[user].exists </span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L379\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L379</a></p>\n<h1 id=\"-18\" style=\"position:relative;\"><a href=\"#-18\" aria-label=\" 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/Prime.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">369    tokens[user].exists &amp;&amp; !isAccountEligible</span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"> // @audit: Switch ! isAccountEligible &amp;&amp; tokens[user].exists </span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L369\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L369</a></p>\n</details>\n<h1 id=\"-19\" style=\"position:relative;\"><a href=\"#-19\" aria-label=\" 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<h2 id=\"g-05-unnecessary-casting-of-variables\" style=\"position:relative;\"><a href=\"#g-05-unnecessary-casting-of-variables\" aria-label=\"g 05 unnecessary casting of variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] Unnecessary Casting of Variables</h2>\n<ul>\n<li>Severity: Gas Optimization</li>\n<li>Confidence: High</li>\n</ul>\n<h3 id=\"description-4\" style=\"position:relative;\"><a href=\"#description-4\" aria-label=\"description 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>This detector scans for instances where a variable is casted to its own type. This is unnecessary and can be safely removed to improve code readability.</p>\n<details>\n<summary>\nThere is 1 instance of this issue:\n</summary>\n<h3 id=\"-20\" style=\"position:relative;\"><a href=\"#-20\" aria-label=\" 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h1 id=\"-21\" style=\"position:relative;\"><a href=\"#-21\" aria-label=\" 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/libs/FixedMath.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">25    return (n.toInt256() * FixedMath0x.FIXED_1) / int256(d.toInt256())</span></span></code></pre>\n<p>Unnecessary cast: <code>int256(d.toInt256())</code> it cast to the same type.<br>\n<a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath.sol#L25\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath.sol#L25</a></p>\n</details>\n<h1 id=\"-22\" style=\"position:relative;\"><a href=\"#-22\" aria-label=\" 22 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<h2 id=\"g-06-unused-named-return-variables\" style=\"position:relative;\"><a href=\"#g-06-unused-named-return-variables\" aria-label=\"g 06 unused named return variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06] Unused Named Return Variables</h2>\n<ul>\n<li>Severity: Gas Optimization</li>\n<li>Confidence: High</li>\n</ul>\n<h3 id=\"description-5\" style=\"position:relative;\"><a href=\"#description-5\" aria-label=\"description 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>Named return variables allow for clear and explicit naming of values to be returned from a function. However, when these variables are unused, it can lead to confusion and make the code less maintainable.</p>\n<details>\n<summary>\nThere are 5 instances of this issue:\n</summary>\n<h3 id=\"-23\" style=\"position:relative;\"><a href=\"#-23\" aria-label=\" 23 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h1 id=\"-24\" style=\"position:relative;\"><a href=\"#-24\" aria-label=\" 24 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/Prime.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">174    function getPendingInterests(address user) external returns (PendingInterest[] memory pendingInterests) </span></span></code></pre>\n<p>there is not use of this variables:\n@ <strong>pendingInterests</strong></p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L174-L194\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L174-L194</a></p>\n<h1 id=\"-25\" style=\"position:relative;\"><a href=\"#-25\" aria-label=\" 25 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/Prime.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">496    function calculateAPR(address market, address user) external view returns (uint256 supplyAPR, uint256 borrowAPR) </span></span></code></pre>\n<p>there is not use of this variables:\n@ <strong>supplyAPR</strong>\n@ <strong>borrowAPR</strong></p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L496-L515\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L496-L515</a></p>\n<h1 id=\"-26\" style=\"position:relative;\"><a href=\"#-26\" aria-label=\" 26 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/Prime.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">527    function estimateAPR(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">528            address market,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">529            address user,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">530            uint256 borrow,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">531            uint256 supply,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">532            uint256 xvsStaked</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">533        ) external view returns (uint256 supplyAPR, uint256 borrowAPR) </span></span></code></pre>\n<p>there is not use of this variables:\n@ <strong>supplyAPR</strong>\n@ <strong>borrowAPR</strong></p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L527-L548\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L527-L548</a></p>\n<h1 id=\"-27\" style=\"position:relative;\"><a href=\"#-27\" aria-label=\" 27 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/libs/FixedMath.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">53    function ln(int256 x) internal pure returns (int256 r) </span></span></code></pre>\n<p>there is not use of this variables:\n@ <strong>r</strong></p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath.sol#L53-L55\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath.sol#L53-L55</a></p>\n<h1 id=\"-28\" style=\"position:relative;\"><a href=\"#-28\" aria-label=\" 28 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/libs/FixedMath.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">58    function exp(int256 x) internal pure returns (int256 r) </span></span></code></pre>\n<p>there is not use of this variables:\n@ <strong>r</strong></p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath.sol#L58-L60\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/libs/FixedMath.sol#L58-L60</a></p>\n</details>\n<h1 id=\"-29\" style=\"position:relative;\"><a href=\"#-29\" aria-label=\" 29 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<h2 id=\"g-07-inefficient-parameter-storage\" style=\"position:relative;\"><a href=\"#g-07-inefficient-parameter-storage\" aria-label=\"g 07 inefficient parameter storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-07] Inefficient Parameter Storage</h2>\n<ul>\n<li>Severity: Gas Optimization</li>\n<li>Confidence: Medium</li>\n<li>Total Gas Saved: 50</li>\n</ul>\n<h3 id=\"description-6\" style=\"position:relative;\"><a href=\"#description-6\" aria-label=\"description 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>When passing function parameters, using the <code>calldata</code> area instead of <code>memory</code> can improve gas efficiency. Calldata is a read-only area where function arguments and external function calls’ parameters are stored.</p>\n<p>By using <code>calldata</code> for function parameters, you avoid unnecessary gas costs associated with copying data from <code>calldata</code> to memory. This is particularly beneficial when the parameter is read-only and doesn’t require modification within the contract.</p>\n<p>Using <code>calldata</code> for function parameters can help optimize gas usage, especially when making external function calls or when the parameter values are provided externally and don’t need to be stored persistently within the contract.</p>\n<details>\n<summary>\nThere is 1 instance of this issue:\n</summary>\n<h3 id=\"-30\" style=\"position:relative;\"><a href=\"#-30\" aria-label=\" 30 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h1 id=\"-31\" style=\"position:relative;\"><a href=\"#-31\" aria-label=\" 31 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">File: contracts/Tokens/Prime/Prime.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">200    address[] memory users</span></span></code></pre>\n<p> should be declared as <code>calldata</code> instead </p>\n<p><a href=\"https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L200\">https://github.com/code-423n4/2023-09-venus/blob/main/contracts/Tokens/Prime/Prime.sol#L200</a></p>\n</details>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/357#issuecomment-1829646613\">chechu (Venus) commented</a>:</strong></p>\n<ol>\n<li>Acknowledged. It’s an admin function and will be called only if values are different and needs an update. </li>\n<li>Acknowledged.</li>\n<li>Acknowledged.</li>\n<li>Fixed <a href=\"https://github.com/VenusProtocol/venus-protocol/commit/5505bf7c2503f3228f3421b45ee749fce2c2921a\">here</a>.</li>\n<li>Acknowledged.</li>\n<li>Fixed <a href=\"https://github.com/VenusProtocol/venus-protocol/commit/acfb5a7f8c8a1ba5a8b3d7b469558298eca61b6f\">here</a>.</li>\n<li>Fixed <a href=\"https://github.com/VenusProtocol/venus-protocol/commit/240f16f6cc53fa06a6389dfbb6fa821eb2b41b04\">here</a>.</li>\n</ol>\n<hr>\n<h1 id=\"audit-analysis\" style=\"position:relative;\"><a href=\"#audit-analysis\" aria-label=\"audit analysis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Audit Analysis</h1>\n<p>For this audit, 14 analysis reports were submitted by wardens. An analysis report examines the codebase as a whole, providing observations and advice on such topics as architecture, mechanism, or approach. The <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/465\">report highlighted below</a> by <strong>3agle</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/455\">J4X</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/243\">oakcobalt</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/195\">0x3b</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/170\">Breeje</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/660\">radev_sw</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/646\">Bauchibred</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/577\">0xDetermination</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/563\">hunter_w3b</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/536\">kaveyjoe</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/413\">ArmedGoose</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/350\">versiyonbir</a>, <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/262\">jamshed</a>, and <a href=\"https://github.com/code-423n4/2023-09-venus-findings/issues/241\">0xweb3boy</a>.</em></p>\n<h2 id=\"index\" style=\"position:relative;\"><a href=\"#index\" aria-label=\"index permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Index</h2>\n<ul>\n<li>\n<p><a href=\"#codebase-quality\">Codebase Quality</a></p>\n<ul>\n<li><a href=\"#strengths\">Strengths</a></li>\n<li><a href=\"#weaknesses\">Weaknesses</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#mechanism-review\">Mechanism Review</a></p>\n<ul>\n<li><a href=\"#architecture--working\">Architecture &#x26; Working</a></li>\n<li><a href=\"#reward-mechanism\">Reward Mechanism</a></li>\n<li><a href=\"#prime\">Prime</a></li>\n<li><a href=\"#primeliquidityprovider\">Prime Liquidity Provider</a></li>\n</ul>\n</li>\n<li><a href=\"#architecture-recommendations\">Architecture Recommendations</a></li>\n<li><a href=\"#centralization-risks\">Centralization Risks</a></li>\n<li><a href=\"#systemic-risks\">Systemic Risks</a></li>\n<li><a href=\"#key-takeaways\">Key Takeaways</a></li>\n</ul>\n<h2 id=\"codebase-quality\" style=\"position:relative;\"><a href=\"#codebase-quality\" aria-label=\"codebase quality permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Codebase quality</h2>\n<ul>\n<li>The codebase exhibited remarkable quality. It has undergone multiple audits, ensuring the robustness of all major functionalities.</li>\n</ul>\n<h3 id=\"strengths\" style=\"position:relative;\"><a href=\"#strengths\" aria-label=\"strengths permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Strengths</h3>\n<ul>\n<li>Comprehensive unit tests</li>\n<li>Utilization of Natspec</li>\n<li>Adoption of governance for major changes, reducing centaralization risks.</li>\n</ul>\n<h3 id=\"weaknesses\" style=\"position:relative;\"><a href=\"#weaknesses\" aria-label=\"weaknesses permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Weaknesses</h3>\n<ul>\n<li>Documentation had room for improvement.</li>\n</ul>\n<h2 id=\"mechanism-review\" style=\"position:relative;\"><a href=\"#mechanism-review\" aria-label=\"mechanism review permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mechanism Review</h2>\n<h3 id=\"architecture--working\" style=\"position:relative;\"><a href=\"#architecture--working\" aria-label=\"architecture  working permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Architecture &#x26; Working</h3>\n<ul>\n<li>\n<p>Following are the main components of the Venus Prime system:</p>\n<ol>\n<li>\n<p><strong>Prime.sol:</strong></p>\n<ul>\n<li><em>Description</em>: Prime.sol serves as the central contract responsible for distributing both revocable and irrevocable tokens to stakers.</li>\n<li><em>Functionality</em>: This contract plays a pivotal role in issuing Prime tokens to eligible stakers, enabling them to participate in the Venus Prime program and earn rewards.</li>\n</ul>\n</li>\n<li>\n<p><strong>ProtocolLiquidityProvider:</strong></p>\n<ul>\n<li><em>Description</em>: The ProtocolLiquidityProvider contract holds a reserve of funds that are designated for gradual allocation to the Prime contract over a predefined time period.</li>\n<li><em>Functionality</em>: This component ensures a consistent and planned provision of tokens to the Prime contract, guaranteeing a continuous supply of rewards for Prime token holders.</li>\n</ul>\n</li>\n<li>\n<p><strong>ProtocolShareReserve (OOS):</strong></p>\n<ul>\n<li><em>Description</em>: The ProtocolShareReserve acts as the repository for interest earnings generated across all prime markets within the Venus Protocol.</li>\n<li><em>Functionality</em>: It collects the interest earnings and acts as a centralized pool from which the Prime contract draws the necessary funds. These funds are then distributed as rewards to Prime token holders, contributing to the sustainability of the Venus Prime program.</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/131902879/283156338-96eb323b-87fc-4274-ae56-795f881689ed.png\" alt=\"image\"> </p>\n<h3 id=\"rewarding-mechanism\" style=\"position:relative;\"><a href=\"#rewarding-mechanism\" aria-label=\"rewarding mechanism permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rewarding Mechanism</h3>\n<p><img src=\"https://user-images.githubusercontent.com/131902879/283156465-4da087d6-902c-423e-b849-991f7105e453.png\" alt=\"image\"></p>\n<ol>\n<li>\n<p>Initialization (Block 0):</p>\n<ul>\n<li>Variables are set to default values.</li>\n</ul>\n</li>\n<li>\n<p>Income and Scoring (Blocks 1-10):</p>\n<ul>\n<li>Over 10 blocks, 20 USDT income is distributed.</li>\n<li>User scores total 50, allocating 0.4 USDT per score point.</li>\n<li><code>markets[vToken].rewardIndex</code> increases by +0.4.</li>\n</ul>\n</li>\n<li>\n<p>Income and Scoring (Blocks 11-30):</p>\n<ul>\n<li>Next 20 blocks distribute 10 USDT.</li>\n<li>User scores remain constant.</li>\n<li><code>markets[vToken].rewardIndex</code> increases by +0.2.</li>\n</ul>\n</li>\n<li>\n<p>User Claims a Prime Token (Block 35):</p>\n<ul>\n<li>User claims a Prime token.</li>\n<li><code>markets[vToken].rewardIndex</code> updated via <code>accrueInterest</code>.</li>\n<li>Over 5 blocks, 5 USDT income with no score change.</li>\n<li><code>markets[vToken].rewardIndex</code> increases by +0.1.</li>\n<li><code>interests[market][account].rewardIndex</code> set to <code>markets[market].rewardIndex</code>.</li>\n</ul>\n</li>\n<li>\n<p>User Claims Interest (Block 50):</p>\n<ul>\n<li>User claims accrued interests.</li>\n<li><code>markets[vToken].rewardIndex</code> updated via <code>accrueInterest</code>.</li>\n<li>Over 15 blocks, 120 USDT income with score change (sum of scores becomes 60).</li>\n<li><code>markets[vToken].rewardIndex</code> increases by +2.</li>\n</ul>\n</li>\n<li>\n<p>Interest Calculation for the User:</p>\n<ul>\n<li>User’s interest calculated using <code>_interestAccrued</code>.</li>\n<li>The difference between <code>markets[vToken].rewardIndex</code> (2.7) and <code>interests[market][account].rewardIndex</code> (0.7) is 2 USDT per score point.</li>\n<li>Multiplied by user’s score (10) equals 20 USDT accrued interest.</li>\n</ul>\n</li>\n<li>\n<p>Updating User’s Reward Index:</p>\n<ul>\n<li><code>interests[vToken][user].rewardIndex</code> set to the new <code>markets[vToken].rewardIndex</code>.</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"prime\" style=\"position:relative;\"><a href=\"#prime\" aria-label=\"prime permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prime</h3>\n<p><img src=\"https://user-images.githubusercontent.com/131902879/283156537-fd5af46d-525b-43fc-bcd6-19ab175c17af.png\" alt=\"image\"></p>\n<ul>\n<li>\n<p><code>Prime.sol</code> is a critical component of Venus Protocol, offering users the opportunity to earn rewards generated from specific markets within the protocol. Here’s how it works:</p>\n<ul>\n<li>To be eligible for a Prime token, regular users must stake a minimum of 1,000 XVS for a continuous period of 90 days.</li>\n<li>Once this condition is met, users can claim their Prime token, signaling the beginning of rewards accrual.</li>\n<li>Prime token holders have the flexibility to claim their accrued rewards at their convenience.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Key Features and Functions in <code>Prime.sol</code></strong>:</p>\n<ul>\n<li>Utilizes the Cobb-Douglas function to calculate user rewards.</li>\n<li>\n<p>Offers two types of Prime Tokens:</p>\n<ul>\n<li>Revocable: Can be minted after staking a minimum of 1,000 XVS for 90 days but can be burnt if the stake falls below 1,000 XVS.</li>\n<li>Irrevocable (Phase 2) - Specifics for this token type will be detailed in Phase 2 of the Venus Prime program.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"primeliquidityprovider\" style=\"position:relative;\"><a href=\"#primeliquidityprovider\" aria-label=\"primeliquidityprovider permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PrimeLiquidityProvider</h3>\n<p><img src=\"https://user-images.githubusercontent.com/131902879/283156622-93e889cc-40ee-4c95-9d37-11f9f704bcb9.png\" alt=\"image\"></p>\n<ul>\n<li>\n<p><code>PrimeLiquidityProvider.sol</code> serves as the second source of tokens for the Prime program, complementing the tokens generated by Venus markets. Key details include:</p>\n<ul>\n<li>This contract, <code>PrimeLiquidityProvider</code>, allocates a predetermined quantity of tokens to Prime holders in a uniform manner over a defined period.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Key Features and Functions in <code>PrimeLiquidityProvider.sol</code></strong>:</p>\n<ul>\n<li>Ability to add new tokens for rewards accrual.</li>\n<li>Configurable token distribution speed.</li>\n<li>Safeguard mechanisms for accidentally sent tokens.</li>\n<li>Ability to pause and resume token transfers, ensuring control and stability within the program.</li>\n</ul>\n<h2 id=\"architecture-recommendations\" style=\"position:relative;\"><a href=\"#architecture-recommendations\" aria-label=\"architecture recommendations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Architecture Recommendations</h2>\n<ul>\n<li><strong>Staking and Earning Venus Prime Tokens</strong>: These are essential parts of the Venus Prime Yield Protocol. Let’s break them down and talk about ways to make them even better:</li>\n<li>\n<p><strong>Staking as it is now</strong>:</p>\n<ul>\n<li>Right now, if you want to earn a Prime Token, you have to lock up at least 1,000 XVS for 90 days. This Prime Token represents the XVS you’ve staked and comes with some perks. But if you take out some XVS and drop below 1,000, you’ll lose your Prime Token.</li>\n</ul>\n</li>\n<li>\n<p><strong>Ways to Make Staking Better</strong>:</p>\n<ul>\n<li><strong>Different Staking Levels</strong>: Instead of one fixed requirement, we could have different levels for staking. This way, even if you have fewer tokens, you can join in. Different levels might offer different bonuses to encourage more staking.</li>\n<li><strong>Flexible Staking Time</strong>: We could let you choose how long you want to stake your XVS, depending on what suits you. Staking for longer could mean more rewards, which could motivate people to keep their XVS locked up longer.</li>\n<li><strong>Smart Staking Rules</strong>: The rules for how much you need to stake could change depending on how the market is doing and how much XVS is worth. This could help keep things steady and reliable.</li>\n</ul>\n</li>\n<li>\n<p><strong>What You Can Do with Venus Prime Tokens</strong>:</p>\n<ul>\n<li><strong>More Ways to Use Them</strong>: We could give you more things to do with your Prime Tokens, so they’re even more useful in the Venus ecosystem. That could encourage more people to join in.</li>\n<li>These tokens are like keys to the Venus ecosystem. You can use them to vote on changes, earn rewards, and access different parts of the system.</li>\n</ul>\n</li>\n<li>These changes could make staking easier and more rewarding, and make Venus Prime Tokens more valuable. It’s all about making the system better for everyone.</li>\n</ul>\n<h2 id=\"centralization-risks\" style=\"position:relative;\"><a href=\"#centralization-risks\" aria-label=\"centralization risks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Centralization Risks</h2>\n<ul>\n<li><strong>Smart Contract Centralization</strong>: The protocol is based on smart contracts, which are autonomous and decentralized by nature. However, the developers of the protocol have the ability to update or modify these contracts, introducing a potential point of centralization. If these powers are abused or misused, it could lead to centralization risks</li>\n<li><strong>Governance Centralization</strong>: The governance of Venus Prime is controlled by XVS token holders. If a small group of individuals or entities comes to own a large portion of XVS tokens, they could potentially control the governance of the protocol, leading to centralization. This can include making decisions that favor them at the expense of other users</li>\n</ul>\n<h2 id=\"systemic-risks\" style=\"position:relative;\"><a href=\"#systemic-risks\" aria-label=\"systemic risks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Systemic Risks</h2>\n<ol>\n<li><strong>Governance Risk</strong>: The protocol faced a hacking attempt where the attacker tried to gain control of the protocol by bribery (VIP42). Although the attempt was thwarted, it highlights the risk of governance attacks</li>\n<li><strong>Risk Fund Adequacy</strong>: Venus has a risk fund established to address potential shortfalls in the protocol, particularly in situations of ineffective or delayed liquidations. However, if the fund is not adequate to cover a major event, it could potentially result in a systemic risk</li>\n<li><strong>Price Oracle Resilience</strong>: Venus V4 introduces resilient price feeds. If these feeds fail or provide inaccurate data, it could potentially destabilize the system. The protocol’s resilience to such an event is yet to be tested</li>\n<li><strong>Dependence on XVS Staking</strong>: Venus Prime requires users to stake at least 1,000 XVS for 90 days to mint their Prime Token. If a user decides to withdraw XVS and their balance falls below 1,000, their Prime Token will be automatically revoked. This introduces a risk if there’s a significant drop in the value of XVS or if a large number of users decide to unstake and sell their XVS simultaneously</li>\n</ol>\n<h2 id=\"key-takeaways\" style=\"position:relative;\"><a href=\"#key-takeaways\" aria-label=\"key takeaways permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Key Takeaways</h2>\n<ol>\n<li><strong>Dual Token System:</strong> The protocol introduces a bifurcated token system, comprising revocable and irrevocable Prime tokens. Each token variant carries its unique rules and benefits, offering users a versatile array of choices.</li>\n<li><strong>Sustainable Rewards:</strong> Diverging from conventional incentive models dependent on external sources, Venus Prime generates its rewards intrinsically within the protocol. This inherent mechanism not only fosters sustainability but also augments the potential for long-term growth.</li>\n<li><strong>Long-Term Commitment:</strong> Users are incentivized to uphold a commitment to the protocol by staking XVS tokens for a minimum duration of 90 days. This prolonged engagement serves the dual purpose of fostering dedication and dissuading premature withdrawals.</li>\n<li><strong>Complex Reward Calculation:</strong> Venus Prime employs a sophisticated reward calculation formula known as the Cobb-Douglas function to ascertain user rewards. This intricacy, while daunting on the surface, is intricately designed to uphold principles of equity and precision in reward distribution.</li>\n</ol>\n<h3 id=\"time-spent\" style=\"position:relative;\"><a href=\"#time-spent\" aria-label=\"time spent permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Time spent:</h3>\n<p>45 hours</p>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Audits incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Audit submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-3\">High Risk Findings (3)</a></p>\n<ul>\n<li><a href=\"#h-01-primesol---user-can-claim-prime-token-without-having-any-staked-xvs-because-his-stakedat-isnt-reset-whenever-he-is-issued-an-irrevocable-token\">[H-01] Prime.sol - User can claim Prime token without having any staked XVS, because his <code>stakedAt</code> isn’t reset whenever he is issued an irrevocable token</a></li>\n<li><a href=\"#h-02-a-malicious-user-can-avoid-unfavorable-score-updates-after-alphamultiplier-changes-resulting-in-accrual-of-outsized-rewards-for-the-attacker-at-the-expense-of-other-users\">[H-02] A malicious user can avoid unfavorable score updates after alpha/multiplier changes, resulting in accrual of outsized rewards for the attacker at the expense of other users</a></li>\n<li><a href=\"#h-03-incorrect-decimal-usage-in-score-calculation-leads-to-reduced-user-reward-earnings\">[H-03] Incorrect decimal usage in score calculation leads to reduced user reward earnings</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-3\">Medium Risk Findings (3)</a></p>\n<ul>\n<li><a href=\"#m-01-scoressol-incorrect-computation-of-users-score-when-alpha-is-1\">[M-01] Scores.sol: Incorrect computation of user’s score when alpha is 1</a></li>\n<li><a href=\"#m-02-dos-and-gas-griefing-of-calls-to-primeupdatescores\">[M-02] DoS and gas griefing of calls to Prime.updateScores()</a></li>\n<li><a href=\"#m-03-the-owner-is-a-single-point-of-failure-and-a-centralization-risk\">[M-03] The <code>owner</code> is a single point of failure and a centralization risk</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#01-primesols-_claiminterest-should-apply-a-slippage-or-allow-users-to-partially-claim-their-interest\">01 Prime.sol’s <code>_claimInterest()</code> should apply a slippage or allow users to partially claim their interest</a></li>\n<li><a href=\"#02-geteffectivedistributionspeed-should-prevent-reversion-and-return-0-if-accrued-is-ever-more-than-balance\">02 <code>getEffectiveDistributionSpeed()</code> should prevent reversion and return <code>0</code> if <code>accrued</code> is ever more than <code>balance</code></a></li>\n<li><a href=\"#03-inconsistency-in-parameter-validations-between-sister-functions\">03 Inconsistency in parameter validations between sister functions</a></li>\n<li><a href=\"#04-the-lastaccruedblock-naming-needs-to-be-refactored\">04 The <code>lastAccruedBlock</code> naming needs to be refactored</a></li>\n<li><a href=\"#05-more-sanity-checks-should-be-applied-to-calculatescore\">05 More sanity checks should be applied to <code>calculateScore()</code></a></li>\n<li><a href=\"#06-the-getpendinginterests-should-be-better-implemented-to-handle-cases-where-a-market-is-unavailable\">06 The <code>getPendingInterests()</code> should be better implemented to handle cases where a market is unavailable</a></li>\n<li><a href=\"#07-missing-zeroiscontract-checks-in-important-functions\">07 Missing zero/isContract checks in important functions</a></li>\n<li><a href=\"#08-the-uintdiv-function-from-fixedmathsol-should-protect-against-division-by-0\">08 The <code>uintDiv()</code> function from <code>FixedMath.sol</code> should protect against division by <code>0</code></a></li>\n<li><a href=\"#09-fix-typo-in-docs\">09 Fix typo in docs</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#g-01-avoid-unnecessary-storage-updates\">G-01 Avoid unnecessary storage updates</a></li>\n<li><a href=\"#g-02-multiplication-and-division-by-2-should-use-in-bit-shifting\">G-02 Multiplication and Division by 2 Should use in Bit Shifting</a></li>\n<li><a href=\"#g-03-modulus-operations-that-could-be-unchecked\">G-03 Modulus operations that could be unchecked</a></li>\n<li><a href=\"#g-04-short-circuit-rules-can-be-used-to-optimize-some-gas-usage\">G-04 Short-circuit rules can be used to optimize some gas usage</a></li>\n<li><a href=\"#g-05-unnecessary-casting-of-variables\">G-05 Unnecessary Casting of Variables</a></li>\n<li><a href=\"#g-06-unused-named-return-variables\">G-06 Unused Named Return Variables</a></li>\n<li><a href=\"#g-07-inefficient-parameter-storage\">G-07 Inefficient Parameter Storage</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#audit-analysis\">Audit Analysis</a></p>\n<ul>\n<li><a href=\"#index\">Index</a></li>\n<li><a href=\"#codebase-quality\">Codebase quality</a></li>\n<li><a href=\"#mechanism-review\">Mechanism Review</a></li>\n<li><a href=\"#architecture-recommendations\">Architecture Recommendations</a></li>\n<li><a href=\"#centralization-risks\">Centralization Risks</a></li>\n<li><a href=\"#systemic-risks\">Systemic Risks</a></li>\n<li><a href=\"#key-takeaways\">Key Takeaways</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}