{
  "circa": {
    "title": "yAxis contest",
    "sponsor": "yAxis",
    "slug": "2021-11-yaxis",
    "date": "2022-01-27",
    "findings": "https://github.com/code-423n4/2021-11-yaxis-findings/issues",
    "contest": 56
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 code contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the code contest outlined in this document, C4 conducted an analysis of yAxis contest smart contract system written in Solidity. The code contest took place between November 16â€”November 18 2021.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>18 Wardens contributed reports to the yAxis contest:</p>\n<ol>\n<li>WatchPug (<a href=\"https://github.com/jack-the-pug\">jtp</a> and <a href=\"https://github.com/mingwatch\">ming</a>)</li>\n<li>harleythedog</li>\n<li><a href=\"https://twitter.com/cmichelio\">cmichel</a></li>\n<li><a href=\"https://twitter.com/SolidityDev\">pauliax</a></li>\n<li>TimmyToes </li>\n<li><a href=\"https://twitter.com/defsec_\">defsec</a></li>\n<li><a href=\"https://twitter.com/_ye0lde\">ye0lde</a></li>\n<li><a href=\"https://twitter.com/HickupH\">hickuphh3</a></li>\n<li><a href=\"https://twitter.com/jonah1005w\">jonah1005</a></li>\n<li><a href=\"https://twitter.com/merkleplant_eth\">pmerkleplant</a></li>\n<li>0x0x0x</li>\n<li><a href=\"https://twitter.com/gzeon\">gzeon</a></li>\n<li><a href=\"https://tqts.ar/\">tqts</a></li>\n<li>hubble (ksk2345 and shri4net)</li>\n<li>pants</li>\n<li>xxxxx</li>\n<li><a href=\"https://twitter.com/hack3r_0m\">hack3r-0m</a></li>\n<li><a href=\"https://twitter.com/Meta0xNull\">Meta0xNull</a></li>\n</ol>\n<p>This contest was judged by <a href=\"https://twitter.com/liam_eastwood13\">0xleastwood</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/itsmetechjay\">itsmetechjay</a> and <a href=\"https://twitter.com/CloudEllie1\">CloudEllie</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 15 unique vulnerabilities and 67 total findings. All of the issues presented here are linked back to their original finding.</p>\n<p>Of these vulnerabilities, 2 received a risk rating in the category of HIGH severity, 1 received a risk rating in the category of MEDIUM severity, and 12 received a risk rating in the category of LOW severity.</p>\n<p>C4 analysis also identified 19 non-critical recommendations and 33 gas optimizations.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2021-11-yaxis\">C4 yAxis contest repository</a>, and is composed of 184 smart contracts written in the Solidity programming language and includes 9265 lines of Solidity code and 7712 lines of JavaScript.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code423n4.com\">the C4 website</a>.</p>\n<h1 id=\"high-risk-findings-2\" style=\"position:relative;\"><a href=\"#high-risk-findings-2\" aria-label=\"high risk findings 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (2)</h1>\n<h2 id=\"h-01-yaxisvaultadaptersolwithdraw-will-most-certainly-fail\" style=\"position:relative;\"><a href=\"#h-01-yaxisvaultadaptersolwithdraw-will-most-certainly-fail\" aria-label=\"h 01 yaxisvaultadaptersolwithdraw will most certainly fail permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/46\">[H-01] <code>YaxisVaultAdapter.sol#withdraw()</code> will most certainly fail</a></h2>\n<p><em>Submitted by WatchPug</em></p>\n<p>The actual token withdrawn from <code>vault.withdraw()</code> will most certainly less than the <code>_amount</code>, due to precision loss in <code>_tokensToShares()</code> and <code>vault.withdraw()</code>.</p>\n<p>As a result, <code>IDetailedERC20(_token).safeTransfer(_recipient, _amount)</code> will revert due to insufficant balance.</p>\n<p>Based on the simulation we ran, it will fail <code>99.99%</code> of the time unless the <code>pps == 1e18</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2021-11-yaxis/blob/146febcb61ae7fe20b0920849c4f4bbe111c6ba7/contracts/v3/alchemix/adapters/YaxisVaultAdapter.sol#L68-L72\">https://github.com/code-423n4/2021-11-yaxis/blob/146febcb61ae7fe20b0920849c4f4bbe111c6ba7/contracts/v3/alchemix/adapters/YaxisVaultAdapter.sol#L68-L72</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyAdmin</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_tokensToShares</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_token</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getToken</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IDetailedERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2021-11-yaxis/blob/146febcb61ae7fe20b0920849c4f4bbe111c6ba7/contracts/v3/Vault.sol#L181-L187\">https://github.com/code-423n4/2021-11-yaxis/blob/146febcb61ae7fe20b0920849c4f4bbe111c6ba7/contracts/v3/Vault.sol#L181-L187</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_shares</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> = (</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">().</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_shares</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">div</span><span class=\"mtk1\">(</span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vaultToken</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">());</span></span></span></code></pre>\n<h4 id=\"recommendation\" style=\"position:relative;\"><a href=\"#recommendation\" aria-label=\"recommendation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h4>\n<p>Change to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyAdmin</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_token</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getToken</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">beforeBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IDetailedERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_tokensToShares</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IDetailedERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_recipient</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IDetailedERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) - </span><span class=\"mtk12\">beforeBalance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/46\">Xuefeng-Zhu (yAxis) confirmed</a></strong> </p>\n<h2 id=\"h-02-cdpsol-update-overwrites-users-credit-on-every-positive-increment\" style=\"position:relative;\"><a href=\"#h-02-cdpsol-update-overwrites-users-credit-on-every-positive-increment\" aria-label=\"h 02 cdpsol update overwrites users credit on every positive increment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/31\">[H-02] CDP.sol update overwrites userâ€™s credit on every positive increment</a></h2>\n<p><em>Submitted by harleythedog</em></p>\n<h4 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>Within <code>CDP.sol</code> (<a href=\"https://github.com/code-423n4/2021-11-yaxis/blob/main/contracts/v3/alchemix/libraries/alchemist/CDP.sol\">https://github.com/code-423n4/2021-11-yaxis/blob/main/contracts/v3/alchemix/libraries/alchemist/CDP.sol</a>) there is a function called update. This function slowly decreases the debt of a position as yield is earned, until the debt is fully paid off, and the idea is then that the credit should begin incrementing as more yield is accumulated. However, the current logic to increment the totalCredit is this line of code (line 39 of <code>CDP.sol</code>):</p>\n<p><code>\\_self.totalCredit = \\_earnedYield.sub(\\_currentTotalDebt);</code></p>\n<p>Notice that that each time update is called, this overwrites the previous totalCredit with the incremental credit accumulated. The line should instead be:</p>\n<p><code>\\_self.totalCredit = \\_self.totalCredit.add(\\_earnedYield.sub(\\_currentTotalDebt));</code></p>\n<p>Indeed, look at the function <code>getUpdatedTotalCredit</code>, it returns the value:</p>\n<p><code>\\_self.totalCredit + (\\_unclaimedYield - \\_currentTotalDebt);</code></p>\n<p>So it is obviously intended that the <code>totalCredit</code> should keep increasing over time instead of being overwritten on each update with a small value. The impact of this issue is large - the credit of every position will always be overwritten and the correct information will be lost forever. Userâ€™s credit should grow over time, but instead it is overwritten with a small value every time update is called.</p>\n<h4 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p>See line 39 in <code>CDP.sol</code> here: <a href=\"https://github.com/code-423n4/2021-11-yaxis/blob/main/contracts/v3/alchemix/libraries/alchemist/CDP.sol#:~:text=_self.totalCredit%20%3D%20_earnedYield.sub(_currentTotalDebt)%3B\">https://github.com/code-423n4/2021-11-yaxis/blob/main/contracts/v3/alchemix/libraries/alchemist/CDP.sol#:~:text=_self.totalCredit%20%3D%20_earnedYield.sub(_currentTotalDebt)%3B</a></p>\n<h4 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h4>\n<p>Manual inspection.</p>\n<h4 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Change code as described above to increment <code>totalCredit</code> instead of overwrite it.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/31#issuecomment-985278604\">Xuefeng-Zhu (yAxis) disputed</a>:</strong></p>\n<blockquote>\n<p>If there is debt, the credit should be zero </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/31#issuecomment-998542307\">0xleastwood (judge) commented</a>:</strong></p>\n<blockquote>\n<p>It seems like if <code>_self.totalDebt</code> is already zero and yield has been earned by the protocol, <code>_self.totalCredit</code> will be overwritten. This doesnâ€™t seem ideal, could you clarify why the issue is incorrect?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/31#issuecomment-998543262\">0xleastwood (judge) commented</a>:</strong></p>\n<blockquote>\n<p>If Iâ€™m not mistaken, yield can be earned from a positive credit (net 0 debt) position.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/31#issuecomment-999386020\">Xuefeng-Zhu (yAxis) commented</a>:</strong></p>\n<blockquote>\n<p>@0xleastwood <code>totalCredit</code> is 0 if there is debt</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/31#issuecomment-999923125\">0xleastwood (judge) commented</a>:</strong></p>\n<blockquote>\n<p>After chatting to @Xuefeng-Zhu in Discord, he was able to confirm the issue as valid. So keeping it as is.</p>\n</blockquote>\n<h1 id=\"medium-risk-findings-1\" style=\"position:relative;\"><a href=\"#medium-risk-findings-1\" aria-label=\"medium risk findings 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (1)</h1>\n<h2 id=\"m-01-prevent-minting-during-emergency-exit\" style=\"position:relative;\"><a href=\"#m-01-prevent-minting-during-emergency-exit\" aria-label=\"m 01 prevent minting during emergency exit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/12\">[M-01] Prevent Minting During Emergency Exit</a></h2>\n<p><em>Submitted by TimmyToes, also found by defsec</em></p>\n<h4 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>Potential increased financial loss during security incident.</p>\n<h4 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p><a href=\"https://github.com/code-423n4/2021-11-yaxis/blob/0311dd421fb78f4f174aca034e8239d1e80075fe/contracts/v3/alchemix/Alchemist.sol#L611\">https://github.com/code-423n4/2021-11-yaxis/blob/0311dd421fb78f4f174aca034e8239d1e80075fe/contracts/v3/alchemix/Alchemist.sol#L611</a></p>\n<p>Consider a critical incident where a vault is being drained or in danger of being drained due to a vulnerability within the vault or its strategies.</p>\n<p>At this stage, you want to trigger emergency exit and users want to withdraw their funds and repay/liquidate to enable the withdrawal of funds. However, minting against debt does not seem like a desirable behaviour at this time. It only seems to enable unaware users to get themselves into trouble by locking up their funds, or allow an attacker to do more damage.</p>\n<h4 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Convert emergency exit check to a modifier, award wardens who made that suggestion, and then apply that modifier here.</p>\n<p>Alternatively, it is possible that the team might want to allow minting against credit: users minting against credit would effectively be cashing out their rewards. This might be seen as desirable during emergency exit, or it might be seen as a potential extra source of risk. If this is desired, then the emergency exit check could be placed at line 624 with a modified message, instructing users to only use credit.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/12\">Xuefeng-Zhu (yAxis) confirmed</a></strong></p>\n<h1 id=\"low-risk-findings-12\" style=\"position:relative;\"><a href=\"#low-risk-findings-12\" aria-label=\"low risk findings 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk Findings (12)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/63\">[L-01] Pending governance is not cleared</a> <em>Submitted by cmichel</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/33\">[L-02] <code>Alchemist.sol</code> does not use safeApprove</a> <em>Submitted by jonah1005, also found by cmichel</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/65\">[L-03] <code>Alchemist.migrate</code> can push duplicate adapters to <code>_vaults</code></a> <em>Submitted by cmichel</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/66\">[L-04] <code>Transmuter.unstake</code> updates user without first updating distributing yield</a> <em>Submitted by cmichel</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/68\">[L-05] No incentive to call <code>transmute()</code> instead of <code>forceTransmute(self)</code></a> <em>Submitted by cmichel</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/103\">[L-06] anyone can deposit to adapters directly</a> <em>Submitted by pauliax, also found by hickuphh3</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/107\">[L-07] _setupRole not in constructor</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/108\">[L-08] setSentinel actually adds sentinel</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/35\">[L-09] Incorrect function docs</a> <em>Submitted by pmerkleplant, also found by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/7\">[L-10] Incorrect Event Emitted in Alchemist.sol</a> <em>Submitted by TimmyToes, also found by hubble, ye0lde, defsec, WatchPug, pauliax, and gzeon</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/117\">[L-11] Incorrect comment or code in runPhasedDistribution (Transmuter.sol)</a> <em>Submitted by ye0lde</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/10\">[L-12] Effects and Interactions Before Check</a> <em>Submitted by TimmyToes</em></li>\n</ul>\n<h1 id=\"non-critical-findings-19\" style=\"position:relative;\"><a href=\"#non-critical-findings-19\" aria-label=\"non critical findings 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Non-Critical Findings (19)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/105\">[N-01] Context and msg.sender</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/11\">[N-02] Convert Emergency Exit Check to Modifier.</a> <em>Submitted by TimmyToes</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/5\">[N-04] Incorrect Info in Comment in Alchemist.sol</a> <em>Submitted by TimmyToes</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/6\">[N-05] Incorrect Info in Comment in Alchemist.sol (138)</a> <em>Submitted by TimmyToes, also found by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/77\">[N-06] Incorrect Comment</a> <em>Submitted by TimmyToes</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/4\">[N-07] Lack of â€˜emitâ€™ keyword in AlToken.sol</a> <em>Submitted by tqts</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/47\">[N-08] Use of deprecated <code>safeApprove</code></a> <em>Submitted by WatchPug, also found by pants and gzeon</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/48\">[N-09] Should <code>safeApprove(0)</code> first</a> <em>Submitted by WatchPug, also found by jonah1005 and defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/20\">[N-10] Lack of Proper Tests?</a> <em>Submitted by TimmyToes</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/87\">[N-11] Open TODOs</a> <em>Submitted by pants</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/34\">[N-12] Missing events for owner only functions that change critical parameters</a> <em>Submitted by defsec, also found by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/88\">[N-13] Require statements without messages</a> <em>Submitted by pants</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/56\">[N-14] No Transfer Ownership Pattern in AlToken.sol</a> <em>Submitted by Meta0xNull</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/60\">[N-15] Constructor Lack of Zero Address Check for Tokens</a> <em>Submitted by Meta0xNull</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/49\">[N-16] Tokens with fee on transfer are not supported</a> <em>Submitted by WatchPug, also found by TimmyToes and 0x0x0x</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/76\">[N-17] No Event Emitted on Minting</a> <em>Submitted by TimmyToes</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/75\">[N-18] Lack of Input Validation</a> <em>Submitted by TimmyToes</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/24\">[N-19] No event for <code>Alchemist.sol#setPegMinimum</code></a> <em>Submitted by 0x0x0x</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/15\">[N-20] admin Variable is High Risk</a> <em>Submitted by TimmyToes</em></li>\n</ul>\n<h1 id=\"gas-optimizations-33\" style=\"position:relative;\"><a href=\"#gas-optimizations-33\" aria-label=\"gas optimizations 33 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations (33)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/100\">[G-01] <code>AlchemistVault.sol</code> can be optimised</a> <em>Submitted by 0x0x0x</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/102\">[G-02] Optimize <code>Alchemist.sol#_withdrawFundsTo</code></a> <em>Submitted by 0x0x0x</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/17\">[G-03] Cache length of array when looping</a> <em>Submitted by 0x0x0x</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/22\">[G-04] For uint <code>> 0</code> can be replaced with <code>!= 0</code> for gas optimisation</a> <em>Submitted by 0x0x0x</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/23\">[G-05] At <code>Alchemist.sol#acceptGovernance</code>, cache <code>pendingGovernance</code> earlier to save gas</a> <em>Submitted by 0x0x0x, also found by xxxxx</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/91\">[G-06] <code>CDP.sol#update.sol</code> can be optimized</a> <em>Submitted by 0x0x0x</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/92\">[G-07] <code>CDP.sol#getUpdatedTotalDebt</code> can be optimized</a> <em>Submitted by 0x0x0x</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/26\">[G-08] Upgrade pragma to at least 0.8.4</a> <em>Submitted by defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/28\">[G-09] Redundant Import</a> <em>Submitted by defsec, also found by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/62\">[G-10] Gas optimization: Caching variables</a> <em>Submitted by gzeon</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/72\">[G-11] Gas Optimization: Inline instead of modifier</a> <em>Submitted by gzeon</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/97\">[G-12] Gas optimization: Reduce storage write</a> <em>Submitted by gzeon</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/119\">[G-13] several functions can be marked external</a> <em>Submitted by hack3r-0m, also found by defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/18\">[G-14] Remove FixedPointMath </a> <em>Submitted by TimmyToes, also found by hickuphh3</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/83\">[G-15] State variables can be <code>immutable</code>s</a> <em>Submitted by pants</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/110\">[G-16] Constant expressions</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/111\">[G-17] Assigned operations to constant variables</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/9\">[G-18] Multiple Assignments to Storage Variable</a> <em>Submitted by TimmyToes</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/2\">[G-19] Gas optimization when a paused user calls mint() in AlToken.sol</a> <em>Submitted by tqts, also found by Meta0xNull and WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/3\">[G-20] Gas optimization in AlToken.sol</a> <em>Submitted by tqts</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/36\">[G-21] Unnecessary libraries</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/37\">[G-22] Use immutable variable can save gas</a> <em>Submitted by WatchPug, also found by hickuphh3, pauliax, 0x0x0x, and TimmyToes</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/41\">[G-23] Only using <code>SafeMath</code> when necessary can save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/44\">[G-24] Cache and read storage variables from the stack can save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/45\">[G-25] <code>YaxisVaultAdapter.sol</code> Use inline expression can save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/50\">[G-26] Use short reason strings can save gas</a> <em>Submitted by WatchPug, also found by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/51\">[G-27] Change unnecessary storage variables to constants can save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/52\">[G-28] Save <code>vault.getToken()</code> as an immutable variable in <code>YaxisVaultAdapter.sol</code> contract can save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/53\">[G-29] <code>Alchemist.sol#mint()</code> Two storage writes can be combined into one</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/54\">[G-30] Inline internal functions that are being used only once can save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/96\">[G-31] Removing the unnecessary function</a> <em>Submitted by xxxxx, also found by TimmyToes, pauliax, and hack3r-0m</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/115\">[G-32] Unused Named Returns</a> <em>Submitted by ye0lde</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-11-yaxis-findings/issues/116\">[G-33] TRANSMUTATION_PERIOD Issues</a> <em>Submitted by ye0lde</em></li>\n</ul>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-2\">High Risk Findings (2)</a></p>\n<ul>\n<li><a href=\"#h-01-yaxisvaultadaptersolwithdraw-will-most-certainly-fail\">[H-01] <code>YaxisVaultAdapter.sol#withdraw()</code> will most certainly fail</a></li>\n<li><a href=\"#h-02-cdpsol-update-overwrites-users-credit-on-every-positive-increment\">[H-02] CDP.sol update overwrites userâ€™s credit on every positive increment</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-1\">Medium Risk Findings (1)</a></p>\n<ul>\n<li><a href=\"#m-01-prevent-minting-during-emergency-exit\">[M-01] Prevent Minting During Emergency Exit</a></li>\n</ul>\n</li>\n<li><a href=\"#low-risk-findings-12\">Low Risk Findings (12)</a></li>\n<li><a href=\"#non-critical-findings-19\">Non-Critical Findings (19)</a></li>\n<li><a href=\"#gas-optimizations-33\">Gas Optimizations (33)</a></li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>",
  "md": "\n# Overview\n\n## About C4\n\nCode4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.\n\nA C4 code contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.\n\nDuring the code contest outlined in this document, C4 conducted an analysis of yAxis contest smart contract system written in Solidity. The code contest took place between November 16â€”November 18 2021.\n\n## Wardens\n\n18 Wardens contributed reports to the yAxis contest:\n\n1. WatchPug ([jtp](https://github.com/jack-the-pug) and [ming](https://github.com/mingwatch))\n1. harleythedog\n1. [cmichel](https://twitter.com/cmichelio)\n1. [pauliax](https://twitter.com/SolidityDev)\n1. TimmyToes \n1. [defsec](https://twitter.com/defsec_)\n1. [ye0lde](https://twitter.com/_ye0lde)\n1. [hickuphh3](https://twitter.com/HickupH)\n1. [jonah1005](https://twitter.com/jonah1005w)\n1. [pmerkleplant](https://twitter.com/merkleplant_eth)\n1. 0x0x0x\n1. [gzeon](https://twitter.com/gzeon)\n1. [tqts](https://tqts.ar/)\n1. hubble (ksk2345 and shri4net)\n1. pants\n1. xxxxx\n1. [hack3r-0m](https://twitter.com/hack3r_0m)\n1. [Meta0xNull](https://twitter.com/Meta0xNull)\n\nThis contest was judged by [0xleastwood](https://twitter.com/liam_eastwood13).\n\nFinal report assembled by [itsmetechjay](https://twitter.com/itsmetechjay) and [CloudEllie](https://twitter.com/CloudEllie1).\n\n# Summary\n\nThe C4 analysis yielded an aggregated total of 15 unique vulnerabilities and 67 total findings. All of the issues presented here are linked back to their original finding.\n\nOf these vulnerabilities, 2 received a risk rating in the category of HIGH severity, 1 received a risk rating in the category of MEDIUM severity, and 12 received a risk rating in the category of LOW severity.\n\nC4 analysis also identified 19 non-critical recommendations and 33 gas optimizations.\n\n# Scope\n\nThe code under review can be found within the [C4 yAxis contest repository](https://github.com/code-423n4/2021-11-yaxis), and is composed of 184 smart contracts written in the Solidity programming language and includes 9265 lines of Solidity code and 7712 lines of JavaScript.\n\n# Severity Criteria\n\nC4 assesses the severity of disclosed vulnerabilities according to a methodology based on [OWASP standards](https://owasp.org/www-community/OWASP_Risk_Rating_Methodology).\n\nVulnerabilities are divided into three primary risk categories: high, medium, and low.\n\nHigh-level considerations for vulnerabilities span the following key areas when conducting assessments:\n\n- Malicious Input Handling\n- Escalation of privileges\n- Arithmetic\n- Gas use\n\nFurther information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on [the C4 website](https://code423n4.com).\n\n# High Risk Findings (2)\n## [[H-01] `YaxisVaultAdapter.sol#withdraw()` will most certainly fail](https://github.com/code-423n4/2021-11-yaxis-findings/issues/46)\n_Submitted by WatchPug_\n\nThe actual token withdrawn from `vault.withdraw()` will most certainly less than the `_amount`, due to precision loss in `_tokensToShares()` and `vault.withdraw()`.\n\nAs a result, `IDetailedERC20(_token).safeTransfer(_recipient, _amount)` will revert due to insufficant balance.\n\nBased on the simulation we ran, it will fail `99.99%` of the time unless the `pps == 1e18`.\n\n<https://github.com/code-423n4/2021-11-yaxis/blob/146febcb61ae7fe20b0920849c4f4bbe111c6ba7/contracts/v3/alchemix/adapters/YaxisVaultAdapter.sol#L68-L72>\n\n```solidity\nfunction withdraw(address _recipient, uint256 _amount) external override onlyAdmin {\n    vault.withdraw(_tokensToShares(_amount));\n    address _token = vault.getToken();\n    IDetailedERC20(_token).safeTransfer(_recipient, _amount);\n}\n```\n\n<https://github.com/code-423n4/2021-11-yaxis/blob/146febcb61ae7fe20b0920849c4f4bbe111c6ba7/contracts/v3/Vault.sol#L181-L187>\n\n```solidity\nfunction withdraw(\n    uint256 _shares\n)\n    public\n    override\n{\n    uint256 _amount = (balance().mul(_shares)).div(IERC20(address(vaultToken)).totalSupply());\n```\n\n#### Recommendation\n\nChange to:\n\n```solidity\nfunction withdraw(address _recipient, uint256 _amount) external override onlyAdmin {\n    address _token = vault.getToken();\n    uint256 beforeBalance = IDetailedERC20(_token).balanceOf(address(this));\n    \n    vault.withdraw(_tokensToShares(_amount));\n\n    IDetailedERC20(_token).safeTransfer(\n        _recipient,\n        IDetailedERC20(_token).balanceOf(address(this)) - beforeBalance\n    );\n}\n```\n\n**[Xuefeng-Zhu (yAxis) confirmed](https://github.com/code-423n4/2021-11-yaxis-findings/issues/46)** \n\n## [[H-02] CDP.sol update overwrites user's credit on every positive increment](https://github.com/code-423n4/2021-11-yaxis-findings/issues/31)\n_Submitted by harleythedog_\n\n#### Impact\n\nWithin `CDP.sol` (<https://github.com/code-423n4/2021-11-yaxis/blob/main/contracts/v3/alchemix/libraries/alchemist/CDP.sol>) there is a function called update. This function slowly decreases the debt of a position as yield is earned, until the debt is fully paid off, and the idea is then that the credit should begin incrementing as more yield is accumulated. However, the current logic to increment the totalCredit is this line of code (line 39 of `CDP.sol`):\n\n`\\_self.totalCredit = \\_earnedYield.sub(\\_currentTotalDebt);`\n\nNotice that that each time update is called, this overwrites the previous totalCredit with the incremental credit accumulated. The line should instead be:\n\n`\\_self.totalCredit = \\_self.totalCredit.add(\\_earnedYield.sub(\\_currentTotalDebt));`\n\nIndeed, look at the function `getUpdatedTotalCredit`, it returns the value:\n\n`\\_self.totalCredit + (\\_unclaimedYield - \\_currentTotalDebt);`\n\nSo it is obviously intended that the `totalCredit` should keep increasing over time instead of being overwritten on each update with a small value. The impact of this issue is large - the credit of every position will always be overwritten and the correct information will be lost forever. User's credit should grow over time, but instead it is overwritten with a small value every time update is called.\n\n#### Proof of Concept\n\nSee line 39 in `CDP.sol` here: <https://github.com/code-423n4/2021-11-yaxis/blob/main/contracts/v3/alchemix/libraries/alchemist/CDP.sol#:~:text=_self.totalCredit%20%3D%20_earnedYield.sub(_currentTotalDebt)%3B>\n\n#### Tools Used\n\nManual inspection.\n\n#### Recommended Mitigation Steps\n\nChange code as described above to increment `totalCredit` instead of overwrite it.\n\n**[Xuefeng-Zhu (yAxis) disputed](https://github.com/code-423n4/2021-11-yaxis-findings/issues/31#issuecomment-985278604):**\n > If there is debt, the credit should be zero \n\n**[0xleastwood (judge) commented](https://github.com/code-423n4/2021-11-yaxis-findings/issues/31#issuecomment-998542307):**\n > It seems like if `_self.totalDebt` is already zero and yield has been earned by the protocol, `_self.totalCredit` will be overwritten. This doesn't seem ideal, could you clarify why the issue is incorrect?\n\n**[0xleastwood (judge) commented](https://github.com/code-423n4/2021-11-yaxis-findings/issues/31#issuecomment-998543262):**\n > If I'm not mistaken, yield can be earned from a positive credit (net 0 debt) position.\n\n**[Xuefeng-Zhu (yAxis) commented](https://github.com/code-423n4/2021-11-yaxis-findings/issues/31#issuecomment-999386020):**\n > @0xleastwood `totalCredit ` is 0 if there is debt\n\n**[0xleastwood (judge) commented](https://github.com/code-423n4/2021-11-yaxis-findings/issues/31#issuecomment-999923125):**\n > After chatting to @Xuefeng-Zhu in Discord, he was able to confirm the issue as valid. So keeping it as is.\n\n\n\n \n# Medium Risk Findings (1)\n## [[M-01] Prevent Minting During Emergency Exit](https://github.com/code-423n4/2021-11-yaxis-findings/issues/12)\n_Submitted by TimmyToes, also found by defsec_\n\n#### Impact\n\nPotential increased financial loss during security incident.\n\n#### Proof of Concept\n\n<https://github.com/code-423n4/2021-11-yaxis/blob/0311dd421fb78f4f174aca034e8239d1e80075fe/contracts/v3/alchemix/Alchemist.sol#L611>\n\nConsider a critical incident where a vault is being drained or in danger of being drained due to a vulnerability within the vault or its strategies.\n\nAt this stage, you want to trigger emergency exit and users want to withdraw their funds and repay/liquidate to enable the withdrawal of funds. However, minting against debt does not seem like a desirable behaviour at this time. It only seems to enable unaware users to get themselves into trouble by locking up their funds, or allow an attacker to do more damage.\n\n#### Recommended Mitigation Steps\n\nConvert emergency exit check to a modifier, award wardens who made that suggestion, and then apply that modifier here.\n\nAlternatively, it is possible that the team might want to allow minting against credit: users minting against credit would effectively be cashing out their rewards. This might be seen as desirable during emergency exit, or it might be seen as a potential extra source of risk. If this is desired, then the emergency exit check could be placed at line 624 with a modified message, instructing users to only use credit.\n\n**[Xuefeng-Zhu (yAxis) confirmed](https://github.com/code-423n4/2021-11-yaxis-findings/issues/12)**\n\n# Low Risk Findings (12)\n- [[L-01] Pending governance is not cleared](https://github.com/code-423n4/2021-11-yaxis-findings/issues/63) _Submitted by cmichel_\n- [[L-02] `Alchemist.sol` does not use safeApprove](https://github.com/code-423n4/2021-11-yaxis-findings/issues/33) _Submitted by jonah1005, also found by cmichel_\n- [[L-03] `Alchemist.migrate` can push duplicate adapters to `_vaults`](https://github.com/code-423n4/2021-11-yaxis-findings/issues/65) _Submitted by cmichel_\n- [[L-04] `Transmuter.unstake` updates user without first updating distributing yield](https://github.com/code-423n4/2021-11-yaxis-findings/issues/66) _Submitted by cmichel_\n- [[L-05] No incentive to call `transmute()` instead of `forceTransmute(self)`](https://github.com/code-423n4/2021-11-yaxis-findings/issues/68) _Submitted by cmichel_\n- [[L-06] anyone can deposit to adapters directly](https://github.com/code-423n4/2021-11-yaxis-findings/issues/103) _Submitted by pauliax, also found by hickuphh3_\n- [[L-07] _setupRole not in constructor](https://github.com/code-423n4/2021-11-yaxis-findings/issues/107) _Submitted by pauliax_\n- [[L-08] setSentinel actually adds sentinel](https://github.com/code-423n4/2021-11-yaxis-findings/issues/108) _Submitted by pauliax_\n- [[L-09] Incorrect function docs](https://github.com/code-423n4/2021-11-yaxis-findings/issues/35) _Submitted by pmerkleplant, also found by pauliax_\n- [[L-10] Incorrect Event Emitted in Alchemist.sol](https://github.com/code-423n4/2021-11-yaxis-findings/issues/7) _Submitted by TimmyToes, also found by hubble, ye0lde, defsec, WatchPug, pauliax, and gzeon_\n- [[L-11] Incorrect comment or code in runPhasedDistribution (Transmuter.sol)](https://github.com/code-423n4/2021-11-yaxis-findings/issues/117) _Submitted by ye0lde_\n- [[L-12] Effects and Interactions Before Check](https://github.com/code-423n4/2021-11-yaxis-findings/issues/10) _Submitted by TimmyToes_\n\n# Non-Critical Findings (19)\n- [[N-01] Context and msg.sender](https://github.com/code-423n4/2021-11-yaxis-findings/issues/105) _Submitted by pauliax_\n- [[N-02] Convert Emergency Exit Check to Modifier.](https://github.com/code-423n4/2021-11-yaxis-findings/issues/11) _Submitted by TimmyToes_\n- [[N-04] Incorrect Info in Comment in Alchemist.sol](https://github.com/code-423n4/2021-11-yaxis-findings/issues/5) _Submitted by TimmyToes_\n- [[N-05] Incorrect Info in Comment in Alchemist.sol (138)](https://github.com/code-423n4/2021-11-yaxis-findings/issues/6) _Submitted by TimmyToes, also found by WatchPug_\n- [[N-06] Incorrect Comment](https://github.com/code-423n4/2021-11-yaxis-findings/issues/77) _Submitted by TimmyToes_\n- [[N-07] Lack of 'emit' keyword in AlToken.sol](https://github.com/code-423n4/2021-11-yaxis-findings/issues/4) _Submitted by tqts_\n- [[N-08] Use of deprecated `safeApprove`](https://github.com/code-423n4/2021-11-yaxis-findings/issues/47) _Submitted by WatchPug, also found by pants and gzeon_\n- [[N-09] Should `safeApprove(0)` first](https://github.com/code-423n4/2021-11-yaxis-findings/issues/48) _Submitted by WatchPug, also found by jonah1005 and defsec_\n- [[N-10] Lack of Proper Tests?](https://github.com/code-423n4/2021-11-yaxis-findings/issues/20) _Submitted by TimmyToes_\n- [[N-11] Open TODOs](https://github.com/code-423n4/2021-11-yaxis-findings/issues/87) _Submitted by pants_\n- [[N-12] Missing events for owner only functions that change critical parameters](https://github.com/code-423n4/2021-11-yaxis-findings/issues/34) _Submitted by defsec, also found by WatchPug_\n- [[N-13] Require statements without messages](https://github.com/code-423n4/2021-11-yaxis-findings/issues/88) _Submitted by pants_\n- [[N-14] No Transfer Ownership Pattern in AlToken.sol](https://github.com/code-423n4/2021-11-yaxis-findings/issues/56) _Submitted by Meta0xNull_\n- [[N-15] Constructor Lack of Zero Address Check for Tokens](https://github.com/code-423n4/2021-11-yaxis-findings/issues/60) _Submitted by Meta0xNull_\n- [[N-16] Tokens with fee on transfer are not supported](https://github.com/code-423n4/2021-11-yaxis-findings/issues/49) _Submitted by WatchPug, also found by TimmyToes and 0x0x0x_\n- [[N-17] No Event Emitted on Minting](https://github.com/code-423n4/2021-11-yaxis-findings/issues/76) _Submitted by TimmyToes_\n- [[N-18] Lack of Input Validation](https://github.com/code-423n4/2021-11-yaxis-findings/issues/75) _Submitted by TimmyToes_\n- [[N-19] No event for `Alchemist.sol#setPegMinimum`](https://github.com/code-423n4/2021-11-yaxis-findings/issues/24) _Submitted by 0x0x0x_\n- [[N-20] admin Variable is High Risk](https://github.com/code-423n4/2021-11-yaxis-findings/issues/15) _Submitted by TimmyToes_\n\n# Gas Optimizations (33)\n- [[G-01] `AlchemistVault.sol` can be optimised](https://github.com/code-423n4/2021-11-yaxis-findings/issues/100) _Submitted by 0x0x0x_\n- [[G-02] Optimize `Alchemist.sol#_withdrawFundsTo`](https://github.com/code-423n4/2021-11-yaxis-findings/issues/102) _Submitted by 0x0x0x_\n- [[G-03] Cache length of array when looping](https://github.com/code-423n4/2021-11-yaxis-findings/issues/17) _Submitted by 0x0x0x_\n- [[G-04] For uint `> 0` can be replaced with ` != 0` for gas optimisation](https://github.com/code-423n4/2021-11-yaxis-findings/issues/22) _Submitted by 0x0x0x_\n- [[G-05] At `Alchemist.sol#acceptGovernance`, cache `pendingGovernance` earlier to save gas](https://github.com/code-423n4/2021-11-yaxis-findings/issues/23) _Submitted by 0x0x0x, also found by xxxxx_\n- [[G-06] `CDP.sol#update.sol` can be optimized](https://github.com/code-423n4/2021-11-yaxis-findings/issues/91) _Submitted by 0x0x0x_\n- [[G-07] `CDP.sol#getUpdatedTotalDebt` can be optimized](https://github.com/code-423n4/2021-11-yaxis-findings/issues/92) _Submitted by 0x0x0x_\n- [[G-08] Upgrade pragma to at least 0.8.4](https://github.com/code-423n4/2021-11-yaxis-findings/issues/26) _Submitted by defsec_\n- [[G-09] Redundant Import](https://github.com/code-423n4/2021-11-yaxis-findings/issues/28) _Submitted by defsec, also found by WatchPug_\n- [[G-10] Gas optimization: Caching variables](https://github.com/code-423n4/2021-11-yaxis-findings/issues/62) _Submitted by gzeon_\n- [[G-11] Gas Optimization: Inline instead of modifier](https://github.com/code-423n4/2021-11-yaxis-findings/issues/72) _Submitted by gzeon_\n- [[G-12] Gas optimization: Reduce storage write](https://github.com/code-423n4/2021-11-yaxis-findings/issues/97) _Submitted by gzeon_\n- [[G-13] several functions can be marked external](https://github.com/code-423n4/2021-11-yaxis-findings/issues/119) _Submitted by hack3r-0m, also found by defsec_\n- [[G-14] Remove FixedPointMath ](https://github.com/code-423n4/2021-11-yaxis-findings/issues/18) _Submitted by TimmyToes, also found by hickuphh3_\n- [[G-15] State variables can be `immutable`s](https://github.com/code-423n4/2021-11-yaxis-findings/issues/83) _Submitted by pants_\n- [[G-16] Constant expressions](https://github.com/code-423n4/2021-11-yaxis-findings/issues/110) _Submitted by pauliax_\n- [[G-17] Assigned operations to constant variables](https://github.com/code-423n4/2021-11-yaxis-findings/issues/111) _Submitted by pauliax_\n- [[G-18] Multiple Assignments to Storage Variable](https://github.com/code-423n4/2021-11-yaxis-findings/issues/9) _Submitted by TimmyToes_\n- [[G-19] Gas optimization when a paused user calls mint() in AlToken.sol](https://github.com/code-423n4/2021-11-yaxis-findings/issues/2) _Submitted by tqts, also found by Meta0xNull and WatchPug_\n- [[G-20] Gas optimization in AlToken.sol](https://github.com/code-423n4/2021-11-yaxis-findings/issues/3) _Submitted by tqts_\n- [[G-21] Unnecessary libraries](https://github.com/code-423n4/2021-11-yaxis-findings/issues/36) _Submitted by WatchPug_\n- [[G-22] Use immutable variable can save gas](https://github.com/code-423n4/2021-11-yaxis-findings/issues/37) _Submitted by WatchPug, also found by hickuphh3, pauliax, 0x0x0x, and TimmyToes_\n- [[G-23] Only using `SafeMath` when necessary can save gas](https://github.com/code-423n4/2021-11-yaxis-findings/issues/41) _Submitted by WatchPug_\n- [[G-24] Cache and read storage variables from the stack can save gas](https://github.com/code-423n4/2021-11-yaxis-findings/issues/44) _Submitted by WatchPug_\n- [[G-25] `YaxisVaultAdapter.sol` Use inline expression can save gas](https://github.com/code-423n4/2021-11-yaxis-findings/issues/45) _Submitted by WatchPug_\n- [[G-26] Use short reason strings can save gas](https://github.com/code-423n4/2021-11-yaxis-findings/issues/50) _Submitted by WatchPug, also found by pauliax_\n- [[G-27] Change unnecessary storage variables to constants can save gas](https://github.com/code-423n4/2021-11-yaxis-findings/issues/51) _Submitted by WatchPug_\n- [[G-28] Save `vault.getToken()` as an immutable variable in `YaxisVaultAdapter.sol` contract can save gas](https://github.com/code-423n4/2021-11-yaxis-findings/issues/52) _Submitted by WatchPug_\n- [[G-29] `Alchemist.sol#mint()` Two storage writes can be combined into one](https://github.com/code-423n4/2021-11-yaxis-findings/issues/53) _Submitted by WatchPug_\n- [[G-30] Inline internal functions that are being used only once can save gas](https://github.com/code-423n4/2021-11-yaxis-findings/issues/54) _Submitted by WatchPug_\n- [[G-31] Removing the unnecessary function](https://github.com/code-423n4/2021-11-yaxis-findings/issues/96) _Submitted by xxxxx, also found by TimmyToes, pauliax, and hack3r-0m_\n- [[G-32] Unused Named Returns](https://github.com/code-423n4/2021-11-yaxis-findings/issues/115) _Submitted by ye0lde_\n- [[G-33] TRANSMUTATION_PERIOD Issues](https://github.com/code-423n4/2021-11-yaxis-findings/issues/116) _Submitted by ye0lde_\n\n# Disclosures\n\nC4 is an open organization governed by participants in the community.\n\nC4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.\n\nC4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.\n"
}