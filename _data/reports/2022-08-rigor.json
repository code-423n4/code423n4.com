{
  "circa": {
    "title": "Rigor Protocol contest",
    "sponsor": "Rigor Protocol",
    "slug": "2022-08-rigor",
    "date": "2022-09-12",
    "findings": "https://github.com/code-423n4/2022-08-rigor-findings/issues",
    "contest": 151
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit contest outlined in this document, C4 conducted an analysis of the Rigor Protocol smart contract system written in Solidity. The audit contest took place between August 1—August 6 2022.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>139 Wardens contributed reports to the Rigor Protocol contest:</p>\n<ol>\n<li>Lambda</li>\n<li><a href=\"https://twitter.com/hansfriese\">hansfriese</a></li>\n<li>rbserver</li>\n<li>0x52</li>\n<li>0xA5DF</li>\n<li><a href=\"https://twitter.com/krenkmet\">indijanc</a></li>\n<li><a href=\"https://twitter.com/gallodasballo\">GalloDaSballo</a></li>\n<li><a href=\"https://twitter.com/WahWaste\">wastewa</a></li>\n<li>vlad_bochok</li>\n<li>byndooa</li>\n<li>0x1f8b</li>\n<li><a href=\"https://twitter.com/0xhyh\">hyh</a></li>\n<li><a href=\"https://twitter.com/berndartmueller\">berndartmueller</a></li>\n<li><a href=\"http://seanseefried.org/blog\">sseefried</a></li>\n<li>cccz</li>\n<li>cryptphi</li>\n<li><a href=\"https://www.linkedin.com/in/minhquanym/\">minhquanym</a></li>\n<li>horsefacts</li>\n<li>scaraven</li>\n<li>Haipls</li>\n<li>TrungOre</li>\n<li><a href=\"https://twitter.com/defsec_\">defsec</a></li>\n<li><a href=\"https://twitter.com/Deivitto\">Deivitto</a></li>\n<li><a href=\"https://twitter.com/0xNazgul\">0xNazgul</a></li>\n<li><a href=\"https://twitter.com/meppent\">MEP</a></li>\n<li><a href=\"https://chom.dev\">Chom</a></li>\n<li>Bahurum</li>\n<li><a href=\"https://twitter.com/bin2chen\">bin2chen</a></li>\n<li>cryptonue</li>\n<li><a href=\"https://twitter.com/c3ph_\">c3phas</a></li>\n<li>arcoun</li>\n<li>rotcivegaf</li>\n<li>simon135</li>\n<li><a href=\"https://twitter.com/zachobront\">obront</a></li>\n<li><a href=\"https://medium.com/@saneryee-studio\">saneryee</a></li>\n<li><a href=\"twitter.com/rokinot\">rokinot</a></li>\n<li>ElKu</li>\n<li>auditor0517</li>\n<li><a href=\"https://github.com/SmilingHeretic\">smiling_heretic</a></li>\n<li>kankodu</li>\n<li><a href=\"https://twitter.com/0xKaden\">kaden</a></li>\n<li>aez121</li>\n<li>neumo</li>\n<li><a href=\"https://twitter.com/BowTiedDravee\">Dravee</a></li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li>__141345__</li>\n<li><a href=\"https://twitter.com/8olidity\">8olidity</a></li>\n<li><a href=\"https://twitter.com/panprog\">panprog</a></li>\n<li>codexploder</li>\n<li>IllIllI</li>\n<li><a href=\"https://twitter.com/CertoraInc\">CertoraInc</a> (egjlmn1, <a href=\"https://twitter.com/ori_dabush\">OriDabush</a>, ItayG, and shakedwinder)</li>\n<li><a href=\"https://twitter.com/father0fBl0cks\">fatherOfBlocks</a></li>\n<li>saian</li>\n<li><a href=\"https://twitter.com/GuardianAudits\">Guardian</a></li>\n<li><a href=\"https://milotruck.github.io/\">MiloTruck</a></li>\n<li><a href=\"https://twitter.com/sm4rtcontr4ct\">JC</a></li>\n<li><a href=\"https://benbaessler.com\">benbaessler</a></li>\n<li>hake</li>\n<li>0xkatana</li>\n<li><a href=\"https://www.linkedin.com/in/georgi-nikolaev-georgiev-978253219\">gogo</a></li>\n<li><a href=\"https://twitter.com/andyfeili\">oyc_109</a></li>\n<li><a href=\"https://t.me/pfahard\">pfapostol</a></li>\n<li>samruna</li>\n<li><a href=\"https://twitter.com/JoeStakey\">joestakey</a></li>\n<li>ReyAdmirado</li>\n<li><a href=\"https://mobile.twitter.com/tomj_bb\">TomJ</a></li>\n<li>Rolezn</li>\n<li>brgltd</li>\n<li><a href=\"https://twitter.com/extropy\">Extropy</a></li>\n<li><a href=\"https://github.com/Aymen1001\">Aymen0909</a></li>\n<li><a href=\"https://twitter.com/0xSmartContract\">0xSmartContract</a></li>\n<li>delfin454000</li>\n<li>mics</li>\n<li>bobirichman</li>\n<li>sikorico</li>\n<li>ak1</li>\n<li>_Adam</li>\n<li>robee</li>\n<li>SooYa</li>\n<li>CodingNameKiki</li>\n<li>erictee</li>\n<li>Bnke0x0</li>\n<li>ajtra</li>\n<li><a href=\"https://twitter.com/meidhiwirara\">Tomio</a></li>\n<li><a href=\"https://instagram.com/vanensurya\">Funen</a></li>\n<li><a href=\"https://twitter.com/ROHANJH56009256\">Rohan16</a></li>\n<li><a href=\"https://twitter.com/Sm4rty_\">Sm4rty</a></li>\n<li>Waze</li>\n<li>sach1r0</li>\n<li><a href=\"https://twitter.com/0xheynacho\">ignacio</a></li>\n<li><a href=\"https://twitter.com/harshit16024263\">supernova</a></li>\n<li>asutorufos</li>\n<li><a href=\"https://twitter.com/0xSolus\">0xSolus</a></li>\n<li>Noah3o6</li>\n<li><a href=\"https://twitter.com/a12jmx\">a12jmx</a></li>\n<li>djxploit</li>\n<li><a href=\"https://twitter.com/0xch301\">Ch_301</a></li>\n<li>dipp</li>\n<li>0xf15ers (remora and twojoy)</li>\n<li>bulej93</li>\n<li>Soosh</li>\n<li>0xNineDec</li>\n<li><a href=\"https://github.com/exd0tpy\">exd0tpy</a></li>\n<li>ayeslick</li>\n<li>poirots (<a href=\"https://twitter.com/DavideSilva_\">DavideSilva</a>, resende, and naps62)</li>\n<li>Yiko</li>\n<li>0xsolstars (<a href=\"twitter.com/versatile_crypt\">Varun_Verma</a> and masterchief)</li>\n<li>p_crypt0</li>\n<li>Jujic</li>\n<li>Throne6g</li>\n<li>NoamYakov</li>\n<li><a href=\"https://twitter.com/dev_chinmayf\">Chinmay</a></li>\n<li>eierina</li>\n<li>jag</li>\n<li><a href=\"https://twitter.com/Bharg4v\">bharg4v</a></li>\n<li>0x040</li>\n<li>ballx</li>\n<li><a href=\"https://github.com/lyciumlee\">durianSausage</a></li>\n<li>Metatron</li>\n<li><a href=\"https://twitter.com/ret2basic\">ret2basic</a></li>\n<li>0xsam</li>\n<li><a href=\"https://twitter.com/fitraldys\">Fitraldys</a></li>\n<li><a href=\"https://twitter.com/GerdusM\">gerdusx</a></li>\n<li>kyteg</li>\n<li>apostle0x01</li>\n<li>lucacez</li>\n<li><a href=\"https://twitter.com/im_Dharma09\">dharma09</a></li>\n<li>PaludoX0</li>\n<li>zeesaw</li>\n<li>0xc0ffEE</li>\n<li><a href=\"https://twitter.com/dediranTofunmi\">tofunmi</a></li>\n<li><a href=\"https://twitter.com/0xteddav\">teddav</a></li>\n</ol>\n<p>This contest was judged by <a href=\"https://github.com/jack-the-pug\">Jack the Pug</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/liveactionllama\">liveactionllama</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 26 unique vulnerabilities. Of these vulnerabilities, 6 received a risk rating in the category of HIGH severity and 20 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 99 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 91 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2022-08-rigor\">C4 Rigor Protocol contest repository</a>, and is composed of 7 smart contracts (and 2 libraries) written in the Solidity programming language and includes 1,724 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>.</p>\n<h1 id=\"high-risk-findings-6\" style=\"position:relative;\"><a href=\"#high-risk-findings-6\" aria-label=\"high risk findings 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (6)</h1>\n<h2 id=\"h-01-untyped-data-signing\" style=\"position:relative;\"><a href=\"#h-01-untyped-data-signing\" aria-label=\"h 01 untyped data signing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/75\">[H-01] Untyped data signing</a></h2>\n<p><em>Submitted by Lambda, also found by 0x1f8b, 0x52, horsefacts, vlad_bochok, and wastewa</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/e35f5f61be9ff4b8dc5153e313419ac42964d1fd/contracts/Community.sol#L175\">Community.sol#L175</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/e35f5f61be9ff4b8dc5153e313419ac42964d1fd/contracts/Community.sol#L213\">Community.sol#L213</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/e35f5f61be9ff4b8dc5153e313419ac42964d1fd/contracts/Community.sol#L530\">Community.sol#L530</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/f2498c86dbd0e265f82ec76d9ec576442e896a87/contracts/Disputes.sol#L91\">Disputes.sol#L91</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/f2498c86dbd0e265f82ec76d9ec576442e896a87/contracts/Project.sol#L142\">Project.sol#L142</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/f2498c86dbd0e265f82ec76d9ec576442e896a87/contracts/Project.sol#L167\">Project.sol#L167</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/f2498c86dbd0e265f82ec76d9ec576442e896a87/contracts/Project.sol#L235\">Project.sol#L235</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/f2498c86dbd0e265f82ec76d9ec576442e896a87/contracts/Project.sol#L286\">Project.sol#L286</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/f2498c86dbd0e265f82ec76d9ec576442e896a87/contracts/Project.sol#L346\">Project.sol#L346</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/f2498c86dbd0e265f82ec76d9ec576442e896a87/contracts/Project.sol#L402\">Project.sol#L402</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/f2498c86dbd0e265f82ec76d9ec576442e896a87/contracts/Project.sol#L499\">Project.sol#L499</a><br></p>\n<p>In many places of the project (see affected code), untyped application data is directly hashed and signed. This is strongly disencouraged, as it enables different attacks (that each could be considered their own issue / vulnerability, but I submitted it as one, as they have all the same root cause):</p>\n<p>1.) Signature reuse across different Rigor projects:<br>\nWhile some signature contain the project address, not all do. For instance, <code>updateProjectHash</code> only contains a <code>_hash</code> and a <code>_nonce</code>. Therefore, we can have the following scenario: Bob is the owner of project A and signs / submit <code>updateProjectHash</code> with nonce 0 and some hash. Then, a project B that also has Bob as the owner is created. Attacker Charlie can simply take the <code>_data</code> and <code>_signature</code> that Bob previously submitted to project A and send it to project B. As this project will have a nonce of 0 (fresh created), it will accept it. <code>updateTaskHash</code> is also affected by this.<br>\n2.) Signature reuse across different chains:<br>\nBecause the chain ID is not included in the data, all signatures are also valid when the project is launched on a chain with another chain ID. For instance, let’s say it is also launched on Polygon. An attacker can now use all of the Ethereum signatures there. Because the Polygon addresses of user’s (and potentially contracts, when the nonces for creating are the same) are often identical, there can be situations where the payload is meaningful on both chains.<br>\n3.) Signature reuse across Rigor functions:<br>\nSome functions accept and decode data / signatures that were intended for other functions. For instance, see this example of providing the data &#x26; signature that was intended for <code>inviteContractor</code> to <code>setComplete</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/test/utils/projectTests.ts b/test/utils/projectTests.ts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index ae9e202..752e01f 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/test/utils/projectTests.ts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/test/utils/projectTests.ts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -441,7 +441,7 @@ export const projectTests = async ({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  it(&#39;should be able to invite contractor&#39;, async () =&gt; {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  it.only(&#39;should be able to invite contractor&#39;, async () =&gt; {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     expect(await project.contractor()).to.equal(ethers.constants.AddressZero);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     const data = {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       types: [&#39;address&#39;, &#39;address&#39;],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -452,6 +452,7 @@ export const projectTests = async ({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       signers[1],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     const tx = await project.inviteContractor(encodedData, signature);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    const tx2 = await project.setComplete(encodedData, signature);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     await expect(tx)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       .to.emit(project, &#39;ContractorInvited&#39;)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       .withArgs(signers[1].address);</span></span></span></code></pre>\n<p>While this reverts because there is no task that corresponds to the address that is signed there, this is not always the case.<br>\n4.) Signature reuse from different Ethereum projects &#x26; phishing<br>\nBecause the payload of these signatures is very generic (two addresses, a byte and two uints), there might be situations where a user has already signed data with the same format for a completely different Ethereum application. Furthermore, an attacker could set up a DApp that uses the same format and trick someone into signing the data. Even a very security-conscious owner that has audited the contract of this DApp (that does not have any vulnerabilities and is not malicious, it simply consumes signatures that happen to have the same format) might be willing to sign data for this DApp, as he does not anticipate that this puts his Rigor project in danger.</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>I strongly recommend to follow <a href=\"https://eips.ethereum.org/EIPS/eip-712\">EIP-712</a> and not implement your own standard / solution. While this also improves the user experience, this topic is very complex and not easy to get right, so it is recommended to use a battle-tested approach that people have thought in detail about. All of the mentioned attacks are not possible with EIP-712:<br>\n1.) There is always a domain separator that includes the contract address.<br>\n2.) The chain ID is included in the domain separator<br>\n3.) There is a type hash (of the function name / parameters)<br>\n4.) The domain separator does not allow reuse across different projects, phishing with an innocent DApp is no longer possible (it would be shown to the user that he is signing data for Rigor, which he would off course not do on a different site)</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/75\">parv3213 (Rigor) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-02-builder-can-halve-the-interest-paid-to-a-community-owner-due-to-arithmetic-rounding\" style=\"position:relative;\"><a href=\"#h-02-builder-can-halve-the-interest-paid-to-a-community-owner-due-to-arithmetic-rounding\" aria-label=\"h 02 builder can halve the interest paid to a community owner due to arithmetic rounding permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/180\">[H-02] Builder can halve the interest paid to a community owner due to arithmetic rounding</a></h2>\n<p><em>Submitted by scaraven, also found by 0x52, auditor0517, Deivitto, hansfriese, Lambda, rbserver, simon135, smiling_heretic, sseefried, and TrungOre</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Community.sol#L685-L686\">Community.sol#L685-L686</a><br></p>\n<p>Due to arithmetic rounding in <code>returnToLender()</code>, a builder can halve the APR paid to a community owner by paying every 1.9999 days. This allows a builder to drastically decrease the amount of interest paid to a community owner, which in turn allows them to advertise very high APR rates to secure funding, most of which they will not pay.</p>\n<p>This issue occurs in the calculation of <code>noOfDays</code> in <code>returnToLender()</code> which calculates the number of days since interest has last been calculated. If a builder repays a very small amount of tokens every 1.9999 days, then the <code>noOfDays</code> will be rounded down to <code>1 days</code> however <code>lastTimestamp</code> is updated to the current timestamp anyway, so the builder essentially accumulates only 1 day of interest after 2 days.</p>\n<p>I believe this is high severity because a community owner can have a drastic decrease in interest gained from a loan which counts as lost rewards. Additionally, this problem does not require a malicious builder because if a builder pays at a wrong time, the loaner receives less interest anyway.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li>A community owner provides a loan of 500_000 tokens to a builder with an APR of 10% (ignoring treasury fees)</li>\n<li>Therefore, the community owner will expect an interest of 136.9 tokens per day (273.9 per 2 days)</li>\n<li>A builder repays 0.000001 tokens at <code>lastTimestamp + 2*86400 - 1</code></li>\n<li><code>noOfDays</code> rounds down to 1 thereby accumulating <code>500_000 * 100 * 1 / 365000 = 136</code> tokens for 2 days</li>\n<li>Therefore, the community owner only receives 5% APR with negligible expenses for the builder</li>\n</ol>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>There are two possible mitigations:</p>\n<ol>\n<li>Add a scalar to <code>noOfDays</code> so that any rounding which occurs is negligible</li>\n</ol>\n<p>i.e.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_noOfDays</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_communityProject</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastTimestamp</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">SCALAR</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">86400</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// 24*60*60</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">/// Interest formula = (principal * APR * days) / (365 * 1000)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// prettier-ignore</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_unclaimedInterest</span><span class=\"mtk1\"> = </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_lentAmount</span><span class=\"mtk1\"> *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_communities</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_communityID</span><span class=\"mtk1\">].</span><span class=\"mtk12\">projectDetails</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_project</span><span class=\"mtk1\">].</span><span class=\"mtk12\">apr</span><span class=\"mtk1\"> *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_noOfDays</span><span class=\"mtk1\"> /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">365000</span><span class=\"mtk1\"> /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">SCALAR</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"2\">\n<li>Remove the <code>noOfDays</code> calculation and calculate interest in one equation which reduces arithmetic rounding</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_unclaimedInterest</span><span class=\"mtk1\"> = </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_lentAmount</span><span class=\"mtk1\"> *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_communities</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_communityID</span><span class=\"mtk1\">].</span><span class=\"mtk12\">projectDetails</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_project</span><span class=\"mtk1\">].</span><span class=\"mtk12\">apr</span><span class=\"mtk1\"> *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_communityProject</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastTimestamp</span><span class=\"mtk1\">) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">365000</span><span class=\"mtk1\"> /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">86400</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/180\">zgorizzo69 (Rigor) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-03-builder-can-call-communityescrow-again-to-reduce-debt-further-using-same-signatures\" style=\"position:relative;\"><a href=\"#h-03-builder-can-call-communityescrow-again-to-reduce-debt-further-using-same-signatures\" aria-label=\"h 03 builder can call communityescrow again to reduce debt further using same signatures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/161\">[H-03] Builder can call <code>Community.escrow</code> again to reduce debt further using same signatures</a></h2>\n<p><em>Submitted by sseefried, also found by 0xA5DF, Bahurum, bin2chen, byndooa, cccz, GalloDaSballo, hyh, kankodu, Lambda, and minhquanym</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Community.sol#L509\">Community.sol#L509</a><br></p>\n<p>Since there is no nonce in the data decoded at the beginning of function <code>escrow</code>, a builder can call the function multiple times reducing their debt as much as they wish.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li>A builder has a debt of $50,000</li>\n<li>A lender, a builder, and an escrow agent all <del>enter a bar</del> sign a message that will reduce the debt of the builder by $5,000, upon receipt of physical cash.</li>\n<li>Function <code>escrow</code> is called and debt is reduced to $45,000.</li>\n<li>The builder, using the same <code>_data</code> and <code>_signature</code> then calls <code>escrow</code> a further 9 times reducing their debt to zero.</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<ol>\n<li>Similar to function <code>publishProject</code>, add a new field into the <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/interfaces/ICommunity.sol#L19-L32\">ProjectDetails</a> struct called <code>escrowNonce</code>.</li>\n<li>Modify function <code>escrow</code> to check this nonce and update it after the debt has been reduced.</li>\n</ol>\n<p>See the diff below for full changes.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/Community.sol b/contracts/Community.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 1585670..b834d0e 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/Community.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/Community.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -15,7 +15,7 @@ import {SignatureDecoder} from &quot;./libraries/SignatureDecoder.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> /**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  * @title Community Contract for HomeFi v2.5.0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  * @notice Module for coordinating lending groups on HomeFi protocol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> contract Community is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -520,10 +520,11 @@ contract Community is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             address _agent,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             address _project,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             uint256 _repayAmount,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint256 _escrowNonce,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             bytes memory _details</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         ) = abi.decode(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 _data,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                (uint256, address, address, address, address, uint256, bytes)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                (uint256, address, address, address, address, uint256, uint256, bytes)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Compute hash from bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -540,6 +541,12 @@ contract Community is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             _lender == _communities[_communityID].owner,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             &quot;Community::!Owner&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        ProjectDetails storage _communityProject =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+          _communities[_communityID].projectDetails[_project];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        require(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            _escrowNonce == _communityProject.escrowNonce,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            &quot;Community::invalid escrowNonce&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // check signatures</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         checkSignatureValidity(_lender, _hash, _signature, 0); // must be lender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -548,6 +555,7 @@ contract Community is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Internal call to reduce debt</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _reduceDebt(_communityID, _project, _repayAmount, _details);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        _communityProject.escrowNonce = _communityProject.escrowNonce + 1;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         emit DebtReducedByEscrow(_agent);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/interfaces/ICommunity.sol b/contracts/interfaces/ICommunity.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index c45bbf0..652f51c 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/interfaces/ICommunity.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/interfaces/ICommunity.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -29,6 +29,7 @@ interface ICommunity {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 lentAmount; // current principal lent to project (needs to be repaid by project&#39;s builder)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 interest; // total accrued interest on `lentAmount`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 lastTimestamp; // timestamp when last lending / repayment was made</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 escrowNonce; // signing nonce to use when reducing debt by escrow</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/161\">zgorizzo69 (Rigor) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-04-project-funds-can-be-drained-by-reusing-signatures-in-some-cases\" style=\"position:relative;\"><a href=\"#h-04-project-funds-can-be-drained-by-reusing-signatures-in-some-cases\" aria-label=\"h 04 project funds can be drained by reusing signatures in some cases permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/95\">[H-04] Project funds can be drained by reusing signatures, in some cases</a></h2>\n<p><em>Submitted by 0xA5DF, also found by Bahurum, bin2chen, byndooa, cryptphi, hansfriese, horsefacts, kaden, Lambda, neumo, panprog, rokinot, scaraven, and sseefried</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L386-L490\">Project.sol#L386-L490</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L330-L359\">Project.sol#L330-L359</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/libraries/Tasks.sol#L153-L164\">Tasks.sol#L153-L164</a><br></p>\n<p>This attack path is the results of signatures reusing in 2 functions - <code>changeOrder()</code> and <code>setComplete()</code>, and a missing modifier at <code>Tasks.unApprove()</code> library function.</p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<h4 id=\"draining-the-project-from-funds\" style=\"position:relative;\"><a href=\"#draining-the-project-from-funds\" aria-label=\"draining the project from funds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Draining the project from funds</h4>\n<p>Current or previous subcontractor of a task can drain the project out of its funds by running <code>setComplete()</code> multiple times.</p>\n<p>This can be exploited in 3 scenarios:</p>\n<ul>\n<li>The price of a task was changed to a price higher than available funds (i.e. <code>totalLent - _totalAllocated</code>, and therefore gets unapproved), and than changed back to the original price (or any price that’s not higher than available funds)</li>\n<li>\n<p>The subcontractor for a task was changed via <code>changeOrder</code> and then changed back to the original subcontractor</p>\n<ul>\n<li>e.g. - Bob was the original SC, it was changed to Alice, and then back to Bob</li>\n</ul>\n</li>\n<li>\n<p>Similar to the case above, but even if the current SC is different from the original SC - it can still work if the current and previous SCs are teaming up to run the attack</p>\n<ul>\n<li>e.g. Bob was the original SC, it was changed to Alice, and changed again to Eve. And now Alice and Eve are teaming up to drain funds from the project</li>\n</ul>\n</li>\n</ul>\n<p>After <code>setComplete()</code> ran once by the legitimate users (i.e. signed by contractor, SC and builder), the attackers can now run it multiple times:</p>\n<ul>\n<li>\n<p>Reuse signatures to run <code>changeOrder()</code> - changing SC or setting the price to higher than available funds</p>\n<ul>\n<li>The only signer that might change is the subcontractor, he’s either teaming up with the attacker (scenario #3) or he was the SC when it was first called (scenario #2)</li>\n</ul>\n</li>\n<li>\n<p>In case of price change:</p>\n<ul>\n<li>change it back to the original price via <code>changeOrder()</code>, reusing signatures</li>\n<li>Run <code>allocateFunds()</code> to mark it as funded again</li>\n</ul>\n</li>\n<li>SC runs <code>acceptInvite()</code> to mark task as active</li>\n<li>\n<p>Run <code>setComplete()</code> reusing signatures</p>\n<ul>\n<li>If SC has changed - replace his signature with the current one (current SC should be one of the attackers)</li>\n</ul>\n</li>\n<li>Repeat till the project runs out of funds</li>\n</ul>\n<h4 id=\"changing-tasks-costssubcontractor-by-external-users\" style=\"position:relative;\"><a href=\"#changing-tasks-costssubcontractor-by-external-users\" aria-label=\"changing tasks costssubcontractor by external users permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Changing tasks costs/subcontractor by external users</h4>\n<p>This can also be used by external users (you don’t need to be builder/GC/SC in order to run <code>changeOrder()</code>) to troll the system (This still requires the task to be changed at least twice, otherwise re-running <code>changeOrder()</code> with the same data would have no effect).</p>\n<ul>\n<li>Changing the task cost up or down, getting the SC paid a different amount than intended (if it goes unnoticed, or front-run the <code>setComplete()</code> function)</li>\n<li>\n<p>Unapproving a task by setting a different SC or a price higher than available funds</p>\n<ul>\n<li>The legitimate users can change it back, but the attacker can change it again, both sides playing around till someone gets tired :)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Since the tests depend on each other, the PoC tests were created by adding them to the file <code>test/utils/projectTests.ts</code>, after the function <code>it('should be able to complete a task'</code> (<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/test/utils/projectTests.ts#L1143\">Line 1143</a>).</p>\n<p>In the first test - a subcontractor is changed and then changed back.<br>\nIn the second scenario a price is changed to the new price (that is higher than the total available funds, and therefore is unapproved) and then back to its original price (it can actually be any price that is not higher than the available funds).<br>\nIn both cases I’m demonstrating how the project can be drained out of fund.</p>\n<p><em>Note: see warden’s <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/95\">original submission</a> for full proof of concept.</em></p>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Hardhat</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<ul>\n<li>Use nonce to protect <code>setComplete()</code> and <code>changeOrder()</code> from signatures reuse</li>\n<li>Add the <code>onlyActive()</code> modifier to <code>Tasks.unApprove()</code></li>\n<li>Consider limiting <code>allocateFunds()</code> for builder only (this is not necessary to resolve the bug, just for hardening security)</li>\n</ul>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/95#issuecomment-1210501767\">zgorizzo69 (Rigor) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Very nice wrap up.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-05-add-members-to-the-not-yet-created-community\" style=\"position:relative;\"><a href=\"#h-05-add-members-to-the-not-yet-created-community\" aria-label=\"h 05 add members to the not yet created community permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/298\">[H-05] Add members to the not yet created community</a></h2>\n<p><em>Submitted by vlad_bochok, also found by indijanc, Lambda, and wastewa</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/main/contracts/Community.sol#L187\">Community.sol#L187</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/main/contracts/Community.sol#L179\">Community.sol#L179</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/main/contracts/Community.sol#L878\">Community.sol#L878</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/main/contracts/libraries/SignatureDecoder.sol#L39\">SignatureDecoder.sol#L39</a><br></p>\n<p>There is a <code>addMember</code> function in the <code>Community</code>.  The function accepts <code>_data</code> that should be signed by the <code>_community.owner</code> and <code>_newMemberAddr</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Compute hash from bytes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        bytes32 _hash = keccak256(_data);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Decode params from _data</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            uint256 _communityID,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            address _newMemberAddr,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            bytes memory _messageHash</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ) = abi.decode(_data, (uint256, address, bytes));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        CommunityStruct storage _community = _communities[_communityID];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // check signatures</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        checkSignatureValidity(_community.owner, _hash, _signature, 0); // must be community owner</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        checkSignatureValidity(_newMemberAddr, _hash, _signature, 1); // must be new member</span></span></code></pre>\n<p>The code above shows exactly what the contract logic looks like.</p>\n<ol>\n<li><code>_communityID</code> is taken from the data provided by user, so it can arbitrarily. Specifically,  community with selected <code>_communityID</code> can be not yet created. For instance, it can be equal to the <code>communityCount + 1</code>, thus the next created community will have this <code>_communityID</code>.</li>\n<li><code>_communities[_communityID]</code> will store null values for all fields, for a selected <code>_communityID</code>. That means, <code>_community.owner == address(0)</code></li>\n<li><code>checkSignatureValidity</code> with a parameters <code>address(0), _hash, _signature, 0</code> will not revert a call if an attacker provide incorrect <code>_signature</code>.</li>\n</ol>\n<p>Let’s see the implementation of <code>checkSignatureValidity</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Decode signer</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address _recoveredSignature = SignatureDecoder.recoverKey(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            _hash,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            _signature,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            _signatureIndex</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Revert if decoded signer does not match expected address</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Or if hash is not approved by the expected address.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            _recoveredSignature == _address || approvedHashes[_address][_hash],</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            &quot;Community::invalid signature&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Delete from approvedHash. So that signature cannot be reused.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        delete approvedHashes[_address][_hash];</span></span></code></pre>\n<p>No restrictions on <code>_recoveredSignature</code> or <code>_address</code>. Moreover, if <code>SignatureDecoder.recoverKey</code> can return zero value, then there will be no revert.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">       if (messageSignatures.length % 65 != 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            return (address(0));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint8 v;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        bytes32 r;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        bytes32 s;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        (v, r, s) = signatureSplit(messageSignatures, pos);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // If the version is correct return the signer address</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (v != 27 &amp;&amp; v != 28) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            return (address(0));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            // solium-disable-next-line arg-overflow</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            return ecrecover(toEthSignedMessageHash(messageHash), v, r, s);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span></code></pre>\n<p>As we can see below, <code>recoverKey</code> function can return zero value, if an <code>ecrecover</code> return zero value or if <code>v != 27 || v != 28</code>. Both cases are completely dependent on the input parameters to the function, namely from <code>signature</code> that is provided by attacker.</p>\n<ol start=\"4\">\n<li><code>checkSignatureValidity(_newMemberAddr, _hash, _signature, 1)</code> will not revert the call if an attacker provide correct signature in the function. It is obviously possible.</li>\n</ol>\n<p>All in all, an attacker can add as many members as they want, BEFORE the <code>community</code> will be created.</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<ol>\n<li><code>checkSignatureValidity</code>/<code>recoverKey</code> should revert the call if an <code>address == 0</code>.</li>\n<li><code>addMember</code> should have a <code>require(_communityId &#x3C;= communityCount)</code></li>\n</ol>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/298\">parv3213 (Rigor) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/298#issuecomment-1229125034\">Jack the Pug (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Nice catch!</p>\n<p>Btw, this <code>v != 27 &#x26;&#x26; v != 28</code> check is no longer needed:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">v</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">27</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">v</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">28</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>See: <a href=\"https://twitter.com/alexberegszaszi/status/1534461421454606336?s=20&#x26;t=H0Dv3ZT2bicx00hLWJk7Fg\">https://twitter.com/alexberegszaszi/status/1534461421454606336?s=20&#x26;t=H0Dv3ZT2bicx00hLWJk7Fg</a></p>\n</blockquote>\n<hr>\n<h2 id=\"h-06-wrong-apr-can-be-used-when-project-is-unpublished-and-published-again-\" style=\"position:relative;\"><a href=\"#h-06-wrong-apr-can-be-used-when-project-is-unpublished-and-published-again-\" aria-label=\"h 06 wrong apr can be used when project is unpublished and published again  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/83\">[H-06] Wrong APR can be used when project is unpublished and published again </a></h2>\n<p><em>Submitted by Lambda, also found by rbserver</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/e35f5f61be9ff4b8dc5153e313419ac42964d1fd/contracts/Community.sol#L267\">Community.sol#L267</a><br></p>\n<p>When a project is unpublished from a community, it can still owe money to this community (on which it needs to pay interest according to the specified APR). However, when the project is later published again in this community, the APR can be overwritten and the overwritten APR is used for the calculation of the interest for the old project (when it was unpublished).</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<p>1.) Project A is published in community I with an APR of 3%. The community lends 1,000,000 USD to the project.<br>\n2.) Project A is unpublished, the <code>lentAmount</code> is still 1,000,000 USD.<br>\n3.) During one year, no calls to <code>repayLender</code>, <code>reduceDebt</code>, or <code>escrow</code> happens, i.e. the interest is never added and the <code>lastTimestamp</code> not updated.<br>\n4.) After one year, the project is published again in the same community. Because the FED raised interest rates, it is specified that the APR should be 5% from now on.<br>\n5.) Another $1,000,000 is lent to the project by calling <code>lendToProject</code>. Now, <code>claimInterest</code> is called which calculates the interest of the last year for the first million. However, the function already uses the new APR of 5%, meaning the added interest is 50,000 USD instead of the correct 30,000 USD.</p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>When publishing a project, if the <code>lentAmount</code> for the community is non-zero, calculate the interest before updating the APR.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/83\">parv3213 (Rigor) confirmed</a></strong></p>\n<hr>\n<h1 id=\"medium-risk-findings-20\" style=\"position:relative;\"><a href=\"#medium-risk-findings-20\" aria-label=\"medium risk findings 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (20)</h1>\n<h2 id=\"m-01-projectchangeorder-would-work-unexpectedly-for-non-scconfirmed-tasks\" style=\"position:relative;\"><a href=\"#m-01-projectchangeorder-would-work-unexpectedly-for-non-scconfirmed-tasks\" aria-label=\"m 01 projectchangeorder would work unexpectedly for non scconfirmed tasks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/232\">[M-01] <code>Project.changeOrder()</code> would work unexpectedly for non SCConfirmed tasks.</a></h2>\n<p><em>Submitted by hansfriese</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L402\">Project.sol#L402</a><br></p>\n<p>The <code>changeOrder()</code> function will revert when it’s called for the tasks that don’t have subcontractors.</p>\n<p>As a result, the project builder and contractor can’t change the cost of a task until the subcontractor is confirmed.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The <code>changeOrder()</code> is used to change the cost or subcontractor of a task and there is no documentation that this function must be called only after a subcontractor is confirmed.</p>\n<p>Also, it’s reasonable to be able to change the cost when a subcontractor isn’t confirmed yet.</p>\n<p>But when it checks signature <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L402\">here</a>, it assumes the task has a confirmed subcontractor already and <code>checkSignatureTask()</code> will revert in other cases.</p>\n<p>So this function will be useless for non SCConfirmed tasks.</p>\n<h3 id=\"tools-used-2\" style=\"position:relative;\"><a href=\"#tools-used-2\" aria-label=\"tools used 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Solidity Visual Developer of VSCode</p>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We should check separately in case the subcontractor is confirmed or not <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L402\">here</a>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if (getAlerts(_taskID)[2]) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // If subcontractor has confirmed.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    checkSignatureTask(_data, _signature, _taskID);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">} else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // If subcontractor not has confirmed.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    checkSignature(_data, _signature);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/232\">parv3213 (Rigor) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/232#issuecomment-1212063685\">0xA5DF (warden) commented</a>:</strong></p>\n<blockquote>\n<p>I think this is invalid, since <em>currently</em> <code>checkSignatureTask</code> will pass if SC is the zero address and the signature isn’t a valid signature (i.e. builder and GC can just pass zero as the signature).</p>\n<p>This will only be valid if the sponsor fixes other bugs by making <code>checkSignatureValidity()</code> revert on invalid signature.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/232#issuecomment-1229159634\">Jack the Pug (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Will downgrade to Medium given this is a feature being malfunctioning.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-missing-upper-limit-definition-in-replacelenderfee-of-homefisol\" style=\"position:relative;\"><a href=\"#m-02-missing-upper-limit-definition-in-replacelenderfee-of-homefisol\" aria-label=\"m 02 missing upper limit definition in replacelenderfee of homefisol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/400\">[M-02] Missing upper limit definition in <code>replaceLenderFee()</code> of <code>HomeFi.sol</code></a></h2>\n<p><em>Submitted by MiloTruck, also found by __141345__, 0x52, 8olidity, cccz, Ch_301, codexploder, cryptonue, hansfriese, Ruhum, and sseefried</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/main/contracts/Community.sol#L392-L394\">Community.sol#L392-L394</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/main/contracts/HomeFi.sol#L184-L197\">HomeFi.sol#L184-L197</a><br></p>\n<p>The admin of the <code>HomeFi</code> contract can set <code>lenderFee</code> to greater than 100%, forcing calls to <code>lendToProject()</code> to all projects created in the future to revert.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Using the function <code>replaceLenderFee()</code>, admins of the <code>HomeFi</code> contract can set <code>lenderFee</code> to any arbitrary <code>uint256</code> value:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">185</span><span class=\"mtk1\">:        </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">replaceLenderFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newLenderFee</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> 186:            </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> 187:            </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> 188:            </span><span class=\"mtk11\">onlyAdmin</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> 189:        {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">190</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// Revert if no change in lender fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">191</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lenderFee</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">_newLenderFee</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;HomeFi::!Change&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">192</span><span class=\"mtk1\">:    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">193</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// Reset variables</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">194</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">lenderFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_newLenderFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">195</span><span class=\"mtk1\">:    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">196</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">LenderFeeReplaced</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_newLenderFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">197</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<p>New projects that are created will then get its <code>lenderFee</code> from the <code>HomeFi</code> contract. When communities wish to lend to these projects, it calls <code>lendToProject()</code>, which has the following calculation:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">392</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Calculate lenderFee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">393</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_lenderFee</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_lendingAmount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_projectInstance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">lenderFee</span><span class=\"mtk1\">()) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">394</span><span class=\"mtk1\">:            (</span><span class=\"mtk12\">_projectInstance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">lenderFee</span><span class=\"mtk1\">() + </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>If <code>lenderFee</code> a large value, such as <code>type(uint256).max</code>, the calculation shown above to overflow. This prevents any community from lending to any new projects.</p>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider adding a reasonable fee rate bounds checks in the <code>replaceLenderFee()</code> function. This would prevent potential griefing and increase the trust of users in the contract.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/400\">zgorizzo69 (Rigor) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-03-signature-checks-could-be-passed-when-signaturedecoderrecoverkey-returns-0\" style=\"position:relative;\"><a href=\"#m-03-signature-checks-could-be-passed-when-signaturedecoderrecoverkey-returns-0\" aria-label=\"m 03 signature checks could be passed when signaturedecoderrecoverkey returns 0 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/179\">[M-03] Signature Checks could be passed when <code>SignatureDecoder.recoverKey()</code> returns 0</a></h2>\n<p><em>Submitted by cryptphi, also found by 0x1f8b and defsec</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/main/contracts/Project.sol#L887\">Project.sol#L887</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/main/contracts/Project.sol#L108-L115\">Project.sol#L108-L115</a><br></p>\n<p>It is possible to pass Signature Validity check with an SignatureDecoder.recoverKey() returns 0 whenever the builder and /or contractor have an existing approved hash for a data.</p>\n<p>With occurrence of above, any user can call changeOrder or setComplete functions successfully after  user approves data hashes.</p>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>There should be a require check for <code>_recoveredSignature != 0</code> in <code>checkSignatureValidity()</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/179\">parv3213 (Rigor) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-04-hash-approval-not-possible-when-contractor--subcontractor\" style=\"position:relative;\"><a href=\"#m-04-hash-approval-not-possible-when-contractor--subcontractor\" aria-label=\"m 04 hash approval not possible when contractor  subcontractor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/86\">[M-04] Hash approval not possible when contractor == subcontractor</a></h2>\n<p><em>Submitted by Lambda, also found by hansfriese</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/f2498c86dbd0e265f82ec76d9ec576442e896a87/contracts/Project.sol#L859\">Project.sol#L859</a><br></p>\n<p>When a contractor (let’s say Bob) is also a subcontractor (which can be a valid scenario), it is not possible to use the hash approval feature for <code>checkSignatureTask</code>. The first call to <code>checkSignatureValidity</code> will already delete <code>approvedHashes[address(Bob)][_hash]</code>, the second call therefore fails.</p>\n<p>Note that the same situation would also be possible for builder == contractor, or builder == subcontractor, although those situations are probably less likely to occur.</p>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Delete the approval only when all checks are done.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/86\">parv3213 (Rigor) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-05-anyone-can-create-disputes-if-contractor-is-not-set\" style=\"position:relative;\"><a href=\"#m-05-anyone-can-create-disputes-if-contractor-is-not-set\" aria-label=\"m 05 anyone can create disputes if contractor is not set permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/327\">[M-05] Anyone can create disputes if <code>contractor</code> is not set</a></h2>\n<p><em>Submitted by berndartmueller, also found by 0xA5DF, arcoun, rotcivegaf, and wastewa</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L498-L502\">Project.sol#L498-L502</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/libraries/SignatureDecoder.sol#L25\">SignatureDecoder.sol#L25</a><br></p>\n<p>Disputes enable an actor to arbitrate &#x26; potentially enforce requested state changes. However, the current implementation does not properly implement authorization, thus anyone is able to create disputes and spam the system with invalid disputes.</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Calling the <code>Project.raiseDispute</code> function with an invalid <code>_signature</code>, for instance providing a <code>_signature</code> with a length of 66 will return <code>address(0)</code> as the recovered signer address.</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L498-L502\">Project.raiseDispute</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">raiseDispute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_data</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Recover the signer from the signature</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signer</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">SignatureDecoder</span><span class=\"mtk1\">.</span><span class=\"mtk11\">recoverKey</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_data</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/libraries/SignatureDecoder.sol#L25\">SignatureDecoder.sol#L25</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">recoverKey</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">messageHash</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">messageSignatures</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pos</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">messageSignatures</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> % </span><span class=\"mtk7\">65</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>If <code>_task</code> is set to <code>0</code> and the project does not have a <code>contractor</code>, the <code>require</code> checks will pass and <code>IDisputes(disputes).raiseDispute(_data, _signature);</code> is called. The same applies if a specific <code>_task</code> is given and if the task has a <code>subcontractor</code>. Then the check will also pass.</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Disputes.sol#L84-L122\">Project.raiseDispute</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">raiseDispute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_data</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Recover the signer from the signature</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signer</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">SignatureDecoder</span><span class=\"mtk1\">.</span><span class=\"mtk11\">recoverKey</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_data</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Decode params from _data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_project</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_task</span><span class=\"mtk1\">, , , ) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Revert if decoded project address does not match this contract. Indicating incorrect _data.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_project</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Project::!projectAddress&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_task</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Revet if sender is not builder or contractor</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">signer</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">builder</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">signer</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">contractor</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// @audit-info if `contractor = address(0)` and the recovered signer is also the zero-address, this check will pass</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;Project::!(GC||Builder)&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Revet if sender is not builder, contractor or task&#39;s subcontractor</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">signer</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">builder</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">signer</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">contractor</span><span class=\"mtk1\"> || </span><span class=\"mtk3\">// @audit-info if `contractor = address(0)` and the recovered signer is also the zero-address, this check will pass</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">signer</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">tasks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_task</span><span class=\"mtk1\">].</span><span class=\"mtk12\">subcontractor</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;Project::!(GC||Builder||SC)&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">signer</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">tasks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_task</span><span class=\"mtk1\">].</span><span class=\"mtk12\">subcontractor</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// If sender is task&#39;s subcontractor, revert if invitation is not accepted.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">getAlerts</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_task</span><span class=\"mtk1\">)[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;Project::!SCConfirmed&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Make a call to Disputes contract raiseDisputes.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IDisputes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">disputes</span><span class=\"mtk1\">).</span><span class=\"mtk11\">raiseDispute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_data</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit-info Dispute will be created. Anyone can spam the system with fake disputes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider checking the recovered <code>signer</code> address in <code>Project.raiseDispute</code> to not equal the zero-address:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">raiseDispute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_data</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Recover the signer from the signature</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signer</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">SignatureDecoder</span><span class=\"mtk1\">.</span><span class=\"mtk11\">recoverKey</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_data</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">signer</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Zero-address&quot;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit-info Revert if signer is zero-address</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/327\">parv3213 (Rigor) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-06-attacker-can-drain-all-the-projects-within-minutes-if-admin-account-has-been-exposed\" style=\"position:relative;\"><a href=\"#m-06-attacker-can-drain-all-the-projects-within-minutes-if-admin-account-has-been-exposed\" aria-label=\"m 06 attacker can drain all the projects within minutes if admin account has been exposed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/264\">[M-06] Attacker can drain all the projects within minutes, if admin account has been exposed</a></h2>\n<p><em>Submitted by 0xA5DF, also found by Lambda and sseefried</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/HomeFi.sol#L156-L169\">HomeFi.sol#L156-L169</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/HomeFi.sol#L199-L208\">HomeFi.sol#L199-L208</a><br></p>\n<p>In case where the admin wallet has been hacked, the attacker can drain all funds out of the project within minutes. All the attacker needs is the admin to sign a single meta/normal tx.<br>\nEven though the likelihood of the admin wallet being hacked might be low, given that the impact is critical - I think this makes it at least a medium bug.</p>\n<p>Examples of cases where the attacker can gain access to admin wallet:</p>\n<ul>\n<li>\n<p>The computer which the admins are using has been hacked</p>\n<ul>\n<li>Even if a hardware wallet is used, the attacker can still replace the data sent to the wallet the next time the admin has to sign a tx (whether it’s a meta or normal tx)</li>\n</ul>\n</li>\n<li>The website/software where the meta tx data is generated has been hacked and attacker modifies the data for tx</li>\n<li>A malicious website tricks the admin into signing a meta tx to replace the admin or forwarder</li>\n</ul>\n<p>Since the forwarder has the power to do everything in the system , once an attacker manages to replace it with a malicious forwarder, he can do whatever he wants withing minutes:</p>\n<ul>\n<li>The forwarder can replace the admin</li>\n<li>The forwarder can drain all funds from all projects by changing the subcontractor and marking tasks as complete, or adding new tasks / changing task cost as needed.</li>\n</ul>\n<p>Even when signatures are required, you can bypass it by using the <code>approveHash</code> function.</p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Here’s a PoC for taking over and running the <code>Project.setComplete()</code> function (I haven’t included a whole process of changing SC etc. since that would be too time consuming, but there shouldn’t be a difference between functions, all can be impersonated once you control the forwarder).</p>\n<p>The PoC was added to <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/test/utils/projectTests.ts#L1109\">projectTests.ts#L1109</a>, and is based on the ‘should be able to complete a task’ test.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"typescript\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">it</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;PoC forwarder overtake&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">attacker</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">signers</span><span class=\"mtk1\">[</span><span class=\"mtk7\">10</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// deploy the malicious forwarder</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maliciousForwarder</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deploy</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">MaliciousForwarder</span><span class=\"mtk1\">&gt;(</span><span class=\"mtk8\">&#39;MaliciousForwarder&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">adminAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">homeFiContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">admin</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">adminSigner</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getSignerByAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">signers</span><span class=\"mtk1\">, </span><span class=\"mtk12\">adminAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// attacker takes over</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">homeFiContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">adminSigner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">setTrustedForwarder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">maliciousForwarder</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// attacker can now replace the admin, so that admin can&#39;t set the forwarder back</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">data</span><span class=\"mtk1\"> } = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">homeFiContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">populateTransaction</span><span class=\"mtk1\">.</span><span class=\"mtk11\">replaceAdmin</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">adminAddress</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">homeFiContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">data</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">throw</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Error</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;No data&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tx</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">executeMetaTX</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">data</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// assert that admin has been replaced by attacker</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">homeFiContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">admin</span><span class=\"mtk1\">()).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">eq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// attacker can now execute setComplete() using the approveHash() method</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">taskID</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">2</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">taskCost</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">taskSC</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">signers</span><span class=\"mtk1\">[</span><span class=\"mtk7\">3</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">completeData</span><span class=\"mtk1\"> = {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">types:</span><span class=\"mtk1\"> [</span><span class=\"mtk8\">&#39;uint256&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;address&#39;</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">values:</span><span class=\"mtk1\"> [</span><span class=\"mtk12\">taskID</span><span class=\"mtk1\">, </span><span class=\"mtk12\">project</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    };</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> [</span><span class=\"mtk12\">encodedData</span><span class=\"mtk1\">, </span><span class=\"mtk12\">hash</span><span class=\"mtk1\">] = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">encodeDataAndHash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">completeData</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mockDAIContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">mock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">transfer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      .</span><span class=\"mtk11\">withArgs</span><span class=\"mtk1\">(</span><span class=\"mtk12\">taskSC</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      .</span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mockDAIContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">mock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">transfer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      .</span><span class=\"mtk11\">withArgs</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">homeFiContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">treasury</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">1e3</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      .</span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ({</span><span class=\"mtk12\">data</span><span class=\"mtk1\">} = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">project</span><span class=\"mtk1\">.</span><span class=\"mtk12\">populateTransaction</span><span class=\"mtk1\">.</span><span class=\"mtk11\">approveHash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hash</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contractor</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">project</span><span class=\"mtk1\">.</span><span class=\"mtk11\">contractor</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">subcontractor</span><span class=\"mtk1\">} = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">project</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTask</span><span class=\"mtk1\">(</span><span class=\"mtk12\">taskID</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">builder</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">project</span><span class=\"mtk1\">.</span><span class=\"mtk11\">builder</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">executeMetaTX</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">project</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">data</span><span class=\"mtk1\"> </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">string</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">executeMetaTX</span><span class=\"mtk1\">(</span><span class=\"mtk12\">subcontractor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">project</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">data</span><span class=\"mtk1\"> </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">string</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">executeMetaTX</span><span class=\"mtk1\">(</span><span class=\"mtk12\">builder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">project</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">data</span><span class=\"mtk1\"> </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">string</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">tx</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">project</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setComplete</span><span class=\"mtk1\">(</span><span class=\"mtk12\">encodedData</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;0x&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tx</span><span class=\"mtk1\">.</span><span class=\"mtk11\">wait</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tx</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">emit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">project</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;TaskComplete&#39;</span><span class=\"mtk1\">).</span><span class=\"mtk11\">withArgs</span><span class=\"mtk1\">(</span><span class=\"mtk12\">taskID</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">state</span><span class=\"mtk1\"> } = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">project</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTask</span><span class=\"mtk1\">(</span><span class=\"mtk12\">taskID</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">state</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">getAlerts</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">project</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAlerts</span><span class=\"mtk1\">(</span><span class=\"mtk12\">taskID</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">getAlerts</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">getAlerts</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">]).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">getAlerts</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">]).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">project</span><span class=\"mtk1\">.</span><span class=\"mtk11\">lastAllocatedChangeOrderTask</span><span class=\"mtk1\">()).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">project</span><span class=\"mtk1\">.</span><span class=\"mtk11\">changeOrderedTask</span><span class=\"mtk1\">()).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">deep</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">([]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">executeMetaTX</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">: </span><span class=\"mtk10\">string</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">: </span><span class=\"mtk10\">string</span><span class=\"mtk1\">, </span><span class=\"mtk12\">data</span><span class=\"mtk1\">: </span><span class=\"mtk10\">string</span><span class=\"mtk1\"> ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gasLimit</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">estimateGas</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">message</span><span class=\"mtk1\"> = {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">value:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gas:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gasLimit</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toNumber</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">nonce:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      };</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// @ts-ignore</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tx</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maliciousForwarder</span><span class=\"mtk1\">.</span><span class=\"mtk11\">execute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">message</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;0x&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tx</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// ----------------------------------------------------- //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Added to ethersHelpers.ts file:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">export</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">encodeDataAndHash</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">data</span><span class=\"mtk1\">: </span><span class=\"mtk10\">any</span><span class=\"mtk1\">): </span><span class=\"mtk10\">string</span><span class=\"mtk1\">[] {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">encodedData</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">encodeData</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">encodedMsgHash</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">encodedData</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> [</span><span class=\"mtk12\">encodedData</span><span class=\"mtk1\">, </span><span class=\"mtk12\">encodedMsgHash</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-11\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-11\" aria-label=\"recommended mitigation steps 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<ul>\n<li>\n<p>Limit <code>approveHash</code> to contracts only - I understood from the sponsor that it is used for contracts to sign hashes. So limiting it to contracts only can help prevent stealing funds (from projects that are held by EOA) in case that the forwarder has been compromised (this is effective also in case there’s some bug in the forwarder contract).</p>\n<ul>\n<li>\n<p>Alternately, you can also make it use <code>msg.sender</code> instead of <code>_msgSender()</code>, this will also have a similar effect (it will allow also EOA to use the function, but not via forwarder).</p>\n<ul>\n<li>The advantage is that not only it wouldn’t cost more than now, it’ll even save gas.</li>\n<li>Another advantage is that it will also protect projects held by contracts from being impersonated by a malicious forwarder</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Make the process of replacing the forwarder or the admin a 2 step process with a delay between the steps (except for disabling the forwarder, in case the forwarder was hacked). This will give the admin the option to take steps to stop the attack, or at least give the users time to withdraw their money.</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @inheritdoc IHomeFi</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">replaceAdmin</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newAdmin</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">onlyAdmin</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">nonZero</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_newAdmin</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">noChange</span><span class=\"mtk1\">(</span><span class=\"mtk12\">admin</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_newAdmin</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Replace admin</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pendingAdmin</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_newAdmin</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">adminReplacementTime</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AdminReplaceProposed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_newAdmin</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">/// @inheritdoc IHomeFi</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">executeReplaceAdmin</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">onlyAdmin</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">adminReplacementTime</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">adminReplacementTime</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;HomeFi::adminReplacmantTime&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Replace admin</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">admin</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">pendingAdmin</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AdminReplaced</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_newAdmin</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @inheritdoc IHomeFi</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setTrustedForwarder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newForwarder</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">onlyAdmin</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">noChange</span><span class=\"mtk1\">(</span><span class=\"mtk12\">trustedForwarder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_newForwarder</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// allow disabling the forwarder immediately in case it has been hacked</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_newForwarder</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">trustedForwarder</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_newForwarder</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">forwarderSetTime</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">3</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pendingTrustedForwarder</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_newForwarder</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">executeSetTrustedForwarder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newForwarder</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">onlyAdmin</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">forwarderSetTime</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp;  </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">forwarderSetTime</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;HomeFi::forwarderSetTime&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">trustedForwarder</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">pendingTrustedForwarder</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<ul>\n<li>Consider removing the meta tx for <code>HomeFi</code> <code>onlyAdmin</code> modifier (i.e. usg <code>msg.sender</code> instead of <code>_msgSender()</code>), given that it’s not going to be used that often it may be worth giving up the comfort for hardening security</li>\n</ul>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/264\">parv3213 (Rigor) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/264#issuecomment-1211394594\">0xA5DF (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Dupe of @sseefried’s <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/165\">#165</a> </p>\n<p>Edit: On a second look issue 165 focuses more on not giving the forwarder the ability to impersonate the admin, and less on the damage that can be done with the forwarder using normal functionality (i.e. impersonating regular users, being able to drain all funds from projects).<br>\nAlso the suggested mitigation is very different.<br>\nI think this makes this a different issue, but leaving this to the judge to decide.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/264#issuecomment-1229188594\">Jack the Pug (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Both this and 165 are good findings, I tend to merge 165 into this. The usage of EIP2771 is not very common, and I think you raised a noteworthy point that: a relayer’s <code>_msgSender</code> is less trustworthy than the real <code>msg.sender</code>, the admin themself should not be trusted too much either.</p>\n<p>I also like your writing, short but comprehensive. Thanks for being part of the C4 community, @0xA5DF! </p>\n</blockquote>\n<hr>\n<h2 id=\"m-07-projectraisedispute-doesnt-use-approvedhashes---meaning-users-who-use-contracts-cant-raise-disputes\" style=\"position:relative;\"><a href=\"#m-07-projectraisedispute-doesnt-use-approvedhashes---meaning-users-who-use-contracts-cant-raise-disputes\" aria-label=\"m 07 projectraisedispute doesnt use approvedhashes   meaning users who use contracts cant raise disputes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/340\">[M-07] <code>Project.raiseDispute()</code> doesn’t use approvedHashes - meaning users who use contracts can’t raise disputes</a></h2>\n<p><em>Submitted by 0xA5DF</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L493-L536\">Project.sol#L493-L536</a><br></p>\n<p>In case users are using a contract (like a multisig wallet) to interact with a project, they can’t raise a dispute.</p>\n<p>The sponsors have added the <code>approveHash()</code> function to support users who wish to use contracts as builder/GC/SC. However, the <code>Project.raiseDispute()</code> function doesn’t check them, meaning if any of those users wish to raise a dispute they can’t do it.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>I’ve modified <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/test/utils/disputeTests.ts#L179-L215\">the following test</a>, trying to use an approved hash. The test failed.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"typescript\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">it</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;Builder can raise addTasks() dispute&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expected</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">2</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">actionValues</span><span class=\"mtk1\"> = [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [</span><span class=\"mtk12\">exampleHash</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [</span><span class=\"mtk7\">100000000000</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">expected</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">projectAddress</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// build and raise dispute transaction</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> [</span><span class=\"mtk12\">encodedData</span><span class=\"mtk1\">, </span><span class=\"mtk12\">signature</span><span class=\"mtk1\">] = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">makeDispute</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">projectAddress</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">1</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">actionValues</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">signers</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&#39;0x4222&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">encodedMsgHash</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">encodedData</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">project</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">signers</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">approveHash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">encodedMsgHash</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tx</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">project</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">signers</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .</span><span class=\"mtk11\">raiseDispute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">encodedData</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;0x&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// expect event</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tx</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">emit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">disputesContract</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;DisputeRaised&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .</span><span class=\"mtk11\">withArgs</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;0x4222&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// expect dispute raise to store info</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_dispute</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">disputesContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">disputes</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">decodedAction</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abiCoder</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">types</span><span class=\"mtk1\">.</span><span class=\"mtk12\">taskAdd</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_dispute</span><span class=\"mtk1\">.</span><span class=\"mtk12\">actionData</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_dispute</span><span class=\"mtk1\">.</span><span class=\"mtk12\">status</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_dispute</span><span class=\"mtk1\">.</span><span class=\"mtk12\">taskID</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">decodedAction</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">][</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">exampleHash</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">decodedAction</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">][</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100000000000</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">decodedAction</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">]).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">expected</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">decodedAction</span><span class=\"mtk1\">[</span><span class=\"mtk7\">3</span><span class=\"mtk1\">]).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">projectAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// expect unchanged number of tasks</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">taskCount</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">project</span><span class=\"mtk1\">.</span><span class=\"mtk11\">taskCount</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">taskCount</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">expected</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-12\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-12\" aria-label=\"recommended mitigation steps 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Make <code>raiseDispute()</code> to check for approvedHashes too.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/340\">parv3213 (Rigor) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/340#issuecomment-1229196683\">Jack the Pug (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Very nice!</p>\n</blockquote>\n<hr>\n<h2 id=\"m-08-builders-must-pay-more-interest-when-the-system-is-paused\" style=\"position:relative;\"><a href=\"#m-08-builders-must-pay-more-interest-when-the-system-is-paused\" aria-label=\"m 08 builders must pay more interest when the system is paused permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/248\">[M-08] Builders must pay more interest when the system is paused.</a></h2>\n<p><em>Submitted by hansfriese, also found by 0x52, 0xNazgul, and rbserver</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Community.sol#L455\">Community.sol#L455</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Community.sol#L484\">Community.sol#L484</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Community.sol#L509\">Community.sol#L509</a><br></p>\n<p>Builders can’t repay when the system is paused so they must pay more interest for the paused period.</p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Builders can repay to lenders using 3 functions, <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Community.sol#L455\">repayLender()</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Community.sol#L484\">reduceDebt()</a>, and <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Community.sol#L509\">escrow()</a>.</p>\n<p>But they all don’t work when the system is paused and builders have no way to avoid it.</p>\n<p>Furthermore, the HomeFi admin is the main lender of builders and there is no assurance that the admin would pause the community for a while to get more interest.</p>\n<h3 id=\"tools-used-3\" style=\"position:relative;\"><a href=\"#tools-used-3\" aria-label=\"tools used 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Solidity Visual Developer of VSCode</p>\n<h3 id=\"recommended-mitigation-steps-13\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-13\" aria-label=\"recommended mitigation steps 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Recommend thinking of an approach to make 3 repay functions work for paused or modify the interest calculation formula not to add interest for the paused period.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/248\">zgorizzo69 (Rigor) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/248#issuecomment-1207339132\">parv3213 (Rigor) commented</a>:</strong></p>\n<blockquote>\n<p>The pause period is to fix severe bugs, and we don’t want extra logic to handle extra interest. Hopefully, during that downtime, no builders will need to make repayment right away.<br>\nAlso, moving forward, HomeFi admin will be a decentralized DAO. </p>\n</blockquote>\n<hr>\n<h2 id=\"m-09-it-should-not-submit-a-project-with-no-total-budget-requires-at-least-one-task-with-cost--0\" style=\"position:relative;\"><a href=\"#m-09-it-should-not-submit-a-project-with-no-total-budget-requires-at-least-one-task-with-cost--0\" aria-label=\"m 09 it should not submit a project with no total budget requires at least one task with cost  0 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/348\">[M-09] It should not submit a project with no total budget. Requires at least one task with cost > 0</a></h2>\n<p><em>Submitted by cryptonue, also found by aez121, hansfriese, obront, rbserver, and saneryee</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/main/contracts/Community.sol#L206-L282\">Community.sol#L206-L282</a><br></p>\n<p>When publishing a project, there is still possibility the project doesn’t have any task or 0 budget.</p>\n<h3 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>According to contest guideline, there is information that says:</p>\n<blockquote>\n<p><em>“Note that you cannot submit a project with no total budget. Therefore it requires at least one task with a budget > 0.”</em></p>\n</blockquote>\n<p>Meanwhile, on <code>publishProject()</code> in Community.sol, there is no check of this condition.</p>\n<h3 id=\"recommended-mitigation-steps-14\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-14\" aria-label=\"recommended mitigation steps 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add a new <code>require</code> which will check if the first task (which is at index 1), its cost is > 0.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  // Local instance of variables. For saving gas.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  IProject _projectInstance = IProject(_project);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  // Revert if project doesn&#39;t have one task with budget &gt; 0</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  require(_projectInstance.tasks[1].cost &gt; 0, &quot;First task &gt; 0&quot;);</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/348#issuecomment-1211894839\">parv3213 (Rigor) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>The docs here were deprecated. A project doesn’t have to have any task published in a community. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/348#issuecomment-1229169263\">Jack the Pug (judge) commented</a>:</strong></p>\n<blockquote>\n<p>This is a valid Medium based on the docs (even though it’s deprecated now).</p>\n</blockquote>\n<hr>\n<h2 id=\"m-10-possible-dos-in-lendtoproject-and-togglelendingneeded-function-because-unbounded-loop-can-run-out-of-gas\" style=\"position:relative;\"><a href=\"#m-10-possible-dos-in-lendtoproject-and-togglelendingneeded-function-because-unbounded-loop-can-run-out-of-gas\" aria-label=\"m 10 possible dos in lendtoproject and togglelendingneeded function because unbounded loop can run out of gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/336\">[M-10] Possible DOS in <code>lendToProject()</code> and <code>toggleLendingNeeded()</code> function because unbounded loop can run out of gas</a></h2>\n<p><em>Submitted by minhquanym, also found by berndartmueller, Chom, and scaraven</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L710\">Project.sol#L710</a><br></p>\n<p>In <code>Project</code> contract, the <code>lendToProject()</code> function might not be available to be called if there are a lot of Task in <code>tasks[]</code> list of project. It means that the project cannot be funded by either builder or community owner.</p>\n<p>This can happen because <code>lendToProject()</code> used <code>projectCost()</code> function. And the loop in <code>projectCost()</code> did not have a mechanism to stop, it’s only based on the length <code>taskCount</code>, and may take all the gas limit. If the gas limit is reached, this transaction will fail or revert.</p>\n<p>Same issue with <code>toggleLendingNeeded()</code> function which also call <code>projectCost()</code> function.</p>\n<h3 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Function <code>projectCost()</code> did not have a mechanism to stop, only based on the <code>taskCount</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">projectCost</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_cost</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Local instance of taskCount. To save gas.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_length</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">taskCount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Iterate over all tasks to sum their cost</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; </span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">_length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_cost</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">tasks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">].</span><span class=\"mtk12\">cost</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>There is no limit for builder when <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L248-L257\">add task</a>.</p>\n<p>And function <code>lendToProject()</code> used <code>projectCost()</code> to <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L199-L202\">check the new total lent value</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">projectCost</span><span class=\"mtk1\">() &gt;= </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_newTotalLent</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;Project::value&gt;required&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-15\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-15\" aria-label=\"recommended mitigation steps 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider keeping value of <code>projectCost()</code> in a storage variable and update it when a task is added or updated accordingly.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/336\">parv3213 (Rigor) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/336\">Jack the Pug (judge) decreased severity to Medium</a></strong></p>\n<hr>\n<h2 id=\"m-11-owner-of-project-nft-has-no-purpose\" style=\"position:relative;\"><a href=\"#m-11-owner-of-project-nft-has-no-purpose\" aria-label=\"m 11 owner of project nft has no purpose permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/413\">[M-11] Owner of project NFT has no purpose</a></h2>\n<p><em>Submitted by berndartmueller, also found by byndooa and rbserver</em></p>\n<p>Creating a new project mints a NFT to the <code>_sender</code> (builder). The <code>builder</code> of a project has special permissions and is required to perform various tasks.</p>\n<p>However, if the minted NFT is transferred to a different address, the <code>builder</code> of a project stays the same and the new owner of the transferred NFT has no purpose and no permissions to access authorized functions in Rigor.</p>\n<p>If real-world use-cases require a change of the <code>builder</code> address, there is currently no way to do so. Funds could be locked in the project contract if the current <code>builder</code> address is unable to perform any more actions.</p>\n<h3 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/HomeFi.sol#L225\">HomeFi.sol#L225</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createProject</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_hash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_currency</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">nonReentrant</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Revert if currency not supported by HomeFi</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">validCurrency</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_currency</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_sender</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Create a new project Clone and mint a new NFT for it</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_project</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">projectFactoryInstance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">createProject</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_currency</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_sender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mintNFT</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">string</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_hash</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Update project related mappings</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">projects</span><span class=\"mtk1\">[</span><span class=\"mtk12\">projectCount</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_project</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">projectTokenId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_project</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">projectCount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ProjectAdded</span><span class=\"mtk1\">(</span><span class=\"mtk12\">projectCount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_project</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_currency</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_hash</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-16\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-16\" aria-label=\"recommended mitigation steps 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider preventing transferring the project NFT to a different address for now as long as there is no use-case for the NFT owner/holder or use the actual NFT owner as the <code>builder</code> of a project.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/413#issuecomment-1207294173\">zgorizzo69 (Rigor) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>Builders are kyc’ed that’s why just by transferring the NFT you don’t get any of the builder privileges. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/413#issuecomment-1207340273\">parv3213 (Rigor) commented</a>:</strong></p>\n<blockquote>\n<p>As the warden said, <code>Owner of project NFT has no purpose</code> is true and is the intended behavior. Owning this NFT does not change anything.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/413\">Jack the Pug (judge) confirmed as valid</a></strong></p>\n<hr>\n<h2 id=\"m-12-updateprojecthash-does-not-check-project-address\" style=\"position:relative;\"><a href=\"#m-12-updateprojecthash-does-not-check-project-address\" aria-label=\"m 12 updateprojecthash does not check project address permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/347\">[M-12] <code>updateProjectHash</code> does not check project address</a></h2>\n<p><em>Submitted by MEP, also found by byndooa, Haipls, and minhquanym</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L162\">Project.sol#L162</a><br></p>\n<p>In Project.sol, function <code>updateProjectHash</code> L162, <code>_data</code> (which is signed by builder and/or contractor) does not contain a reference to the project address. In all other external functions of Project.sol, <code>_data</code> contains the address of the project, used in this check:<br>\n<code>require(_projectAddress == address(this), \"Project::!projectAddress\");</code>.<br></p>\n<p>The lack of this verification makes it possible to reuse the same <code>_data</code>, and the same <code>_signature</code> on another project, in the case the latter has the same builder and/or contractor, and the same <code>_nonce</code>. In pratice, if the same group of people starts a new project, when <code>_nonce</code> reaches the correct value, anyone can change the hash of a task (if we suppose that that <code>updateTaskHash()</code> was used in the previous project).</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/347\">parv3213 (Rigor) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-13-in-projectsetcomplete-the-signature-can-be-reused-when-the-first-call-is-reverted-for-some-reason\" style=\"position:relative;\"><a href=\"#m-13-in-projectsetcomplete-the-signature-can-be-reused-when-the-first-call-is-reverted-for-some-reason\" aria-label=\"m 13 in projectsetcomplete the signature can be reused when the first call is reverted for some reason permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/263\">[M-13] In <code>Project.setComplete()</code>, the signature can be reused when the first call is reverted for some reason</a></h2>\n<p><em>Submitted by hansfriese, also found by cccz</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L330\">Project.sol#L330</a><br></p>\n<p><code>setComplete()</code> function might be called successfully using the past signature when it shouldn’t work.</p>\n<p>As a result, a task might be completed when a builder doesn’t want it.</p>\n<h3 id=\"proof-of-concept-13\" style=\"position:relative;\"><a href=\"#proof-of-concept-13\" aria-label=\"proof of concept 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L108\">approveHash() function</a> can set only true so there is no method to cancel already approved hash without <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L891\">passing validation here</a>.</p>\n<p>So the below scenario would be possible.</p>\n<ul>\n<li>A builder, GC, and SC started a task and SC finished the task.</li>\n<li>They are approved to complete the task and signed the signature.</li>\n<li>But right before to call <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L330\">setComplete()</a> using the signature, the SC felt the cost is too low and raised a dispute to change the order using <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L493\">raiseDispute()</a>.</li>\n<li>As I suggested with another medium issue, the task can’t be completed when there is an ongoing dispute from <a href=\"https://github.com/code-423n4/2022-08-rigor#tasks-completion-and-payment\">this document - “If there is no ongoing dispute about that project, task status is updated and payment is made.”</a>. So <code>setComplete()</code> might revert.</li>\n<li>Even if it doesn’t check active disputes as now, <code>setComplete()</code> might revert when the funds haven’t been allocated and a builder signed by fault.</li>\n<li>After that, the HomeFi admin accepted the dispute, and the cost of the task was increased as SC wanted.</li>\n<li>Then the builder would hope to get more results (or scores) from this task as the cost is increased rather than completed right away.</li>\n<li>But SC can call <code>setComplete()</code> using the previous signature and complete the task without additional work.</li>\n<li>A builder might know about that before and try to update task hash but it will revert because SC doesn’t agree to <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L283\">updateTaskHash()</a>.</li>\n<li>In this case, it’s logical to cancel the approved hash <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L108\">here</a> but there is no such option.</li>\n</ul>\n<p>I don’t know if there would be similar problems with other functions that use signature and I think it would reduce the risk a little if we add an option to cancel the approved hash.</p>\n<h3 id=\"tools-used-4\" style=\"position:relative;\"><a href=\"#tools-used-4\" aria-label=\"tools used 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Solidity Visual Developer of VSCode</p>\n<h3 id=\"recommended-mitigation-steps-17\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-17\" aria-label=\"recommended mitigation steps 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Recommend modifying <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L108\">approveHash()</a> like below.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function approveHash(bytes32 _hash, bool _bool) external override { //++++++++++++++++++++</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address _sender = _msgSender();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Allowing anyone to sign, as its hard to add restrictions here.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Store _hash as signed for sender.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    approvedHashes[_sender][_hash] = _bool; //+++++++++++++++++++</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    emit ApproveHash(_hash, _sender, _bool); //++++++++++++++++++++++</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>I am not so sure that a similar scenario would be possible in the <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Community.sol#L501\">Community contract</a> also and recommend to change both functions together.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/263\">parv3213 (Rigor) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-14-incorrect-initialization-of-smart-contracts-with-access-control-issue\" style=\"position:relative;\"><a href=\"#m-14-incorrect-initialization-of-smart-contracts-with-access-control-issue\" aria-label=\"m 14 incorrect initialization of smart contracts with access control issue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/6\">[M-14] Incorrect initialization of smart contracts with Access Control issue</a></h2>\n<p><em>Submitted by Haipls, also found by byndooa, cryptphi, and TrungOre</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/HomeFiProxy.sol#L216-L230\">HomeFiProxy.sol#L216-L230</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Community.sol#L102-L119\">Community.sol#L102-L119</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/DebtToken.sol#L43-L58\">DebtToken.sol#L43-L58</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Disputes.sol#L74-L81\">Disputes.sol#L74-L81</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/HomeFi.sol#L92-L120\">HomeFi.sol#L92-L120</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L94-L105\">Project.sol#L94-L105</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/ProjectFactory.sol#L45-L55\">ProjectFactory.sol#L45-L55</a><br></p>\n<p>All next Impact depends on actions and attention from developers when deployed</p>\n<ul>\n<li>Loss of funds</li>\n<li>Failure of the protocol, with the need for redeploy</li>\n<li>Loss of control over protocol elements (some smart contracts)</li>\n<li>The possibility of replacing contracts and settings with harmful ones</li>\n</ul>\n<p>And other things that come out of it…</p>\n<h3 id=\"proof-of-concept-14\" style=\"position:relative;\"><a href=\"#proof-of-concept-14\" aria-label=\"proof of concept 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>For a proper understanding of Proof of Concept, you need to understand the following things:</p>\n<ol>\n<li>Hardhat does not stop the process with a deploy and does not show failed transactions if they have occurred in some cases</li>\n<li>Malicious agents can trace the protocol deployment transactions and insert their own transaction between them</li>\n</ol>\n<p>Reason:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/HomeFiProxy.sol#L216-L230\">During deploy TransparentUpgradeableProxy’s</a> initialize method for initializing contracts not called. The third parameter responsible for this is an empty string. This causes the initialization process itself to be <strong>delayed</strong></li>\n<li>Contract initialization methods have no check over who calls them</li>\n</ul>\n<p>Example <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/ProjectFactory.sol#L45-L55\">ProjectFactory.sol#L45-L55</a></p>\n<p><strong>Also suitable for other contracts, strings are attached in Links to affected code</strong></p>\n<h3 id=\"examples-of-exploiting-the-vulnerability\" style=\"position:relative;\"><a href=\"#examples-of-exploiting-the-vulnerability\" aria-label=\"examples of exploiting the vulnerability permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Examples of exploiting the vulnerability</h3>\n<p><strong>Failure of the protocol, with the need for redeploy</strong> &#x26;&#x26; <strong>Loss of control over protocol elements (some smart contracts)</strong>:</p>\n<ol>\n<li>User listen transaction in mempool, etherscan, transaction in block etc</li>\n<li>Finds the moment of deployment and sends the transaction for setup his HomeFi address in Disputes contract: Just he call initialize method and put his _homeFi parameter</li>\n<li>In the event that hardhat tracked a failed transaction, the deployment will stop and you will need to start over. If the hardhead misses it and the developers do not check the result and the setting, access to this part will be lost and fix is needed</li>\n</ol>\n<p><strong>Loss of funds</strong>:</p>\n<ol>\n<li>User listen transaction in mempool, etherscan, transaction in block for listne when HomeFi will deployed</li>\n<li>Send transaction for initialize <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/HomeFi.sol#L92-L120\">HomeFi</a> with his _treasury address</li>\n<li>Transfer the admin ownership the right to the real address to divert the eyes</li>\n<li>The address of the treasury remains with the attacker</li>\n<li>The protocol fees (fee) will be <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Community.sol#L443\">transfered</a> to the attacker’s address until it is detected</li>\n</ol>\n<h3 id=\"recommended-mitigation-steps-18\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-18\" aria-label=\"recommended mitigation steps 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Carry out checks at the initialization stage or redesign the deployment process with the initialization of contracts during deployment</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/6#issuecomment-1208155944\">zgorizzo69 (Rigor) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p> About the reasons</p>\n<ul>\n<li>TransparentUpgradeableProxy third parameter is optionally initialized with <code>_data</code> as explained in {ERC1967Proxy-constructor}</li>\n<li>incorrect modifiers check that addresses are not address(0)<br>\nabout the possible exploit<br>\nInteresting take on how the dark forest’s creatures can harm the deployment process <img class=\"emoji-icon\" alt=\"emoji-+1\" data-icon=\"emoji-+1\" style=\"display: inline; margin: 0; margin-top: 1px; position: relative; top: 5px; width: 25px\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAATiElEQVR4Ae2bBYwdx/bmfwVNFwdthwzhZJmZmZmZmZmZmVe4zLx/ZmYOZzf04rzYw5f6dnd1wU6qW6OR5dGztc+W3sv75KPLPXW+OvDVaZnP4XP4HD7WEDxk/J6f8fRkOxv/8+Fk8yclw8FWXhRaCEFT1YemWn9tXa7/AfC1D42Av/xLfyQPE9Vq8Xs3Ll36BzuXrzDZ2qQoClASUzWUyyVHB/t2eXTyJ4G/xUNAZP9hohgMf9bmzjbbl3fZ3NoiHRZoqWgbQ1mOyYpCH2j9N49v3/LA33ngBBAsDwsns/eGu1ee/96TyZTpxoTJxpRsawxCEKwjm+UkWiG8w9T1Xzu8fesrge96oATUdc3DQqKvPFbkxcZgWDAoBuTTASpP+g8VSm9ACJjaUK3KZLVY/nHglz1QAvLBiIeF2Xz9SJ4mRZImJFpHU1oREITgUVoymAyp12vGGxOGw8HPurX/4VXg/QdGwKKc8bAgSDaV1kJJidSnpiQIEABIIKDzhDzPKIYFo/FomB6oH/lACUiF4mFhrRgKKVFSIYUEBAGBFAII+BBQiSbNUtIkI80zhM5+MPAfH1wX0BkPC21Zp0oKEBJCQIgAAiSA6N+XASklWouYIsG56zxA6OAcDwN/6X99p/h9P+XFtG+7XNR9RR8RUiqUlOD95C993ndLwD8QAk4XxkOCQPT5RuBTIgQCAY9XgHpQBEgeIkIIng59CAgI4a7iPASPawxt07qzdX6GEyBCEE5IiZC944SzXAiRE4HwAe8stm1pqjWNaReA+GwgAJ3lRqkut4VSRDICvfOgpSA0FmtamnJFuVywrtu9B0mA5iFCal3qNEWprg0KRIyGSAjgK4tdlzSrJeXJCeViybJu3gXCZwMBQSepzrMcpZOu67UOrTQyOHzbYsuKar5gdXzE/OiQ5aoM89q++VlBwM94+unk+uXp780GBTrVKBkIVUMwDTYEnDFRApezExanzq8WC5ZVs/fyh8vXAf8ZT8CP+iGXf8fp8fdH5EVBqjVCKoIE7xzOWUxdUS3nrOezOBeoqob5uv2GDxbN8jOegL/0S37ojUu7O39uvDGlGAyi1NVKoZSMoieIAEi885jY+gxV3ZRvH5b/FmgB9xlNwGA4+hub29sb48mEvMhJ04R4IEIglECJBJ0miEQDYNqWsjG3vvW92Ws9AXzGtsG/8st/5M/aubz7S6ZbmwzHI7JBRpIkSK0QH5nqTCYJOsnicx8C1nk1mWQeMJ+xBPyBX/Ijio3tzb+2tbvLR+E/GBbkOu36v9KIXvL6AEFIgtIIlUBskSwPFs38jIDPxBR4dDj83afDz+8z3txgOByQJSkqS7vdd5ZeHiN6VRghJUKA9+H93vnwGUnAX/1VP+bF3cu7f2prZ5vxaEwxHKKnI4SK6q8jIIRo4SNzHuE9eAvBs27tNwMW4DOOgD//83/8xval7X+7++iV6XgSR1vo8bCbAkkZ9f6Z/g8QvMPZNhrW4r31X//W8ecB/uyav/XnDLayfKgSlRNcBiCDsjWmaU0dxNIugfK+Cfhbv+an8unE+4fvZJceG/+bRx5//AdMNzYZjYYkgwytBVKAEADibPdd8HhvoxL01Zp2XWLL6uSHXp889Wt+wovf54kXvs8PVFn2I53zN4QQUylFghAKH+I/75wLzgQzMWVdVfvNunrTNM2XtPPV5wE3P/WNkZ/3Q/h0YvropX/zxFNP/ertnS0mkyHD8YR0MkAlAoWMBZDWI9Y1zlucc9hqTb2cM9/f54P/+warsubR7/X9GV1+DIeIXSGyJxVCilgzBALvPd46grW0tsU0NVW5Zjmbcbx/4E4f/+XRK/PfBTRcAL336glwMbZfmA7yafGMUMmOkLIIjS2rqjw4qmfvAwvO4bnrz/zDq88+86unGxuMxyOK0YhkUiCVQAYJEvAC2haPBwLBttimxqxKlkeHyAA/8Kf8DLKtbawPuETjBCAEge5RABLiYwyDdYO3La0xmKpmOChIUq0E4Te1z9aP/Z8vfPVnXySm9O233uJuuPZTv+9wc2v0R4rR5FcNJ9Nr+SBLlFQxX01Tm+3lcn+2f/CdH3xw+3+Xy/oLf8yP/yG/++oLL/6eycY05nwxGca7PkrI/rQnEF6AMYi2xQdw1uJbi61r6tWc1f4eO089w2RnGy8EejKi1SJGydmxOXIg+scuMChyKCus0TRaxzrjXEtTlizms59+7Sdc/8HAt9yVgNMP4U4k1XBra/w/Nq9c+Sk7l3YZjsdkWRYvHEIMu9S25vH2Rvn4jSf3f265Wh8+8/2+785oOiXLs7jz6ShHJ4oz520AU4NznfS1ntCfA2zbYMo1pqni7wkepVKkUKRagk7wIhCEAPpsAAJ9RAULqcaJgAye4FOaPKWI9x8UIcgfcCEBIUjuxGT4xO/f2N35KZcfvcLpASYquDTPkZKznHOn1lYFG9Mxo+nGjkwzsjQhGQ7Qo6yTukL0Ow/Ytnde4J0lnJqzbcz/drWMEVCWK1xdg2kQAVStEFYhleq97q4XpKBTTyE++tac1QklQAcX/55wH5mjcSHhAujGBc7Dq8Ho0mj4W7d2dtna3mJjc5N8a0ySJmfKLTQWXze4IsVbi0wzEqVQRYEa5QjZT3YR0RHaNloAfGxzPj626zXV7Jj5/m3mh0ccL2vefPU1ti/tIgcjvGmiRI5yGRlDv18E9AhBxLT03sUZojU1zXxOu5hRn5qpK/bn6/cuJOD0Q87jxesbP/C0iF2dbIwZDocUm2OSYYoU3Y4qIOQ5aI2vJc57tNYInSAGGUL3Qie2PAnGcea89x2B1mGbino+Z3H7Fif7e9w6PDq1Oa+/t0e7XvHs88+STTbIhkPSNEOmXfdDhI6IIGJHCfF6tpsjGkNTlSwXS2Z7h5HUvZPVl3zBS3vfVsJdR+v6P7+0x3n8+aef+NHD0ZCiKE4tI81TpFRoKQn01VcEGOcICc46RJJAmiB0398FiBimgHeIqPcDoat8eNtgypJqfszi+Ii9vUPKdc2P+6k/kWe+9/fFtw2H777FzddfYb1axRQIyHhprVVck1YpoY8GAhHWWuqqZtU0HM7X3J7V7K/dJ4oBslzfqxKU8sU0y0jSFJ0kCN3P7/rKS09CLEjDAtUGSPrQ7POwey7A+k7ZAcF7grdd4Tur/AvK1SqS+HN+za/h6gvfm9ZagpDsPv0MN2YzyuNDVscn1OUSs17T1BWNaXCm23HbGlwIHcku0OJQOuXy5SHblwTXavNbH9uZbAO/+K4E/N4f+yQ9+Idf+45I0+x6kiQoLXvnuQABJJCd2wVBB88ZIcJ7fL/A4MH5bv7nWhOJKFdLrj3/PI888xxlWSIGBeQpQqYU0ynD69e4HEJXA/CEvnsI56KQCm13Pe9aXF+cTWNYrUoOD464efMmi/rdX8gF0ONRzjmoROsrWmuUUF0Vj0ZEnwI9+mi/6JDt+y/08CIAHhEjIcSPXHCxLmzt7mCdB6UhS2iFJ7gAwhPo9TMOKUEmEqE1AoUSOSCQjUXUdWyBwrR4XaGcQGVrdJqRaC0uJCDR+g4C5IbsZ/d92J+3M0R3zvkr7hIgONflPh7hIDiPc30qBB+LmlYy1pgQIyR+L/5tJ0IfWf7scsGBwyPoNkWEjiDhLbhu930fBW2Miu61D/AXP++l5G7TJf3n//dLnIMUUqdS9n+gu4sTiTgPf5cND3c6H0K3YiHA0aUBoV80SKnjZCjLCxbzE4IxHQmrNTJPIimoc7SL89ftzXnEqXlrYlRFXWFMbH22LqlWS+pyRV3XDrg7AXf6opRIzjscPCh119t36L7WhTOnObfYKH2j4wQA1yu/uPjYLtPBiMn2NsefvMnJhzfZuPIozlQIa/rUk2eeI2UvpPpu0kVMz7ONOsCaBrOuqdYlq6NjVseHLE9mrNbmJUDdSxcQcUwpOJf7F+S56EQIbQAl+hwJAH0HsF0EIAihX6j3CGxPSkBpzWg8YT1f8O1f+sU8/twLXLp6lWI0RiVpF3lSxqghhF5H+L6jBPAWHzzeGJxpT62hrkpWixUnpwR88OG+v7m/+M7vuHnyJwHuiYBAkCHQe0i0u0OAcVBVoDsdgJIgAB/ARkf7qPVdjgYfhVOI5ASg0/dpUbB/cJPv+Yav4/H3HkFKGcNOCBGdtq4TW611WOtibjsP4GnqlrVpEB6scywqw7oNLBrLQdnYNw/rv/naQfUO4O91IiQAQr9LZ7IuANwR4k0TT10yFi9LSNKOBNc5jABcP/KiD1l3Fg2dfHWOpq5J8pQf97N+STxIrWYzmuWSajWPJzrTtLRNg+h1BAgkAR8ESZYwTnTsWCHAaOKoG8e6dWxXJs3S5Y87JeAbgfaeCAg+hLhQESDmK3eJBIEwXbW1xsXWJIVHtYbgJPQ7H9sdHrzHO87PAKNFEtqWqqyYbm6ze/1JUAnTq08isxQInZL0cNYlvAcRoD8DCHwUUjiHiVK4iuF/64MP+MQ777O0H16C/RIw90SAc9Z571RwPoZaJEHHngMekAJi7tuuEJuaECwyyXFJN63B+y584xd6EXTOCL6Xxg7fR4LWCbaqILEAOCURiYZUw5kK7ciF/jTY2kgQwuLlqXmB1R6nEjya1nucdy1Q32sNwFvXeufSmLe+cyYQEE4Q4QKYlmBbCI7W1EijkGOFkoKAR8aRnTvb7UhEbz1iyEbHREBqHSVxs5xBNohhrowBrekagQJxTm67bk30ZLuuFcbdXy9XrI4+OggdsJgvqBpzE3D3TIB1tvXWdsUG37GcpuA9tA68RTh3pu+9aTDWotIURHebK4iuSgvRh/x5x6XsHJcCKXXU7cUg4/atA959+WWuPvc8VV0i0zx2CSFktLPO0zvfBVIXAba1sQVWq5LlfMbJ7X2O9/eYzZb+EwfrLwLEPRNQGzMzxmzgbHQQ58AYCKFvbeCF6I+g8WATz91pmp8JJql0fB6DQAQihO8i+Exeq+igzjKKYhBniN/17d/O8fERT1x9gnRQIHV3Eo3wveMupk3f+/vhTNtiTM16tWa2WLJ/tOTm0WL92l75F7/qvdlb93VfoCrrT5q6vm4ag+2dpDGgFQLwcXdjgTs76tazE3TStcFUACmIPg2Ed32oCvD09UGBBKl6AkZjNtsWCLz95tu89NIbXJqOmEyHhPjb0HcjhfchtlLf5TdVZbDeUbeOyjjKxjE3jjow+6I3j74QaO8nBcKqqt9Zr1Y/ql6XmKqhzVOUUqizsA8QF2Cx8UQWWJdrWn8LIVVsazorUEnShW6sJRCCOxM2cUpsVcx9rROSPKcYTwAR7WS15unnn4nO27aldY62MbHKx8fWYq3HEQhSopViY5CyrTReylj8FmXz6E9v5PNf/ObB+/dFwGyx/vbFyezXLGYzhqMhaaYRPp6SOKvm3dEzdgB7asaYOIsPSAZVTTqcoLMUnaYIegQfLYQQSYqjLLp0UErHmaO1hmSl2dmc8NT3/4Gk0ylpMUDqDEIgFvT4+5YQu6HvruU8bWup6orZ8YwPP/gk1dvvsT1KdoH6flLAv7y/+KbHd+blaG9/mPXFz0zGpFr3Ki8uJOZdW1eUJzPWTcPhwTFVaxktS7LhiGwwigov7rKSiL6DQuiLZ3cN2xrato1h7YLABk9TO5bzOYXStEGhM4lQkhASwIHSkIRIQhyri5bGOJZNy3xVcnIyZ7FaY52dA+39EOC+++biwx9wZfGlRZb8AkGITo4nE9IsRUkZCw/O9jchSqrFgvmiZLZu2F/ssbVcMxgOSfMBWZGTZhmpTlBRLKnYGURfzLpu03Zyt6lo4t0imJVr3nr1Fa7eeAqKISpGge7bYeg7QMAH35FoDFW5YjlfcLS3z96tfeZluXx7v/r2H/zo2HMx0KdfoAff/uHSAuYb3539ozyRP7xtzSOrxZLxaBjn9YmKC4jqrY0RUFNVVbyVNa9ajlcNbx2UFHny0uWNwY1hno3zNCVNE5JEkSZ9WxN9Ve8PNgSPtS46UxtHGyTf89rb7M+WXNndjZGE0ngh6WeL8bfe+dgCTVtTLdcsVyuOFyXHq2r11sH6D536c0ivHu7nf41Ngd0XLg2+9/d7ZPprp4PkhVGaXM5zvZFqLSB0eWxdLIKVsbH6nqzN0XFlXrl50nzhm0fVtzy7Uzzy3KXRj9wdpj9sXOhnh2m6kSUKqSQSgRShF0OAD/38xMdrNsZSntq6btGpYlzk5HkWi50UlICGkDkXaK0NpnVNZdrlsra3jlbNN3/P3vLz3j9p3gL2gWOA+yEgA7aBLWAEJI+O0+3tYbI5TJKNLGWUIkZBiMQH70tj5/PK3t5btrdOGjcD3DnGJaA++v3VjfzGzjB9YZjIa3mqrqZaXpKIXAlyEcOiC2sXiPWgcc62bajXtj1Z1f7dRe1eO6nb7/ZCHuVS6SwTuQwIE7ytG98clWZ10rglYIEKOAEOgfI+CYgYA5v9Yw4oQH6K6ZgD2t5c/x0NJPGxv8Yd1yE+XoxwzvwdrwUdwh1rML3TM2AO+PsSQj1WdDBAfs4JeRcCfG8t0PRm++8kfUSldxChLiBTAOFOcnuzgLvAofMbUAPr3vz/7/8cTe6y8EjCBX/8zghQ/e/TO66lL4iG845zh/Ntb/48SRd8zz6g/zp7cQrc42/VHREgL1hHuCACfLRPI/4ffcj4tNFkmVoAAAAASUVORK5CYII=\" title=\"emoji-+1\" /> <br>\nhowever if a tx fails the whole deployment script stops but I think it is a good practice to indeed verify after each initialization</li>\n</ul>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/6#issuecomment-1229122338\">Jack the Pug (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Valid, but gonna downgrade it to Medium as the impact is not that severe in practice.</p>\n<p>Btw, in response to the response about the 2nd reason:</p>\n<blockquote>\n<p>Contract initialization methods have no check over who calls them.<br>\nincorrect modifiers check that addresses are not address(0)</p>\n</blockquote>\n<p>“no check over who calls them” means no access control. It can be called by anyone. It’s not about the input validation.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-15-projectaddtasks-wouldnt-work-properly-when-its-called-from-disputes-contract\" style=\"position:relative;\"><a href=\"#m-15-projectaddtasks-wouldnt-work-properly-when-its-called-from-disputes-contract\" aria-label=\"m 15 projectaddtasks wouldnt work properly when its called from disputes contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/233\">[M-15] <code>Project.addTasks()</code> wouldn’t work properly when it’s called from disputes contract.</a></h2>\n<p><em>Submitted by hansfriese, also found by Lambda</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L238\">Project.sol#L238</a><br></p>\n<p><code>addTasks()</code> function checks <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L238\">this require()</a> to make sure <code>_taskCount</code> is correct.</p>\n<p>But it might revert when this function is called after a dispute because it takes a certain time to resolve disputes and other tasks might be added meanwhile.</p>\n<h3 id=\"proof-of-concept-15\" style=\"position:relative;\"><a href=\"#proof-of-concept-15\" aria-label=\"proof of concept 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The below scenario would be possible.</p>\n<ul>\n<li>A project contains 10 active tasks(taskCount = 10) and a builder and contractor are going to add one more task.</li>\n<li>There were some disagreements between a builder and contractor so they raised a dispute with _taskCount = 10 using <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L493\">raiseDispute()</a>.</li>\n<li>Normally it would take a certain time(like 1 day or more) to resolve the dispute as it must be done by HomeFi owner.</li>\n<li>Meanwhile, if the builder and contractor need to add another task, they should set <code>_taskCount = 10</code> and <code>taskCount</code> will be 11 after addition <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L260\">here</a>.</li>\n<li>After that, the HomeFi admin agreed to add a task with <code>_taskCount = 10</code>, but it will revert <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L238\">here</a>.</li>\n</ul>\n<p>So currently, the project builder and contractor shouldn’t add new tasks to make their previous dispute valid.</p>\n<p>I think it’s reasonable to modify that they can add other tasks even though there is an active dispute.</p>\n<h3 id=\"tools-used-5\" style=\"position:relative;\"><a href=\"#tools-used-5\" aria-label=\"tools used 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Solidity Visual Developer of VSCode</p>\n<h3 id=\"recommended-mitigation-steps-19\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-19\" aria-label=\"recommended mitigation steps 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>I think we can modify not to compare <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L238\">taskCount</a> when it’s called from disputes contract.</p>\n<p>So we can modify <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L238\">this part</a> like below.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if (_msgSender() != disputes) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    require(_taskCount == taskCount, &quot;Project::!taskCount&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _taskCount = taskCount;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/233\">parv3213 (Rigor) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-16-new-subcontractor-can-be-set-for-a-scconfirmed-task-without-current-subcontractor-consent\" style=\"position:relative;\"><a href=\"#m-16-new-subcontractor-can-be-set-for-a-scconfirmed-task-without-current-subcontractor-consent\" aria-label=\"m 16 new subcontractor can be set for a scconfirmed task without current subcontractor consent permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/378\">[M-16] New subcontractor can be set for a SCConfirmed task without current subcontractor consent</a></h2>\n<p><em>Submitted by hyh, also found by hansfriese</em></p>\n<p>Malicious builder/contractor can change the subcontractor for any task even if all the terms was agreed upon and work was started/finished, but the task wasn’t set to completed yet, i.e. it’s <code>SCConfirmed</code>, <code>getAlerts(_taskID)[2] == true</code>. This condition is not checked by inviteSC().</p>\n<p>For example, a contractor can create a subcontractor of her own and front run valid setComplete() call with a sequence of <code>inviteSC(task, own_subcontractor) -> setComplete()</code> with a signatory from the <code>own_subcontractor</code>, stealing the task budget from the subcontractor who did the job. Contractor will not breach any duties with the community as the task will be done, while raiseDispute() will not work for a real subcontractor as the task record will be already changed.</p>\n<p>Setting the severity to be high as this creates an attack vector to fully steal task budget from the subcontractor as at the moment of any valid setComplete() call the task budget belongs to subcontractor as the job completion is already verified by all the parties.</p>\n<h3 id=\"proof-of-concept-16\" style=\"position:relative;\"><a href=\"#proof-of-concept-16\" aria-label=\"proof of concept 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>inviteSC() requires either builder or contractor to call for the change and verify nothing else:</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L295-L316\">Project.sol#L295-L316</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @inheritdoc IProject</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">inviteSC</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_taskList</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_scList</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Revert if sender is neither builder nor contractor.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk12\">builder</span><span class=\"mtk1\"> || </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk12\">contractor</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;Project::!Builder||!GC&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Revert if taskList array length not equal to scList array length.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_length</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_taskList</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_length</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_scList</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Project::Lengths !match&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Invite subcontractor for each task.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">_inviteSC</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_taskList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_scList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MultipleSCInvited</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_taskList</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_scList</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>_inviteSC() only checks non-zero address and calls inviteSubcontractor():</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L747-L762\">Project.sol#L747-L762</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_inviteSC</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_sc</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_emitEvent</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Revert if sc to invite is address 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_sc</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Project::0 address&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Internal call to tasks invite contractor</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tasks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">].</span><span class=\"mtk11\">inviteSubcontractor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_sc</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// If `_emitEvent` is true (called via changeOrder) then emit event</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_emitEvent</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">SingleSCInvited</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_sc</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>inviteSubcontractor() just sets the new value:</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/libraries/Tasks.sol#L106-L111\">Tasks.sol#L106-L111</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">inviteSubcontractor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Task</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_sc</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">onlyInactive</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_self</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">subcontractor</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_sc</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Task is paid only on completion by setComplete():</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L349-L356\">Project.sol#L349-L356</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Mark task as complete. Only works when task is active.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tasks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">].</span><span class=\"mtk11\">setComplete</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Transfer funds to subcontractor.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">currency</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tasks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">].</span><span class=\"mtk12\">subcontractor</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tasks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">].</span><span class=\"mtk12\">cost</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span></code></pre>\n<p>This way the absence of <code>getAlerts(_taskID)[2]</code> check and checkSignatureTask() call in inviteSC() provides a way for builder or contractor to steal task budget from a subcontractor.</p>\n<h3 id=\"recommended-mitigation-steps-20\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-20\" aria-label=\"recommended mitigation steps 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider calling checkSignatureTask() when <code>getAlerts(_taskID)[2]</code> is true, schematically:</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L310-L313\">Project.sol#L310-L313</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Invite subcontractor for each task.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+           </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">getAlerts</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_taskList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">])[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+               </span><span class=\"mtk11\">checkSignatureTask</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_data_with_scList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_taskList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">_inviteSC</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_taskList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_scList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p>This approach is already implemented in changeOrder() where <code>_newSC</code> is a part of hash that has to be signed by all the parties:</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L386-L403\">Project.sol#L386-L403</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">changeOrder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_data</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">nonReentrant</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Decode params from _data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newSC</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newCost</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_project</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// If the sender is disputes contract, then do not check for signatures.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() != </span><span class=\"mtk12\">disputes</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// Check for required signatures.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">checkSignatureTask</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_data</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L477-L481\">Project.sol#L477-L481</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// If new subcontractor is not zero address.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_newSC</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// Invite the new subcontractor for the task.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">_inviteSC</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_newSC</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span></code></pre>\n<p>checkSignatureTask() checks all the signatures:</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L855-L861\">Project.sol#L855-L861</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// When builder has not delegated rights to contractor</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// Check for B, SC and GC signatures</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">checkSignatureValidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">builder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_hash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">checkSignatureValidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_hash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">checkSignatureValidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_sc</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_hash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">, </span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/378#issuecomment-1207288111\">zgorizzo69 (Rigor) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>When a SC accepts an invitation the task is marked as active <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/libraries/Tasks.sol#L128\">Tasks.sol#L128</a>.<br>\nSo as you noted here above the inviteSubcontractor for the same task will fail because of the modifier.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function inviteSubcontractor(Task storage _self, address _sc)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        internal</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        onlyInactive(_self)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    {</span></span></code></pre>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/378#issuecomment-1210603649\">hyh (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Yes, you are right, in general case <code>onlyInactive</code> modifier guards the reset.<br>\nThe issue appears to be more specific, in the case when task budget is increased, while there is no budget to cover it, i.e. <code>totalLent - _totalAllocated &#x3C; _newCost - _taskCost</code>, the subcontractor signs only the budget increase itself, while subcontractor ends up being unassigned from it fully:</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L422-L461\">Project.sol#L422-L461</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// If tasks are already allocated with old cost.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">tasks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">].</span><span class=\"mtk12\">alerts</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// If new task cost is less than old task cost.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_newCost</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// Find the difference between old - new.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_withdrawDifference</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_newCost</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// Reduce this difference from total cost allocated.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// As the same task is now allocated with lesser cost.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">totalAllocated</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">_withdrawDifference</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// Withdraw the difference back to builder&#39;s account.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// As this additional amount may not be required by the project.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">autoWithdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_withdrawDifference</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// If new cost is more than task cost but total lent is enough to cover for it.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalLent</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_totalAllocated</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_newCost</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// Increase the difference of new cost and old cost to total allocated.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">totalAllocated</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">_newCost</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// If new cost is more than task cost and totalLent is not enough.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// Un-confirm SC, mark task as inactive, mark allocated as false, mark lifecycle as None</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// Mark task as inactive by unapproving subcontractor.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// As subcontractor can only be approved if task is allocated</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">_unapproved</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">tasks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">].</span><span class=\"mtk11\">unApprove</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// Mark task as not allocated.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">tasks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">].</span><span class=\"mtk11\">unAllocateFunds</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// Reduce total allocation by old task cost.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// As as needs to go though funding process again.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">totalAllocated</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// Add this task to _changeOrderedTask array. These tasks will be allocated first.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">_changeOrderedTask</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span></code></pre>\n<p>Suppose task is 95% complete, its budget is fully spent, so changeOrder() is called per mutual agreement to add extra <code>0.05 * old_cost / 0.95</code> funds, which aren’t lent yet. Dishonest contractor can call <code>inviteSC</code> with own subcontractor, who will receive full <code>old_cost / 0.95</code> on completion.</p>\n<p>I.e. fully removing subcontractor from already funded and started task provides a more specific similar attack surface.</p>\n<p>By definition <code>unApprove</code> deals with the case of new task that needs to be reviewed:</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/libraries/Tasks.sol#L153-L164\">Tasks.sol#L153-L164</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Set a task as un accepted/approved for SC</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> modifier onlyActive</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@param</span><span class=\"mtk3\"> </span><span class=\"mtk12\">_self</span><span class=\"mtk3\"> Task the task being set as funded</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">unApprove</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Task</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// State/ lifecycle //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">alerts</span><span class=\"mtk1\">[</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Lifecycle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">SCConfirmed</span><span class=\"mtk1\">)] = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">state</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">TaskStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Inactive</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>But in changeOrder() all the parties already reviewed and accepted the terms:</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L391-L403\">Project.sol#L391-L403</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Decode params from _data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newSC</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newCost</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_project</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// If the sender is disputes contract, then do not check for signatures.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() != </span><span class=\"mtk12\">disputes</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// Check for required signatures.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">checkSignatureTask</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_data</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L855-L861\">Project.sol#L855-L861</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// When builder has not delegated rights to contractor</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// Check for B, SC and GC signatures</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">checkSignatureValidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">builder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_hash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">checkSignatureValidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_hash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">checkSignatureValidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_sc</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_hash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">, </span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span></code></pre>\n<p>So, marking the task as not active and not SCConfirmed doesn’t look correct in this case.</p>\n<p>Straightforward mitigation here is to keep it active, i.e. do partial flag removal, say do <code>unConfirm</code> instead of <code>unApprove</code>:</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/libraries/Tasks.sol#L160-L164\">Tasks.sol#L160-L164</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">unConfirm</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Task</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// State/ lifecycle //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">alerts</span><span class=\"mtk1\">[</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Lifecycle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">SCConfirmed</span><span class=\"mtk1\">)] = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/378#issuecomment-1211350315\">hyh (warden) commented</a>:</strong></p>\n<blockquote>\n<p>A little bit more complex, but more correct (project logic aligned) mitigation is:</p>\n<ol>\n<li>Introduce <code>deActivate</code> instead of <code>unConfirm</code>:</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deActivate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Task</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// State/ lifecycle //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">state</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">TaskStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Inactive</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<ol start=\"2\">\n<li>Introduce <code>onlyUnconfirmed</code> modifier and set it to the inviteSubcontractor() and acceptInvitation():</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev only allow unconfirmed tasks.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyUnconfirmed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Task</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            !</span><span class=\"mtk12\">_self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">alerts</span><span class=\"mtk1\">[</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Lifecycle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">SCConfirmed</span><span class=\"mtk1\">)],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;Task::SCConfirmed&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/libraries/Tasks.sol#L106-L111\">Tasks.sol#L106-L111</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">inviteSubcontractor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Task</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_sc</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-       </span><span class=\"mtk11\">onlyInactive</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_self</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+       </span><span class=\"mtk11\">onlyUnconfirmed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_self</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">subcontractor</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_sc</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/libraries/Tasks.sol#L119-L129\">Tasks.sol#L119-L129</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">acceptInvitation</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Task</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_sc</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-       </span><span class=\"mtk11\">onlyInactive</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_self</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+       </span><span class=\"mtk11\">onlyUnconfirmed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_self</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Prerequisites //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">subcontractor</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_sc</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Task::!SC&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// State/ lifecycle //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">alerts</span><span class=\"mtk1\">[</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Lifecycle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">SCConfirmed</span><span class=\"mtk1\">)] = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">state</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">TaskStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Active</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><code>onlyInactive</code> can then be removed:</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/libraries/Tasks.sol#L42-L46\">Tasks.sol#L42-L46</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev only allow inactive tasks. Task is inactive if SC is unconfirmed.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyInactive</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Task</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">state</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">TaskStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Inactive</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Task::active&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<ol start=\"3\">\n<li>Deactivate task only instead of fully resetting it in changeOrder():</li>\n</ol>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L443-L460\">Project.sol#L443-L460</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-                  </span><span class=\"mtk3\">// Un-confirm SC, mark task as inactive, mark allocated as false, mark lifecycle as None</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-                  </span><span class=\"mtk3\">// Mark task as inactive by unapproving subcontractor.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-                  </span><span class=\"mtk3\">// As subcontractor can only be approved if task is allocated</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-                  </span><span class=\"mtk12\">_unapproved</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-                  </span><span class=\"mtk12\">tasks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">].</span><span class=\"mtk11\">unApprove</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+                  </span><span class=\"mtk3\">// Mark task as inactive, mark allocated as false, add to the allocation queue</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+                  </span><span class=\"mtk3\">// Mark task as inactive</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+                  </span><span class=\"mtk12\">tasks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">].</span><span class=\"mtk11\">deActivate</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// Mark task as not allocated.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">tasks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">].</span><span class=\"mtk11\">unAllocateFunds</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// Reduce total allocation by old task cost.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// As as needs to go though funding process again.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">totalAllocated</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// Add this task to _changeOrderedTask array. These tasks will be allocated first.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">_changeOrderedTask</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span></code></pre>\n<p>Notice that the mitigation here is to make Active and SCConfirmed states independent (as a general note, it doesn’t make much sense to have some fully coinciding states). Active flags whether task is in progress right now, while SCConfirmed flags whether it ever was started, being either Active (work is being done right now) or Inactive (work had started, something was done, now it’s paused).</p>\n<p>The issue basically means that the states are different and moving a task to another SC while it’s SCConfirmed should be prohibited as some work was done and some payment to current SC is due</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/378#issuecomment-1211605980\">parv3213 (Rigor) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Agree to the risk, but the severity should be 2. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/378#issuecomment-1229128226\">Jack the Pug (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>This is a good one with a very detailed explanation, but I’m afraid it fits a Medium severity better, as funds are not directly at risk but rather a malfunctioning feature that can indirectly cause damage to certain roles.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-17-malicious-delegated-contractor-can-block-funding-tasks-or-mark-tasks-as-complete\" style=\"position:relative;\"><a href=\"#m-17-malicious-delegated-contractor-can-block-funding-tasks-or-mark-tasks-as-complete\" aria-label=\"m 17 malicious delegated contractor can block funding tasks or mark tasks as complete permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/320\">[M-17] Malicious delegated contractor can block funding tasks or mark tasks as complete</a></h2>\n<p><em>Submitted by indijanc</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/main/contracts/Project.sol#L219\">Project.sol#L219</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/main/contracts/Project.sol#L655\">Project.sol#L655</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/main/contracts/Project.sol#L807\">Project.sol#L807</a><br></p>\n<p>A malicious delegated contractor can add a huge number of tasks (or one task with a huge cost). This would then pose problems in <code>allocateFunds()</code> as tasks could not be funded. Builder could remove delegation for the contractor but couldn’t replace the contractor and so couldn’t remove the malicious contractor. The contractor is required to sign various state changes in <code>Project.sol</code>. A delegated contractor can also for example complete tasks which results in transferring funds to subcontractors.</p>\n<p>This sounds very problematic and would be critical, but reading through the documentation and the code, I’m assuming there is certain trust incorporated and required for the system to work. Hence I’m assuming the system considers a delegated contractor is trustworthy as is the builder. So while the impact may be big I consider the likelihood quite small.</p>\n<h3 id=\"proof-of-concept-17\" style=\"position:relative;\"><a href=\"#proof-of-concept-17\" aria-label=\"proof of concept 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>When a contractor is delegated, various operations only need his signature.<br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/main/contracts/Project.sol#L807\">Project.sol L807</a></p>\n<h3 id=\"tools-used-6\" style=\"position:relative;\"><a href=\"#tools-used-6\" aria-label=\"tools used 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Visual Studio Code</p>\n<h3 id=\"recommended-mitigation-steps-21\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-21\" aria-label=\"recommended mitigation steps 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>There’s a couple of improvements you could consider:</p>\n<ol>\n<li>Create a function to update <code>lastAllocatedTask</code>. This could be restricted to <code>Disputes</code> contract or the builder. This could be used against maliciously inserted tasks.</li>\n<li>Add functionality for <code>Disputes</code> contract to be able to remove or replace the contractor. This would be a guard against malicious contractors.</li>\n</ol>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/320\">parv3213 (Rigor) acknowledged, but disagreed with severity</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/320#issuecomment-1229189630\">Jack the Pug (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I like this finding, but this is probably a design choice. The suggestions make sense to me. I’ll keep this as a Medium.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-18-task-functionality-completely-sidestepped-via-autowithdraw\" style=\"position:relative;\"><a href=\"#m-18-task-functionality-completely-sidestepped-via-autowithdraw\" aria-label=\"m 18 task functionality completely sidestepped via autowithdraw permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/281\">[M-18] Task Functionality completely sidestepped via <code>autoWithdraw</code></a></h2>\n<p><em>Submitted by GalloDaSballo</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L770\">Project.sol#L770</a><br></p>\n<p><code>autoWithdraw</code> will send funds to the <code>builder</code>, we can use this knowledge to drain all funds from <code>Project</code> to the builder contract. Completely sidestepping the whole Task based logic.</p>\n<h3 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Through creation and deletion of tasks, leveraging <code>autoWithdraw</code> which will always send the funds to be <code>builder</code>, even when origin was the Community, a builder can cycle out all funds out of the Project Contract and transfer them to themselves.</p>\n<p>Ultimately this breaks the trust assumptions and guarantees of the Task System, as the builder can now act as they please, the Project contract no longer holding any funds is limited.</p>\n<p>Only aspect that diminishes impact is that the system is based on Credit (uncollateralized /undercollateralized lending), meaning the Builder wouldn’t be “committing a crime” in taking ownership of all funds.</p>\n<p>However the system invariants used to offer completely transparent accounting are now bypassed in favour of “trusting the builder”.</p>\n<h3 id=\"proof-of-concept-18\" style=\"position:relative;\"><a href=\"#proof-of-concept-18\" aria-label=\"proof of concept 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>We know we can trigger <code>autoWithdraw</code> it by creating and allocating a task, and then reducing it’s cost</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// If tasks are already allocated with old cost.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">tasks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">].</span><span class=\"mtk12\">alerts</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// If new task cost is less than old task cost.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_newCost</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// Find the difference between old - new.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_withdrawDifference</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_newCost</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// Reduce this difference from total cost allocated.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// As the same task is now allocated with lesser cost.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">totalAllocated</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">_withdrawDifference</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// Withdraw the difference back to builder&#39;s account.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// As this additional amount may not be required by the project.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">autoWithdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_withdrawDifference</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalLent</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_totalAllocated</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_newCost</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p>To funnel the funds we can:</p>\n<ul>\n<li>Create a new Task with Cost X (call <code>addTasks</code>)</li>\n<li>Allocate to it (call <code>allocateFunds</code>)</li>\n<li><code>changeOrder</code> to trigger the condition <code>if (_newCost &#x3C; _taskCost) {</code> and receive the delta of tokens</li>\n</ul>\n<p>Repeat until all funds are funneled into the <code>builder</code> wallet.</p>\n<p>The reason why the builder can do this is because in all functions involved:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L218-L228\"><code>addTasks</code></a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L400-L404\"><code>changeOrder</code></a></li>\n</ul>\n<p>only the <code>builder</code> signature is necessary, meaning the contract is fully trusting the <code>builder</code></p>\n<h4 id=\"example-scenario\" style=\"position:relative;\"><a href=\"#example-scenario\" aria-label=\"example scenario permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example Scenario</h4>\n<ul>\n<li>Builder funnels the funds out</li>\n<li>Builder makes announcement: “Funds are safu, we’ll update once we know what to do next”</li>\n<li>Builder follows up: “We will use twitter to post updates on the project”</li>\n<li>Entire system is back to being opaque, making the system pointless</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-22\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-22\" aria-label=\"recommended mitigation steps 22 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Below are listed two options for mitigation</p>\n<ul>\n<li>A) Consider removing <code>autoWithdraw</code> (keep funds inside of project), create a separate multi-sig like way to withdraw</li>\n<li>B) Keep a split between funds sent by Builder and by Community, and make <code>autoWithdraw</code> send the funds back accordingly (may also need to re-compute total sent in Community)</li>\n</ul>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/281#issuecomment-1212006518\">parv3213 (Rigor) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>Users in our system are KYC’ed, whitelisted, and trusted. We are certain that they won’t misuse this feature.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/281#issuecomment-1229151906\">Jack the Pug (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>The issue makes a lot of sense to me, from the security perspective, the system should have as minimal trust as possible. The recommended remediation also makes sense.</p>\n<p>I’m not sure about the High severity though. It’s more like a Medium to me.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-19-changeorder-requires-subcontractor-signature-when-the-subcontractor-address-is-0\" style=\"position:relative;\"><a href=\"#m-19-changeorder-requires-subcontractor-signature-when-the-subcontractor-address-is-0\" aria-label=\"m 19 changeorder requires subcontractor signature when the subcontractor address is 0 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/85\">[M-19] <code>changeOrder</code> requires subcontractor signature when the subcontractor address is 0</a></h2>\n<p><em>Submitted by Lambda</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/f2498c86dbd0e265f82ec76d9ec576442e896a87/contracts/Project.sol#L402\">Project.sol#L402</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/f2498c86dbd0e265f82ec76d9ec576442e896a87/contracts/Project.sol#L485\">Project.sol#L485</a><br></p>\n<p>Via <code>changeOrder</code>, it is possible to set the subcontractor address to 0 (and it is zero when no one is invited). However, when it is updated later again, a signature of the “current subcontractor” (in this case <code>address(0)</code>) is still required. This is in contrast to contractors, where the signature is only required when the contractor address is non-zero.</p>\n<h3 id=\"proof-of-concept-19\" style=\"position:relative;\"><a href=\"#proof-of-concept-19\" aria-label=\"proof of concept 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<p>1.) Task 1 is assigned to the subcontractor Bob.<br>\n2.) <code>changeOrder</code> with Bob’s signature is used to assign task 1 temporarily to address 0 while a new subcontractor is searched.<br>\n3.) The price of the task should be changed, which requires the signature of the “current subcontractor” (i.e., <code>address(0)</code>)<br></p>\n<p>To be fair, because <code>SignatureDecoder.recoverKey</code> returns <code>address(0)</code> for invalid signatures, an invalid signature could in theory be submitted in step 3. But I do not assume that this is really intended (for instance, there is also the check in <code>checkSignatureTask</code>, although one could simply use an invalid signature when it is <code>address(0)</code>) and a design that requires the user to submit invalid signatures in certain scenarios would also be very poor in my opinion.</p>\n<h3 id=\"recommended-mitigation-steps-23\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-23\" aria-label=\"recommended mitigation steps 23 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Check if the subcontractor address is zero, do not require a valid signature in such cases.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/85\">parv3213 (Rigor) acknowledged</a></strong></p>\n<hr>\n<h2 id=\"m-20-projectsol-and-communitysol-have-no-way-to-revoke-a-hash-in-approvedhashes\" style=\"position:relative;\"><a href=\"#m-20-projectsol-and-communitysol-have-no-way-to-revoke-a-hash-in-approvedhashes\" aria-label=\"m 20 projectsol and communitysol have no way to revoke a hash in approvedhashes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/64\">[M-20] <code>Project.sol</code> and <code>Community.sol</code> have no way to revoke a hash in approvedHashes</a></h2>\n<p><em>Submitted by 0x52</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Community.sol#L501-L506\">Community.sol#L501-L506</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L108-L115\">Project.sol#L108-L115</a><br></p>\n<p>User is unable to revoke previously approved hash.</p>\n<h3 id=\"proof-of-concept-20\" style=\"position:relative;\"><a href=\"#proof-of-concept-20\" aria-label=\"proof of concept 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>If user reconsiders or notices something malicious about the hash after signing, they should be able to revoke the hash. For example the user approves a hash only to find out later that the hash has been spoofed and they weren’t approving what they thought they were. To protect themselves the user should be able to revoke approval, otherwise it may lead to loss of funds or access.</p>\n<h3 id=\"recommended-mitigation-steps-24\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-24\" aria-label=\"recommended mitigation steps 24 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add the following function:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function revokeHash(bytes32 _hash) external virtual {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    approvedHashes[_msgSender()][_hash] = false;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/64#issuecomment-1243284914\">parv3213 (Rigor) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>I do not find it essential to revoke a hash. As off-chain signatures can never be marked as invalid, adding this feature for on-chain signatures makes no sense. </p>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this contest, 99 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/73\">report highlighted below</a> by <strong>Lambda</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/284\">GalloDaSballo</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/358\">Deivitto</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/359\">0xA5DF</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/71\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/149\">Guardian</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/177\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/323\">joestakey</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/345\">MEP</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/36\">rokinot</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/316\">saian</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/350\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/303\">scaraven</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/310\">dipp</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/388\">Dravee</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/62\">ElKu</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/411\">horsefacts</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/409\">hyh</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/192\">neumo</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/67\">oyc_109</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/97\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/147\">simon135</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/166\">sseefried</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/344\">rbserver</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/402\">JC</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/407\">minhquanym</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/270\">pfapostol</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/111\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/253\">hansfriese</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/99\">0x52</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/319\">benbaessler</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/377\">brgltd</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/404\">c3phas</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/273\">Extropy</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/3\">samruna</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/304\">Bahurum</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/194\">bobirichman</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/191\">mics</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/188\">sikorico</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/236\">Chom</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/8\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/28\">ReyAdmirado</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/186\">robee</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/212\">SooYa</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/392\">cryptonue</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/367\">ak1</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/375\">CertoraInc</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/314\">defsec</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/175\">hake</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/219\">TrungOre</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/170\">_Adam</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/305\">0xf15ers</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/32\">Bnke0x0</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/104\">bulej93</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/274\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/213\">Soosh</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/120\">byndooa</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/197\">__141345__</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/309\">0xNineDec</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/254\">exd0tpy</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/325\">berndartmueller</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/361\">ajtra</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/269\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/259\">codexploder</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/151\">ignacio</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/332\">indijanc</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/292\">Rohan16</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/289\">Sm4rty</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/330\">supernova</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/338\">TomJ</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/228\">Waze</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/171\">cryptphi</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/15\">obront</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/93\">arcoun</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/326\">asutorufos</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/238\">ayeslick</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/157\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/265\">erictee</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/39\">fatherOfBlocks</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/110\">Noah3o6</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/123\">rotcivegaf</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/49\">8olidity</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/403\">0xkatana</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/333\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/154\">0xSolus</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/293\">delfin454000</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/272\">gogo</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/143\">kaden</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/405\">poirots</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/224\">sach1r0</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/53\">Yiko</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/366\">0xsolstars</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/406\">a12jmx</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/204\">djxploit</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/349\">p_crypt0</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/145\">saneryee</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/354\">Tomio</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/102\">Jujic</a>, and <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/35\">Throne6g</a>.</em></p>\n<h2 id=\"01\" style=\"position:relative;\"><a href=\"#01\" aria-label=\"01 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[01]</h2>\n<p><code>isPublishedToCommunity</code> does not check that the <code>_communityID</code> exists. It can return true for non-published projects by passing in a <code>_communityID</code> of 0. This enables for instance to call <code>unpublishProject</code> on unpublished projects (or paying the publish fee for a non-existing project with <code>_communityID = 0</code>. While this is not a major issue, it can be confusing (because events are emitted) and building upon this modifier in the future can be dangerous. Consider validating the <code>_communityID</code>.</p>\n<h2 id=\"02\" style=\"position:relative;\"><a href=\"#02\" aria-label=\"02 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[02]</h2>\n<p>In <code>escrow</code>, it is possible that the <code>_agent</code> is the zero address, in which case signature validation succeeds with any invalid signature (i.e., no actual escrow, as there is no agent). Consider adding a check that the <code>_agent</code> is non-zero.</p>\n<h2 id=\"03\" style=\"position:relative;\"><a href=\"#03\" aria-label=\"03 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[03]</h2>\n<p>In <code>Community</code>, adding members and updating the community hash is possible when the system is changed. As these also change the system state, consider also requiring that the system is not paused.</p>\n<h2 id=\"04\" style=\"position:relative;\"><a href=\"#04\" aria-label=\"04 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[04]</h2>\n<p>There is no way to remove members of a community (e.g., misbehaving members), which might be desirable.</p>\n<h2 id=\"05\" style=\"position:relative;\"><a href=\"#05\" aria-label=\"05 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[05]</h2>\n<p>The comment ”// Burn _interestEarned amount wrapped token to lender” is wrong <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/e35f5f61be9ff4b8dc5153e313419ac42964d1fd/contracts/Community.sol#L849\">Community.sol#L849</a>, this should be mint instead of burn.</p>\n<h2 id=\"06\" style=\"position:relative;\"><a href=\"#06\" aria-label=\"06 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[06]</h2>\n<p>In general, it is considered good practice to provide a deadline for signatures and a way to revoke them (e.g., when a private key is compromised), which is both currently not implemented.</p>\n<h2 id=\"07\" style=\"position:relative;\"><a href=\"#07\" aria-label=\"07 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[07]</h2>\n<p>In <code>changeOrder</code>, it is not checked if the task actually exists. While changing the cost for a non-existing task is not possible (because of the <code>getAlerts</code> check), the owner can be set: First, the task will be unapproved, setting the status to inactive. Then, the subcontractor is invited, which succeeds, as the task is inactive. The subcontractor can even accept the invitation, which marks the task as active, although he was never created / initialized. Consider adding a check if the task already exists.</p>\n<h2 id=\"08\" style=\"position:relative;\"><a href=\"#08\" aria-label=\"08 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[08]</h2>\n<p><code>raiseDispute</code> does not include any replay protection, meaning that anyone can raise the same dispute again after one was submitted.</p>\n<h2 id=\"09\" style=\"position:relative;\"><a href=\"#09\" aria-label=\"09 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[09]</h2>\n<p>It is possible to raise disputes for not (yet) existing tasks in <code>raiseDispute</code>, which should not be possible</p>\n<h2 id=\"10\" style=\"position:relative;\"><a href=\"#10\" aria-label=\"10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[10]</h2>\n<p>It is mentioned that “This can be useful when trying to deploy new version of HomeFiProxy”. However, there is currently no clean way to do this. When a new HomeFi proxy is deployed and initialized, new proxies are deployed (i.e., the state is lost). Consider adding a way to initialize a new proxy with already existing proxy addresses.</p>\n<h2 id=\"11\" style=\"position:relative;\"><a href=\"#11\" aria-label=\"11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[11]</h2>\n<p><code>SignatureDecoder.recoverKey</code> does not support <a href=\"https://eips.ethereum.org/EIPS/eip-1271\">EIP-1271</a>, meaning there is no support for smart contracts in all places that use signatures (which are many), which hinders different applications (e.g., building on top of the protocol).</p>\n<h2 id=\"12\" style=\"position:relative;\"><a href=\"#12\" aria-label=\"12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[12]</h2>\n<p>The number of currencies (3) is hard-coded in different places, consider storing this information in arrays, which enables easy additions of new ones.</p>\n<h2 id=\"13\" style=\"position:relative;\"><a href=\"#13\" aria-label=\"13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[13]</h2>\n<p>There is no upper limit for the lender fee <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/f2498c86dbd0e265f82ec76d9ec576442e896a87/contracts/HomeFi.sol#L194\">HomeFi.sol#L194</a>. Consider enforcing a limit of 1,000 (or even something like 200) to avoid errors and give users an upper limit for the fee.</p>\n<h2 id=\"14\" style=\"position:relative;\"><a href=\"#14\" aria-label=\"14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[14]</h2>\n<p><code>initiateHomeFi</code> is documented with “Can only be called by HomeFiProxy owner”, but this is not true. The function is callable by anyone and sets the owner.</p>\n<h2 id=\"15\" style=\"position:relative;\"><a href=\"#15\" aria-label=\"15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[15]</h2>\n<p><code>recoverTokens</code> has a hardcoded 3 <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/f2498c86dbd0e265f82ec76d9ec576442e896a87/contracts/Project.sol#L369\">Project.sol#L369</a> instead of using the enum value, which can lead to problems when updating the possible enum values.</p>\n<h2 id=\"16\" style=\"position:relative;\"><a href=\"#16\" aria-label=\"16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[16]</h2>\n<p><code>checkPrecision</code> does not take the number of decimals into account. For USDC with 6 decimals means rounding to 0.1 pennies, whereas the precision is much higher (probably too high, which you want to avoid) for DAI with 18 decimals.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/73#issuecomment-1229372216\">Jack the Pug (judge) commented</a>:</strong></p>\n<blockquote>\n<p>One of the best QA reports! Pure good findings found by keen human eyes. Good job!</p>\n</blockquote>\n<p><strong>parv3213 (Rigor) commented:</strong></p>\n<blockquote>\n<p>[01] seems invalid as community id starts from 1. Community id 0 is always invalid.</p>\n</blockquote>\n<p><strong>Jack the Pug (judge) commented:</strong></p>\n<blockquote>\n<p>Re: [01], I believe the issue is a valid low-severity issue, while it’s true that REAL community id starts from 1, it still can not prevent the caller to use 0 as the community id and the unexpected behavior will happen if they do so, as described in the QA report. I don’t think this requires a fix though, it’s a minor issue indeed.</p>\n</blockquote>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this contest, 91 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/391\">report highlighted below</a> by <strong>c3phas</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/58\">ElKu</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/337\">Dravee</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/335\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/410\">CertoraInc</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/38\">fatherOfBlocks</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/285\">GalloDaSballo</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/398\">hyh</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/401\">0xkatana</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/70\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/318\">benbaessler</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/306\">defsec</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/271\">gogo</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/174\">hake</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/399\">JC</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/260\">MiloTruck</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/315\">NoamYakov</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/176\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/196\">__141345__</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/287\">Chinmay</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/357\">Deivitto</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/353\">eierina</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/101\">jag</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/66\">oyc_109</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/258\">pfapostol</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/27\">ReyAdmirado</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/98\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/268\">saian</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/2\">samruna</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/267\">TomJ</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/277\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/256\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/383\">bharg4v</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/382\">brgltd</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/279\">delfin454000</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/112\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/169\">_Adam</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/389\">0x040</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/351\">ak1</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/118\">ballx</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/12\">durianSausage</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/41\">erictee</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/262\">Metatron</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/390\">rbserver</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/300\">ret2basic</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/10\">0xsam</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/342\">ajtra</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/14\">Bnke0x0</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/341\">Fitraldys</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/129\">gerdusx</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/210\">kyteg</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/190\">mics</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/148\">simon135</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/352\">Tomio</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/370\">apostle0x01</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/282\">lucacez</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/290\">Rohan16</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/222\">sach1r0</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/288\">Sm4rty</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/211\">Waze</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/156\">0xSolus</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/322\">asutorufos</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/308\">Chom</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/275\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/343\">MEP</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/187\">robee</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/215\">SooYa</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/7\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/150\">Guardian</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/144\">kaden</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/20\">8olidity</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/396\">a12jmx</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/193\">bobirichman</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/386\">cryptonue</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/250\">Extropy</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/152\">ignacio</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/109\">Noah3o6</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/26\">dharma09</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/203\">djxploit</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/146\">PaludoX0</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/385\">0xA5DF</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/387\">minhquanym</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/37\">rokinot</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/312\">scaraven</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/328\">supernova</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/218\">zeesaw</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/69\">0xc0ffEE</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/74\">Lambda</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/189\">sikorico</a>, <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/55\">tofunmi</a>, and <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/167\">teddav</a>.</em></p>\n<p>NB: <em>Some functions have been truncated where neccessary to just show affected parts of the code</em></p>\n<h2 id=\"g-01-cache-storage-values-in-memory-to-minimize-sloads\" style=\"position:relative;\"><a href=\"#g-01-cache-storage-values-in-memory-to-minimize-sloads\" aria-label=\"g 01 cache storage values in memory to minimize sloads permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] Cache storage values in memory to minimize SLOADs</h2>\n<p>The code can be optimized by minimising the number of SLOADs. SLOADs are expensive 100 gas compared to MLOADs/MSTOREs(3gas)<br>\nStorage value should get cached in memory</p>\n<p>File: HomeFi.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/HomeFi.sol#L210-L232\">Line 228</a></p>\n<h3 id=\"homefisolcreateproject-projectcount-should-be-cachedsaves--71-gas\" style=\"position:relative;\"><a href=\"#homefisolcreateproject-projectcount-should-be-cachedsaves--71-gas\" aria-label=\"homefisolcreateproject projectcount should be cachedsaves  71 gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HomeFi.sol.createProject(): projectCount should be cached(Saves ~ 71 gas)</h3>\n<p>Average gas before caching = 339543<br>\nAverage  gas after caching =   339472<br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createProject</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_hash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_currency</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">nonReentrant</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Revert if currency not supported by HomeFi</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">validCurrency</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_currency</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   </span><span class=\"mtk3\">// Update project related mappings</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">projects</span><span class=\"mtk1\">[</span><span class=\"mtk12\">projectCount</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_project</span><span class=\"mtk1\">;  @</span><span class=\"mtk12\">audit</span><span class=\"mtk1\">: </span><span class=\"mtk12\">SLOAD</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">projectTokenId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_project</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">projectCount</span><span class=\"mtk1\">; @</span><span class=\"mtk12\">audit</span><span class=\"mtk1\">: </span><span class=\"mtk12\">SLOAD</span><span class=\"mtk1\"> </span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ProjectAdded</span><span class=\"mtk1\">(</span><span class=\"mtk12\">projectCount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_project</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_currency</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_hash</span><span class=\"mtk1\">); @</span><span class=\"mtk12\">audit</span><span class=\"mtk1\">: </span><span class=\"mtk12\">SLOAD</span><span class=\"mtk1\"> </span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong>projectCount</strong> is being read 3 times in the following lines</p>\n<p>SLOAD 1 <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/HomeFi.sol#L228\">Line 228</a><br>\nSLOAD 2 <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/HomeFi.sol#L229\">Line 229</a><br>\nSLOAD 3 <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/HomeFi.sol#L231\">Line 231</a><br></p>\n<p>File: HomeFi.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/HomeFi.sol#L284-L297\">Line 284-297</a></p>\n<h3 id=\"homefisolmintnft-projectcount-should-be-cached\" style=\"position:relative;\"><a href=\"#homefisolmintnft-projectcount-should-be-cached\" aria-label=\"homefisolmintnft projectcount should be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HomeFi.sol.mintNFT(): projectCount should be cached</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mintNFT</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tokenURI</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Project count starts from 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">projectCount</span><span class=\"mtk1\"> += </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Mints NFT and set token URI</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">projectCount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_setTokenURI</span><span class=\"mtk1\">(</span><span class=\"mtk12\">projectCount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_tokenURI</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NftCreated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">projectCount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">projectCount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L162-L182\">Line 176&#x26;179</a></p>\n<h3 id=\"projectsolupdateprojecthash-hashchangenonce-should-be-cached-saves--101-gas\" style=\"position:relative;\"><a href=\"#projectsolupdateprojecthash-hashchangenonce-should-be-cached-saves--101-gas\" aria-label=\"projectsolupdateprojecthash hashchangenonce should be cached saves  101 gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Project.sol.updateProjectHash(): hashChangeNonce should be cached (saves ~ 101 gas)</h3>\n<p>Average gas before caching = 54538<br>\nAverage  gas after caching =   54437<br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateProjectHash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_data</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Revert if decoded nonce is incorrect. This indicates wrong _data.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nonce</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">hashChangeNonce</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Project::!Nonce&quot;</span><span class=\"mtk1\">); @</span><span class=\"mtk12\">audit</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">SLOAD</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Increment to ensure a set of data and signature cannot be re-used.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">hashChangeNonce</span><span class=\"mtk1\"> += </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;@</span><span class=\"mtk12\">audit</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">SLOAD</span><span class=\"mtk1\"> </span><span class=\"mtk7\">2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">and</span><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">HashUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_hash</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>In the above function, there are two SLOADS that can be replaced with a cached variable.<br>\nSLOAD 1: <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L176\">Line 176</a><br>\nSLOAD 2: <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L179\">Line 179</a><br></p>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L266-L293\">Line 277&#x26;290</a></p>\n<h3 id=\"projectsolupdatetaskhash-hashchangenonce-should-be-cachedsaves--98-gas\" style=\"position:relative;\"><a href=\"#projectsolupdatetaskhash-hashchangenonce-should-be-cachedsaves--98-gas\" aria-label=\"projectsolupdatetaskhash hashchangenonce should be cachedsaves  98 gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Project.sol.updateTaskHash(): hashChangeNonce should be cached(saves ~ 98 gas)</h3>\n<p>Average gas before caching = 58185<br>\nAverage  gas after caching =   58087<br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateTaskHash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_data</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Decode params from _data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_taskHash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_nonce</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            (</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Revert if decoded nonce is incorrect. This indicates wrong data.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nonce</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">hashChangeNonce</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Project::!Nonce&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       </span><span class=\"mtk3\">// Increment to ensure a set of data and signature cannot be re-used.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">hashChangeNonce</span><span class=\"mtk1\"> += </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TaskHashUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_taskHash</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>In the above function, there are two SLOADS that can be replaced with a cached variable.<br>\nSLOAD 1: <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L277\">Line 277</a><br>\nSLOAD 2: <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L290\">Line 290</a><br></p>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L591-L604\">Line 591-604</a></p>\n<h3 id=\"projectsolallocatefunds_changeorderedtasklength-should-be-cachedsaves--118-gas\" style=\"position:relative;\"><a href=\"#projectsolallocatefunds_changeorderedtasklength-should-be-cachedsaves--118-gas\" aria-label=\"projectsolallocatefunds_changeorderedtasklength should be cachedsaves  118 gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Project.sol.allocateFunds():_changeOrderedTask.length should be cached(Saves ~ 118 gas)</h3>\n<p>Average gas before caching = 63493<br>\nAverage  gas after caching =   63295<br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tasksAllocated</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">taskCount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">_changeOrderedTask</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> @</span><span class=\"mtk12\">audit</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">SLOAD</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   </span><span class=\"mtk3\">// Number of times a loop has run.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_loopCount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">/// CHANGE ORDERED TASK FUNDING ///</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Any tasks added to _changeOrderedTask will be allocated first</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_changeOrderedTask</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) { @</span><span class=\"mtk12\">audit</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">SLOAD</span><span class=\"mtk1\"> </span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// Loop from lastAllocatedChangeOrderTask to _changeOrderedTask length (until _maxLoop)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_changeOrderedTask</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) { @</span><span class=\"mtk12\">audit</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">Another</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SLOAD</span><span class=\"mtk1\"> ;</span><span class=\"mtk12\">read</span><span class=\"mtk1\"> </span><span class=\"mtk12\">repeatedly</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inside</span><span class=\"mtk1\"> </span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loop</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// Local instance of task cost. To save gas.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t\t</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">//truncated a big chunk of code here</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">635</span><span class=\"mtk1\">:   </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">i</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_changeOrderedTask</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">) { @</span><span class=\"mtk12\">audit</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">another</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SLOAD</span></span></span></code></pre>\n<p>SLOAD 1: <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L592\">Line 592</a><br>\nSLOAD 2: <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L601\">Line 610</a><br>\nSLOAD 3: Read inside a for loop <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L603\">Line 603</a><br>\nSLOAD 4: <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L635\">Line 635</a><br>\nIn the above function, the gas estimate might be higher than indicated due the SLOAD inside the  for loop</p>\n<p>File: Community.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Community.sol#L143-L151\">Line 143 &#x26; 150</a></p>\n<h3 id=\"communitysolcreatecommunitycommunitycount-should-be-cached-saves-186-gas\" style=\"position:relative;\"><a href=\"#communitysolcreatecommunitycommunitycount-should-be-cached-saves-186-gas\" aria-label=\"communitysolcreatecommunitycommunitycount should be cached saves 186 gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Community.sol.createCommunity():communityCount should be cached( Saves ~186 gas)</h3>\n<p>Average gas before caching = 176852<br>\nAverage  gas after caching =   176666<br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   </span><span class=\"mtk7\">140</span><span class=\"mtk1\">: </span><span class=\"mtk12\">communityCount</span><span class=\"mtk1\">++; </span><span class=\"mtk3\">//@audit - SLOAD 1 + SSTORE(communityCount)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Store community details</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   </span><span class=\"mtk7\">143</span><span class=\"mtk1\">: </span><span class=\"mtk12\">CommunityStruct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_community</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_communities</span><span class=\"mtk1\">[</span><span class=\"mtk12\">communityCount</span><span class=\"mtk1\">]; @</span><span class=\"mtk12\">audit</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">SLOAD</span><span class=\"mtk1\"> </span><span class=\"mtk7\">2</span><span class=\"mtk1\">(</span><span class=\"mtk12\">communityCount</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_community</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_sender</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_community</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currency</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IDebtToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_currency</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t      ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         @ </span><span class=\"mtk12\">audit</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">Truncated</span><span class=\"mtk1\"> </span><span class=\"mtk12\">some</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bit</span><span class=\"mtk1\"> </span><span class=\"mtk4\">of</span><span class=\"mtk1\"> </span><span class=\"mtk12\">code</span><span class=\"mtk1\"> </span><span class=\"mtk12\">here</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   </span><span class=\"mtk7\">150</span><span class=\"mtk1\">: </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">CommunityAdded</span><span class=\"mtk1\">(</span><span class=\"mtk12\">communityCount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_currency</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_hash</span><span class=\"mtk1\">);@</span><span class=\"mtk12\">audit</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">SLOAD</span><span class=\"mtk1\"> </span><span class=\"mtk7\">3</span><span class=\"mtk1\">(</span><span class=\"mtk12\">communityCount</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>SLOAD 1: <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Community.sol#L140\">Line 140</a><br>\nSLOAD 2: <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Community.sol#L143\">Line 143</a><br>\nSLOAD 3: <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Community.sol#L150\">Line 150</a><br>\nNote, after creating a <strong>temp</strong> variable in the above , for line 140, after incrementing the temp variable we need to assign the temp value to <strong>communityCount</strong></p>\n<h2 id=\"g-02-cache-the-length-of-arrays-in-loops\" style=\"position:relative;\"><a href=\"#g-02-cache-the-length-of-arrays-in-loops\" aria-label=\"g 02 cache the length of arrays in loops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] Cache the length of arrays in loops</h2>\n<p>The solidity compiler will always read the length of the array during each iteration. That is,</p>\n<p>1.if it is a storage array, this is an extra sload operation (<strong>100 additional extra gas (EIP-2929 2) for each iteration except for the first</strong>),<br>\n2.if it is a memory array, this is an extra mload operation (3 additional gas for each iteration except for the first),<br>\n3.if it is a calldata array, this is an extra calldataload operation (3 additional gas for each iteration except for the first)<br></p>\n<p>This extra costs can be avoided by caching the array length (in stack):</p>\n<p>Here, I suggest storing the array’s length in a variable before the for-loop, and use it instead:</p>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L603\">Line 603</a></p>\n<h3 id=\"projectsolallocatefunds-_changeorderedtasklength-should-be-cached---_changeorderedtask-is-a-storage-array\" style=\"position:relative;\"><a href=\"#projectsolallocatefunds-_changeorderedtasklength-should-be-cached---_changeorderedtask-is-a-storage-array\" aria-label=\"projectsolallocatefunds _changeorderedtasklength should be cached   _changeorderedtask is a storage array permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Project.sol.allocateFunds(): _changeOrderedTask.length should be cached - _changeOrderedTask is a storage array</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_changeOrderedTask</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>This optimization is especially important if it is a storage array as it’s our case here.</p>\n<p><strong>The above should be modified to</strong></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">length</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_changeOrderedTask</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<h2 id=\"g-03-i-costs-less-gas-compared-to-i-or-i--1-in-for-loops-5-gas-per-iteration\" style=\"position:relative;\"><a href=\"#g-03-i-costs-less-gas-compared-to-i-or-i--1-in-for-loops-5-gas-per-iteration\" aria-label=\"g 03 i costs less gas compared to i or i  1 in for loops 5 gas per iteration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] ++i costs less gas compared to i++ or i += 1 in for loops (~5 gas per iteration)</h2>\n<p>++i costs less gas compared to i++ or i += 1 for unsigned integer, as pre-increment is cheaper (about 5 gas per iteration). This statement is true even with the optimizer enabled.</p>\n<p>i++ increments i and returns the initial value of i. Which means:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">uint i = 1;  </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">i++; // == 1 but i == 2  </span></span></code></pre>\n<p>But ++i returns the actual incremented value:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">uint i = 1;  </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">++i; // == 2 and i == 2 too, so no need for a temporary variable  </span></span></code></pre>\n<p>In the first case, the compiler has to create a temporary variable (when used) for returning 1 instead of 2</p>\n<p>Instances include:</p>\n<p>File: HomeFiProxy.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/HomeFiProxy.sol#L87-L89\">line 87</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">_generateProxy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">allContractNames</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_implementations</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p>File: HomeFiProxy.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/HomeFiProxy.sol#L136-L138\">line 136</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">_replaceImplementation</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_contractNames</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_contractAddresses</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L248\">Line 248</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L311-L313\">Line 311</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">_inviteSC</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_taskList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_scList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L322\">Line 322</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>File: Tasks.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/libraries/Tasks.sol#L181\">Line 181</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) </span><span class=\"mtk12\">_alerts</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">alerts</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<h2 id=\"g-04-x-is-more-efficient-than-xsaves-6-gas\" style=\"position:relative;\"><a href=\"#g-04-x-is-more-efficient-than-xsaves-6-gas\" aria-label=\"g 04 x is more efficient than xsaves 6 gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] ++x is more efficient than x++(Saves ~6 gas)</h2>\n<p>File: Community.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Community.sol#L140\">Line 140</a><br>\nAverage gas when using communityCount++ : 176852<br>\nAverage gas when using ++communityCount : 176846<br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">communityCount</span><span class=\"mtk1\">++;</span></span></span></code></pre>\n<p><strong>Other Instances</strong><br>\nFile: Disputes.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Disputes.sol#L121\">Line 121</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">DisputeRaised</span><span class=\"mtk1\">(</span><span class=\"mtk12\">disputeCount</span><span class=\"mtk1\">++, </span><span class=\"mtk12\">_reason</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"g-05-splitting-require-statements-that-use--saves-gas---saves-8-gas-per-\" style=\"position:relative;\"><a href=\"#g-05-splitting-require-statements-that-use--saves-gas---saves-8-gas-per-\" aria-label=\"g 05 splitting require statements that use  saves gas   saves 8 gas per  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] Splitting require() statements that use &#x26;&#x26; saves gas - (saves 8 gas per &#x26;&#x26;)</h2>\n<p>Instead of using the &#x26;&#x26; operator in a single require statement to check multiple conditions,using multiple require statements with 1 condition per require statement will save 8 GAS per &#x26;&#x26;<br>\nThe gas difference would only be realized if the revert condition is realized(met).</p>\n<p>File: Disputes.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Disputes.sol#L61-L65\">Line 61</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"64\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_disputeID</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">disputeCount</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">disputes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_disputeID</span><span class=\"mtk1\">].</span><span class=\"mtk12\">status</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">Status</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Active</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;Disputes::!Resolvable&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span></code></pre>\n<p>The above should be modified to</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"65\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">( </span><span class=\"mtk12\">_disputeID</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">disputeCount</span><span class=\"mtk1\">,  </span><span class=\"mtk8\">&quot;Disputes::!Resolvable&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">disputes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_disputeID</span><span class=\"mtk1\">].</span><span class=\"mtk12\">status</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">Status</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Active</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Disputes::!Resolvable&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>File: Disputes.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Disputes.sol#L106-L109\">Line 106</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"66\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_actionType</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">_actionType</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ActionType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">TaskPay</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;Disputes::!ActionType&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span></code></pre>\n<p>File: Community.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Community.sol#L353\">Line 353</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"67\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_lendingNeeded</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_communityProject</span><span class=\"mtk1\">.</span><span class=\"mtk12\">totalLent</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_lendingNeeded</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk11\">IProject</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_project</span><span class=\"mtk1\">).</span><span class=\"mtk11\">projectCost</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;Community::invalid lending&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span></code></pre>\n<p><strong>Proof</strong><br>\n<strong>The following tests were carried out in remix with both optimization turned on and off</strong></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"68\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function multiple (uint a) public pure returns (uint){</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\trequire ( a &gt; 1 &amp;&amp; a &lt; 5, &quot;Initialized&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\treturn  a + 2;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p><strong>Execution cost</strong><br>\n21617 with optimization and using &#x26;&#x26;<br>\n21976 without optimization and using &#x26;&#x26;<br></p>\n<p>After splitting the require statement</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"69\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function multiple(uint a) public pure returns (uint){</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\trequire (a &gt; 1 ,&quot;Initialized&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\trequire (a &lt; 5 , &quot;Initialized&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\treturn a + 2;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p><strong>Execution cost</strong><br>\n21609 with optimization and split require<br>\n21968 without optimization and using split require</p>\n<h2 id=\"g-06-comparisons--is-more-efficient-than--in-require-6-gas-less\" style=\"position:relative;\"><a href=\"#g-06-comparisons--is-more-efficient-than--in-require-6-gas-less\" aria-label=\"g 06 comparisons  is more efficient than  in require 6 gas less permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06] Comparisons: != is more efficient than > in require (6 gas less)</h2>\n<p>!= 0 costs less gas compared to > 0 for unsigned integers in require statements with the optimizer enabled (6 gas)</p>\n<p>For uints the minimum value would be 0 and never a negative value. Since it cannot be a negative value, then the check > 0 is essentially checking that the value is not equal to 0 therefore >0 can be replaced with !=0 which saves gas.</p>\n<p>Proof: While it may seem that > 0 is cheaper than !=, this is only true without the optimizer enabled and outside a require statement. If you enable the optimizer at 10k AND you’re in a require statement, this will save gas. You can see this tweet for more proofs: <a href=\"https://twitter.com/gzeon/status/1485428085885640706\">https://twitter.com/gzeon/status/1485428085885640706</a></p>\n<p>I suggest changing > 0 with != 0 here:</p>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L195\">Line 195</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"70\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_cost</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Project::!value&gt;0&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>File: Community.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Community.sol#L764\">Line 764</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"71\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_repayAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Community::!repay&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"g-07-emitting-storage-values-instead-of-the-memory-onesaves-101-gas\" style=\"position:relative;\"><a href=\"#g-07-emitting-storage-values-instead-of-the-memory-onesaves-101-gas\" aria-label=\"g 07 emitting storage values instead of the memory onesaves 101 gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-07] Emitting storage values instead of the memory one(saves ~101 gas)</h2>\n<p>Here, the values emitted shouldn’t be read from storage. The existing memory values should be used instead:</p>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L144\">Line 144</a>\naverage gas while using the storage value  - 69561\naverage gas while using the memory value - 69460</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"72\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Store new contractor</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">contractor</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_contractor</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">contractorConfirmed</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Check signature for builder and contractor</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">checkSignature</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_data</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_signature</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ContractorInvited</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractor</span><span class=\"mtk1\">);@</span><span class=\"mtk12\">audit</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">should</span><span class=\"mtk1\"> </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_contractor</span><span class=\"mtk1\"> </span><span class=\"mtk12\">instead</span><span class=\"mtk1\"> </span><span class=\"mtk4\">of</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contractor</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>In the above we should emit <strong>_contractor</strong></p>\n<h2 id=\"g-08-using-unchecked-blocks-to-save-gas\" style=\"position:relative;\"><a href=\"#g-08-using-unchecked-blocks-to-save-gas\" aria-label=\"g 08 using unchecked blocks to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-08] Using unchecked blocks to save gas</h2>\n<p>Solidity version 0.8+ comes with implicit overflow and underflow checks on unsigned integers. When an overflow or an underflow isn’t possible (as an example, when a comparison is made before the arithmetic operation), some gas can be saved by using an unchecked block</p>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L427\">Line 427</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"73\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_withdrawDifference</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_newCost</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>The above operation cannot underflow due to the check on <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L425\">Line 425</a> which ensures that <code>_taskCost</code> is greater than <code>_newCost</code> before the subtraction operation is performed.<br>\nThe above can be modified as follows</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"74\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_withdrawDifference</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t     </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t        </span><span class=\"mtk12\">_withdrawDifference</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_newCost</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t     }</span></span></span></code></pre>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L616\">Line 616</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"75\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">           </span><span class=\"mtk12\">_costToAllocate</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>The above line cannot underflow due to the check on <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L614\">Line 614</a> which ensures that the above operation would only be performed if the value of <code>_costToAllocate</code> is greater than the value of <code>_taskCost</code></p>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L663\">Line 663</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"76\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_costToAllocate</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>The above line cannot underflow due to the check on <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L661\">Line 661</a> which ensures that the above operation would only be performed if the value of <code>_costToAllocate</code> is greater than the value of <code>_taskCost</code></p>\n<p>File: Community.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Community.sol#L794\">Line 794</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"77\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_lentAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_lentAndInterest</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_repayAmount</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>The above line cannot underflow due to the check on <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Community.sol#L792\">Line 792</a> which ensures that the above operation would only be performed if the value of <code>_lentAndInterest</code> is greater than the value of <code>_repayAmount</code></p>\n<p>File: Community.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Community.sol#L798\">Line 798</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"78\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_interest</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">_repayAmount</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>The above line cannot underflow as it would only be evalauted if <code>_interest</code> is not less than <code>_repayAmount</code> . See <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Community.sol#L785\">Line 785</a></p>\n<p><a href=\"https://github.com/ethereum/solidity/issues/10695\">see resource</a></p>\n<h2 id=\"g-09-using-unchecked-blocks-to-save-gas---increments-in-for-loop-can-be-unchecked---save-30-40-gas-per-loop-iteration\" style=\"position:relative;\"><a href=\"#g-09-using-unchecked-blocks-to-save-gas---increments-in-for-loop-can-be-unchecked---save-30-40-gas-per-loop-iteration\" aria-label=\"g 09 using unchecked blocks to save gas   increments in for loop can be unchecked   save 30 40 gas per loop iteration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-09] Using unchecked blocks to save gas - Increments in for loop can be unchecked  ( save 30-40 gas per loop iteration)</h2>\n<p>The majority of Solidity for loops increment a uint256 variable that starts at 0. These increment operations never need to be checked for over/underflow because the variable will never reach the max number of uint256 (will run out of gas long before that happens). The default over/underflow check wastes gas in every iteration of virtually every for loop . eg.</p>\n<p>e.g Let’s work with a sample loop below.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"79\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">for(uint256 i; i &lt; 10; i++){</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">//doSomething</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>can be written as shown below.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"80\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">for(uint256 i; i &lt; 10;) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  // loop logic</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  unchecked { i++; }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>We can also write it as an inlined function like below.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"81\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function inc(i) internal pure returns (uint256) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  unchecked { return i + 1; }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">for(uint256 i; i &lt; 10; i = inc(i)) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  // doSomething</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p><strong>Affected code</strong><br>\nFile: HomeFiProxy.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/HomeFiProxy.sol#L87-L89\">line 87</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"82\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">_generateProxy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">allContractNames</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_implementations</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p>The above should be modified to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"83\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_length</span><span class=\"mtk1\">;) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">_generateProxy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">allContractNames</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_implementations</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p><strong>Other Instances to modify</strong><br>\nFile: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L248\">Line 248</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"84\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L311-L313\">Line 311</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"85\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">_inviteSC</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_taskList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_scList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L322\">Line 322</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"86\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p>File: Tasks.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/libraries/Tasks.sol#L181\">Line 181</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"87\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) </span><span class=\"mtk12\">_alerts</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">alerts</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<p><a href=\"https://github.com/ethereum/solidity/issues/10695\">see resource</a></p>\n<h2 id=\"g-10-use-custom-errors-instead-of-revert-strings-to-save-gas\" style=\"position:relative;\"><a href=\"#g-10-use-custom-errors-instead-of-revert-strings-to-save-gas\" aria-label=\"g 10 use custom errors instead of revert strings to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-10] Use Custom Errors instead of Revert Strings to save Gas</h2>\n<p>Custom errors from Solidity 0.8.4 are cheaper than revert strings (cheaper deployment cost and runtime cost when the revert condition is met).<br>\nCustom errors save ~50 gas each time they’re hit by avoiding having to allocate and store the revert string. Not defining the strings also save deployment gas</p>\n<p>Custom errors are defined using the error statement, which can be used inside and outside of contracts (including interfaces and libraries).<br>\nsee <a href=\"https://blog.soliditylang.org/2021/04/21/custom-errors/\">Source</a></p>\n<p>File: DebtToken.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/DebtToken.sol#L31-L34\">line 31</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"88\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">communityContract</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;DebtToken::!CommunityContract&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span></code></pre>\n<p>File: DebtToken.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/DebtToken.sol#L50\">line 50</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"89\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_communityContract</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;DebtToken::0 address&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>File: DebtToken.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/DebtToken.sol#L96\">line 96</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"90\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;DebtToken::blocked&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>File: DebtToken.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/DebtToken.sol#L104\">line 104</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"91\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;DebtToken::blocked&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>File: ProjectFactory.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/ProjectFactory.sol#L36\">line 36</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"92\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_address</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;PF::0 address&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>File: ProjectFactory.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/ProjectFactory.sol#L64\">line 64</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"93\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">( </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">IHomeFi</span><span class=\"mtk1\">(</span><span class=\"mtk12\">homeFi</span><span class=\"mtk1\">).</span><span class=\"mtk11\">admin</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;ProjectFactory::!Owner&quot;</span><span class=\"mtk1\"> );</span></span></span></code></pre>\n<p>File: ProjectFactory.sol  <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/ProjectFactory.sol#L84\">line 84</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"94\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk12\">homeFi</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;PF::!HomeFiContract&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><em>Note: see warden’s <a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/391\">original submission</a> for full list of instances.</em></p>\n<h2 id=\"g-11-x--y-costs-more-gas-than-x--x--y-for-state-variables\" style=\"position:relative;\"><a href=\"#g-11-x--y-costs-more-gas-than-x--x--y-for-state-variables\" aria-label=\"g 11 x  y costs more gas than x  x  y for state variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-11] x += y costs more gas than x = x + y for state variables</h2>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L179\">Line 179</a></p>\n<h3 id=\"projectsolupdateprojecthash---saves-19-gas\" style=\"position:relative;\"><a href=\"#projectsolupdateprojecthash---saves-19-gas\" aria-label=\"projectsolupdateprojecthash   saves 19 gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Project.sol.updateProjectHash() - (Saves ~19 gas)</h3>\n<p>Average gas before modification: 54538<br>\nAverage gas after modification: 54519<br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"95\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">hashChangeNonce</span><span class=\"mtk1\"> += </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span></code></pre>\n<p>The above should be modified to</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"96\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">hashChangeNonce</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">hashChangeNonce</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L290\">Line 290</a></p>\n<h3 id=\"projectsolupdatetaskhash---saves-19-gas\" style=\"position:relative;\"><a href=\"#projectsolupdatetaskhash---saves-19-gas\" aria-label=\"projectsolupdatetaskhash   saves 19 gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Project.sol.updateTaskHash() - (Saves ~19 gas)</h3>\n<p>Average gas before modification: 58185<br>\nAverage gas after modification: 58166<br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"97\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">hashChangeNonce</span><span class=\"mtk1\"> += </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>File: HomeFi.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/HomeFi.sol#L289\">Line 289</a></p>\n<h3 id=\"homefisolmintnft\" style=\"position:relative;\"><a href=\"#homefisolmintnft\" aria-label=\"homefisolmintnft permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HomeFi.sol.mintNFT()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"98\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">projectCount</span><span class=\"mtk1\"> += </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"g-12-using-bools-for-storage-incurs-overhead\" style=\"position:relative;\"><a href=\"#g-12-using-bools-for-storage-incurs-overhead\" aria-label=\"g 12 using bools for storage incurs overhead permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-12] Using bools for storage incurs overhead</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"99\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Booleans are more expensive than uint256 or any type that takes up a full</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // word because each write operation emits an extra SLOAD to first read the</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // slot&#39;s contents, replace the bits taken up by the boolean, and then write</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // back. This is the compiler&#39;s defense against contract upgrades and</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // pointer aliasing, and it cannot be disabled.</span></span></code></pre>\n<p>See <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/58f635312aa21f947cae5f8578638a85aa2519f5/contracts/security/ReentrancyGuard.sol#L23-L27\">source</a><br>\nUse uint256(1) and uint256(2) for true/false to avoid a Gwarmaccess (100 gas), and to avoid Gsset (20000 gas) when changing from ‘false’ to ‘true’, after having been ‘true’ in the past.</p>\n<p><strong>Instances affected include</strong><br>\nFile: HomeFiProxy.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/HomeFiProxy.sol#L30\">line 30</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"100\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contractsActive</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>File: Disputes.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Disputes.sol#L144\">Line 144</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"101\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_ratify</span></span></span></code></pre>\n<p>File: HomeFi.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/HomeFi.sol#L50\">Line 50</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"102\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">override</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addrSet</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L68\">Line 68</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"103\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">override</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contractorConfirmed</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L84\">Line 84</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"104\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">override</span><span class=\"mtk1\"> </span><span class=\"mtk12\">approvedHashes</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L412\">Line 412</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"105\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_unapproved</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>File: Project.sol  <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L582\">Line 582</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"106\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_exceedLimit</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"g-13-using-private-rather-than-public-for-constants-saves-gas\" style=\"position:relative;\"><a href=\"#g-13-using-private-rather-than-public-for-constants-saves-gas\" aria-label=\"g 13 using private rather than public for constants saves gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-13] Using private rather than public for constants, saves gas</h2>\n<p>If needed, the value can be read from the verified contract source code. Savings are due to the compiler not having to create non-payable getter functions for deployment calldata, and not adding another entry to the method ID table.</p>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L60\">Line 60</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"107\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">override</span><span class=\"mtk1\"> </span><span class=\"mtk12\">VERSION</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">25000</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"g-14-not-using-the-named-return-variables-when-a-function-returns-wastes-deployment-gas\" style=\"position:relative;\"><a href=\"#g-14-not-using-the-named-return-variables-when-a-function-returns-wastes-deployment-gas\" aria-label=\"g 14 not using the named return variables when a function returns wastes deployment gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-14] Not using the named return variables when a function returns, wastes deployment gas</h2>\n<p>File: Project.sol <a href=\"https://github.com/code-423n4/2022-08-rigor/blob/b17b2a11d04289f9e927c71703b42771dd7b86a4/contracts/Project.sol#L716-L723\">Line 716-723</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"108\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getAlerts</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">[</span><span class=\"mtk7\">3</span><span class=\"mtk1\">] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_alerts</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tasks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_taskID</span><span class=\"mtk1\">].</span><span class=\"mtk11\">getAlerts</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/391#issuecomment-1207467962\">Dravee (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Overall a high quality gas report IMHO. The warden starts with the most manual and interesting findings: storage reading optimizations. There are also the <code>unchecked</code> blocks. The gas savings are almost always mentioned too.</p>\n<p><strong>Analysis:</strong></p>\n<p><strong>[G-01] Cache storage values in memory to minimize SLOADs</strong></p>\n<ul>\n<li>HomeFi.sol.createProject(): projectCount should be cached(Saves ~ 71 gas)</li>\n<li>HomeFi.sol.mintNFT(): projectCount should be cached</li>\n<li>Project.sol.updateProjectHash(): hashChangeNonce should be cached (saves ~ 101 gas)</li>\n<li>Project.sol.updateTaskHash(): hashChangeNonce should be cached(saves ~ 98 gas)</li>\n<li>Project.sol.allocateFunds():_changeOrderedTask.length should be cached(Saves ~ 118 gas)</li>\n<li>Community.sol.createCommunity():communityCount should be cached( Saves ~186 gas)</li>\n</ul>\n<p> Valid</p>\n<p><strong>[G-02] Cache the length of arrays in loops</strong></p>\n<ul>\n<li>Project.sol.allocateFunds(): _changeOrderedTask.length should be cached - _changeOrderedTask is a storage array</li>\n</ul>\n<p> Valid</p>\n<p><strong>[G-03] ++i costs less gas compared to i++ or i += 1 in for loops (~5 gas per iteration)</strong></p>\n<p> Valid</p>\n<p><strong>[G-04] ++x is more efficient than x++(Saves ~6 gas)</strong></p>\n<p> Valid, kinda same as above (pre-increments)</p>\n<p><strong>[G-05] Splitting require() statements that use &#x26;&#x26; saves gas - (saves 8 gas per &#x26;&#x26;)</strong></p>\n<p> Valid on Optimizer with 200 runs</p>\n</blockquote>\n<blockquote>\n<p><strong>[G-06] Comparisons: != is more efficient than in require (6 gas less)</strong></p>\n<p> Valid with Solidity 0.8.6 &#x3C; 0.8.13</p>\n<p><strong>[G-07] Emitting storage values instead of the memory one(saves ~101 gas)</strong></p>\n<p> Valid</p>\n<p><strong>[G-08] Using unchecked blocks to save gas</strong></p>\n<p> Valid and well explained. I believe only 1 instance is missing in the solution:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-rigor/blob/5ab7ea84a1516cb726421ef690af5bc41029f88f/contracts/Project.sol#L438-L440\">Project.sol#L440</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"109\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter\" aria-hidden=\"true\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">Project</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter\" aria-hidden=\"true\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">438</span><span class=\"mtk1\">:                 </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalLent</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_totalAllocated</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_newCost</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter\" aria-hidden=\"true\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">439</span><span class=\"mtk1\">:                     </span><span class=\"mtk3\">// Increase the difference of new cost and old cost to total allocated.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"438\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">440</span><span class=\"mtk1\">:                     </span><span class=\"mtk12\">totalAllocated</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">_newCost</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_taskCost</span><span class=\"mtk1\">; </span></span></span></code></pre>\n<p><strong>[G-09] Using unchecked blocks to save gas - Increments in for loop can be unchecked ( save 30-40 gas per loop iteration)</strong></p>\n<p> Valid</p>\n<p><strong>[G-10] Use Custom Errors instead of Revert Strings to save Gas</strong></p>\n<p> Valid</p>\n</blockquote>\n<blockquote>\n<p><strong>[G-11] x += y costs more gas than x = x + y for state variables</strong></p>\n<ul>\n<li>Project.sol.updateProjectHash() - (Saves ~19 gas)</li>\n<li>Project.sol.updateTaskHash() - (Saves ~19 gas)</li>\n<li>HomeFi.sol.mintNFT()</li>\n</ul>\n<p> Valid, but could’ve saved more gas with <code>++x</code> instead of <code>x += 1</code></p>\n</blockquote>\n<blockquote>\n<p><strong>[G-12] Using bools for storage incurs overhead</strong></p>\n<p> Valid but partially true as not all mentioned booleans are state booleans (some are memory ones or function arguments).</p>\n<p><strong>[G-13] Using private rather than public for constants, saves gas</strong></p>\n<p> I believe it’s invalid here as this specific constant needs to be public.</p>\n<p><strong>[G-14] Not using the named return variables when a function returns, wastes deployment gas</strong></p>\n<p> From memory, this has actually been debunked (the optimizer takes care of it). So, invalid, but could be NC.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-rigor-findings/issues/391#issuecomment-1229406944\">Jack the Pug (judge) commented</a>:</strong></p>\n<blockquote>\n<p>This is 💯!</p>\n</blockquote>\n<p><strong>parv3213 (Rigor) commented:</strong></p>\n<blockquote>\n<p>[G-13] seems invalid, as the project version must be a public variable.</p>\n</blockquote>\n<p><strong>Jack the Pug (judge) commented:</strong></p>\n<blockquote>\n<p>Re: [G-13], This depends on how the <code>VERSION()</code> method is going to be used. As it’s inherited from <code>IProject</code>, it’s probably required by the front-end, thus, I agree that this one is more likely to be invalid.</p>\n</blockquote>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-6\">High Risk Findings (6)</a></p>\n<ul>\n<li><a href=\"#h-01-untyped-data-signing\">[H-01] Untyped data signing</a></li>\n<li><a href=\"#h-02-builder-can-halve-the-interest-paid-to-a-community-owner-due-to-arithmetic-rounding\">[H-02] Builder can halve the interest paid to a community owner due to arithmetic rounding</a></li>\n<li><a href=\"#h-03-builder-can-call-communityescrow-again-to-reduce-debt-further-using-same-signatures\">[H-03] Builder can call <code>Community.escrow</code> again to reduce debt further using same signatures</a></li>\n<li><a href=\"#h-04-project-funds-can-be-drained-by-reusing-signatures-in-some-cases\">[H-04] Project funds can be drained by reusing signatures, in some cases</a></li>\n<li><a href=\"#h-05-add-members-to-the-not-yet-created-community\">[H-05] Add members to the not yet created community</a></li>\n<li><a href=\"#h-06-wrong-apr-can-be-used-when-project-is-unpublished-and-published-again-\">[H-06] Wrong APR can be used when project is unpublished and published again </a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-20\">Medium Risk Findings (20)</a></p>\n<ul>\n<li><a href=\"#m-01-projectchangeorder-would-work-unexpectedly-for-non-scconfirmed-tasks\">[M-01] <code>Project.changeOrder()</code> would work unexpectedly for non SCConfirmed tasks.</a></li>\n<li><a href=\"#m-02-missing-upper-limit-definition-in-replacelenderfee-of-homefisol\">[M-02] Missing upper limit definition in <code>replaceLenderFee()</code> of <code>HomeFi.sol</code></a></li>\n<li><a href=\"#m-03-signature-checks-could-be-passed-when-signaturedecoderrecoverkey-returns-0\">[M-03] Signature Checks could be passed when <code>SignatureDecoder.recoverKey()</code> returns 0</a></li>\n<li><a href=\"#m-04-hash-approval-not-possible-when-contractor--subcontractor\">[M-04] Hash approval not possible when contractor == subcontractor</a></li>\n<li><a href=\"#m-05-anyone-can-create-disputes-if-contractor-is-not-set\">[M-05] Anyone can create disputes if <code>contractor</code> is not set</a></li>\n<li><a href=\"#m-06-attacker-can-drain-all-the-projects-within-minutes-if-admin-account-has-been-exposed\">[M-06] Attacker can drain all the projects within minutes, if admin account has been exposed</a></li>\n<li><a href=\"#m-07-projectraisedispute-doesnt-use-approvedhashes---meaning-users-who-use-contracts-cant-raise-disputes\">[M-07] <code>Project.raiseDispute()</code> doesn’t use approvedHashes - meaning users who use contracts can’t raise disputes</a></li>\n<li><a href=\"#m-08-builders-must-pay-more-interest-when-the-system-is-paused\">[M-08] Builders must pay more interest when the system is paused.</a></li>\n<li><a href=\"#m-09-it-should-not-submit-a-project-with-no-total-budget-requires-at-least-one-task-with-cost--0\">[M-09] It should not submit a project with no total budget. Requires at least one task with cost > 0</a></li>\n<li><a href=\"#m-10-possible-dos-in-lendtoproject-and-togglelendingneeded-function-because-unbounded-loop-can-run-out-of-gas\">[M-10] Possible DOS in <code>lendToProject()</code> and <code>toggleLendingNeeded()</code> function because unbounded loop can run out of gas</a></li>\n<li><a href=\"#m-11-owner-of-project-nft-has-no-purpose\">[M-11] Owner of project NFT has no purpose</a></li>\n<li><a href=\"#m-12-updateprojecthash-does-not-check-project-address\">[M-12] <code>updateProjectHash</code> does not check project address</a></li>\n<li><a href=\"#m-13-in-projectsetcomplete-the-signature-can-be-reused-when-the-first-call-is-reverted-for-some-reason\">[M-13] In <code>Project.setComplete()</code>, the signature can be reused when the first call is reverted for some reason</a></li>\n<li><a href=\"#m-14-incorrect-initialization-of-smart-contracts-with-access-control-issue\">[M-14] Incorrect initialization of smart contracts with Access Control issue</a></li>\n<li><a href=\"#m-15-projectaddtasks-wouldnt-work-properly-when-its-called-from-disputes-contract\">[M-15] <code>Project.addTasks()</code> wouldn’t work properly when it’s called from disputes contract.</a></li>\n<li><a href=\"#m-16-new-subcontractor-can-be-set-for-a-scconfirmed-task-without-current-subcontractor-consent\">[M-16] New subcontractor can be set for a SCConfirmed task without current subcontractor consent</a></li>\n<li><a href=\"#m-17-malicious-delegated-contractor-can-block-funding-tasks-or-mark-tasks-as-complete\">[M-17] Malicious delegated contractor can block funding tasks or mark tasks as complete</a></li>\n<li><a href=\"#m-18-task-functionality-completely-sidestepped-via-autowithdraw\">[M-18] Task Functionality completely sidestepped via <code>autoWithdraw</code></a></li>\n<li><a href=\"#m-19-changeorder-requires-subcontractor-signature-when-the-subcontractor-address-is-0\">[M-19] <code>changeOrder</code> requires subcontractor signature when the subcontractor address is 0</a></li>\n<li><a href=\"#m-20-projectsol-and-communitysol-have-no-way-to-revoke-a-hash-in-approvedhashes\">[M-20] <code>Project.sol</code> and <code>Community.sol</code> have no way to revoke a hash in approvedHashes</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#01\">01</a></li>\n<li><a href=\"#02\">02</a></li>\n<li><a href=\"#03\">03</a></li>\n<li><a href=\"#04\">04</a></li>\n<li><a href=\"#05\">05</a></li>\n<li><a href=\"#06\">06</a></li>\n<li><a href=\"#07\">07</a></li>\n<li><a href=\"#08\">08</a></li>\n<li><a href=\"#09\">09</a></li>\n<li><a href=\"#10\">10</a></li>\n<li><a href=\"#11\">11</a></li>\n<li><a href=\"#12\">12</a></li>\n<li><a href=\"#13\">13</a></li>\n<li><a href=\"#14\">14</a></li>\n<li><a href=\"#15\">15</a></li>\n<li><a href=\"#16\">16</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#g-01-cache-storage-values-in-memory-to-minimize-sloads\">G-01 Cache storage values in memory to minimize SLOADs</a></li>\n<li><a href=\"#g-02-cache-the-length-of-arrays-in-loops\">G-02 Cache the length of arrays in loops</a></li>\n<li><a href=\"#g-03-i-costs-less-gas-compared-to-i-or-i--1-in-for-loops-5-gas-per-iteration\">G-03 ++i costs less gas compared to i++ or i += 1 in for loops (~5 gas per iteration)</a></li>\n<li><a href=\"#g-04-x-is-more-efficient-than-xsaves-6-gas\">G-04 ++x is more efficient than x++(Saves ~6 gas)</a></li>\n<li><a href=\"#g-05-splitting-require-statements-that-use--saves-gas---saves-8-gas-per-\">G-05 Splitting require() statements that use &#x26;&#x26; saves gas - (saves 8 gas per &#x26;&#x26;)</a></li>\n<li><a href=\"#g-06-comparisons--is-more-efficient-than--in-require-6-gas-less\">G-06 Comparisons: != is more efficient than > in require (6 gas less)</a></li>\n<li><a href=\"#g-07-emitting-storage-values-instead-of-the-memory-onesaves-101-gas\">G-07 Emitting storage values instead of the memory one(saves ~101 gas)</a></li>\n<li><a href=\"#g-08-using-unchecked-blocks-to-save-gas\">G-08 Using unchecked blocks to save gas</a></li>\n<li><a href=\"#g-09-using-unchecked-blocks-to-save-gas---increments-in-for-loop-can-be-unchecked---save-30-40-gas-per-loop-iteration\">G-09 Using unchecked blocks to save gas - Increments in for loop can be unchecked  ( save 30-40 gas per loop iteration)</a></li>\n<li><a href=\"#g-10-use-custom-errors-instead-of-revert-strings-to-save-gas\">G-10 Use Custom Errors instead of Revert Strings to save Gas</a></li>\n<li><a href=\"#g-11-x--y-costs-more-gas-than-x--x--y-for-state-variables\">G-11 x += y costs more gas than x = x + y for state variables</a></li>\n<li><a href=\"#g-12-using-bools-for-storage-incurs-overhead\">G-12 Using bools for storage incurs overhead</a></li>\n<li><a href=\"#g-13-using-private-rather-than-public-for-constants-saves-gas\">G-13 Using private rather than public for constants, saves gas</a></li>\n<li><a href=\"#g-14-not-using-the-named-return-variables-when-a-function-returns-wastes-deployment-gas\">G-14 Not using the named return variables when a function returns, wastes deployment gas</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}