{
  "circa": {
    "title": "Wild Credit contest",
    "sponsor": "Wild Credit",
    "slug": "2021-09-wildcredit",
    "date": "2021-11-16",
    "findings": "https://github.com/code-423n4/2021-09-wildcredit-findings",
    "contest": 32
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code 432n4 (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 code contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the code contest outlined in this document, C4 conducted an analysis of Wild Credit contest smart contract system written in Solidity. The code contest took place between September 23—September 29 2021.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>15 Wardens contributed reports to the Wild Credit contest code contest:</p>\n<ul>\n<li><a href=\"https://twitter.com/0xRajeev\">0xRajeev</a></li>\n<li><a href=\"https://twitter.com/WatchPug_\">WatchPug</a></li>\n<li><a href=\"https://twitter.com/cmichelio\">cmichel</a></li>\n<li><a href=\"https://twitter.com/liam_eastwood13\">leastwood</a></li>\n<li><a href=\"https://twitter.com/GalloDaSballo\">GalloDaSballo</a></li>\n<li><a href=\"https://twitter.com/itsmeSTYJ\">itsmeSTYJ</a></li>\n<li><a href=\"https://twitter.com/gpersoon\">gpersoon</a></li>\n<li><a href=\"https://twitter.com/SolidityDev\">pauliax</a></li>\n<li><a href=\"https://twitter.com/_ye0lde\">ye0lde</a></li>\n<li><a href=\"https://twitter.com/HickupH\">hickuphh3</a></li>\n<li><a href=\"https://twitter.com/tabishjshaikh\">tabish</a></li>\n<li><a href=\"https://twitter.com/transmissions11\">t11s</a></li>\n<li><a href=\"https://twitter.com/jah_s3\">jah</a></li>\n<li>pants</li>\n</ul>\n<p>This contest was judged by <a href=\"https://twitter.com/ghoulsol\">ghoul.sol</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/itsmetechjay\">itsmetechjay</a> and <a href=\"https://twitter.com/CloudEllie1\">CloudEllie</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 14 unique vulnerabilities and 63 total findings.  All of the issues presented here are linked back to their original finding</p>\n<p>Of these vulnerabilities, 2 received a risk rating in the category of HIGH severity, 3 received a risk rating in the category of MEDIUM severity, and 9 received a risk rating in the category of LOW severity.</p>\n<p>C4 analysis also identified 27 non-critical recommendations and 22 gas optimizations.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2021-09-wildcredit\">C4 Wild Credit contest repository</a>, and is composed of 40 smart contracts written in the Solidity programming language and includes 2,425 lines of Solidity code and 0 lines of JavaScript.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code423n4.com\">the C4 website</a>.</p>\n<h1 id=\"high-risk-findings-3\" style=\"position:relative;\"><a href=\"#high-risk-findings-3\" aria-label=\"high risk findings 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (3)</h1>\n<h2 id=\"h-01-use-of-tokenbs-price-instead-of-tokena-in-determining-account-health-will-lead-to-protocol-mis-accounting-and-insolvency\" style=\"position:relative;\"><a href=\"#h-01-use-of-tokenbs-price-instead-of-tokena-in-determining-account-health-will-lead-to-protocol-mis-accounting-and-insolvency\" aria-label=\"h 01 use of tokenbs price instead of tokena in determining account health will lead to protocol mis accounting and insolvency permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/70\">[H-01] Use of tokenB’s price instead of tokenA in determining account health will lead to protocol mis-accounting and insolvency</a></h2>\n<p><em>Submitted by 0xRajeev, also found by WatchPug</em>.</p>\n<h4 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>In <code>_supplyCreditUni()</code>, the last argument of <code>_convertTokenValues()</code> on <code>L674 being _priceB</code> instead of <code>_priceA</code> in the calculation of <code>supplyB</code> is a typo (should be <code>_priceA</code>) and therefore miscalculates <code>supplyB</code>, <code>creditB</code>, <code>creditUni</code> and therefore <code>totalAccountSupply</code> in function <code>accountHealth()</code> which affects the health of account/protocol determination that is used across all borrows/withdrawals/transfers/liquidations in the protocol. This miscalculation significantly affects all calculations in protocol and could therefore cause protocol insolvency.</p>\n<h4 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/LendingPair.sol#L674\">https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/LendingPair.sol#L674</a></li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/LendingPair.sol#L340\">https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/LendingPair.sol#L340</a></li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/LendingPair.sol#L398-L401\">https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/LendingPair.sol#L398-L401</a></li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/LendingPair.sol#L532\">https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/LendingPair.sol#L532</a></li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/LendingPair.sol#L544\">https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/LendingPair.sol#L544</a></li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/LendingPair.sol#L119\">https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/LendingPair.sol#L119</a></li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/LendingPair.sol#L266\">https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/LendingPair.sol#L266</a></li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/LendingPair.sol#L289\">https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/LendingPair.sol#L289</a></li>\n</ul>\n<h4 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h4>\n<p>Manual Analysis</p>\n<h4 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Change the last argument of <code>\\_convertTokenValues()</code> from <code>\\_priceB</code> to <code>\\_priceA</code> on L674.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/70\">talegift (Wild Credit) confirmed</a></strong></p>\n<h2 id=\"h-02-liquidation-can-be-escaped-by-depositing-a-uni-v3-position-with-0-liquidity\" style=\"position:relative;\"><a href=\"#h-02-liquidation-can-be-escaped-by-depositing-a-uni-v3-position-with-0-liquidity\" aria-label=\"h 02 liquidation can be escaped by depositing a uni v3 position with 0 liquidity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/30\">[H-02] Liquidation can be escaped by depositing a Uni v3 position with 0 liquidity</a></h2>\n<p><em>Submitted by WatchPug</em>.</p>\n<p>When the liquidator is trying to liquidate a undercolldarezed loan by calling <code>liquidateAccount()</code>, it calls <code>_unwrapUniPosition()</code> -> <code>uniV3Helper.removeLiquidity()</code> -> <code>positionManager.decreaseLiquidity()</code>.</p>\n<p>However, when the Uni v3 position has 0 liquidity, <code>positionManager.decreaseLiquidity()</code> will fail.</p>\n<p>See: <a href=\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/NonfungiblePositionManager.sol#L265\">https://github.com/Uniswap/v3-periphery/blob/main/contracts/NonfungiblePositionManager.sol#L265</a></p>\n<p>Based on this, a malicious user can escaped liquidation by depositing a Uni v3 position with 0 liquidity.</p>\n<h5 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h5>\n<p>Undercollateralized debts cannot be liquidated and it leads to bad debts to the protocol.</p>\n<p>A malicious user can take advantage of this by creating long positions on the collateral assets and take profit on the way up, and keep taking more debt out of the protocol, while when the price goes down, the debt can not be liquidated and the risks of bad debt are paid by the protocol.</p>\n<h5 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h5>\n<ol>\n<li>A malicious user deposits some collateral assets and borrow the max amount of debt;</li>\n<li>The user deposits a Uni v3 position with 0 liquidity;</li>\n<li>When the market value of the collateral assets decreases, the liquadation will fail as <code>positionManager.decreaseLiquidity()</code> reverts.</li>\n</ol>\n<h5 id=\"recommendation\" style=\"position:relative;\"><a href=\"#recommendation\" aria-label=\"recommendation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h5>\n<p>Check if liquidity > 0 when removeLiquidity.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/30#issuecomment-932861833\">talegift (Wild Credit) confirmed</a>:</strong></p>\n<blockquote>\n<p>Valid issue. Good catch.</p>\n<p>Severity should be lowered to 2 as it doesn’t allow direct theft of funds and the loss would only occur under specific external conditions.</p>\n<p><em>2 — Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements</em></p>\n<p><a href=\"https://docs.code4rena.com/roles/wardens/judging-criteria#estimating-risk-tl-dr\">https://docs.code4rena.com/roles/wardens/judging-criteria#estimating-risk-tl-dr</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/30#issuecomment-940647789\">ghoul-sol (judge) commented</a>:</strong></p>\n<blockquote>\n<p>To my understanding, bad position would affect the whole protocol and a loss would have to be paid by other participans which means funds can be drained. For that reason, I’m keeping high risk.</p>\n</blockquote>\n<h1 id=\"medium-risk-findings-4\" style=\"position:relative;\"><a href=\"#medium-risk-findings-4\" aria-label=\"medium risk findings 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (4)</h1>\n<h2 id=\"m-01-use-of-deprecated-chainlink-api\" style=\"position:relative;\"><a href=\"#m-01-use-of-deprecated-chainlink-api\" aria-label=\"m 01 use of deprecated chainlink api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/55\">[M-01] Use of deprecated Chainlink API</a></h2>\n<p><em>Submitted by 0xRajeev, also found by cmichel and leastwood</em>.</p>\n<h4 id=\"impact-2\" style=\"position:relative;\"><a href=\"#impact-2\" aria-label=\"impact 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>The contract uses Chainlink’s deprecated API <code>latestAnswer()</code>. Such functions might suddenly stop working if Chainlink stopped supporting deprecated APIs.</p>\n<p>Impact: Deprecated API stops working. Prices cannot be obtained. Protocol stops and contracts have to be redeployed.</p>\n<p>See similar Low-severity finding L11 from OpenZeppelin’s Audit of Opyn Gamma Protocol: <a href=\"https://blog.openzeppelin.com/opyn-gamma-protocol-audit/\">https://blog.openzeppelin.com/opyn-gamma-protocol-audit/</a></p>\n<p>This was a Medium-severity finding even in the previous version of WildCredit contest as well: <a href=\"https://github.com/code-423n4/2021-07-wildcredit-findings/issues/75\">https://github.com/code-423n4/2021-07-wildcredit-findings/issues/75</a> where it was reported that ”<code>latestAnswer</code> method will return the last value, but you won’t be able to check if the data is fresh. On the other hand, calling the method <code>latestRoundData</code> allows you to run some extra validations.”</p>\n<h4 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p><a href=\"https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/UniswapV3Oracle.sol#L101\">https://github.com/code-423n4/2021-09-wildcredit/blob/c48235289a25b2134bb16530185483e8c85507f8/contracts/UniswapV3Oracle.sol#L101</a></p>\n<p>See <a href=\"https://docs.chain.link/docs/deprecated-aggregatorinterface-api-reference/#latestanswer\">https://docs.chain.link/docs/deprecated-aggregatorinterface-api-reference/#latestanswer</a>.</p>\n<h4 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h4>\n<p>Manual Analysis</p>\n<h4 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Use V3 interface functions: <a href=\"https://docs.chain.link/docs/price-feeds-api-reference/\">https://docs.chain.link/docs/price-feeds-api-reference/</a></p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/55#issuecomment-932200536\">talegift (Wild Credit) acknowledged:</a>:</strong></p>\n<blockquote>\n<p>We’ll remove dependence on Chainlink completely.</p>\n</blockquote>\n<h2 id=\"m-02-lendingpairwithdrawuniposition-should-accrue-debt-first\" style=\"position:relative;\"><a href=\"#m-02-lendingpairwithdrawuniposition-should-accrue-debt-first\" aria-label=\"m 02 lendingpairwithdrawuniposition should accrue debt first permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/48\">[M-02] <code>LendingPair.withdrawUniPosition</code> should accrue debt first</a></h2>\n<p><em>Submitted by cmichel</em>.</p>\n<p>The <code>LendingPair.withdrawUniPosition</code> function allows the user to withdraw their UniswapV3 pool position (NFT) again.\nAs the Uniswap position acts as collateral in the protocol, a health check is performed afterwards.</p>\n<p>However, it does not check the <strong>current</strong> debt of the caller as it does not <code>accrue</code> the debt for both tokens first.</p>\n<h4 id=\"impact-3\" style=\"position:relative;\"><a href=\"#impact-3\" aria-label=\"impact 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>In the worst case, in low-activity markets, it could happen that debt has not accrued for a long time and the current debt is significantly higher than the current <em>recorded</em> debt in <code>totalDebtAmount</code>.\nAn account with a de-facto negative health ratio if the debt was accrued could still withdraw their collateral NFT instead of having to repay their debt first.</p>\n<h4 id=\"recommendation-1\" style=\"position:relative;\"><a href=\"#recommendation-1\" aria-label=\"recommendation 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h4>\n<p>Accrue the debt for both tokens first in <code>LendingPair.withdrawUniPosition</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/48\">talegift (Wild Credit) confirmed</a></strong></p>\n<h2 id=\"m-03-supply-part-of-the-accrued-debt-can-be-stolen\" style=\"position:relative;\"><a href=\"#m-03-supply-part-of-the-accrued-debt-can-be-stolen\" aria-label=\"m 03 supply part of the accrued debt can be stolen permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/50\">[M-03] Supply part of the accrued debt can be stolen</a></h2>\n<p><em>Submitted by cmichel</em>.</p>\n<p>The <code>LendingPair.uniClaimDeposit</code> function allows the user to “collect fees” and mint new supply shares with the collected amounts.</p>\n<h4 id=\"uniclaimdeposit-does-not-accrue-tokens\" style=\"position:relative;\"><a href=\"#uniclaimdeposit-does-not-accrue-tokens\" aria-label=\"uniclaimdeposit does not accrue tokens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>uniClaimDeposit</code> does not accrue tokens</h4>\n<p>However, the current total supply is not <code>accrue</code>d in the function.\nThis means an attacker can:</p>\n<ul>\n<li>mint shares using <code>uniClaimDeposit</code></li>\n<li>increase the <code>totalSupplyAmount</code> by calling <code>accrue(token0)</code> and <code>accrue(token1)</code> afterwards.</li>\n<li>call <code>withdraw</code> and receive <em>a larger amount of tokens</em> for the newly minted shares due to the increase in <code>totalSupplyAmount</code> from <code>accrue</code> (increasing the supply share price <code>_sharesToSupply</code>).</li>\n</ul>\n<p>This would only lead to a small protocol loss if <code>uniClaimDeposit</code> would only collect the <em>fees</em>, however, combined with another flaw, one can steal almost the entire protocol <code>lpRate</code> each time:</p>\n<h4 id=\"uniclaimdeposit-allows-collecting-entire-liquidity-instead-of-just-fees\" style=\"position:relative;\"><a href=\"#uniclaimdeposit-allows-collecting-entire-liquidity-instead-of-just-fees\" aria-label=\"uniclaimdeposit allows collecting entire liquidity instead of just fees permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>uniClaimDeposit</code> allows collecting entire liquidity instead of just fees</h4>\n<p>This has to do with the way liquidity from a Uniswap V3 position (NFT) is withdrawn:</p>\n<ul>\n<li>When calling <code>positionManager.decreaseLiquidity</code>, the <code>position.liquidity</code> is removed but <a href=\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/NonfungiblePositionManager.sol#L281-L282\">stored in the position as <code>tokensOwed0/tokensOwed1</code></a>. It is <strong>not</strong> transferred to the user.</li>\n<li>One needs to call <code>positionManager.collect(params)</code> to <a href=\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/NonfungiblePositionManager.sol#L362\">actually transfer out these tokens</a>, setting <code>tokensOwed0/1</code> to <code>0</code>. (This is correctly done in <code>UniswapV3Helper.removeLiquidity</code>.)</li>\n</ul>\n<p>An attacker can perform the following attack:</p>\n<ul>\n<li>Create a Uniswap V3 position.</li>\n<li>Get flashloans for both tokens to provide lots of liquidity for this position.</li>\n<li>Call <code>positionManager.decreaseLiquidity</code> such that the entire liquidity is removed and stored (but not collected yet) in the position’s <code>tokensOwed0/1</code> fields</li>\n<li>Deposit it to WildCredit’s lending pair using <code>depositUniPosition</code></li>\n<li>Call <code>uniClaimDeposit</code> to mint a huge amount of NFT supply shares. This huge amount will capture the protocol’s debt accrual in the next steps.</li>\n<li>Call <code>accrue</code> on both tokens to accrue debt and pay the <code>lpRate</code> part of it to suppliers, increasing <code>totalSupplyAmount</code> and thus the value of a supply share.</li>\n<li>With the new debt added to the <code>totalSupplyAmount</code>, the attacker can now withdraw their minted shares again and capture most of the new debt that was accrued, making a profit.</li>\n</ul>\n<h4 id=\"impact-4\" style=\"position:relative;\"><a href=\"#impact-4\" aria-label=\"impact 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>Combining these two issues, an attacker could steal most of the accrued <code>lpRate</code> in a single atomic transaction.\nThe attacker can repeat this step capturing the supplier interest for each accrual. (The longer the market hasn’t been accrued, the bigger the profit per single attack transaction, but in the end, the attacker could perform this attack at every block or when it becomes profitable for the gas costs.)</p>\n<p>Providing / removing Uniswap V3 liquidity does not incur fees.</p>\n<p>The attacker’s profit is the loss of other legitimate suppliers that capture less of the newly accrued debt.</p>\n<h4 id=\"recommendation-2\" style=\"position:relative;\"><a href=\"#recommendation-2\" aria-label=\"recommendation 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h4>\n<p>Accrue the debt for both tokens first in <code>LendingPair.uniClaimDeposit</code>.</p>\n<p>It might also be a good idea to disallow collecting the “parked” liquidity in a token (that has been removed but not yet collected) by immediately collecting them when the NFT is deposited in <code>depositUniPosition</code>. I.e., call <code>_uniCollectFees</code> in <code>depositUniPosition</code> to withdraw any outstanding tokens and fees.\nThen mint shares with these token amounts.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/50#issuecomment-932864980\">talegift (Wild Credit) confirmed</a>:</strong></p>\n<blockquote>\n<p>We’ll implement the suggested fix.</p>\n<p>Suggest lowering severity to 2 as it doesn’t allow direct theft of funds and the loss would only occur under specific external conditions - long periods of not accrue interest combined with a low gas price to steal the pending interest.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/50#issuecomment-940678187\">ghoul-sol (judge) commented</a>:</strong></p>\n<blockquote>\n<p>It seems that the attacker can steal interest that is owed to other users but deposits are safe. For that reason I agree with sponsor to make this medium risk.</p>\n</blockquote>\n<h1 id=\"low-risk-findings-10\" style=\"position:relative;\"><a href=\"#low-risk-findings-10\" aria-label=\"low risk findings 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk Findings (10)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/53\">[L-01] Missing SafeMath</a>\n<em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/61\">[L-02] Constraint of minRate &#x3C; lowRate can be broken</a>\n<em>Submitted by 0xRajeev, also found by GalloDaSballo and itsmeSTYJ</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/63\">[L-03] Missing threshold check for highRate</a>\n<em>Submitted by 0xRajeev, also found by itsmeSTYJ</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/43\">[L-04] Uniswap oracle assumes PairToken &#x3C;> WETH liquidity</a>\n<em>Submitted by cmichel</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/44\">[L-05] Simple interest formula is used</a>\n<em>Submitted by cmichel</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/36\">[L-06] Reduce risk of rounding error in _timeRateToBlockRate</a>\n<em>Submitted by gpersoon, also found by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/120\">[L-07] Race condition on ERC20 approval</a>\n<em>Submitted by itsmeSTYJ</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/101\">[L-08] Oracle response assumes 8 decimals</a>\n<em>Submitted by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/116\">[L-09] Oracle should call latestRoundData instead.</a></li>\n</ul>\n<h1 id=\"non-critical-findings-28\" style=\"position:relative;\"><a href=\"#non-critical-findings-28\" aria-label=\"non critical findings 28 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Non-Critical Findings (28)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/74\">[N-01] Missing event for this critical onlyOperator function where the operator can arbitrarily change name+symbol</a>\n<em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/54\">[N-02] Missing zero-address checks</a>\n<em>Submitted by 0xRajeev, also found by GalloDaSballo and ye0lde</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/57\">[N-03] Strict inequality should be relaxed to be closed ranges instead of open</a>\n<em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/59\">[N-04] Incorrect error message strings with require()s</a>\n<em>Submitted by 0xRajeev, also found by WatchPug</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/65\">[N-05] Remove pair-specific parameters until they are actually used/enforced</a>\n<em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/68\">[N-06] Using a zero-address check as a proxy for enforcing one-time initialization is risky</a>\n<em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/71\">[N-07] Renouncing ownership is not allowed</a>\n<em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/76\">[N-08] Lack of guarded launch approach may be risky</a>\n<em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/77\">[N-09] Clone-and-own approach used for OZ libraries is susceptible to errors and missing upstream bug fixes</a>\n<em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/112\">[N-10] Lack of check for address(0) in <code>LendingPair.depositUniPosition</code></a>\n<em>Submitted by GalloDaSballo</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/41\">[N-11] Missing parameter validation</a>\n<em>Submitted by cmichel</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/86\">[N-12] <code>setTargetUtilization()</code> Misleading error message</a>\n<em>Submitted by WatchPug, also found by cmichel, gpersoon, pauliax, and itsmeSTYJ</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/46\">[N-13] Truncated math in <code>interestRatePerBlock</code></a>\n<em>Submitted by cmichel</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/47\">[N-14] <code>UniswapV3Helper.getUserTokenAmount</code> could be simplified</a>\n<em>Submitted by cmichel</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/118\">[N-15] Add nonReentrant modifiers to uniswap position methods + Check effects pattern</a>\n<em>Also found by gpersoon</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/62\">[N-16] UniswapV3Helper: Misleading param names for getSqrtPriceX96()</a>\n<em>Submitted by hickuphh3</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/103\">[N-17] Only accept ETH from WETH contract</a>\n<em>Submitted by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/105\">[N-18] Ensure targetUtilization > 0</a>\n<em>Submitted by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/11\">[N-19] Incorrect import </a>\n<em>Submitted by tabish</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/35\">[N-20] transferLp() Misleading error message</a>\n<em>Submitted by WatchPug</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/40\">[N-21] The check if _checkBorrowEnabled and _checkBorrowLimits can be done earlier</a>\n<em>Submitted by WatchPug</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/51\">[N-22] Consider adding <code>account</code> parameter to event WithdrawUniPosition</a>\n<em>Submitted by WatchPug</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/37\">[N-23] Improve readability of constants</a>\n<em>Submitted by gpersoon</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/115\">[N-24] Improper File Imports</a>\n<em>Submitted by leastwood</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/100\">[N-25] Emit events when setting the initial values in the constructor</a>\n<em>Submitted by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/108\">[N-26] Style issues</a>\n<em>Submitted by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/4\">[N-27] Prefer abi.encode over abi.encodePacked</a>\n<em>Submitted by t11s</em>.</li>\n</ul>\n<h1 id=\"gas-optimizations-22\" style=\"position:relative;\"><a href=\"#gas-optimizations-22\" aria-label=\"gas optimizations 22 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations (22)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/79\">[G-01] Caching state variables in local/memory variables avoids SLOADs to save gas</a>\n<em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/80\">[G-02] Redundant zero-address checks</a>\n<em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/81\">[G-03]  Input validation on positionID not being 0 will save gas</a>\n<em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/82\">[G-04] Input validation on amount > 0 will save gas</a>\n<em>Submitted by 0xRajeev, also found by WatchPug</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/84\">[G-05] Use unchecked{} primitive to save gas where possible</a>\n<em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/85\">[G-06] Moving checks before other logic can save gas</a>\n<em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/87\">[G-07] Unused parameter removal can save gas</a>\n<em>Submitted by 0xRajeev, also found by ye0lde</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/88\">[G-08] Using msg.sender or cached locals in emits instead of state variables saves gas</a>\n<em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/90\">[G-09] Avoiding unnecessary SSTORE can save gas</a>\n<em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/91\">[G-10] Reordering state variable declarations to prevent incorrect packing can save slots/gas</a>\n<em>Submitted by 0xRajeev</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/1\">[G-11] Making PairFactory state vars immutable would save gas</a>\n<em>Submitted by t11s, also found by 0xRajeev and jah</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/31\">[G-12] Change unnecessary _borrowBalanceConverted to _debtOf can save gas</a>\n<em>Submitted by WatchPug</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/32\">[G-13] Change unnecessary _supplyBalanceConverted to _supplyOf can save gas</a>\n<em>Submitted by WatchPug</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/73\">[G-14] Cache and check decimals before write storage can save gas</a>\n<em>Submitted by WatchPug</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/49\">[G-15] Gas: Unnecessary <code>_maxAmount</code> parameter in <code>repayAllETH</code></a>\n<em>Submitted by cmichel, also found by WatchPug</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/58\">[G-16] UniswapV3Helper: Avoid recomputation of sqrtRatio from pool tick</a>\n<em>Submitted by hickuphh3</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/64\">[G-17] UniswapV3Helper: Redundant pool initialization</a>\n<em>Submitted by hickuphh3</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/66\">[G-18] UniV3Helper: Function visibilities can be restricted to pure</a>\n<em>Submitted by hickuphh3</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/6\">[G-19] Declare the value when the variable is created </a>\n<em>Submitted by jah</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/9\">[G-20] PairFactory.sol is Ownable but not owner capabilites are used</a>\n<em>Submitted by jah</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/107\">[G-21] Unused imports</a>\n<em>Submitted by pauliax</em>.</li>\n<li><a href=\"https://github.com/code-423n4/2021-09-wildcredit-findings/issues/3\">[G-22] Use unchecked{} in ERC20 to save gas without risk</a>\n<em>Submitted by t11s</em>.</li>\n</ul>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-3\">High Risk Findings (3)</a></p>\n<ul>\n<li><a href=\"#h-01-use-of-tokenbs-price-instead-of-tokena-in-determining-account-health-will-lead-to-protocol-mis-accounting-and-insolvency\">[H-01] Use of tokenB’s price instead of tokenA in determining account health will lead to protocol mis-accounting and insolvency</a></li>\n<li><a href=\"#h-02-liquidation-can-be-escaped-by-depositing-a-uni-v3-position-with-0-liquidity\">[H-02] Liquidation can be escaped by depositing a Uni v3 position with 0 liquidity</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-4\">Medium Risk Findings (4)</a></p>\n<ul>\n<li><a href=\"#m-01-use-of-deprecated-chainlink-api\">[M-01] Use of deprecated Chainlink API</a></li>\n<li><a href=\"#m-02-lendingpairwithdrawuniposition-should-accrue-debt-first\">[M-02] <code>LendingPair.withdrawUniPosition</code> should accrue debt first</a></li>\n<li><a href=\"#m-03-supply-part-of-the-accrued-debt-can-be-stolen\">[M-03] Supply part of the accrued debt can be stolen</a></li>\n</ul>\n</li>\n<li><a href=\"#low-risk-findings-10\">Low Risk Findings (10)</a></li>\n<li><a href=\"#non-critical-findings-28\">Non-Critical Findings (28)</a></li>\n<li><a href=\"#gas-optimizations-22\">Gas Optimizations (22)</a></li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}